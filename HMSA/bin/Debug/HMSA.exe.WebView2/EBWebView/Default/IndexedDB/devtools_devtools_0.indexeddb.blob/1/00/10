  o"key"Nbundle.js.map:d4958881efe22bd51e48b64588502d0cfe45b558b5e891f89d8253bcb6a9330f"	sourcemapo"versionI"file"static/js/bundle.js"mappings"ее;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAQA;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;;;AAEA;AAAA;;AAEA;AACA;AAAA;AAAA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAaA;AACA;AACA;AAFA;AADA;AAOA;AACA;AACA;AACA;;AAAA;AAEA;;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAhEA;AAAA;AAAA;AAAA;AAAA;AA0EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5EA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAqFA;;AA7KA;AAGA;;;AAHA;AA+KA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpLA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;;AAGA;AACA;AACA;AAGA;AACA;AACA;;;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;ACvQA;;AAEA;;AAGA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;AANA;AAQA;AACA;AAAA;AACA;AAAA;AACA;;AAHA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC/KA;;;;;;;;;;;ACAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;;AACA;AACA;AACA;AAEA;;;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;;AAGA;AACA;AACA;AACA;;AAGA;AACA;;;AAGA;AACA;AACA;;AACA;AACA;AACA;;AACA;;AAOA;AACA;AAGA;AACA;;;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAIA;AACA;AACA;;;;;;;;;;;AC7NA;;AAEA;;AACA;;AACA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAGA;;AAGA;;AAGA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;;AAGA;AACA;AACA;;AACA;;AAGA;AAEA;;AAGA;;;;;;;;;;;AC/DA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AAEA;;AAGA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;AACA;AACA;;AAGA;AACA;;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;AAEA;;;;;;;;;;;ACtHA;;AAEA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AADA;AAIA;;;;;;;;;;;ACrBA;;AAEA;AACA;AACA;;;;;;;;;;;ACJA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAEA;AACA;AAEA;;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AANA;AAQA;AACA;;AAEA;AAEA;AACA;AAEA;;;;;;;;;;;AC/JA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AAnBA;AAsBA;AACA;AAEA;AAAA;AAaA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;;AAGA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;;AAEA;;;;;;;;;;;ACrFA;;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACrDA;;AAEA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AACA;AACA;;;;;;;;;;;ACnBA;;AAEA;;AACA;;AACA;;AACA;;AACA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAGA;;AAGA;;AAQA;AAMA;AAGA;AACA;AAGA;AAEA;AACA;;AAGA;AAOA;AACA;AACA;AACA;;AAGA;AACA;AAMA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACtFA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AA8BA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;ACnGA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;AACA;AAOA;AACA;;;;;;;;;;;ACxBA;;AAEA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;ACrBA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA;AADA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;AAEA;AAOA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;;AAEA;AACA;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AADA;AAIA;AACA;AACA;AAEA;AACA;AACA;AADA;AADA;AArFA;AA4FA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;ACjJA;;AAEA;AACA;AACA;AACA;AAHA;;;;;;;;;;ACFA;AACA;AADA;;;;;;;;;;;ACAA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;;;;;;;;;;ACVA;;AAEA;;AAEA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;ACrEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAGA;;;;;;;;;;;ACbA;;AAEA;;AAEA;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AA/BA;AAiCA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAKA;;;;;;;;;;;ACnDA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACbA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;;;;;;;;;ACZA;;AAEA;;AAEA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAYA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACXA;AACA;;;;;;;;;;;ACDA;;AAEA;AAGA;;;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;ACpDA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACLA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC1BA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;;;;;;;;;;;ACvEA;;AAEA;;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AAIA;;AAEA;AACA;;AAEA;AAMA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFA;;;;;;;;;;;AClFA;;AAEA;;;AAIA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAGA;AACA;;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;;;;;;;;;;ACtbA;;AAEA;;;;;;;;;;ACFA;;AAEA;;;;;;;;;;ACFA;;;;;;;;;;ACAA;AACA;;AAEA;;AAEA;;;;;;;;;;ACLA;;AACA;;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;;;;;;;;;ACVA;;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;;;;;;;;;;ACVA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACPA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;;;;;;;;ACPA;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;ACNA;;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;ACTA;;AAEA;;;;;;;;;;ACFA;;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;;AACA;AACA;AAGA;;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC1BA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;;AACA;AAAA;;AACA;AAAA;AAHA;;AAIA;AACA;;AAAA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;;AAEA;AACA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;;AAGA;AAEA;;AAGA;AAAA;AAEA;AAEA;;AAKA;AACA;AACA;;AAEA;;AAEA;AACA;;AACA;AACA;AACA;;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACNA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;;;;;;;;;ACTA;;AACA;;AACA;;AAEA;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;ACZA;;AAEA;AACA;AACA;AAAA;AAAA;;;AAEA;AACA;;;;;;;;;;ACPA;;AAEA;AAEA;AACA;AACA;;;;;;;;;;ACNA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACbA;;AACA;;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;;;;;;;;;;ACXA;AAGA;;;AACA;AACA;AACA;AACA;;;;;;;;;;ACPA;AACA;AACA;;;AAGA;AAEA;AAGA;AAGA;AAAA;AAAA;;;;;;;;;;ACbA;;AACA;;AAEA;AAGA;AACA;;AACA;AACA;AACA;;;;;;;;;;ACVA;;AACA;;AACA;;;AAGA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;;;;;;;;;;ACVA;;AACA;;AACA;;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;;;;;;;;;;ACJA;;AACA;;AAEA;;AAEA;AACA;AACA;AAIA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAEA;;;;;;;;;;ACrBA;;AAEA;AACA;AACA;;;;;;;;;;ACJA;;;;;;;;;;ACAA;;AACA;;AACA;;AACA;;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACbA;AACA;;AACA;;;AAGA;AACA;AAEA;;AACA;AAEA;AACA;;;;;;;;;;ACZA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AAGA;;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AC3CA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAGA;AAGA;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;ACrBA;;AAEA;;;;;;;;;;;ACFA;;AACA;;AAEA;;AAGA;AAAA;AAAA;AAGA;;AACA;AACA;AACA;AACA;;;;;;;;;;ACbA;;AACA;;AACA;;AACA;;AAEA;AAGA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACfA;;;;;;;;;;ACAA;;AAEA;AAGA;;AACA;AACA;AACA;AACA;;;;;;;;;;ACTA;;;AAGA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAAA;AACA;;;;;;;;;;ACXA;;AACA;;AAEA;AACA;AAEA;;;;;;;;;;ACNA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;;;;ACLA;AACA;;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACNA;;AACA;;AAEA;AAGA;;AACA;AACA;AACA;;;;;;;;;;ACTA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA;AAGA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;;;;;;;;ACzBA;;AACA;AAGA;;;AACA;AACA;AACA;AACA;;;;;;;;;;ACRA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACVA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACRA;AACA;;AAEA;;;;;;;;;;ACHA;;AACA;AAGA;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;;;;;;;;;;ACXA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;;;;;;;;;;ACvBA;;AACA;AAGA;;;AACA;AAAA;AAAA;AACA;AADA;;;;;;;;;;ACLA;AACA;;;;;;;;;;ACDA;;AAEA;;;;;;;;;;;ACFA;AAEA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACrGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAGA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;;AAGA;AAEA;AACA;AACA;AAGA;;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAVA;;AAaA;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AAGA;;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AACA;;AACA;AAEA;AACA;;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AACA;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;AAGA;;AACA;AACA;AAEA;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;;;AAGA;AAEA;AAEA;AAEA;AACA;AAGA;AACA;;AAGA;AACA;AAGA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAGA;AAGA;AACA;AAEA;AAGA;AAEA;;AAEA;AACA;;AAEA;;AAEA;AAEA;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AAIA;;AACA;AACA;;;AAGA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AAGA;AACA;AAGA;AAGA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;;AAAA;AAEA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChfA;;AACA;AACA;AACA;AACA;;AACA;AAEA;;AACA;AACA;;AACA;AACA;;AACA;AAAA;AAAA;;AACA;;AACA;;AACA;;AACA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AACA;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAXA;;AAiBA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AADA;AAGA;;AACA;AACA;AAAA;;AACA;AACA;AACA;;AACA;AACA;;AACA;AAWA;;AACA;AACA;AACA;AAEA;AACA;AAGA;AAMA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AAEA;AACA;AAGA;AACA;AAEA;;AACA;AACA;AACA;AAEA;AACA;AAGA;AAMA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AACA;;AACA;;;;;;;;;;;ACrtBA;AAwBA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AAXA;AAaA;;AAEA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AAAA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AAGA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;;AAMA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAnBA;AAuBA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AALA;;AAQA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAlBA;AAoBA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AAzBA;AA2BA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AAjBA;;AAqBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAlCA;AAoCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AAAA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AA/EA;;AAmFA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAhBA;AAkBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;AASA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAZA;AAcA;AACA;AACA;;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AAEA;AACA;;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AADA;AAGA;;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AADA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AAHA;AAMA;AACA;;AACA;AACA;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AAAA;;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AADA;AAGA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AARA;AAUA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AAEA;;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAGA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA;AAkDA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5CA;AA8CA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAfA;;AAqBA;AACA;AADA;AAIA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAhBA;AAkBA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAveA;AA0eA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzDA;AA4DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;;AAGA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AAEA;AACA;AACA;;;AAGA;AACA;AAAA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AAGA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAnBA;;AAsgEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AA5DA;AA8DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAzCA;AA2CA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAGA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAgCA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;;AAuCA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAZA;;AAeA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAhBA;AAkBA;;AAEA;AACA;AAhHA;AAkHA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;AACA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAnDA;AAqDA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AAnCA;AAsCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAsCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAhDA;AAmDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAkBA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAjBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAFA;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AA1CA;AA4CA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AA3CA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;;AAkBA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AAAA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AAIA;;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AAhDA;AAkDA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzGA;;AA4GA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAAA;AAAA;AAGA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;;AAIA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;;AAKA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;AAWA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAjFA;;AAoFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AA7BA;AA+BA;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AA5BA;;AA+BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AApEA;;AAuEA;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAfA;AAiiCA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAXA;AAaA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;AAWA;AACA;AAEA;AACA;AADA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AA/CA;AAiDA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;;AAkCA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAzDA;;AA4DA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;;AAoBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAXA;AAaA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAlBA;AAoBA;;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AADA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAbA;;AAgBA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAHA;;AAMA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AATA;AAWA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;AASA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AApFA;;AAuFA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;AASA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAhFA;;AAmpBA;AAsBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAVA;;AAaA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AApBA;;AAuBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAVA;AAYA;AACA;;AAEA;AACA;AAzEA;AA2EA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AA9DA;AAgEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AArBA;AAuBA;AACA;;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAvBA;;AA0BA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAxBA;;AA2BA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAlBA;;AAqBA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AA7BA;AA+BA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AAXA;;AAcA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAEA;AACA;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AAFA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AAAA;;AAGA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;;AAQA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;;AAQA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAqkzzzGA;AA4GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1HA;AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1HA;AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1HA;AA4HA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AATA;;AAYA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AApBA;;AAuBA;AACA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAGA;AACA;;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AADA;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AA/BA;;AAkCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AArEA;AAutnBA;;AAynhDA;;AAmDA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAGA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAHA;;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;;AAKA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AAEA;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AAEA;AArBA;AAuBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AArEA;AAuxKA;;AA2KA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAzHA;;AA4HA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;;AAEA;AACA;AAzGA;AA2GA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AA/CA;AAiDA;;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAnEA;;AAsEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AATA;;AAYA;AACA;;AAEA;AACA;AA3CA;AA6CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAPA;AASA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AATA;;AAYA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAhPA;AAkPA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAnCA;AAqCA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AANA;;;AASA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAhCA;AAkCA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AApBA;;AAupDA;;;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAlBA;AAoBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAdA;AAgBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAdA;AAgBA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAzBA;AA2BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAZA;AAcA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAvBA;AAyBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAnBA;;AAsBA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AA9GA;AAgHA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AAhBA;;AAmnDA;;;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AATA;;AAYA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AATA;;AAYA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAXA;;AAcbA;AAeA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAIA;;AAIA;;AAIA;;AAIA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AA1BA;AA4BA;;AAEA;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AA/FA;AAiGA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAPA;AASA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AADA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AALA;AAOA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAtBA;AAwBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AA4BA;AAEA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAKA;AACA;AAEA;AACA;;;;;;;;;;;ACzk6BA;;AAEA;;AACA;AAIA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxBA;;AAEA;AACA;AACA;AAIA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAMA;AACA;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAPA;AASA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAPA;AASA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAnDA;AAqDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxrBA;;AAEA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC8BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAkFA;AACA;;AAQA;AACA;AACA;;;AACA;AAIA;AAHA;AACA;AACA;AAHA;AAKA;;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AAQA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AAQA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AAUA;AACA;AACA;;;AACA;AAIA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAGA;;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AALA;AAFA;AAhBA;;AA6BA;AACA;AACA;AAeA;AACA;AACA;;;AACA;AAaA;AAVA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AAMA;AAEA;;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AACA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AA1DA;;AAgEA;AACA;AACA;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA;AAWA;AARA;AACA;AACA;AAHA;AAUA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAHA;AAKA;AAGA;;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAfA;AAmBA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AAYA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;;AAEA;AAXA;AAcA;AACA;AAKA;AALA;AAUA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAEA;AADA;AACA;;AACA;AAMA;AACA;AAFA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7eA;;AAIA;AACA;AACA;;AAOA;;AAIA;AACA;AACA;;AAOA;AACA;AACA;AAFA;;AAKA;AACA;AACA;;ACrDA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AAmEA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;;AACA;AAEA;AACA;AAHA;AAQA;AAEA;AACA;AACA;;AAoBA;AACA;AACA;AACA;AACA;;;AACA;AAIA;AADA;AACA;;AACA;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;;AACA;AACA;AACA;;AAEA;AACA;;AAeA;AAKA;AAHA;AAGA;;AAAA;AAFA;AAEA;;AAAA;AADA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;AAOA;AACA;;AAEA;AACA;AAGA;AACA;;AACA;AACA;AAMA;AAhCA;AAoCA;;;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAzCA;AA4CA;AACA;;AAEA;AACA;AACA;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAYA;;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AAIA;AAAA;AAAA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAIA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AANA;;AASA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AA6CA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AAIA;AAfA;AAoBA;AACA;AACA;AACA;AACA;AAJA;AAMA;;AAEA;AAIA;AAFA;AAEA;;AAAA;AADA;AACA;;AACA;AAQA;AACA;AAEA;AAAA;AAAA;AAKA;AACA;AANA;;AASA;AACA;AACA;AACA;AAHA;AAOA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AADA;AAGA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AAHA;AAMA;AAMA;AACA;AACA;AACA;AAHA;AAKA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AANA;AASA;AACA;;AAEA;AAKA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AADA;AAGA;;AAEA;AACA;AAGA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AAdA;AAkBA;;;AACA;AACA;;AAEA;;AAGA;AAMA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAKA;;AAEA;AAIA;;AAEA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;;AAGA;;AAOA;ACtmBA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAGA;AAHA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;;AACA;AACA;AACA;AACA;AAIA;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAGA;AAHA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAIA;AAGA;AAHA;AAOA;AAAA;AAAA;AACA;AAIA;AAEA;AACA;AACA;;AAWA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAGA;AAHA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAIA;AACA;AACA;AADA;AAIA;AACA;AAAA;AAAA;;AACA;AAMA;;AAEA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;;AAEA;AAzBA;AAiCA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;AAAA;AAEA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAIA;AAGA;AAHA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;;AAEA;AAEA;;AACA;AAAA;;AACA;AAGA;AASA;AAbA;AAeA;AACA;;AAEA;AACA;AAIA;AAAA;AAAA;;AAEA;AACA;AAKA;AAMA;;AAEA;AAIA;AACA;AACA;AAHA;AAWA;;AAEA;AAGA;AADA;AACA;;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAFA;AAJA;AAFA;AAaA;ACjXA;AACA;AACA;AACA;AACA;;;AACA;AAKA;AAJA;AACA;AACA;AACA;AAJA;AAMA;;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAHA;AAOA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AAMA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AA4BA;AACA;AACA;AACA;AACA;;;AACA;AAGA;AAKA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAOA;AANA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAPA;AAgBA;;AAOA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAMA;AAOA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAGA;AAFA;AACA;AAFA;AAIA;AACA;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAIA;AACA;;AAEA;AAOA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;AACA;;AAEA;AAlCA;AAqCA;AACA;AAEA;AACA;AACA;;;AACA;AAGA;AACA;;;;;;;;;;;;;ACjUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;;;AAIA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AAjBA;;AAqBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAlCA;AAoCA;;AAEA;AACA;;AAEA;AAGA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;;AAMA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAnBA;AAuBA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AALA;;AAQA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAlBA;AAoBA;;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;;AAEA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAEA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC7wCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAEA;AAEA;;AACA;AAKA;AACA;;AACA;;AAIA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9DA;AAiEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AAFA;;AAKA;AACA;AACA;AACA;AAEA;AACA;AALA;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AADA;AAIA;AACA;AACA;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AAjBA;;AAqBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAlCA;AAoCA;;AAEA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;;AAEA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAHA;;AAPA;AAcA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAVA;AAlDA;;AAgEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AADA;AAGA;AAdA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AADA;AAGA;AAdA;AAjBA;AAkCA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAlBA;AAoBA;AAEA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAlBA;AAoBA;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;;AAMA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAnBA;AAuBA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AALA;;AAQA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAlBA;AAolBA;AAqBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAKA;AACA;AAEA;AACA;;;;;;;;;;;AChrFA;;AAEA;AAGA;AACA;;;;;;;;;;;ACNA;;AAEA;AAGA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAEA;AAEA;;AACA;AAKA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AAGA;;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AATA;;AAYA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAXA;;AAcA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AApBA;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;AASA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAKA;AACA;AAEA;AACA;;;;;;;;;;;ACznBA;;AAEA;AAGA;AACA;;;;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAPA;AAUA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AANA;;AASA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;;AAIA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;;AAIA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AA5LA;AA8LA;AACA;;;;;;;;;;AClRA;AAAA;AAAA;;AACA;AAAA;AACA;;AAAA;AAEA;AAAA;AACA;AACA;AACA;;AACA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AAEA;;AAAA;;AAEA;AAAA;AACA;AACA;AACA;;AACA;AAAA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAvDA;AA0DA;AACA;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;;AAEA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;;AAEA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;;AAEA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;;AAEA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;;AAEA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;;AAEA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;;AAEA;AACA;AARA;AAUA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAXA;AAaA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAzBA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;AAWA;AACA;;AAEA;AAEA;AAAA;;AAEA;AAAA;AACA;AACA;AACA;;AACA;AAAA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA;AAAA;AAAA;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AA1IA;AA4IA;;AAEA;AACA;AAEA;;AAAA;;AAEA;AAAA;AACA;AACA;AACA;;AACA;AAAA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;;AAGA;AAAA;AAAA;AACA;;;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AADA;AAIA;AAAA;AAEA;;AAhvBA;AAivBA;;AACA;AAAA;;AACA;;AAAA;AACA;;AACA;AAAA;;AACA;;AAAA;AACA;AAAA;;AACA;AAAA;AACA;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;AACA;;;AAAA;AACA;AAAA;;AACA;AAAA;;AACA;AAAA;AACA;;AAJA;AAKA;;AACA;AAAA;;AACA;;AAAA;AACA;;AACA;AAAA;;AACA;;;AAAA;AACA;AAAA;AACA;;AACA;;AACA;;AAAA;;AACA;;;AAAA;AACA;AAAA;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;;AAAA;AACA;;AAAA;AACA;;AAAA;AACA;;AACA;;AAAA;;AACA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;AAAA;AACA;;AACA;;AAAA;;AACA;;AAAA;AACA;AAAA;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;;;AAAA;AAAA;AAAA;AACA;AAAA;AACA;;AAAA;AACA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAFA;AAGA;;;AAAA;AAAA;AAAA;AAEA;AACA;;AACA;;AACA;AAAA;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;AC1zBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AAIA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACnNA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;AAEA;;;;;;;;;;;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AADA;AAGA;;AAEA;AACA;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;;AAGA;AACA;AACA;;AAEA;AAAA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AARA;AAUA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;ACvEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;AAEA;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACnBA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;;AACA;AACA;AAGA;AACA;AACA;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AAEA;;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC1DA;;AACA;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEA;AACA;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;;;;;;;;;;AC3CA;;AAEA;;AAEA;AACA;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnFA;AAEA;;AACA;;AAEA;AACA;AACA;;AAEA;;;AAKA;AACA;AACA;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;;;;;ACJA;;;;;ACAA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACrYA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACxfA;;;;;AEAA;AACA;AACA;AACA;AACA;AACA;AACA"sourcesAб"]C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/src/App.js"eC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/src/PatientForm.js"_C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/src/index.js"аC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"|C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/ansi-html-community/index.js"nC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/index.js"yC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/adapters/xhr.js"rC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/axios.js"C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/cancel/CancelToken.js"БC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/cancel/CanceledError.js"|C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/cancel/isCancel.js"wC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/core/Axios.js"|C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/core/AxiosError.js"ДC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/core/InterceptorManager.js"C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/core/buildFullPath.js"БC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/core/dispatchRequest.js"}C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/core/mergeConfig.js"xC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/core/settle.js"C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/core/transformData.js"{C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/defaults/index.js"ВC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/defaults/transitional.js"uC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/env/data.js"yC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/helpers/bind.js"}C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/helpers/buildURL.js"АC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/helpers/combineURLs.js"|C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/helpers/cookies.js"ВC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/helpers/isAbsoluteURL.js"БC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/helpers/isAxiosError.js"ДC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/helpers/isURLSameOrigin.js"ИC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/helpers/normalizeHeaderName.js"yC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/helpers/null.js"БC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/helpers/parseHeaders.js"ВC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/helpers/parseProtocol.js"{C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/helpers/spread.js"C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/helpers/toFormData.js"~C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/helpers/validator.js"rC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/axios/lib/utils.js"ВC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/actual/global-this.js"~C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/es/global-this.js"ДC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/features/global-this.js"АC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/full/global-this.js"ДC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/a-callable.js"ГC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/an-object.js"ЕC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/classof-raw.js"ШC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/create-non-enumerable-property.js"ФC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/create-property-descriptor.js"ЕC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/descriptors.js"СC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/document-create-element.js"ЛC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/engine-user-agent.js"ЛC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/engine-v8-version.js"АC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/export.js"C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/fails.js"ИC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/function-apply.js"ПC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/function-bind-context.js"ОC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/function-bind-native.js"ЗC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/function-call.js"ПC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/function-uncurry-this.js"ЖC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/get-built-in.js"ДC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/get-method.js"АC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/global.js"КC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/has-own-property.js"ИC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/ie8-dom-define.js"ИC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/indexed-object.js"ЕC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/is-callable.js"ГC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/is-forced.js"ГC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/is-object.js"БC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/is-pure.js"ГC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/is-symbol.js"ЗC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/native-symbol.js"РC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/object-define-property.js"ЬC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/object-get-own-property-descriptor.js"РC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/object-is-prototype-of.js"ЧC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/object-property-is-enumerable.js"ПC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/ordinary-to-primitive.js"~C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/path.js"ТC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/require-object-coercible.js"ДC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/set-global.js"ЖC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/shared-store.js"АC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/shared.js"ЛC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/to-indexed-object.js"ГC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/to-object.js"ЖC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/to-primitive.js"ЙC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/to-property-key.js"ЗC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/try-to-string.js"}C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/uid.js"ЛC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/use-symbol-as-uid.js"СC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/v8-prototype-define-bug.js"ЛC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/internals/well-known-symbol.js"ЖC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/modules/es.global-this.js"КC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/modules/esnext.global-this.js"ВC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/core-js-pure/stable/global-this.js"~C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/css-loader/dist/runtime/api.js"ЕC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/css-loader/dist/runtime/sourceMaps.js"pC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/events/events.js"zC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/html-entities/lib/index.js"ЕC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/html-entities/lib/named-references.js"ИC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/html-entities/lib/numeric-unicode-map.js"ДC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/html-entities/lib/surrogate-pairs.js"ЖC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/react-dom/cjs/react-dom.development.js"sC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/react-dom/client.js"rC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/react-dom/index.js"ЦC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/react-refresh/cjs/react-refresh-runtime.development.js"xC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/react-refresh/runtime.js"eC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/packages/react-router-dom/index.tsx"fC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/packages/react-router/lib/context.ts"eC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/packages/react-router/lib/router.ts"eC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/packages/react-router/lib/hooks.tsx"jC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/packages/react-router/lib/components.tsx"ОC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/react/cjs/react-jsx-dev-runtime.development.js"~C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/react/cjs/react.development.js"nC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/react/index.js"xC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/react/jsx-dev-runtime.js"ЖC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/scheduler/cjs/scheduler.development.js"rC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/scheduler/index.js"ФC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/webpack-dev-server/client/clients/WebSocketClient.js"ВC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/webpack-dev-server/client/index.js"СC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/webpack-dev-server/client/modules/logger/index.js"ДC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/webpack-dev-server/client/overlay.js"ГC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/webpack-dev-server/client/socket.js"ТC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/webpack-dev-server/client/utils/createSocketURL.js"ЩC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js"ЖC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/webpack-dev-server/client/utils/log.js"ЛC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/webpack-dev-server/client/utils/parseURL.js"МC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/webpack-dev-server/client/utils/reloadApp.js"ОC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/webpack-dev-server/client/utils/sendMessage.js"МC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/webpack-dev-server/client/utils/stripAnsi.js"yC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/webpack/hot/dev-server.js"vC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/webpack/hot/emitter.js"C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/webpack/hot/log-apply-result.js"rC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/webpack/hot/log.js"^C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/src/App.css"`C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/src/index.css"ХC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"НC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/style-loader/dist/runtime/insertBySelector.js"ПC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/style-loader/dist/runtime/insertStyleElement.js"ЫC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"ИC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/style-loader/dist/runtime/styleDomAPI.js"ОC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/style-loader/dist/runtime/styleTagTransform.js"$webpack://patient/./src/App.css?fcd7"&webpack://patient/./src/index.css?e42b"аC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ReactRefreshEntry.js"ЕC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/node_modules/@babel/runtime/helpers/esm/extends.js"dC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/bootstrap"|C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/runtime/compat get default export"zC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/runtime/define property getters"ЗC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/runtime/get javascript update chunk filename"C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/runtime/get update manifest filename"nC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/runtime/getFullHash"iC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/runtime/global"{C:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/runtime/hasOwnProperty shorthand"nC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/runtime/load script"xC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/runtime/make namespace object"xC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/runtime/node module decorator"yC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/runtime/hot module replacement"mC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/runtime/publicPath"pC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/runtime/react refresh"vC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/runtime/jsonp chunk loading"hC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/runtime/nonce"iC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/before-startup"bC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/startup"hC:/Users/riddhi_pal/OneDrive - Persistent Systems Limited/Desktop/patient frontend/webpack/after-startup$ б"sourcesContentAб"ўimport React from 'react'
import {
  BrowserRouter,
  Routes,
  Route
} from "react-router-dom";
import PatientForm from "./PatientForm";

export default function App() {
  return (
    <div className='App'>
      <BrowserRouter>
        <Routes>
          <Route exact path="/user/:pid" element={<PatientForm />} />
        </Routes>
      </BrowserRouter>
    </div>
  )
}
"╒0import './App.css';
import axios from 'axios';
import { useEffect, useState } from 'react'
import { useParams } from 'react-router';

function App() {

    // const {pid} = useParams();
    const { pid } = useParams();

    const [name, setName] = useState("")

    const [address, setAddress] = useState("")

    const [bGroup, setBGroup] = useState('')

    const [contact, setContact] = useState('')

    const [gender, setGender] = useState('')

    const [age, setAge] = useState('')

    const [majorDiseases, setMajorDiseases] = useState('')


    useEffect(() => {
        const fetchData = async () => {
            try {
                const { data: response2 } = await axios.get("http://localhost:7557/api/AddPatient");
                setName(response2[pid - 1].Name)
                setAddress(response2[pid - 1].Full_Address)
                setBGroup(response2[pid - 1].Blood_Group)
                setContact(response2[pid - 1].Contact)
                setGender(response2[pid - 1].Gender)
                setMajorDiseases(response2[pid - 1].Major_Disease)
                setAge(response2[pid - 1].Age)

            } catch (error) {
                console.error(error.message);
            }
        }

        fetchData();
    });

    console.log(bGroup);
    console.log(address);
    console.log(contact);
    console.log(majorDiseases);
    console.log(gender);


    const handleSubmit = async (e) => {

        e.preventDefault()

        console.log(name)
        console.log(address)
        console.log(bGroup);
        console.log(address);
        console.log(contact);
        console.log(majorDiseases);
        console.log(gender);

        try {
            const res = await axios.put('http://localhost:7557/api/AddPatient',
                {
                    body: {
                        Name: name,
                        Full_Address: address,
                        Contact: contact,
                        Age: age,
                        Gender: gender,
                        Blood_Group: bGroup,
                        Major_Disease: majorDiseases,
                        pid: pid,
                    },
                },
                {
                    headers: {
                        'Content-type': 'application/json; charset=utf-8',
                        'Accept': 'application/json; charset=utf-8'
                    },
                }
            );
            console.log(res);
        } catch (error) {
            console.error(error.message);
        };

    }

    return (
        <main className='App'>
            <section>
                <form action="" onSubmit={handleSubmit}>

                    <section className='Personal__info'>
                        <h1>Personal Information </h1>
                        <div className='input_field'>
                            <label>Patient Name</label>
                            <input type="text"
                                value={name}
                                onChange={(e) => { setName(e.target.value) }}
                            />
                        </div>

                        <div className='input_field'>
                            <label htmlFor="address">Address</label>
                            <input type="text"
                                value={address}
                                onChange={(e) => { setAddress(e.target.value) }}
                            />
                        </div>

                        <div className='input_field'>
                            <label >Contact Number</label>
                            <input type="text"
                                value={contact}
                                onChange={(e) => { setContact(e.target.value) }}
                            />
                        </div>

                        <div className='input_field'>
                            <label >Age</label>
                            <input type="text"
                                value={age}
                                onChange={(e) => { setAge(e.target.value) }}
                            />
                        </div>


                        <div className='input_field'>
                            <label >Blood Group</label>
                            <input type="text"
                                value={bGroup}
                                onChange={(e) => { setBGroup(e.target.value) }}
                            />
                        </div>

                        <div className='input_field'>
                            <label>gender</label>

                            <div className='radio_btn'>
                                <input type="radio" id="male" name="gender"
                                    checked={gender === "male"}
                                    value="male"
                                    onChange={(e) => { setGender(e.target.value) }}
                                />
                                <label for="male">Male</label>

                                <input type="radio" id="female" name="gender"
                                    checked={gender === "female"}
                                    value="female"
                                    onChange={(e) => { setGender(e.target.value) }}
                                />
                                <label for="male">female</label>
                            </div>

                        </div>

                        <div className='input_field'>
                            <label>Any Major Disease</label>
                            <input type="text"
                                value={majorDiseases}
                                onChange={(e) => { setMajorDiseases(e.target.value) }} />
                        </div>

                    </section>


                    <button type="submit" className='submit_btn'>Submit</button>

                </form>

            </section>
        </main>
    );
}

export default App;
"■import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);
"ўF/* global __webpack_require__ */
var Refresh = require('react-refresh/runtime');

/**
 * Extracts exports from a webpack module object.
 * @param {string} moduleId A Webpack module ID.
 * @returns {*} An exports object from the module.
 */
function getModuleExports(moduleId) {
  if (typeof moduleId === 'undefined') {
    // `moduleId` is unavailable, which indicates that this module is not in the cache,
    // which means we won't be able to capture any exports,
    // and thus they cannot be refreshed safely.
    // These are likely runtime or dynamically generated modules.
    return {};
  }

  var maybeModule = __webpack_require__.c[moduleId];
  if (typeof maybeModule === 'undefined') {
    // `moduleId` is available but the module in cache is unavailable,
    // which indicates the module is somehow corrupted (e.g. broken Webpacak `module` globals).
    // We will warn the user (as this is likely a mistake) and assume they cannot be refreshed.
    console.warn('[React Refresh] Failed to get exports for module: ' + moduleId + '.');
    return {};
  }

  var exportsOrPromise = maybeModule.exports;
  if (typeof Promise !== 'undefined' && exportsOrPromise instanceof Promise) {
    return exportsOrPromise.then(function (exports) {
      return exports;
    });
  }
  return exportsOrPromise;
}

/**
 * Calculates the signature of a React refresh boundary.
 * If this signature changes, it's unsafe to accept the boundary.
 *
 * This implementation is based on the one in [Metro](https://github.com/facebook/metro/blob/907d6af22ac6ebe58572be418e9253a90665ecbd/packages/metro/src/lib/polyfills/require.js#L795-L816).
 * @param {*} moduleExports A Webpack module exports object.
 * @returns {string[]} A React refresh boundary signature array.
 */
function getReactRefreshBoundarySignature(moduleExports) {
  var signature = [];
  signature.push(Refresh.getFamilyByType(moduleExports));

  if (moduleExports == null || typeof moduleExports !== 'object') {
    // Exit if we can't iterate over exports.
    return signature;
  }

  for (var key in moduleExports) {
    if (key === '__esModule') {
      continue;
    }

    signature.push(key);
    signature.push(Refresh.getFamilyByType(moduleExports[key]));
  }

  return signature;
}

/**
 * Creates a helper that performs a delayed React refresh.
 * @returns {function(function(): void): void} A debounced React refresh function.
 */
function createDebounceUpdate() {
  /**
   * A cached setTimeout handler.
   * @type {number | undefined}
   */
  var refreshTimeout;

  /**
   * Performs react refresh on a delay and clears the error overlay.
   * @param {function(): void} callback
   * @returns {void}
   */
  function enqueueUpdate(callback) {
    if (typeof refreshTimeout === 'undefined') {
      refreshTimeout = setTimeout(function () {
        refreshTimeout = undefined;
        Refresh.performReactRefresh();
        callback();
      }, 30);
    }
  }

  return enqueueUpdate;
}

/**
 * Checks if all exports are likely a React component.
 *
 * This implementation is based on the one in [Metro](https://github.com/facebook/metro/blob/febdba2383113c88296c61e28e4ef6a7f4939fda/packages/metro/src/lib/polyfills/require.js#L748-L774).
 * @param {*} moduleExports A Webpack module exports object.
 * @returns {boolean} Whether the exports are React component like.
 */
function isReactRefreshBoundary(moduleExports) {
  if (Refresh.isLikelyComponentType(moduleExports)) {
    return true;
  }
  if (moduleExports === undefined || moduleExports === null || typeof moduleExports !== 'object') {
    // Exit if we can't iterate over exports.
    return false;
  }

  var hasExports = false;
  var areAllExportsComponents = true;
  for (var key in moduleExports) {
    hasExports = true;

    // This is the ES Module indicator flag
    if (key === '__esModule') {
      continue;
    }

    // We can (and have to) safely execute getters here,
    // as Webpack manually assigns harmony exports to getters,
    // without any side-effects attached.
    // Ref: https://github.com/webpack/webpack/blob/b93048643fe74de2a6931755911da1212df55897/lib/MainTemplate.js#L281
    var exportValue = moduleExports[key];
    if (!Refresh.isLikelyComponentType(exportValue)) {
      areAllExportsComponents = false;
    }
  }

  return hasExports && areAllExportsComponents;
}

/**
 * Checks if exports are likely a React component and registers them.
 *
 * This implementation is based on the one in [Metro](https://github.com/facebook/metro/blob/febdba2383113c88296c61e28e4ef6a7f4939fda/packages/metro/src/lib/polyfills/require.js#L818-L835).
 * @param {*} moduleExports A Webpack module exports object.
 * @param {string} moduleId A Webpack module ID.
 * @returns {void}
 */
function registerExportsForReactRefresh(moduleExports, moduleId) {
  if (Refresh.isLikelyComponentType(moduleExports)) {
    // Register module.exports if it is likely a component
    Refresh.register(moduleExports, moduleId + ' %exports%');
  }

  if (moduleExports === undefined || moduleExports === null || typeof moduleExports !== 'object') {
    // Exit if we can't iterate over the exports.
    return;
  }

  for (var key in moduleExports) {
    // Skip registering the ES Module indicator
    if (key === '__esModule') {
      continue;
    }

    var exportValue = moduleExports[key];
    if (Refresh.isLikelyComponentType(exportValue)) {
      var typeID = moduleId + ' %exports% ' + key;
      Refresh.register(exportValue, typeID);
    }
  }
}

/**
 * Compares previous and next module objects to check for mutated boundaries.
 *
 * This implementation is based on the one in [Metro](https://github.com/facebook/metro/blob/907d6af22ac6ebe58572be418e9253a90665ecbd/packages/metro/src/lib/polyfills/require.js#L776-L792).
 * @param {*} prevExports The current Webpack module exports object.
 * @param {*} nextExports The next Webpack module exports object.
 * @returns {boolean} Whether the React refresh boundary should be invalidated.
 */
function shouldInvalidateReactRefreshBoundary(prevExports, nextExports) {
  var prevSignature = getReactRefreshBoundarySignature(prevExports);
  var nextSignature = getReactRefreshBoundarySignature(nextExports);

  if (prevSignature.length !== nextSignature.length) {
    return true;
  }

  for (var i = 0; i < nextSignature.length; i += 1) {
    if (prevSignature[i] !== nextSignature[i]) {
      return true;
    }
  }

  return false;
}

var enqueueUpdate = createDebounceUpdate();
function executeRuntime(moduleExports, moduleId, webpackHot, refreshOverlay, isTest) {
  registerExportsForReactRefresh(moduleExports, moduleId);

  if (webpackHot) {
    var isHotUpdate = !!webpackHot.data;
    var prevExports;
    if (isHotUpdate) {
      prevExports = webpackHot.data.prevExports;
    }

    if (isReactRefreshBoundary(moduleExports)) {
      webpackHot.dispose(
        /**
         * A callback to performs a full refresh if React has unrecoverable errors,
         * and also caches the to-be-disposed module.
         * @param {*} data A hot module data object from Webpack HMR.
         * @returns {void}
         */
        function hotDisposeCallback(data) {
          // We have to mutate the data object to get data registered and cached
          data.prevExports = moduleExports;
        }
      );
      webpackHot.accept(
        /**
         * An error handler to allow self-recovering behaviours.
         * @param {Error} error An error occurred during evaluation of a module.
         * @returns {void}
         */
        function hotErrorHandler(error) {
          if (typeof refreshOverlay !== 'undefined' && refreshOverlay) {
            refreshOverlay.handleRuntimeError(error);
          }

          if (typeof isTest !== 'undefined' && isTest) {
            if (window.onHotAcceptError) {
              window.onHotAcceptError(error.message);
            }
          }

          __webpack_require__.c[moduleId].hot.accept(hotErrorHandler);
        }
      );

      if (isHotUpdate) {
        if (
          isReactRefreshBoundary(prevExports) &&
          shouldInvalidateReactRefreshBoundary(prevExports, moduleExports)
        ) {
          webpackHot.invalidate();
        } else {
          enqueueUpdate(
            /**
             * A function to dismiss the error overlay after performing React refresh.
             * @returns {void}
             */
            function updateCallback() {
              if (typeof refreshOverlay !== 'undefined' && refreshOverlay) {
                refreshOverlay.clearRuntimeErrors();
              }
            }
          );
        }
      }
    } else {
      if (isHotUpdate && typeof prevExports !== 'undefined') {
        webpackHot.invalidate();
      }
    }
  }
}

module.exports = Object.freeze({
  enqueueUpdate: enqueueUpdate,
  executeRuntime: executeRuntime,
  getModuleExports: getModuleExports,
  isReactRefreshBoundary: isReactRefreshBoundary,
  shouldInvalidateReactRefreshBoundary: shouldInvalidateReactRefreshBoundary,
  registerExportsForReactRefresh: registerExportsForReactRefresh,
});
"ж!'use strict'

module.exports = ansiHTML

// Reference to https://github.com/sindresorhus/ansi-regex
var _regANSI = /(?:(?:\u001b\[)|\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\u001b[A-M]/

var _defColors = {
  reset: ['fff', '000'], // [FOREGROUD_COLOR, BACKGROUND_COLOR]
  black: '000',
  red: 'ff0000',
  green: '209805',
  yellow: 'e8bf03',
  blue: '0000ff',
  magenta: 'ff00ff',
  cyan: '00ffee',
  lightgrey: 'f0f0f0',
  darkgrey: '888'
}
var _styles = {
  30: 'black',
  31: 'red',
  32: 'green',
  33: 'yellow',
  34: 'blue',
  35: 'magenta',
  36: 'cyan',
  37: 'lightgrey'
}
var _openTags = {
  '1': 'font-weight:bold', // bold
  '2': 'opacity:0.5', // dim
  '3': '<i>', // italic
  '4': '<u>', // underscore
  '8': 'display:none', // hidden
  '9': '<del>' // delete
}
var _closeTags = {
  '23': '</i>', // reset italic
  '24': '</u>', // reset underscore
  '29': '</del>' // reset delete
}

;[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {
  _closeTags[n] = '</span>'
})

/**
 * Converts text with ANSI color codes to HTML markup.
 * @param {String} text
 * @returns {*}
 */
function ansiHTML (text) {
  // Returns the text if the string has no ANSI escape code.
  if (!_regANSI.test(text)) {
    return text
  }

  // Cache opened sequence.
  var ansiCodes = []
  // Replace with markup.
  var ret = text.replace(/\033\[(\d+)m/g, function (match, seq) {
    var ot = _openTags[seq]
    if (ot) {
      // If current sequence has been opened, close it.
      if (!!~ansiCodes.indexOf(seq)) { // eslint-disable-line no-extra-boolean-cast
        ansiCodes.pop()
        return '</span>'
      }
      // Open tag.
      ansiCodes.push(seq)
      return ot[0] === '<' ? ot : '<span style="' + ot + ';">'
    }

    var ct = _closeTags[seq]
    if (ct) {
      // Pop sequence
      ansiCodes.pop()
      return ct
    }
    return ''
  })

  // Make sure tags are closed.
  var l = ansiCodes.length
  ;(l > 0) && (ret += Array(l + 1).join('</span>'))

  return ret
}

/**
 * Customize colors.
 * @param {Object} colors reference to _defColors
 */
ansiHTML.setColors = function (colors) {
  if (typeof colors !== 'object') {
    throw new Error('`colors` parameter must be an Object.')
  }

  var _finalColors = {}
  for (var key in _defColors) {
    var hex = colors.hasOwnProperty(key) ? colors[key] : null
    if (!hex) {
      _finalColors[key] = _defColors[key]
      continue
    }
    if ('reset' === key) {
      if (typeof hex === 'string') {
        hex = [hex]
      }
      if (!Array.isArray(hex) || hex.length === 0 || hex.some(function (h) {
        return typeof h !== 'string'
      })) {
        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000')
      }
      var defHexColor = _defColors[key]
      if (!hex[0]) {
        hex[0] = defHexColor[0]
      }
      if (hex.length === 1 || !hex[1]) {
        hex = [hex[0]]
        hex.push(defHexColor[1])
      }

      hex = hex.slice(0, 2)
    } else if (typeof hex !== 'string') {
      throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000')
    }
    _finalColors[key] = hex
  }
  _setTags(_finalColors)
}

/**
 * Reset colors.
 */
ansiHTML.reset = function () {
  _setTags(_defColors)
}

/**
 * Expose tags, including open and close.
 * @type {Object}
 */
ansiHTML.tags = {}

if (Object.defineProperty) {
  Object.defineProperty(ansiHTML.tags, 'open', {
    get: function () { return _openTags }
  })
  Object.defineProperty(ansiHTML.tags, 'close', {
    get: function () { return _closeTags }
  })
} else {
  ansiHTML.tags.open = _openTags
  ansiHTML.tags.close = _closeTags
}

function _setTags (colors) {
  // reset all
  _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1]
  // inverse
  _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0]
  // dark grey
  _openTags['90'] = 'color:#' + colors.darkgrey

  for (var code in _styles) {
    var color = _styles[code]
    var oriColor = colors[color] || '000'
    _openTags[code] = 'color:#' + oriColor
    code = parseInt(code)
    _openTags[(code + 10).toString()] = 'background:#' + oriColor
  }
}

ansiHTML.reset()
"(module.exports = require('./lib/axios');"▀9'use strict';

var utils = require('./../utils');
var settle = require('./../core/settle');
var cookies = require('./../helpers/cookies');
var buildURL = require('./../helpers/buildURL');
var buildFullPath = require('../core/buildFullPath');
var parseHeaders = require('./../helpers/parseHeaders');
var isURLSameOrigin = require('./../helpers/isURLSameOrigin');
var transitionalDefaults = require('../defaults/transitional');
var AxiosError = require('../core/AxiosError');
var CanceledError = require('../cancel/CanceledError');
var parseProtocol = require('../helpers/parseProtocol');

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;
    var responseType = config.responseType;
    var onCanceled;
    function done() {
      if (config.cancelToken) {
        config.cancelToken.unsubscribe(onCanceled);
      }

      if (config.signal) {
        config.signal.removeEventListener('abort', onCanceled);
      }
    }

    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);

    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    function onloadend() {
      if (!request) {
        return;
      }
      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?
        request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(function _resolve(value) {
        resolve(value);
        done();
      }, function _reject(err) {
        reject(err);
        done();
      }, response);

      // Clean up request
      request = null;
    }

    if ('onloadend' in request) {
      // Use onloadend if available
      request.onloadend = onloadend;
    } else {
      // Listen for ready state to emulate onloadend
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        }

        // The request errored out and we didn't get a response, this will be
        // handled by onerror instead
        // With one exception: request that using file: protocol, most browsers
        // will return status as 0 even though it's a successful request
        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
          return;
        }
        // readystate handler is calling before onerror or ontimeout handlers,
        // so we should call onloadend on the next 'tick'
        setTimeout(onloadend);
      };
    }

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';
      var transitional = config.transitional || transitionalDefaults;
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(new AxiosError(
        timeoutErrorMessage,
        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,
        config,
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (responseType && responseType !== 'json') {
      request.responseType = config.responseType;
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken || config.signal) {
      // Handle cancellation
      // eslint-disable-next-line func-names
      onCanceled = function(cancel) {
        if (!request) {
          return;
        }
        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);
        request.abort();
        request = null;
      };

      config.cancelToken && config.cancelToken.subscribe(onCanceled);
      if (config.signal) {
        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);
      }
    }

    if (!requestData) {
      requestData = null;
    }

    var protocol = parseProtocol(fullPath);

    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {
      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));
      return;
    }


    // Send the request
    request.send(requestData);
  });
};
"З'use strict';

var utils = require('./utils');
var bind = require('./helpers/bind');
var Axios = require('./core/Axios');
var mergeConfig = require('./core/mergeConfig');
var defaults = require('./defaults');

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  // Factory for creating new instances
  instance.create = function create(instanceConfig) {
    return createInstance(mergeConfig(defaultConfig, instanceConfig));
  };

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Expose Cancel & CancelToken
axios.CanceledError = require('./cancel/CanceledError');
axios.CancelToken = require('./cancel/CancelToken');
axios.isCancel = require('./cancel/isCancel');
axios.VERSION = require('./env/data').version;
axios.toFormData = require('./helpers/toFormData');

// Expose AxiosError class
axios.AxiosError = require('../lib/core/AxiosError');

// alias for CanceledError for backward compatibility
axios.Cancel = axios.CanceledError;

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = require('./helpers/spread');

// Expose isAxiosError
axios.isAxiosError = require('./helpers/isAxiosError');

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;
"┴'use strict';

var CanceledError = require('./CanceledError');

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;

  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;

  // eslint-disable-next-line func-names
  this.promise.then(function(cancel) {
    if (!token._listeners) return;

    var i;
    var l = token._listeners.length;

    for (i = 0; i < l; i++) {
      token._listeners[i](cancel);
    }
    token._listeners = null;
  });

  // eslint-disable-next-line func-names
  this.promise.then = function(onfulfilled) {
    var _resolve;
    // eslint-disable-next-line func-names
    var promise = new Promise(function(resolve) {
      token.subscribe(resolve);
      _resolve = resolve;
    }).then(onfulfilled);

    promise.cancel = function reject() {
      token.unsubscribe(_resolve);
    };

    return promise;
  };

  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new CanceledError(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `CanceledError` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Subscribe to the cancel signal
 */

CancelToken.prototype.subscribe = function subscribe(listener) {
  if (this.reason) {
    listener(this.reason);
    return;
  }

  if (this._listeners) {
    this._listeners.push(listener);
  } else {
    this._listeners = [listener];
  }
};

/**
 * Unsubscribe from the cancel signal
 */

CancelToken.prototype.unsubscribe = function unsubscribe(listener) {
  if (!this._listeners) {
    return;
  }
  var index = this._listeners.indexOf(listener);
  if (index !== -1) {
    this._listeners.splice(index, 1);
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;
"б'use strict';

var AxiosError = require('../core/AxiosError');
var utils = require('../utils');

/**
 * A `CanceledError` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function CanceledError(message) {
  // eslint-disable-next-line no-eq-null,eqeqeq
  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);
  this.name = 'CanceledError';
}

utils.inherits(CanceledError, AxiosError, {
  __CANCEL__: true
});

module.exports = CanceledError;
"f'use strict';

module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};
"ц#'use strict';

var utils = require('./../utils');
var buildURL = require('../helpers/buildURL');
var InterceptorManager = require('./InterceptorManager');
var dispatchRequest = require('./dispatchRequest');
var mergeConfig = require('./mergeConfig');
var buildFullPath = require('./buildFullPath');
var validator = require('../helpers/validator');

var validators = validator.validators;
/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(configOrUrl, config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof configOrUrl === 'string') {
    config = config || {};
    config.url = configOrUrl;
  } else {
    config = configOrUrl || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  var transitional = config.transitional;

  if (transitional !== undefined) {
    validator.assertOptions(transitional, {
      silentJSONParsing: validators.transitional(validators.boolean),
      forcedJSONParsing: validators.transitional(validators.boolean),
      clarifyTimeoutError: validators.transitional(validators.boolean)
    }, false);
  }

  // filter out skipped interceptors
  var requestInterceptorChain = [];
  var synchronousRequestInterceptors = true;
  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {
      return;
    }

    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;

    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  var responseInterceptorChain = [];
  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
  });

  var promise;

  if (!synchronousRequestInterceptors) {
    var chain = [dispatchRequest, undefined];

    Array.prototype.unshift.apply(chain, requestInterceptorChain);
    chain = chain.concat(responseInterceptorChain);

    promise = Promise.resolve(config);
    while (chain.length) {
      promise = promise.then(chain.shift(), chain.shift());
    }

    return promise;
  }


  var newConfig = config;
  while (requestInterceptorChain.length) {
    var onFulfilled = requestInterceptorChain.shift();
    var onRejected = requestInterceptorChain.shift();
    try {
      newConfig = onFulfilled(newConfig);
    } catch (error) {
      onRejected(error);
      break;
    }
  }

  try {
    promise = dispatchRequest(newConfig);
  } catch (error) {
    return Promise.reject(error);
  }

  while (responseInterceptorChain.length) {
    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  var fullPath = buildFullPath(config.baseURL, config.url);
  return buildURL(fullPath, config.params, config.paramsSerializer);
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/

  function generateHTTPMethod(isForm) {
    return function httpMethod(url, data, config) {
      return this.request(mergeConfig(config || {}, {
        method: method,
        headers: isForm ? {
          'Content-Type': 'multipart/form-data'
        } : {},
        url: url,
        data: data
      }));
    };
  }

  Axios.prototype[method] = generateHTTPMethod();

  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);
});

module.exports = Axios;
"╬'use strict';

var utils = require('../utils');

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [config] The config.
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
function AxiosError(message, code, config, request, response) {
  Error.call(this);
  this.message = message;
  this.name = 'AxiosError';
  code && (this.code = code);
  config && (this.config = config);
  request && (this.request = request);
  response && (this.response = response);
}

utils.inherits(AxiosError, Error, {
  toJSON: function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code,
      status: this.response && this.response.status ? this.response.status : null
    };
  }
});

var prototype = AxiosError.prototype;
var descriptors = {};

[
  'ERR_BAD_OPTION_VALUE',
  'ERR_BAD_OPTION',
  'ECONNABORTED',
  'ETIMEDOUT',
  'ERR_NETWORK',
  'ERR_FR_TOO_MANY_REDIRECTS',
  'ERR_DEPRECATED',
  'ERR_BAD_RESPONSE',
  'ERR_BAD_REQUEST',
  'ERR_CANCELED'
// eslint-disable-next-line func-names
].forEach(function(code) {
  descriptors[code] = {value: code};
});

Object.defineProperties(AxiosError, descriptors);
Object.defineProperty(prototype, 'isAxiosError', {value: true});

// eslint-disable-next-line func-names
AxiosError.from = function(error, code, config, request, response, customProps) {
  var axiosError = Object.create(prototype);

  utils.toFlatObject(error, axiosError, function filter(obj) {
    return obj !== Error.prototype;
  });

  AxiosError.call(axiosError, error.message, code, config, request, response);

  axiosError.name = error.name;

  customProps && Object.assign(axiosError, customProps);

  return axiosError;
};

module.exports = AxiosError;
"╙
'use strict';

var utils = require('./../utils');

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected,
    synchronous: options ? options.synchronous : false,
    runWhen: options ? options.runWhen : null
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;
"╖'use strict';

var isAbsoluteURL = require('../helpers/isAbsoluteURL');
var combineURLs = require('../helpers/combineURLs');

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};
"▄'use strict';

var utils = require('./../utils');
var transformData = require('./transformData');
var isCancel = require('../cancel/isCancel');
var defaults = require('../defaults');
var CanceledError = require('../cancel/CanceledError');

/**
 * Throws a `CanceledError` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }

  if (config.signal && config.signal.aborted) {
    throw new CanceledError();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData.call(
    config,
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData.call(
      config,
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData.call(
          config,
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};
"г'use strict';

var utils = require('../utils');

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }
    return source;
  }

  // eslint-disable-next-line consistent-return
  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      return getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      return getMergedValue(undefined, config1[prop]);
    }
  }

  // eslint-disable-next-line consistent-return
  function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      return getMergedValue(undefined, config2[prop]);
    }
  }

  // eslint-disable-next-line consistent-return
  function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      return getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      return getMergedValue(undefined, config1[prop]);
    }
  }

  // eslint-disable-next-line consistent-return
  function mergeDirectKeys(prop) {
    if (prop in config2) {
      return getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      return getMergedValue(undefined, config1[prop]);
    }
  }

  var mergeMap = {
    'url': valueFromConfig2,
    'method': valueFromConfig2,
    'data': valueFromConfig2,
    'baseURL': defaultToConfig2,
    'transformRequest': defaultToConfig2,
    'transformResponse': defaultToConfig2,
    'paramsSerializer': defaultToConfig2,
    'timeout': defaultToConfig2,
    'timeoutMessage': defaultToConfig2,
    'withCredentials': defaultToConfig2,
    'adapter': defaultToConfig2,
    'responseType': defaultToConfig2,
    'xsrfCookieName': defaultToConfig2,
    'xsrfHeaderName': defaultToConfig2,
    'onUploadProgress': defaultToConfig2,
    'onDownloadProgress': defaultToConfig2,
    'decompress': defaultToConfig2,
    'maxContentLength': defaultToConfig2,
    'maxBodyLength': defaultToConfig2,
    'beforeRedirect': defaultToConfig2,
    'transport': defaultToConfig2,
    'httpAgent': defaultToConfig2,
    'httpsAgent': defaultToConfig2,
    'cancelToken': defaultToConfig2,
    'socketPath': defaultToConfig2,
    'responseEncoding': defaultToConfig2,
    'validateStatus': mergeDirectKeys
  };

  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {
    var merge = mergeMap[prop] || mergeDeepProperties;
    var configValue = merge(prop);
    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);
  });

  return config;
};
"Я'use strict';

var AxiosError = require('./AxiosError');

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(new AxiosError(
      'Request failed with status code ' + response.status,
      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
      response.config,
      response.request,
      response
    ));
  }
};
"¤'use strict';

var utils = require('./../utils');
var defaults = require('../defaults');

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  var context = this || defaults;
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn.call(context, data, headers);
  });

  return data;
};
"ч'use strict';

var utils = require('../utils');
var normalizeHeaderName = require('../helpers/normalizeHeaderName');
var AxiosError = require('../core/AxiosError');
var transitionalDefaults = require('./transitional');
var toFormData = require('../helpers/toFormData');

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = require('../adapters/xhr');
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = require('../adapters/http');
  }
  return adapter;
}

function stringifySafely(rawValue, parser, encoder) {
  if (utils.isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return utils.trim(rawValue);
    } catch (e) {
      if (e.name !== 'SyntaxError') {
        throw e;
      }
    }
  }

  return (encoder || JSON.stringify)(rawValue);
}

var defaults = {

  transitional: transitionalDefaults,

  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');

    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }

    var isObjectPayload = utils.isObject(data);
    var contentType = headers && headers['Content-Type'];

    var isFileList;

    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {
      var _FormData = this.env && this.env.FormData;
      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());
    } else if (isObjectPayload || contentType === 'application/json') {
      setContentTypeIfUnset(headers, 'application/json');
      return stringifySafely(data);
    }

    return data;
  }],

  transformResponse: [function transformResponse(data) {
    var transitional = this.transitional || defaults.transitional;
    var silentJSONParsing = transitional && transitional.silentJSONParsing;
    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';

    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {
      try {
        return JSON.parse(data);
      } catch (e) {
        if (strictJSONParsing) {
          if (e.name === 'SyntaxError') {
            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);
          }
          throw e;
        }
      }
    }

    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  env: {
    FormData: require('./env/FormData')
  },

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  },

  headers: {
    common: {
      'Accept': 'application/json, text/plain, */*'
    }
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;
"x'use strict';

module.exports = {
  silentJSONParsing: true,
  forcedJSONParsing: true,
  clarifyTimeoutError: false
};
"+module.exports = {
  "version": "0.27.2"
};"А'use strict';

module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};
"ь'use strict';

var utils = require('./../utils');

function encode(val) {
  return encodeURIComponent(val).
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};
"№'use strict';

/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};
"Ы'use strict';

var utils = require('./../utils');

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);
"▒'use strict';

/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
};
"ї'use strict';

var utils = require('./../utils');

/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
module.exports = function isAxiosError(payload) {
  return utils.isObject(payload) && (payload.isAxiosError === true);
};
"Б'use strict';

var utils = require('./../utils');

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);
"х'use strict';

var utils = require('../utils');

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};
":// eslint-disable-next-line strict
module.exports = null;
"ё
'use strict';

var utils = require('./../utils');

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};
"Ш'use strict';

module.exports = function parseProtocol(url) {
  var match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
  return match && match[1] || '';
};
"┤'use strict';

/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};
"°'use strict';

var utils = require('../utils');

/**
 * Convert a data object to FormData
 * @param {Object} obj
 * @param {?Object} [formData]
 * @returns {Object}
 **/

function toFormData(obj, formData) {
  // eslint-disable-next-line no-param-reassign
  formData = formData || new FormData();

  var stack = [];

  function convertValue(value) {
    if (value === null) return '';

    if (utils.isDate(value)) {
      return value.toISOString();
    }

    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {
      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);
    }

    return value;
  }

  function build(data, parentKey) {
    if (utils.isPlainObject(data) || utils.isArray(data)) {
      if (stack.indexOf(data) !== -1) {
        throw Error('Circular reference detected in ' + parentKey);
      }

      stack.push(data);

      utils.forEach(data, function each(value, key) {
        if (utils.isUndefined(value)) return;
        var fullKey = parentKey ? parentKey + '.' + key : key;
        var arr;

        if (value && !parentKey && typeof value === 'object') {
          if (utils.endsWith(key, '{}')) {
            // eslint-disable-next-line no-param-reassign
            value = JSON.stringify(value);
          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {
            // eslint-disable-next-line func-names
            arr.forEach(function(el) {
              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));
            });
            return;
          }
        }

        build(value, fullKey);
      });

      stack.pop();
    } else {
      formData.append(parentKey, convertValue(data));
    }
  }

  build(obj);

  return formData;
}

module.exports = toFormData;
"√'use strict';

var VERSION = require('../env/data').version;
var AxiosError = require('../core/AxiosError');

var validators = {};

// eslint-disable-next-line func-names
['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {
  validators[type] = function validator(thing) {
    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
  };
});

var deprecatedWarnings = {};

/**
 * Transitional option validator
 * @param {function|boolean?} validator - set to false if the transitional option has been removed
 * @param {string?} version - deprecated version / removed since version
 * @param {string?} message - some message with additional info
 * @returns {function}
 */
validators.transitional = function transitional(validator, version, message) {
  function formatMessage(opt, desc) {
    return '[Axios v' + VERSION + '] Transitional option \'' + opt + '\'' + desc + (message ? '. ' + message : '');
  }

  // eslint-disable-next-line func-names
  return function(value, opt, opts) {
    if (validator === false) {
      throw new AxiosError(
        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),
        AxiosError.ERR_DEPRECATED
      );
    }

    if (version && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true;
      // eslint-disable-next-line no-console
      console.warn(
        formatMessage(
          opt,
          ' has been deprecated since v' + version + ' and will be removed in the near future'
        )
      );
    }

    return validator ? validator(value, opt, opts) : true;
  };
};

/**
 * Assert object's properties type
 * @param {object} options
 * @param {object} schema
 * @param {boolean?} allowUnknown
 */

function assertOptions(options, schema, allowUnknown) {
  if (typeof options !== 'object') {
    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);
  }
  var keys = Object.keys(options);
  var i = keys.length;
  while (i-- > 0) {
    var opt = keys[i];
    var validator = schema[opt];
    if (validator) {
      var value = options[opt];
      var result = value === undefined || validator(value, opt, options);
      if (result !== true) {
        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);
      }
      continue;
    }
    if (allowUnknown !== true) {
      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);
    }
  }
}

module.exports = {
  assertOptions: assertOptions,
  validators: validators
};
"╫]'use strict';

var bind = require('./helpers/bind');

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

// eslint-disable-next-line func-names
var kindOf = (function(cache) {
  // eslint-disable-next-line func-names
  return function(thing) {
    var str = toString.call(thing);
    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
  };
})(Object.create(null));

function kindOfTest(type) {
  type = type.toLowerCase();
  return function isKindOf(thing) {
    return kindOf(thing) === type;
  };
}

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return Array.isArray(val);
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
var isArrayBuffer = kindOfTest('ArrayBuffer');


/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */
function isPlainObject(val) {
  if (kindOf(val) !== 'object') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}

/**
 * Determine if a value is a Date
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
var isDate = kindOfTest('Date');

/**
 * Determine if a value is a File
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
var isFile = kindOfTest('File');

/**
 * Determine if a value is a Blob
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
var isBlob = kindOfTest('Blob');

/**
 * Determine if a value is a FileList
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
var isFileList = kindOfTest('FileList');

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} thing The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(thing) {
  var pattern = '[object FormData]';
  return thing && (
    (typeof FormData === 'function' && thing instanceof FormData) ||
    toString.call(thing) === pattern ||
    (isFunction(thing.toString) && thing.toString() === pattern)
  );
}

/**
 * Determine if a value is a URLSearchParams object
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
var isURLSearchParams = kindOfTest('URLSearchParams');

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */
function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}

/**
 * Inherit the prototype methods from one constructor into another
 * @param {function} constructor
 * @param {function} superConstructor
 * @param {object} [props]
 * @param {object} [descriptors]
 */

function inherits(constructor, superConstructor, props, descriptors) {
  constructor.prototype = Object.create(superConstructor.prototype, descriptors);
  constructor.prototype.constructor = constructor;
  props && Object.assign(constructor.prototype, props);
}

/**
 * Resolve object with deep prototype chain to a flat object
 * @param {Object} sourceObj source object
 * @param {Object} [destObj]
 * @param {Function} [filter]
 * @returns {Object}
 */

function toFlatObject(sourceObj, destObj, filter) {
  var props;
  var i;
  var prop;
  var merged = {};

  destObj = destObj || {};

  do {
    props = Object.getOwnPropertyNames(sourceObj);
    i = props.length;
    while (i-- > 0) {
      prop = props[i];
      if (!merged[prop]) {
        destObj[prop] = sourceObj[prop];
        merged[prop] = true;
      }
    }
    sourceObj = Object.getPrototypeOf(sourceObj);
  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);

  return destObj;
}

/*
 * determines whether a string ends with the characters of a specified string
 * @param {String} str
 * @param {String} searchString
 * @param {Number} [position= 0]
 * @returns {boolean}
 */
function endsWith(str, searchString, position) {
  str = String(str);
  if (position === undefined || position > str.length) {
    position = str.length;
  }
  position -= searchString.length;
  var lastIndex = str.indexOf(searchString, position);
  return lastIndex !== -1 && lastIndex === position;
}


/**
 * Returns new array from array like object
 * @param {*} [thing]
 * @returns {Array}
 */
function toArray(thing) {
  if (!thing) return null;
  var i = thing.length;
  if (isUndefined(i)) return null;
  var arr = new Array(i);
  while (i-- > 0) {
    arr[i] = thing[i];
  }
  return arr;
}

// eslint-disable-next-line func-names
var isTypedArray = (function(TypedArray) {
  // eslint-disable-next-line func-names
  return function(thing) {
    return TypedArray && thing instanceof TypedArray;
  };
})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM,
  inherits: inherits,
  toFlatObject: toFlatObject,
  kindOf: kindOf,
  kindOfTest: kindOfTest,
  endsWith: endsWith,
  toArray: toArray,
  isTypedArray: isTypedArray,
  isFileList: isFileList
};
"Ivar parent = require('../stable/global-this');

module.exports = parent;
"Xrequire('../modules/es.global-this');

module.exports = require('../internals/global');
"1module.exports = require('../full/global-this');
"Х// TODO: remove from `core-js@4`
require('../modules/esnext.global-this');

var parent = require('../actual/global-this');

module.exports = parent;
"Вvar global = require('../internals/global');
var isCallable = require('../internals/is-callable');
var tryToString = require('../internals/try-to-string');

var TypeError = global.TypeError;

// `Assert: IsCallable(argument) is true`
module.exports = function (argument) {
  if (isCallable(argument)) return argument;
  throw TypeError(tryToString(argument) + ' is not a function');
};
"╒var global = require('../internals/global');
var isObject = require('../internals/is-object');

var String = global.String;
var TypeError = global.TypeError;

// `Assert: Type(argument) is Object`
module.exports = function (argument) {
  if (isObject(argument)) return argument;
  throw TypeError(String(argument) + ' is not an object');
};
"фvar uncurryThis = require('../internals/function-uncurry-this');

var toString = uncurryThis({}.toString);
var stringSlice = uncurryThis(''.slice);

module.exports = function (it) {
  return stringSlice(toString(it), 8, -1);
};
"╢var DESCRIPTORS = require('../internals/descriptors');
var definePropertyModule = require('../internals/object-define-property');
var createPropertyDescriptor = require('../internals/create-property-descriptor');

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};
"нmodule.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};
"╢var fails = require('../internals/fails');

// Detect IE8's incomplete defineProperty implementation
module.exports = !fails(function () {
  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});
"╘var global = require('../internals/global');
var isObject = require('../internals/is-object');

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};
"uvar getBuiltIn = require('../internals/get-built-in');

module.exports = getBuiltIn('navigator', 'userAgent') || '';
"╥var global = require('../internals/global');
var userAgent = require('../internals/engine-user-agent');

var process = global.process;
var Deno = global.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

module.exports = version;
"╚#'use strict';
var global = require('../internals/global');
var apply = require('../internals/function-apply');
var uncurryThis = require('../internals/function-uncurry-this');
var isCallable = require('../internals/is-callable');
var getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;
var isForced = require('../internals/is-forced');
var path = require('../internals/path');
var bind = require('../internals/function-bind-context');
var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');
var hasOwn = require('../internals/has-own-property');

var wrapConstructor = function (NativeConstructor) {
  var Wrapper = function (a, b, c) {
    if (this instanceof Wrapper) {
      switch (arguments.length) {
        case 0: return new NativeConstructor();
        case 1: return new NativeConstructor(a);
        case 2: return new NativeConstructor(a, b);
      } return new NativeConstructor(a, b, c);
    } return apply(NativeConstructor, this, arguments);
  };
  Wrapper.prototype = NativeConstructor.prototype;
  return Wrapper;
};

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
  options.name        - the .name of the function if it does not match the key
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var PROTO = options.proto;

  var nativeSource = GLOBAL ? global : STATIC ? global[TARGET] : (global[TARGET] || {}).prototype;

  var target = GLOBAL ? path : path[TARGET] || createNonEnumerableProperty(path, TARGET, {})[TARGET];
  var targetPrototype = target.prototype;

  var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;
  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;

  for (key in source) {
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contains in native
    USE_NATIVE = !FORCED && nativeSource && hasOwn(nativeSource, key);

    targetProperty = target[key];

    if (USE_NATIVE) if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(nativeSource, key);
      nativeProperty = descriptor && descriptor.value;
    } else nativeProperty = nativeSource[key];

    // export native or implementation
    sourceProperty = (USE_NATIVE && nativeProperty) ? nativeProperty : source[key];

    if (USE_NATIVE && typeof targetProperty == typeof sourceProperty) continue;

    // bind timers to global for call from export context
    if (options.bind && USE_NATIVE) resultProperty = bind(sourceProperty, global);
    // wrap global constructors for prevent changs in this version
    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);
    // make static versions for prototype methods
    else if (PROTO && isCallable(sourceProperty)) resultProperty = uncurryThis(sourceProperty);
    // default case
    else resultProperty = sourceProperty;

    // add a flag to not completely full polyfills
    if (options.sham || (sourceProperty && sourceProperty.sham) || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(resultProperty, 'sham', true);
    }

    createNonEnumerableProperty(target, key, resultProperty);

    if (PROTO) {
      VIRTUAL_PROTOTYPE = TARGET + 'Prototype';
      if (!hasOwn(path, VIRTUAL_PROTOTYPE)) {
        createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});
      }
      // export virtual prototype methods
      createNonEnumerableProperty(path[VIRTUAL_PROTOTYPE], key, sourceProperty);
      // export real prototype methods
      if (options.real && targetPrototype && !targetPrototype[key]) {
        createNonEnumerableProperty(targetPrototype, key, sourceProperty);
      }
    }
  }
};
"lmodule.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};
"Еvar NATIVE_BIND = require('../internals/function-bind-native');

var FunctionPrototype = Function.prototype;
var apply = FunctionPrototype.apply;
var call = FunctionPrototype.call;

// eslint-disable-next-line es-x/no-reflect -- safe
module.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {
  return call.apply(apply, arguments);
});
"╔var uncurryThis = require('../internals/function-uncurry-this');
var aCallable = require('../internals/a-callable');
var NATIVE_BIND = require('../internals/function-bind-native');

var bind = uncurryThis(uncurryThis.bind);

// optional / simple context binding
module.exports = function (fn, that) {
  aCallable(fn);
  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};
"╙var fails = require('../internals/fails');

module.exports = !fails(function () {
  // eslint-disable-next-line es-x/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});
"╬var NATIVE_BIND = require('../internals/function-bind-native');

var call = Function.prototype.call;

module.exports = NATIVE_BIND ? call.bind(call) : function () {
  return call.apply(call, arguments);
};
"Ъvar NATIVE_BIND = require('../internals/function-bind-native');

var FunctionPrototype = Function.prototype;
var bind = FunctionPrototype.bind;
var call = FunctionPrototype.call;
var uncurryThis = NATIVE_BIND && bind.bind(call, call);

module.exports = NATIVE_BIND ? function (fn) {
  return fn && uncurryThis(fn);
} : function (fn) {
  return fn && function () {
    return call.apply(fn, arguments);
  };
};
"▀var path = require('../internals/path');
var global = require('../internals/global');
var isCallable = require('../internals/is-callable');

var aFunction = function (variable) {
  return isCallable(variable) ? variable : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])
    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
};
"яvar aCallable = require('../internals/a-callable');

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
module.exports = function (V, P) {
  var func = V[P];
  return func == null ? undefined : aCallable(func);
};
"╨var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line es-x/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof global == 'object' && global) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();
"жvar uncurryThis = require('../internals/function-uncurry-this');
var toObject = require('../internals/to-object');

var hasOwnProperty = uncurryThis({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es-x/no-object-hasown -- safe
module.exports = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject(it), key);
};
"╨var DESCRIPTORS = require('../internals/descriptors');
var fails = require('../internals/fails');
var createElement = require('../internals/document-create-element');

// Thanks to IE8 for its funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});
"Сvar global = require('../internals/global');
var uncurryThis = require('../internals/function-uncurry-this');
var fails = require('../internals/fails');
var classof = require('../internals/classof-raw');

var Object = global.Object;
var split = uncurryThis(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split(it, '') : Object(it);
} : Object;
"а// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
module.exports = function (argument) {
  return typeof argument == 'function';
};
"ъvar fails = require('../internals/fails');
var isCallable = require('../internals/is-callable');

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : isCallable(detection) ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;
"Ъvar isCallable = require('../internals/is-callable');

module.exports = function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it);
};
"module.exports = true;
"Яvar global = require('../internals/global');
var getBuiltIn = require('../internals/get-built-in');
var isCallable = require('../internals/is-callable');
var isPrototypeOf = require('../internals/object-is-prototype-of');
var USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');

var Object = global.Object;

module.exports = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn('Symbol');
  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, Object(it));
};
"╔/* eslint-disable es-x/no-symbol -- required for testing */
var V8_VERSION = require('../internals/engine-v8-version');
var fails = require('../internals/fails');

// eslint-disable-next-line es-x/no-object-getownpropertysymbols -- required for testing
module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  var symbol = Symbol();
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});
"Лvar global = require('../internals/global');
var DESCRIPTORS = require('../internals/descriptors');
var IE8_DOM_DEFINE = require('../internals/ie8-dom-define');
var V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');
var anObject = require('../internals/an-object');
var toPropertyKey = require('../internals/to-property-key');

var TypeError = global.TypeError;
// eslint-disable-next-line es-x/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};
"цvar DESCRIPTORS = require('../internals/descriptors');
var call = require('../internals/function-call');
var propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');
var createPropertyDescriptor = require('../internals/create-property-descriptor');
var toIndexedObject = require('../internals/to-indexed-object');
var toPropertyKey = require('../internals/to-property-key');
var hasOwn = require('../internals/has-own-property');
var IE8_DOM_DEFINE = require('../internals/ie8-dom-define');

// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPropertyKey(P);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
};
"rvar uncurryThis = require('../internals/function-uncurry-this');

module.exports = uncurryThis({}.isPrototypeOf);
"Д'use strict';
var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;
"єvar global = require('../internals/global');
var call = require('../internals/function-call');
var isCallable = require('../internals/is-callable');
var isObject = require('../internals/is-object');

var TypeError = global.TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
module.exports = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;
  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  throw TypeError("Can't convert object to primitive value");
};
"module.exports = {};
"оvar global = require('../internals/global');

var TypeError = global.TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};
"чvar global = require('../internals/global');

// eslint-disable-next-line es-x/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;

module.exports = function (key, value) {
  try {
    defineProperty(global, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global[key] = value;
  } return value;
};
"╙var global = require('../internals/global');
var setGlobal = require('../internals/set-global');

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

module.exports = store;
"▌var IS_PURE = require('../internals/is-pure');
var store = require('../internals/shared-store');

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.22.5',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: 'й 2014-2022 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.22.5/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});
"Э// toObject with fallback for non-array-like ES3 strings
var IndexedObject = require('../internals/indexed-object');
var requireObjectCoercible = require('../internals/require-object-coercible');

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};
"┴var global = require('../internals/global');
var requireObjectCoercible = require('../internals/require-object-coercible');

var Object = global.Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};
"Ыvar global = require('../internals/global');
var call = require('../internals/function-call');
var isObject = require('../internals/is-object');
var isSymbol = require('../internals/is-symbol');
var getMethod = require('../internals/get-method');
var ordinaryToPrimitive = require('../internals/ordinary-to-primitive');
var wellKnownSymbol = require('../internals/well-known-symbol');

var TypeError = global.TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
module.exports = function (input, pref) {
  if (!isObject(input) || isSymbol(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call(exoticToPrim, input, pref);
    if (!isObject(result) || isSymbol(result)) return result;
    throw TypeError("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};
"┐var toPrimitive = require('../internals/to-primitive');
var isSymbol = require('../internals/is-symbol');

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
module.exports = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};
"╟var global = require('../internals/global');

var String = global.String;

module.exports = function (argument) {
  try {
    return String(argument);
  } catch (error) {
    return 'Object';
  }
};
"Цvar uncurryThis = require('../internals/function-uncurry-this');

var id = 0;
var postfix = Math.random();
var toString = uncurryThis(1.0.toString);

module.exports = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};
"╥/* eslint-disable es-x/no-symbol -- required for testing */
var NATIVE_SYMBOL = require('../internals/native-symbol');

module.exports = NATIVE_SYMBOL
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';
"╛var DESCRIPTORS = require('../internals/descriptors');
var fails = require('../internals/fails');

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
module.exports = DESCRIPTORS && fails(function () {
  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype != 42;
});
"Эvar global = require('../internals/global');
var shared = require('../internals/shared');
var hasOwn = require('../internals/has-own-property');
var uid = require('../internals/uid');
var NATIVE_SYMBOL = require('../internals/native-symbol');
var USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var symbolFor = Symbol && Symbol['for'];
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {
    var description = 'Symbol.' + name;
    if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {
      WellKnownSymbolsStore[name] = Symbol[name];
    } else if (USE_SYMBOL_AS_UID && symbolFor) {
      WellKnownSymbolsStore[name] = symbolFor(description);
    } else {
      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);
    }
  } return WellKnownSymbolsStore[name];
};
"╟var $ = require('../internals/export');
var global = require('../internals/global');

// `globalThis` object
// https://tc39.es/ecma262/#sec-globalthis
$({ global: true }, {
  globalThis: global
});
"G// TODO: Remove from `core-js@4`
require('../modules/es.global-this');
"Evar parent = require('../es/global-this');

module.exports = parent;
"О"use strict";

/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";

      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }

      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }

      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }

      content += cssWithMappingToString(item);

      if (needLayer) {
        content += "}";
      }

      if (item[2]) {
        content += "}";
      }

      if (item[4]) {
        content += "}";
      }

      return content;
    }).join("");
  }; // import a list of modules into the list


  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }

      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }

      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }

      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }

      list.push(item);
    }
  };

  return list;
};"░"use strict";

module.exports = function (item) {
  var content = item[1];
  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (typeof btoa === "function") {
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || "").concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join("\n");
  }

  return [content].join("\n");
};"кt// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };

    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}
"є="use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var named_references_1 = require("./named-references");
var numeric_unicode_map_1 = require("./numeric-unicode-map");
var surrogate_pairs_1 = require("./surrogate-pairs");
var allNamedReferences = __assign(__assign({}, named_references_1.namedReferences), { all: named_references_1.namedReferences.html5 });
var encodeRegExps = {
    specialChars: /[<>'"&]/g,
    nonAscii: /(?:[<>'"&\u0080-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g,
    nonAsciiPrintable: /(?:[<>'"&\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g,
    extensive: /(?:[\x01-\x0c\x0e-\x1f\x21-\x2c\x2e-\x2f\x3a-\x40\x5b-\x60\x7b-\x7d\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g
};
var defaultEncodeOptions = {
    mode: 'specialChars',
    level: 'all',
    numeric: 'decimal'
};
/** Encodes all the necessary (specified by `level`) characters in the text */
function encode(text, _a) {
    var _b = _a === void 0 ? defaultEncodeOptions : _a, _c = _b.mode, mode = _c === void 0 ? 'specialChars' : _c, _d = _b.numeric, numeric = _d === void 0 ? 'decimal' : _d, _e = _b.level, level = _e === void 0 ? 'all' : _e;
    if (!text) {
        return '';
    }
    var encodeRegExp = encodeRegExps[mode];
    var references = allNamedReferences[level].characters;
    var isHex = numeric === 'hexadecimal';
    encodeRegExp.lastIndex = 0;
    var _b = encodeRegExp.exec(text);
    var _c;
    if (_b) {
        _c = '';
        var _d = 0;
        do {
            if (_d !== _b.index) {
                _c += text.substring(_d, _b.index);
            }
            var _e = _b[0];
            var result_1 = references[_e];
            if (!result_1) {
                var code_1 = _e.length > 1 ? surrogate_pairs_1.getCodePoint(_e, 0) : _e.charCodeAt(0);
                result_1 = (isHex ? '&#x' + code_1.toString(16) : '&#' + code_1) + ';';
            }
            _c += result_1;
            _d = _b.index + _e.length;
        } while ((_b = encodeRegExp.exec(text)));
        if (_d !== text.length) {
            _c += text.substring(_d);
        }
    }
    else {
        _c =
            text;
    }
    return _c;
}
exports.encode = encode;
var defaultDecodeOptions = {
    scope: 'body',
    level: 'all'
};
var strict = /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);/g;
var attribute = /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;
var baseDecodeRegExps = {
    xml: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.xml
    },
    html4: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.html4
    },
    html5: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.html5
    }
};
var decodeRegExps = __assign(__assign({}, baseDecodeRegExps), { all: baseDecodeRegExps.html5 });
var fromCharCode = String.fromCharCode;
var outOfBoundsChar = fromCharCode(65533);
var defaultDecodeEntityOptions = {
    level: 'all'
};
/** Decodes a single entity */
function decodeEntity(entity, _a) {
    var _b = (_a === void 0 ? defaultDecodeEntityOptions : _a).level, level = _b === void 0 ? 'all' : _b;
    if (!entity) {
        return '';
    }
    var _b = entity;
    var decodeEntityLastChar_1 = entity[entity.length - 1];
    if (false
        && decodeEntityLastChar_1 === '=') {
        _b =
            entity;
    }
    else if (false
        && decodeEntityLastChar_1 !== ';') {
        _b =
            entity;
    }
    else {
        var decodeResultByReference_1 = allNamedReferences[level].entities[entity];
        if (decodeResultByReference_1) {
            _b = decodeResultByReference_1;
        }
        else if (entity[0] === '&' && entity[1] === '#') {
            var decodeSecondChar_1 = entity[2];
            var decodeCode_1 = decodeSecondChar_1 == 'x' || decodeSecondChar_1 == 'X'
                ? parseInt(entity.substr(3), 16)
                : parseInt(entity.substr(2));
            _b =
                decodeCode_1 >= 0x10ffff
                    ? outOfBoundsChar
                    : decodeCode_1 > 65535
                        ? surrogate_pairs_1.fromCodePoint(decodeCode_1)
                        : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_1] || decodeCode_1);
        }
    }
    return _b;
}
exports.decodeEntity = decodeEntity;
/** Decodes all entities in the text */
function decode(text, _a) {
    var decodeSecondChar_1 = _a === void 0 ? defaultDecodeOptions : _a, decodeCode_1 = decodeSecondChar_1.level, level = decodeCode_1 === void 0 ? 'all' : decodeCode_1, _b = decodeSecondChar_1.scope, scope = _b === void 0 ? level === 'xml' ? 'strict' : 'body' : _b;
    if (!text) {
        return '';
    }
    var decodeRegExp = decodeRegExps[level][scope];
    var references = allNamedReferences[level].entities;
    var isAttribute = scope === 'attribute';
    var isStrict = scope === 'strict';
    decodeRegExp.lastIndex = 0;
    var replaceMatch_1 = decodeRegExp.exec(text);
    var replaceResult_1;
    if (replaceMatch_1) {
        replaceResult_1 = '';
        var replaceLastIndex_1 = 0;
        do {
            if (replaceLastIndex_1 !== replaceMatch_1.index) {
                replaceResult_1 += text.substring(replaceLastIndex_1, replaceMatch_1.index);
            }
            var replaceInput_1 = replaceMatch_1[0];
            var decodeResult_1 = replaceInput_1;
            var decodeEntityLastChar_2 = replaceInput_1[replaceInput_1.length - 1];
            if (isAttribute
                && decodeEntityLastChar_2 === '=') {
                decodeResult_1 = replaceInput_1;
            }
            else if (isStrict
                && decodeEntityLastChar_2 !== ';') {
                decodeResult_1 = replaceInput_1;
            }
            else {
                var decodeResultByReference_2 = references[replaceInput_1];
                if (decodeResultByReference_2) {
                    decodeResult_1 = decodeResultByReference_2;
                }
                else if (replaceInput_1[0] === '&' && replaceInput_1[1] === '#') {
                    var decodeSecondChar_2 = replaceInput_1[2];
                    var decodeCode_2 = decodeSecondChar_2 == 'x' || decodeSecondChar_2 == 'X'
                        ? parseInt(replaceInput_1.substr(3), 16)
                        : parseInt(replaceInput_1.substr(2));
                    decodeResult_1 =
                        decodeCode_2 >= 0x10ffff
                            ? outOfBoundsChar
                            : decodeCode_2 > 65535
                                ? surrogate_pairs_1.fromCodePoint(decodeCode_2)
                                : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_2] || decodeCode_2);
                }
            }
            replaceResult_1 += decodeResult_1;
            replaceLastIndex_1 = replaceMatch_1.index + replaceInput_1.length;
        } while ((replaceMatch_1 = decodeRegExp.exec(text)));
        if (replaceLastIndex_1 !== text.length) {
            replaceResult_1 += text.substring(replaceLastIndex_1);
        }
    }
    else {
        replaceResult_1 =
            text;
    }
    return replaceResult_1;
}
exports.decode = decode;
cАЧ" u s e   s t r i c t " ; O b j e c t . d e f i n e P r o p e r t y ( e x p o r t s , " _ _ e s M o d u l e " , { v a l u e : t r u e } ) ; e x p o r t s . b o d y R e g E x p s = { x m l : / & ( ? : # \ d + | # [ x X ] [ \ d a - f A - F ] + | [ 0 - 9 a - z A - Z ] + ) ; ? / g , h t m l 4 : / & ( ? : n b s p | i e x c l | c e n t | p o u n d | c u r r e n | y e n | b r v b a r | s e c t | u m l | c o p y | o r d f | l a q u o | n o t | s h y | r e g | m a c r | d e g | p l u s m n | s u p 2 | s u p 3 | a c u t e | m i c r o | p a r a | m i d d o t | c e d i l | s u p 1 | o r d m | r a q u o | f r a c 1 4 | f r a c 1 2 | f r a c 3 4 | i q u e s t | A g r a v e | A a c u t e | A c i r c | A t i l d e | A u m l | A r i n g | A E l i g | C c e d i l | E g r a v e | E a c u t e | E c i r c | E u m l | I g r a v e | I a c u t e | I c i r c | I u m l | E T H | N t i l d e | O g r a v e | O a c u t e | O c i r c | O t i l d e | O u m l | t i m e s | O s l a s h | U g r a v e | U a c u t e | U c i r c | U u m l | Y a c u t e | T H O R N | s z l i g | a g r a v e | a a c u t e | a c i r c | a t i l d e | a u m l | a r i n g | a e l i g | c c e d i l | e g r a v e | e a c u t e | e c i r c | e u m l | i g r a v e | i a c u t e | i c i r c | i u m l | e t h | n t i l d e | o g r a v e | o a c u t e | o c i r c | o t i l d e | o u m l | d i v i d e | o s l a s h | u g r a v e | u a c u t e | u c i r c | u u m l | y a c u t e | t h o r n | y u m l | q u o t | a m p | l t | g t | # \ d + | # [ x X ] [ \ d a - f A - F ] + | [ 0 - 9 a - z A - Z ] + ) ; ? / g , h t m l 5 : / & ( ? : A E l i g | A M P | A a c u t e | A c i r c | A g r a v e | A r i n g | A t i l d e | A u m l | C O P Y | C c e d i l | E T H | E a c u t e | E c i r c | E g r a v e | E u m l | G T | I a c u t e | I c i r c | I g r a v e | I u m l | L T | N t i l d e | O a c u t e | O c i r c | O g r a v e | O s l a s h | O t i l d e | O u m l | Q U O T | R E G | T H O R N | U a c u t e | U c i r c | U g r a v e | U u m l | Y a c u t e | a a c u t e | a c i r c | a c u t e | a e l i g | a g r a v e | a m p | a r i n g | a t i l d e | a u m l | b r v b a r | c c e d i l | c e d i l | c e n t | c o p y | c u r r e n | d e g | d i v i d e | e a c u t e | e c i r c | e g r a v e | e t h | e u m l | f r a c 1 2 | f r a c 1 4 | f r a c 3 4 | g t | i a c u t e | i c i r c | i e x c l | i g r a v e | i q u e s t | i u m l | l a q u o | l t | m a c r | m i c r o | m i d d o t | n b s p | n o t | n t i l d e | o a c u t e | o c i r c | o g r a v e | o r d f | o r d m | o s l a s h | o t i l d e | o u m l | p a r a | p l u s m n | p o u n d | q u o t | r a q u o | r e g | s e c t | s h y | s u p 1 | s u p 2 | s u p 3 | s z l i g | t h o r n | t i m e s | u a c u t e | u c i r c | u g r a v e | u m l | u u m l | y a c u t e | y e n | y u m l | # \ d + | # [ x X ] [ \ d a - f A - F ] + | [ 0 - 9 a - z A - Z ] + ) ; ? / g } ; e x p o r t s . n a m e d R e f e r e n c e s = { x m l : { e n t i t i e s : { " & l t ; " : " < " , " & g t ; " : " > " , " & q u o t ; " : ' " ' , " & a p o s ; " : " ' " , " & a m p ; " : " & " } , c h a r a c t e r s : { " < " : " & l t ; " , " > " : " & g t ; " , ' " ' : " & q u o t ; " , " ' " : " & a p o s ; " , " & " : " & a m p ; " } } , h t m l 4 : { e n t i t i e s : { " & a p o s ; " : " ' " , " & n b s p " : " а " , " & n b s p ; " : " а " , " & i e x c l " : " б " , " & i e x c l ; " : " б " , " & c e n t " : " в " , " & c e n t ; " : " в " , " & p o u n d " : " г " , " & p o u n d ; " : " г " , " & c u r r e n " : " д " , " & c u r r e n ; " : " д " , " & y e n " : " е " , " & y e n ; " : " е " , " & b r v b a r " : " ж " , " & b r v b a r ; " : " ж " , " & s e c t " : " з " , " & s e c t ; " : " з " , " & u m l " : " и " , " & u m l ; " : " и " , " & c o p y " : " й " , " & c o p y ; " : " й " , " & o r d f " : " к " , " & o r d f ; " : " к " , " & l a q u o " : " л " , " & l a q u o ; " : " л " , " & n o t " : " м " , " & n o t ; " : " м " , " & s h y " : " н " , " & s h y ; " : " н " , " & r e g " : " о " , " & r e g ; " : " о " , " & m a c r " : " п " , " & m a c r ; " : " п " , " & d e g " : " ░ " , " & d e g ; " : " ░ " , " & p l u s m n " : " ▒ " , " & p l u s m n ; " : " ▒ " , " & s u p 2 " : " ▓ " , " & s u p 2 ; " : " ▓ " , " & s u p 3 " : " │ " , " & s u p 3 ; " : " │ " , " & a c u t e " : " ┤ " , " & a c u t e ; " : " ┤ " , " & m i c r o " : " ╡ " , " & m i c r o ; " : " ╡ " , " & p a r a " : " ╢ " , " & p a r a ; " : " ╢ " , " & m i d d o t " : " ╖ " , " & m i d d o t ; " : " ╖ " , " & c e d i l " : " ╕ " , " & c e d i l ; " : " ╕ " , " & s u p 1 " : " ╣ " , " & s u p 1 ; " : " ╣ " , " & o r d m " : " ║ " , " & o r d m ; " : " ║ " , " & r a q u o " : " ╗ " , " & r a q u o ; " : " ╗ " , " & f r a c 1 4 " : " ╝ " , " & f r a c 1 4 ; " : " ╝ " , " & f r a c 1 2 " : " ╜ " , " & f r a c 1 2 ; " : " ╜ " , " & f r a c 3 4 " : " ╛ " , " & f r a c 3 4 ; " : " ╛ " , " & i q u e s t " : " ┐ " , " & i q u e s t ; " : " ┐ " , " & A g r a v e " : " └ " , " & A g r a v e ; " : " └ " , " & A a c u t e " : " ┴ " , " & A a c u t e ; " : " ┴ " , " & A c i r c " : " ┬ " , " & A c i r c ; " : " ┬ " , " & A t i l d e " : " ├ " , " & A t i l d e ; " : " ├ " , " & A u m l " : " ─ " , " & A u m l ; " : " ─ " , " & A r i n g " : " ┼ " , " & A r i n g ; " : " ┼ " , " & A E l i g " : " ╞ " , " & A E l i g ; " : " ╞ " , " & C c e d i l " : " ╟ " , " & C c e d i l ; " : " ╟ " , " & E g r a v e " : " ╚ " , " & E g r a v e ; " : " ╚ " , " & E a c u t e " : " ╔ " , " & E a c u t e ; " : " ╔ " , " & E c i r c " : " ╩ " , " & E c i r c ; " : " ╩ " , " & E u m l " : " ╦ " , " & E u m l ; " : " ╦ " , " & I g r a v e " : " ╠ " , " & I g r a v e ; " : " ╠ " , " & I a c u t e " : " ═ " , " & I a c u t e ; " : " ═ " , " & I c i r c " : " ╬ " , " & I c i r c ; " : " ╬ " , " & I u m l " : " ╧ " , " & I u m l ; " : " ╧ " , " & E T H " : " ╨ " , " & E T H ; " : " ╨ " , " & N t i l d e " : " ╤ " , " & N t i l d e ; " : " ╤ " , " & O g r a v e " : " ╥ " , " & O g r a v e ; " : " ╥ " , " & O a c u t e " : " ╙ " , " & O a c u t e ; " : " ╙ " , " & O c i r c " : " ╘ " , " & O c i r c ; " : " ╘ " , " & O t i l d e " : " ╒ " , " & O t i l d e ; " : " ╒ " , " & O u m l " : " ╓ " , " & O u m l ; " : " ╓ " , " & t i m e s " : " ╫ " , " & t i m e s ; " : " ╫ " , " & O s l a s h " : " ╪ " , " & O s l a s h ; " : " ╪ " , " & U g r a v e " : " ┘ " , " & U g r a v e ; " : " ┘ " , " & U a c u t e " : " ┌ " , " & U a c u t e ; " : " ┌ " , " & U c i r c " : " █ " , " & U c i r c ; " : " █ " , " & U u m l " : " ▄ " , " & U u m l ; " : " ▄ " , " & Y a c u t e " : " ▌ " , " & Y a c u t e ; " : " ▌ " , " & T H O R N " : " ▐ " , " & T H O R N ; " : " ▐ " , " & s z l i g " : " ▀ " , " & s z l i g ; " : " ▀ " , " & a g r a v e " : " р " , " & a g r a v e ; " : " р " , " & a a c u t e " : " с " , " & a a c u t e ; " : " с " , " & a c i r c " : " т " , " & a c i r c ; " : " т " , " & a t i l d e " : " у " , " & a t i l d e ; " : " у " , " & a u m l " : " ф " , " & a u m l ; " : " ф " , " & a r i n g " : " х " , " & a r i n g ; " : " х " , " & a e l i g " : " ц " , " & a e l i g ; " : " ц " , " & c c e d i l " : " ч " , " & c c e d i l ; " : " ч " , " & e g r a v e " : " ш " , " & e g r a v e ; " : " ш " , " & e a c u t e " : " щ " , " & e a c u t e ; " : " щ " , " & e c i r c " : " ъ " , " & e c i r c ; " : " ъ " , " & e u m l " : " ы " , " & e u m l ; " : " ы " , " & i g r a v e " : " ь " , " & i g r a v e ; " : " ь " , " & i a c u t e " : " э " , " & i a c u t e ; " : " э " , " & i c i r c " : " ю " , " & i c i r c ; " : " ю " , " & i u m l " : " я " , " & i u m l ; " : " я " , " & e t h " : " Ё " , " & e t h ; " : " Ё " , " & n t i l d e " : " ё " , " & n t i l d e ; " : " ё " , " & o g r a v e " : " Є " , " & o g r a v e ; " : " Є " , " & o a c u t e " : " є " , " & o a c u t e ; " : " є " , " & o c i r c " : " Ї " , " & o c i r c ; " : " Ї " , " & o t i l d e " : " ї " , " & o t i l d e ; " : " ї " , " & o u m l " : " Ў " , " & o u m l ; " : " Ў " , " & d i v i d e " : " ў " , " & d i v i d e ; " : " ў " , " & o s l a s h " : " ° " , " & o s l a s h ; " : " ° " , " & u g r a v e " : " ∙ " , " & u g r a v e ; " : " ∙ " , " & u a c u t e " : " · " , " & u a c u t e ; " : " · " , " & u c i r c " : " √ " , " & u c i r c ; " : " √ " , " & u u m l " : " № " , " & u u m l ; " : " № " , " & y a c u t e " : " ¤ " , " & y a c u t e ; " : " ¤ " , " & t h o r n " : " ■ " , " & t h o r n ; " : " ■ " , " & y u m l " : "   " , " & y u m l ; " : "   " , " & q u o t " : ' " ' , " & q u o t ; " : ' " ' , " & a m p " : " & " , " & a m p ; " : " & " , " & l t " : " < " , " & l t ; " : " < " , " & g t " : " > " , " & g t ; " : " > " , " & O E l i g ; " : " R" , " & o e l i g ; " : " S" , " & S c a r o n ; " : " `" , " & s c a r o n ; " : " a" , " & Y u m l ; " : " x" , " & c i r c ; " : " ╞" , " & t i l d e ; " : " ▄" , " & e n s p ; " : "  " , " & e m s p ; " : "  " , " & t h i n s p ; " : " 	 " , " & z w n j ; " : "  " , " & z w j ; " : "  " , " & l r m ; " : "  " , " & r l m ; " : "  " , " & n d a s h ; " : "  " , " & m d a s h ; " : "  " , " & l s q u o ; " : "  " , " & r s q u o ; " : "  " , " & s b q u o ; " : "  " , " & l d q u o ; " : "  " , " & r d q u o ; " : "  " , " & b d q u o ; " : "  " , " & d a g g e r ; " : "   " , " & D a g g e r ; " : " ! " , " & p e r m i l ; " : " 0 " , " & l s a q u o ; " : " 9 " , " & r s a q u o ; " : " : " , " & e u r o ; " : " м " , " & f n o f ; " : " Т" , " & A l p h a ; " : " С" , " & B e t a ; " : " Т" , " & G a m m a ; " : " У" , " & D e l t a ; " : " Ф" , " & E p s i l o n ; " : " Х" , " & Z e t a ; " : " Ц" , " & E t a ; " : " Ч" , " & T h e t a ; " : " Ш" , " & I o t a ; " : " Щ" , " & K a p p a ; " : " Ъ" , " & L a m b d a ; " : " Ы" , " & M u ; " : " Ь" , " & N u ; " : " Э" , " & X i ; " : " Ю" , " & O m i c r o n ; " : " Я" , " & P i ; " : " а" , " & R h o ; " : " б" , " & S i g m a ; " : " г" , " & T a u ; " : " д" , " & U p s i l o n ; " : " е" , " & P h i ; " : " ж" , " & C h i ; " : " з" , " & P s i ; " : " и" , " & O m e g a ; " : " й" , " & a l p h a ; " : " ▒" , " & b e t a ; " : " ▓" , " & g a m m a ; " : " │" , " & d e l t a ; " : " ┤" , " & e p s i l o n ; " : " ╡" , " & z e t a ; " : " ╢" , " & e t a ; " : " ╖" , " & t h e t a ; " : " ╕" , " & i o t a ; " : " ╣" , " & k a p p a ; " : " ║" , " & l a m b d a ; " : " ╗" , " & m u ; " : " ╝" , " & n u ; " : " ╜" , " & x i ; " : " ╛" , " & o m i c r o n ; " : " ┐" , " & p i ; " : " └" , " & r h o ; " : " ┴" , " & s i g m a f ; " : " ┬" , " & s i g m a ; " : " ├" , " & t a u ; " : " ─" , " & u p s i l o n ; " : " ┼" , " & p h i ; " : " ╞" , " & c h i ; " : " ╟" , " & p s i ; " : " ╚" , " & o m e g a ; " : " ╔" , " & t h e t a s y m ; " : " ╤" , " & u p s i h ; " : " ╥" , " & p i v ; " : " ╓" , " & b u l l ; " : " " " , " & h e l l i p ; " : " & " , " & p r i m e ; " : " 2 " , " & P r i m e ; " : " 3 " , " & o l i n e ; " : " > " , " & f r a s l ; " : " D " , " & w e i e r p ; " : " !" , " & i m a g e ; " : " !" , " & r e a l ; " : " !" , " & t r a d e ; " : " "!" , " & a l e f s y m ; " : " 5!" , " & l a r r ; " : " Р!" , " & u a r r ; " : " С!" , " & r a r r ; " : " Т!" , " & d a r r ; " : " У!" , " & h a r r ; " : " Ф!" , " & c r a r r ; " : " ╡!" , " & l A r r ; " : " ╨!" , " & u A r r ; " : " ╤!" , " & r A r r ; " : " ╥!" , " & d A r r ; " : " ╙!" , " & h A r r ; " : " ╘!" , " & f o r a l l ; " : "  "" , " & p a r t ; " : " "" , " & e x i s t ; " : " "" , " & e m p t y ; " : " "" , " & n a b l a ; " : " "" , " & i s i n ; " : " "" , " & n o t i n ; " : " 	"" , " & n i ; " : " "" , " & p r o d ; " : " "" , " & s u m ; " : " "" , " & m i n u s ; " : " "" , " & l o w a s t ; " : " "" , " & r a d i c ; " : " "" , " & p r o p ; " : " "" , " & i n f i n ; " : " "" , " & a n g ; " : "  "" , " & a n d ; " : " '"" , " & o r ; " : " ("" , " & c a p ; " : " )"" , " & c u p ; " : " *"" , " & i n t ; " : " +"" , " & t h e r e 4 ; " : " 4"" , " & s i m ; " : " <"" , " & c o n g ; " : " E"" , " & a s y m p ; " : " H"" , " & n e ; " : " `"" , " & e q u i v ; " : " a"" , " & l e ; " : " d"" , " & g e ; " : " e"" , " & s u b ; " : " В"" , " & s u p ; " : " Г"" , " & n s u b ; " : " Д"" , " & s u b e ; " : " Ж"" , " & s u p e ; " : " З"" , " & o p l u s ; " : " Х"" , " & o t i m e s ; " : " Ч"" , " & p e r p ; " : " е"" , " & s d o t ; " : " ┼"" , " & l c e i l ; " : " #" , " & r c e i l ; " : " 	#" , " & l f l o o r ; " : " 
#" , " & r f l o o r ; " : " #" , " & l a n g ; " : " )#" , " & r a n g ; " : " *#" , " & l o z ; " : " ╩%" , " & s p a d e s ; " : " `&" , " & c l u b s ; " : " c&" , " & h e a r t s ; " : " e&" , " & d i a m s ; " : " f&" } , c h a r a c t e r s : { " ' " : " & a p o s ; " , " а " : " & n b s p ; " , " б " : " & i e x c l ; " , " в " : " & c e n t ; " , " г " : " & p o u n d ; " , " д " : " & c u r r e n ; " , " е " : " & y e n ; " , " ж " : " & b r v b a r ; " , " з " : " & s e c t ; " , " и " : " & u m l ; " , " й " : " & c o p y ; " , " к " : " & o r d f ; " , " л " : " & l a q u o ; " , " м " : " & n o t ; " , " н " : " & s h y ; " , " о " : " & r e g ; " , " п " : " & m a c r ; " , " ░ " : " & d e g ; " , " ▒ " : " & p l u s m n ; " , " ▓ " : " & s u p 2 ; " , " │ " : " & s u p 3 ; " , " ┤ " : " & a c u t e ; " , " ╡ " : " & m i c r o ; " , " ╢ " : " & p a r a ; " , " ╖ " : " & m i d d o t ; " , " ╕ " : " & c e d i l ; " , " ╣ " : " & s u p 1 ; " , " ║ " : " & o r d m ; " , " ╗ " : " & r a q u o ; " , " ╝ " : " & f r a c 1 4 ; " , " ╜ " : " & f r a c 1 2 ; " , " ╛ " : " & f r a c 3 4 ; " , " ┐ " : " & i q u e s t ; " , " └ " : " & A g r a v e ; " , " ┴ " : " & A a c u t e ; " , " ┬ " : " & A c i r c ; " , " ├ " : " & A t i l d e ; " , " ─ " : " & A u m l ; " , " ┼ " : " & A r i n g ; " , " ╞ " : " & A E l i g ; " , " ╟ " : " & C c e d i l ; " , " ╚ " : " & E g r a v e ; " , " ╔ " : " & E a c u t e ; " , " ╩ " : " & E c i r c ; " , " ╦ " : " & E u m l ; " , " ╠ " : " & I g r a v e ; " , " ═ " : " & I a c u t e ; " , " ╬ " : " & I c i r c ; " , " ╧ " : " & I u m l ; " , " ╨ " : " & E T H ; " , " ╤ " : " & N t i l d e ; " , " ╥ " : " & O g r a v e ; " , " ╙ " : " & O a c u t e ; " , " ╘ " : " & O c i r c ; " , " ╒ " : " & O t i l d e ; " , " ╓ " : " & O u m l ; " , " ╫ " : " & t i m e s ; " , " ╪ " : " & O s l a s h ; " , " ┘ " : " & U g r a v e ; " , " ┌ " : " & U a c u t e ; " , " █ " : " & U c i r c ; " , " ▄ " : " & U u m l ; " , " ▌ " : " & Y a c u t e ; " , " ▐ " : " & T H O R N ; " , " ▀ " : " & s z l i g ; " , " р " : " & a g r a v e ; " , " с " : " & a a c u t e ; " , " т " : " & a c i r c ; " , " у " : " & a t i l d e ; " , " ф " : " & a u m l ; " , " х " : " & a r i n g ; " , " ц " : " & a e l i g ; " , " ч " : " & c c e d i l ; " , " ш " : " & e g r a v e ; " , " щ " : " & e a c u t e ; " , " ъ " : " & e c i r c ; " , " ы " : " & e u m l ; " , " ь " : " & i g r a v e ; " , " э " : " & i a c u t e ; " , " ю " : " & i c i r c ; " , " я " : " & i u m l ; " , " Ё " : " & e t h ; " , " ё " : " & n t i l d e ; " , " Є " : " & o g r a v e ; " , " є " : " & o a c u t e ; " , " Ї " : " & o c i r c ; " , " ї " : " & o t i l d e ; " , " Ў " : " & o u m l ; " , " ў " : " & d i v i d e ; " , " ° " : " & o s l a s h ; " , " ∙ " : " & u g r a v e ; " , " · " : " & u a c u t e ; " , " √ " : " & u c i r c ; " , " № " : " & u u m l ; " , " ¤ " : " & y a c u t e ; " , " ■ " : " & t h o r n ; " , "   " : " & y u m l ; " , ' " ' : " & q u o t ; " , " & " : " & a m p ; " , " < " : " & l t ; " , " > " : " & g t ; " , " R" : " & O E l i g ; " , " S" : " & o e l i g ; " , " `" : " & S c a r o n ; " , " a" : " & s c a r o n ; " , " x" : " & Y u m l ; " , " ╞" : " & c i r c ; " , " ▄" : " & t i l d e ; " , "  " : " & e n s p ; " , "  " : " & e m s p ; " , " 	 " : " & t h i n s p ; " , "  " : " & z w n j ; " , "  " : " & z w j ; " , "  " : " & l r m ; " , "  " : " & r l m ; " , "  " : " & n d a s h ; " , "  " : " & m d a s h ; " , "  " : " & l s q u o ; " , "  " : " & r s q u o ; " , "  " : " & s b q u o ; " , "  " : " & l d q u o ; " , "  " : " & r d q u o ; " , "  " : " & b d q u o ; " , "   " : " & d a g g e r ; " , " ! " : " & D a g g e r ; " , " 0 " : " & p e r m i l ; " , " 9 " : " & l s a q u o ; " , " : " : " & r s a q u o ; " , " м " : " & e u r o ; " , " Т" : " & f n o f ; " , " С" : " & A l p h a ; " , " Т" : " & B e t a ; " , " У" : " & G a m m a ; " , " Ф" : " & D e l t a ; " , " Х" : " & E p s i l o n ; " , " Ц" : " & Z e t a ; " , " Ч" : " & E t a ; " , " Ш" : " & T h e t a ; " , " Щ" : " & I o t a ; " , " Ъ" : " & K a p p a ; " , " Ы" : " & L a m b d a ; " , " Ь" : " & M u ; " , " Э" : " & N u ; " , " Ю" : " & X i ; " , " Я" : " & O m i c r o n ; " , " а" : " & P i ; " , " б" : " & R h o ; " , " г" : " & S i g m a ; " , " д" : " & T a u ; " , " е" : " & U p s i l o n ; " , " ж" : " & P h i ; " , " з" : " & C h i ; " , " и" : " & P s i ; " , " й" : " & O m e g a ; " , " ▒" : " & a l p h a ; " , " ▓" : " & b e t a ; " , " │" : " & g a m m a ; " , " ┤" : " & d e l t a ; " , " ╡" : " & e p s i l o n ; " , " ╢" : " & z e t a ; " , " ╖" : " & e t a ; " , " ╕" : " & t h e t a ; " , " ╣" : " & i o t a ; " , " ║" : " & k a p p a ; " , " ╗" : " & l a m b d a ; " , " ╝" : " & m u ; " , " ╜" : " & n u ; " , " ╛" : " & x i ; " , " ┐" : " & o m i c r o n ; " , " └" : " & p i ; " , " ┴" : " & r h o ; " , " ┬" : " & s i g m a f ; " , " ├" : " & s i g m a ; " , " ─" : " & t a u ; " , " ┼" : " & u p s i l o n ; " , " ╞" : " & p h i ; " , " ╟" : " & c h i ; " , " ╚" : " & p s i ; " , " ╔" : " & o m e g a ; " , " ╤" : " & t h e t a s y m ; " , " ╥" : " & u p s i h ; " , " ╓" : " & p i v ; " , " " " : " & b u l l ; " , " & " : " & h e l l i p ; " , " 2 " : " & p r i m e ; " , " 3 " : " & P r i m e ; " , " > " : " & o l i n e ; " , " D " : " & f r a s l ; " , " !" : " & w e i e r p ; " , " !" : " & i m a g e ; " , " !" : " & r e a l ; " , " "!" : " & t r a d e ; " , " 5!" : " & a l e f s y m ; " , " Р!" : " & l a r r ; " , " С!" : " & u a r r ; " , " Т!" : " & r a r r ; " , " У!" : " & d a r r ; " , " Ф!" : " & h a r r ; " , " ╡!" : " & c r a r r ; " , " ╨!" : " & l A r r ; " , " ╤!" : " & u A r r ; " , " ╥!" : " & r A r r ; " , " ╙!" : " & d A r r ; " , " ╘!" : " & h A r r ; " , "  "" : " & f o r a l l ; " , " "" : " & p a r t ; " , " "" : " & e x i s t ; " , " "" : " & e m p t y ; " , " "" : " & n a b l a ; " , " "" : " & i s i n ; " , " 	"" : " & n o t i n ; " , " "" : " & n i ; " , " "" : " & p r o d ; " , " "" : " & s u m ; " , " "" : " & m i n u s ; " , " "" : " & l o w a s t ; " , " "" : " & r a d i c ; " , " "" : " & p r o p ; " , " "" : " & i n f i n ; " , "  "" : " & a n g ; " , " '"" : " & a n d ; " , " ("" : " & o r ; " , " )"" : " & c a p ; " , " *"" : " & c u p ; " , " +"" : " & i n t ; " , " 4"" : " & t h e r e 4 ; " , " <"" : " & s i m ; " , " E"" : " & c o n g ; " , " H"" : " & a s y m p ; " , " `"" : " & n e ; " , " a"" : " & e q u i v ; " , " d"" : " & l e ; " , " e"" : " & g e ; " , " В"" : " & s u b ; " , " Г"" : " & s u p ; " , " Д"" : " & n s u b ; " , " Ж"" : " & s u b e ; " , " З"" : " & s u p e ; " , " Х"" : " & o p l u s ; " , " Ч"" : " & o t i m e s ; " , " е"" : " & p e r p ; " , " ┼"" : " & s d o t ; " , " #" : " & l c e i l ; " , " 	#" : " & r c e i l ; " , " 
#" : " & l f l o o r ; " , " #" : " & r f l o o r ; " , " )#" : " & l a n g ; " , " *#" : " & r a n g ; " , " ╩%" : " & l o z ; " , " `&" : " & s p a d e s ; " , " c&" : " & c l u b s ; " , " e&" : " & h e a r t s ; " , " f&" : " & d i a m s ; " } } , h t m l 5 : { e n t i t i e s : { " & A E l i g " : " ╞ " , " & A E l i g ; " : " ╞ " , " & A M P " : " & " , " & A M P ; " : " & " , " & A a c u t e " : " ┴ " , " & A a c u t e ; " : " ┴ " , " & A b r e v e ; " : " " , " & A c i r c " : " ┬ " , " & A c i r c ; " : " ┬ " , " & A c y ; " : " " , " & A f r ; " : " 5╪▌" , " & A g r a v e " : " └ " , " & A g r a v e ; " : " └ " , " & A l p h a ; " : " С" , " & A m a c r ; " : "  " , " & A n d ; " : " S*" , " & A o g o n ; " : " " , " & A o p f ; " : " 5╪8▌" , " & A p p l y F u n c t i o n ; " : " a " , " & A r i n g " : " ┼ " , " & A r i n g ; " : " ┼ " , " & A s c r ; " : " 5╪Ь▄" , " & A s s i g n ; " : " T"" , " & A t i l d e " : " ├ " , " & A t i l d e ; " : " ├ " , " & A u m l " : " ─ " , " & A u m l ; " : " ─ " , " & B a c k s l a s h ; " : " "" , " & B a r v ; " : " ч*" , " & B a r w e d ; " : " #" , " & B c y ; " : " " , " & B e c a u s e ; " : " 5"" , " & B e r n o u l l i s ; " : " ,!" , " & B e t a ; " : " Т" , " & B f r ; " : " 5╪▌" , " & B o p f ; " : " 5╪9▌" , " & B r e v e ; " : " ╪" , " & B s c r ; " : " ,!" , " & B u m p e q ; " : " N"" , " & C H c y ; " : " '" , " & C O P Y " : " й " , " & C O P Y ; " : " й " , " & C a c u t e ; " : " " , " & C a p ; " : " ╥"" , " & C a p i t a l D i f f e r e n t i a l D ; " : " E!" , " & C a y l e y s ; " : " -!" , " & C c a r o n ; " : " " , " & C c e d i l " : " ╟ " , " & C c e d i l ; " : " ╟ " , " & C c i r c ; " : " " , " & C c o n i n t ; " : " 0"" , " & C d o t ; " : " 
" , " & C e d i l l a ; " : " ╕ " , " & C e n t e r D o t ; " : " ╖ " , " & C f r ; " : " -!" , " & C h i ; " : " з" , " & C i r c l e D o t ; " : " Щ"" , " & C i r c l e M i n u s ; " : " Ц"" , " & C i r c l e P l u s ; " : " Х"" , " & C i r c l e T i m e s ; " : " Ч"" , " & C l o c k w i s e C o n t o u r I n t e g r a l ; " : " 2"" , " & C l o s e C u r l y D o u b l e Q u o t e ; " : "  " , " & C l o s e C u r l y Q u o t e ; " : "  " , " & C o l o n ; " : " 7"" , " & C o l o n e ; " : " t*" , " & C o n g r u e n t ; " : " a"" , " & C o n i n t ; " : " /"" , " & C o n t o u r I n t e g r a l ; " : " ."" , " & C o p f ; " : " !" , " & C o p r o d u c t ; " : " "" , " & C o u n t e r C l o c k w i s e C o n t o u r I n t e g r a l ; " : " 3"" , " & C r o s s ; " : " /*" , " & C s c r ; " : " 5╪Ю▄" , " & C u p ; " : " ╙"" , " & C u p C a p ; " : " M"" , " & D D ; " : " E!" , " & D D o t r a h d ; " : " )" , " & D J c y ; " : " " , " & D S c y ; " : " " , " & D Z c y ; " : " " , " & D a g g e r ; " : " ! " , " & D a r r ; " : " б!" , " & D a s h v ; " : " ф*" , " & D c a r o n ; " : " " , " & D c y ; " : " " , " & D e l ; " : " "" , " & D e l t a ; " : " Ф" , " & D f r ; " : " 5╪▌" , " & D i a c r i t i c a l A c u t e ; " : " ┤ " , " & D i a c r i t i c a l D o t ; " : " ┘" , " & D i a c r i t i c a l D o u b l e A c u t e ; " : " ▌" , " & D i a c r i t i c a l G r a v e ; " : " ` " , " & D i a c r i t i c a l T i l d e ; " : " ▄" , " & D i a m o n d ; " : " ─"" , " & D i f f e r e n t i a l D ; " : " F!" , " & D o p f ; " : " 5╪;▌" , " & D o t ; " : " и " , " & D o t D o t ; " : " ▄ " , " & D o t E q u a l ; " : " P"" , " & D o u b l e C o n t o u r I n t e g r a l ; " : " /"" , " & D o u b l e D o t ; " : " и " , " & D o u b l e D o w n A r r o w ; " : " ╙!" , " & D o u b l e L e f t A r r o w ; " : " ╨!" , " & D o u b l e L e f t R i g h t A r r o w ; " : " ╘!" , " & D o u b l e L e f t T e e ; " : " ф*" , " & D o u b l e L o n g L e f t A r r o w ; " : " °'" , " & D o u b l e L o n g L e f t R i g h t A r r o w ; " : " ·'" , " & D o u b l e L o n g R i g h t A r r o w ; " : " ∙'" , " & D o u b l e R i g h t A r r o w ; " : " ╥!" , " & D o u b l e R i g h t T e e ; " : " и"" , " & D o u b l e U p A r r o w ; " : " ╤!" , " & D o u b l e U p D o w n A r r o w ; " : " ╒!" , " & D o u b l e V e r t i c a l B a r ; " : " %"" , " & D o w n A r r o w ; " : " У!" , " & D o w n A r r o w B a r ; " : " )" , " & D o w n A r r o w U p A r r o w ; " : " ї!" , " & D o w n B r e v e ; " : " " , " & D o w n L e f t R i g h t V e c t o r ; " : " P)" , " & D o w n L e f t T e e V e c t o r ; " : " ^)" , " & D o w n L e f t V e c t o r ; " : " ╜!" , " & D o w n L e f t V e c t o r B a r ; " : " V)" , " & D o w n R i g h t T e e V e c t o r ; " : " _)" , " & D o w n R i g h t V e c t o r ; " : " ┴!" , " & D o w n R i g h t V e c t o r B a r ; " : " W)" , " & D o w n T e e ; " : " д"" , " & D o w n T e e A r r o w ; " : " з!" , " & D o w n a r r o w ; " : " ╙!" , " & D s c r ; " : " 5╪Я▄" , " & D s t r o k ; " : " " , " & E N G ; " : " J" , " & E T H " : " ╨ " , " & E T H ; " : " ╨ " , " & E a c u t e " : " ╔ " , " & E a c u t e ; " : " ╔ " , " & E c a r o n ; " : " " , " & E c i r c " : " ╩ " , " & E c i r c ; " : " ╩ " , " & E c y ; " : " -" , " & E d o t ; " : " " , " & E f r ; " : " 5╪▌" , " & E g r a v e " : " ╚ " , " & E g r a v e ; " : " ╚ " , " & E l e m e n t ; " : " "" , " & E m a c r ; " : " " , " & E m p t y S m a l l S q u a r e ; " : " √%" , " & E m p t y V e r y S m a l l S q u a r e ; " : " л%" , " & E o g o n ; " : " " , " & E o p f ; " : " 5╪<▌" , " & E p s i l o n ; " : " Х" , " & E q u a l ; " : " u*" , " & E q u a l T i l d e ; " : " B"" , " & E q u i l i b r i u m ; " : " ╠!" , " & E s c r ; " : " 0!" , " & E s i m ; " : " s*" , " & E t a ; " : " Ч" , " & E u m l " : " ╦ " , " & E u m l ; " : " ╦ " , " & E x i s t s ; " : " "" , " & E x p o n e n t i a l E ; " : " G!" , " & F c y ; " : " $" , " & F f r ; " : " 5╪	▌" , " & F i l l e d S m a l l S q u a r e ; " : " №%" , " & F i l l e d V e r y S m a l l S q u a r e ; " : " к%" , " & F o p f ; " : " 5╪=▌" , " & F o r A l l ; " : "  "" , " & F o u r i e r t r f ; " : " 1!" , " & F s c r ; " : " 1!" , " & G J c y ; " : " " , " & G T " : " > " , " & G T ; " : " > " , " & G a m m a ; " : " У" , " & G a m m a d ; " : " ▄" , " & G b r e v e ; " : " " , " & G c e d i l ; " : " "" , " & G c i r c ; " : " " , " & G c y ; " : " " , " & G d o t ; " : "  " , " & G f r ; " : " 5╪
▌" , " & G g ; " : " ┘"" , " & G o p f ; " : " 5╪>▌" , " & G r e a t e r E q u a l ; " : " e"" , " & G r e a t e r E q u a l L e s s ; " : " █"" , " & G r e a t e r F u l l E q u a l ; " : " g"" , " & G r e a t e r G r e a t e r ; " : " в*" , " & G r e a t e r L e s s ; " : " w"" , " & G r e a t e r S l a n t E q u a l ; " : " ~*" , " & G r e a t e r T i l d e ; " : " s"" , " & G s c r ; " : " 5╪в▄" , " & G t ; " : " k"" , " & H A R D c y ; " : " *" , " & H a c e k ; " : " ╟" , " & H a t ; " : " ^ " , " & H c i r c ; " : " $" , " & H f r ; " : " !" , " & H i l b e r t S p a c e ; " : " !" , " & H o p f ; " : " !" , " & H o r i z o n t a l L i n e ; " : "  %" , " & H s c r ; " : " !" , " & H s t r o k ; " : " &" , " & H u m p D o w n H u m p ; " : " N"" , " & H u m p E q u a l ; " : " O"" , " & I E c y ; " : " " , " & I J l i g ; " : " 2" , " & I O c y ; " : " " , " & I a c u t e " : " ═ " , " & I a c u t e ; " : " ═ " , " & I c i r c " : " ╬ " , " & I c i r c ; " : " ╬ " , " & I c y ; " : " " , " & I d o t ; " : " 0" , " & I f r ; " : " !" , " & I g r a v e " : " ╠ " , " & I g r a v e ; " : " ╠ " , " & I m ; " : " !" , " & I m a c r ; " : " *" , " & I m a g i n a r y I ; " : " H!" , " & I m p l i e s ; " : " ╥!" , " & I n t ; " : " ,"" , " & I n t e g r a l ; " : " +"" , " & I n t e r s e c t i o n ; " : " ┬"" , " & I n v i s i b l e C o m m a ; " : " c " , " & I n v i s i b l e T i m e s ; " : " b " , " & I o g o n ; " : " ." , " & I o p f ; " : " 5╪@▌" , " & I o t a ; " : " Щ" , " & I s c r ; " : " !" , " & I t i l d e ; " : " (" , " & I u k c y ; " : " " , " & I u m l " : " ╧ " , " & I u m l ; " : " ╧ " , " & J c i r c ; " : " 4" , " & J c y ; " : " " , " & J f r ; " : " 5╪▌" , " & J o p f ; " : " 5╪A▌" , " & J s c r ; " : " 5╪е▄" , " & J s e r c y ; " : " " , " & J u k c y ; " : " " , " & K H c y ; " : " %" , " & K J c y ; " : " " , " & K a p p a ; " : " Ъ" , " & K c e d i l ; " : " 6" , " & K c y ; " : " " , " & K f r ; " : " 5╪▌" , " & K o p f ; " : " 5╪B▌" , " & K s c r ; " : " 5╪ж▄" , " & L J c y ; " : " 	" , " & L T " : " < " , " & L T ; " : " < " , " & L a c u t e ; " : " 9" , " & L a m b d a ; " : " Ы" , " & L a n g ; " : " ъ'" , " & L a p l a c e t r f ; " : " !" , " & L a r r ; " : " Ю!" , " & L c a r o n ; " : " =" , " & L c e d i l ; " : " ;" , " & L c y ; " : " " , " & L e f t A n g l e B r a c k e t ; " : " ш'" , " & L e f t A r r o w ; " : " Р!" , " & L e f t A r r o w B a r ; " : " ф!" , " & L e f t A r r o w R i g h t A r r o w ; " : " ╞!" , " & L e f t C e i l i n g ; " : " #" , " & L e f t D o u b l e B r a c k e t ; " : " ц'" , " & L e f t D o w n T e e V e c t o r ; " : " a)" , " & L e f t D o w n V e c t o r ; " : " ├!" , " & L e f t D o w n V e c t o r B a r ; " : " Y)" , " & L e f t F l o o r ; " : " 
#" , " & L e f t R i g h t A r r o w ; " : " Ф!" , " & L e f t R i g h t V e c t o r ; " : " N)" , " & L e f t T e e ; " : " г"" , " & L e f t T e e A r r o w ; " : " д!" , " & L e f t T e e V e c t o r ; " : " Z)" , " & L e f t T r i a n g l e ; " : " ▓"" , " & L e f t T r i a n g l e B a r ; " : " ╧)" , " & L e f t T r i a n g l e E q u a l ; " : " ┤"" , " & L e f t U p D o w n V e c t o r ; " : " Q)" , " & L e f t U p T e e V e c t o r ; " : " `)" , " & L e f t U p V e c t o r ; " : " ┐!" , " & L e f t U p V e c t o r B a r ; " : " X)" , " & L e f t V e c t o r ; " : " ╝!" , " & L e f t V e c t o r B a r ; " : " R)" , " & L e f t a r r o w ; " : " ╨!" , " & L e f t r i g h t a r r o w ; " : " ╘!" , " & L e s s E q u a l G r e a t e r ; " : " ┌"" , " & L e s s F u l l E q u a l ; " : " f"" , " & L e s s G r e a t e r ; " : " v"" , " & L e s s L e s s ; " : " б*" , " & L e s s S l a n t E q u a l ; " : " }*" , " & L e s s T i l d e ; " : " r"" , " & L f r ; " : " 5╪▌" , " & L l ; " : " ╪"" , " & L l e f t a r r o w ; " : " ┌!" , " & L m i d o t ; " : " ?" , " & L o n g L e f t A r r o w ; " : " ї'" , " & L o n g L e f t R i g h t A r r o w ; " : " ў'" , " & L o n g R i g h t A r r o w ; " : " Ў'" , " & L o n g l e f t a r r o w ; " : " °'" , " & L o n g l e f t r i g h t a r r o w ; " : " ·'" , " & L o n g r i g h t a r r o w ; " : " ∙'" , " & L o p f ; " : " 5╪C▌" , " & L o w e r L e f t A r r o w ; " : " Щ!" , " & L o w e r R i g h t A r r o w ; " : " Ш!" , " & L s c r ; " : " !" , " & L s h ; " : " ░!" , " & L s t r o k ; " : " A" , " & L t ; " : " j"" , " & M a p ; " : " )" , " & M c y ; " : " " , " & M e d i u m S p a c e ; " : " _ " , " & M e l l i n t r f ; " : " 3!" , " & M f r ; " : " 5╪▌" , " & M i n u s P l u s ; " : " "" , " & M o p f ; " : " 5╪D▌" , " & M s c r ; " : " 3!" , " & M u ; " : " Ь" , " & N J c y ; " : " 
" , " & N a c u t e ; " : " C" , " & N c a r o n ; " : " G" , " & N c e d i l ; " : " E" , " & N c y ; " : " " , " & N e g a t i v e M e d i u m S p a c e ; " : "  " , " & N e g a t i v e T h i c k S p a c e ; " : "  " , " & N e g a t i v e T h i n S p a c e ; " : "  " , " & N e g a t i v e V e r y T h i n S p a c e ; " : "  " , " & N e s t e d G r e a t e r G r e a t e r ; " : " k"" , " & N e s t e d L e s s L e s s ; " : " j"" , " & N e w L i n e ; " : " \ n " , " & N f r ; " : " 5╪▌" , " & N o B r e a k ; " : " ` " , " & N o n B r e a k i n g S p a c e ; " : " а " , " & N o p f ; " : " !" , " & N o t ; " : " ь*" , " & N o t C o n g r u e n t ; " : " b"" , " & N o t C u p C a p ; " : " m"" , " & N o t D o u b l e V e r t i c a l B a r ; " : " &"" , " & N o t E l e m e n t ; " : " 	"" , " & N o t E q u a l ; " : " `"" , " & N o t E q u a l T i l d e ; " : " B"8" , " & N o t E x i s t s ; " : " "" , " & N o t G r e a t e r ; " : " o"" , " & N o t G r e a t e r E q u a l ; " : " q"" , " & N o t G r e a t e r F u l l E q u a l ; " : " g"8" , " & N o t G r e a t e r G r e a t e r ; " : " k"8" , " & N o t G r e a t e r L e s s ; " : " y"" , " & N o t G r e a t e r S l a n t E q u a l ; " : " ~*8" , " & N o t G r e a t e r T i l d e ; " : " u"" , " & N o t H u m p D o w n H u m p ; " : " N"8" , " & N o t H u m p E q u a l ; " : " O"8" , " & N o t L e f t T r i a n g l e ; " : " ъ"" , " & N o t L e f t T r i a n g l e B a r ; " : " ╧)8" , " & N o t L e f t T r i a n g l e E q u a l ; " : " ь"" , " & N o t L e s s ; " : " n"" , " & N o t L e s s E q u a l ; " : " p"" , " & N o t L e s s G r e a t e r ; " : " x"" , " & N o t L e s s L e s s ; " : " j"8" , " & N o t L e s s S l a n t E q u a l ; " : " }*8" , " & N o t L e s s T i l d e ; " : " t"" , " & N o t N e s t e d G r e a t e r G r e a t e r ; " : " в*8" , " & N o t N e s t e d L e s s L e s s ; " : " б*8" , " & N o t P r e c e d e s ; " : " А"" , " & N o t P r e c e d e s E q u a l ; " : " п*8" , " & N o t P r e c e d e s S l a n t E q u a l ; " : " р"" , " & N o t R e v e r s e E l e m e n t ; " : " "" , " & N o t R i g h t T r i a n g l e ; " : " ы"" , " & N o t R i g h t T r i a n g l e B a r ; " : " ╨)8" , " & N o t R i g h t T r i a n g l e E q u a l ; " : " э"" , " & N o t S q u a r e S u b s e t ; " : " П"8" , " & N o t S q u a r e S u b s e t E q u a l ; " : " т"" , " & N o t S q u a r e S u p e r s e t ; " : " Р"8" , " & N o t S q u a r e S u p e r s e t E q u a l ; " : " у"" , " & N o t S u b s e t ; " : " В"╥ " , " & N o t S u b s e t E q u a l ; " : " И"" , " & N o t S u c c e e d s ; " : " Б"" , " & N o t S u c c e e d s E q u a l ; " : " ░*8" , " & N o t S u c c e e d s S l a n t E q u a l ; " : " с"" , " & N o t S u c c e e d s T i l d e ; " : " "8" , " & N o t S u p e r s e t ; " : " Г"╥ " , " & N o t S u p e r s e t E q u a l ; " : " Й"" , " & N o t T i l d e ; " : " A"" , " & N o t T i l d e E q u a l ; " : " D"" , " & N o t T i l d e F u l l E q u a l ; " : " G"" , " & N o t T i l d e T i l d e ; " : " I"" , " & N o t V e r t i c a l B a r ; " : " $"" , " & N s c r ; " : " 5╪й▄" , " & N t i l d e " : " ╤ " , " & N t i l d e ; " : " ╤ " , " & N u ; " : " Э" , " & O E l i g ; " : " R" , " & O a c u t e " : " ╙ " , " & O a c u t e ; " : " ╙ " , " & O c i r c " : " ╘ " , " & O c i r c ; " : " ╘ " , " & O c y ; " : " " , " & O d b l a c ; " : " P" , " & O f r ; " : " 5╪▌" , " & O g r a v e " : " ╥ " , " & O g r a v e ; " : " ╥ " , " & O m a c r ; " : " L" , " & O m e g a ; " : " й" , " & O m i c r o n ; " : " Я" , " & O o p f ; " : " 5╪F▌" , " & O p e n C u r l y D o u b l e Q u o t e ; " : "  " , " & O p e n C u r l y Q u o t e ; " : "  " , " & O r ; " : " T*" , " & O s c r ; " : " 5╪к▄" , " & O s l a s h " : " ╪ " , " & O s l a s h ; " : " ╪ " , " & O t i l d e " : " ╒ " , " & O t i l d e ; " : " ╒ " , " & O t i m e s ; " : " 7*" , " & O u m l " : " ╓ " , " & O u m l ; " : " ╓ " , " & O v e r B a r ; " : " > " , " & O v e r B r a c e ; " : " ▐#" , " & O v e r B r a c k e t ; " : " ┤#" , " & O v e r P a r e n t h e s i s ; " : " ▄#" , " & P a r t i a l D ; " : " "" , " & P c y ; " : " " , " & P f r ; " : " 5╪▌" , " & P h i ; " : " ж" , " & P i ; " : " а" , " & P l u s M i n u s ; " : " ▒ " , " & P o i n c a r e p l a n e ; " : " !" , " & P o p f ; " : " !" , " & P r ; " : " ╗*" , " & P r e c e d e s ; " : " z"" , " & P r e c e d e s E q u a l ; " : " п*" , " & P r e c e d e s S l a n t E q u a l ; " : " |"" , " & P r e c e d e s T i l d e ; " : " ~"" , " & P r i m e ; " : " 3 " , " & P r o d u c t ; " : " "" , " & P r o p o r t i o n ; " : " 7"" , " & P r o p o r t i o n a l ; " : " "" , " & P s c r ; " : " 5╪л▄" , " & P s i ; " : " и" , " & Q U O T " : ' " ' , " & Q U O T ; " : ' " ' , " & Q f r ; " : " 5╪▌" , " & Q o p f ; " : " !" , " & Q s c r ; " : " 5╪м▄" , " & R B a r r ; " : " )" , " & R E G " : " о " , " & R E G ; " : " о " , " & R a c u t e ; " : " T" , " & R a n g ; " : " ы'" , " & R a r r ; " : " а!" , " & R a r r t l ; " : " )" , " & R c a r o n ; " : " X" , " & R c e d i l ; " : " V" , " & R c y ; " : "  " , " & R e ; " : " !" , " & R e v e r s e E l e m e n t ; " : " "" , " & R e v e r s e E q u i l i b r i u m ; " : " ╦!" , " & R e v e r s e U p E q u i l i b r i u m ; " : " o)" , " & R f r ; " : " !" , " & R h o ; " : " б" , " & R i g h t A n g l e B r a c k e t ; " : " щ'" , " & R i g h t A r r o w ; " : " Т!" , " & R i g h t A r r o w B a r ; " : " х!" , " & R i g h t A r r o w L e f t A r r o w ; " : " ─!" , " & R i g h t C e i l i n g ; " : " 	#" , " & R i g h t D o u b l e B r a c k e t ; " : " ч'" , " & R i g h t D o w n T e e V e c t o r ; " : " ])" , " & R i g h t D o w n V e c t o r ; " : " ┬!" , " & R i g h t D o w n V e c t o r B a r ; " : " U)" , " & R i g h t F l o o r ; " : " #" , " & R i g h t T e e ; " : " в"" , " & R i g h t T e e A r r o w ; " : " ж!" , " & R i g h t T e e V e c t o r ; " : " [)" , " & R i g h t T r i a n g l e ; " : " │"" , " & R i g h t T r i a n g l e B a r ; " : " ╨)" , " & R i g h t T r i a n g l e E q u a l ; " : " ╡"" , " & R i g h t U p D o w n V e c t o r ; " : " O)" , " & R i g h t U p T e e V e c t o r ; " : " \)" , " & R i g h t U p V e c t o r ; " : " ╛!" , " & R i g h t U p V e c t o r B a r ; " : " T)" , " & R i g h t V e c t o r ; " : " └!" , " & R i g h t V e c t o r B a r ; " : " S)" , " & R i g h t a r r o w ; " : " ╥!" , " & R o p f ; " : " !" , " & R o u n d I m p l i e s ; " : " p)" , " & R r i g h t a r r o w ; " : " █!" , " & R s c r ; " : " !" , " & R s h ; " : " ▒!" , " & R u l e D e l a y e d ; " : " Ї)" , " & S H C H c y ; " : " )" , " & S H c y ; " : " (" , " & S O F T c y ; " : " ," , " & S a c u t e ; " : " Z" , " & S c ; " : " ╝*" , " & S c a r o n ; " : " `" , " & S c e d i l ; " : " ^" , " & S c i r c ; " : " \" , " & S c y ; " : " !" , " & S f r ; " : " 5╪▌" , " & S h o r t D o w n A r r o w ; " : " У!" , " & S h o r t L e f t A r r o w ; " : " Р!" , " & S h o r t R i g h t A r r o w ; " : " Т!" , " & S h o r t U p A r r o w ; " : " С!" , " & S i g m a ; " : " г" , " & S m a l l C i r c l e ; " : " "" , " & S o p f ; " : " 5╪J▌" , " & S q r t ; " : " "" , " & S q u a r e ; " : " б%" , " & S q u a r e I n t e r s e c t i o n ; " : " У"" , " & S q u a r e S u b s e t ; " : " П"" , " & S q u a r e S u b s e t E q u a l ; " : " С"" , " & S q u a r e S u p e r s e t ; " : " Р"" , " & S q u a r e S u p e r s e t E q u a l ; " : " Т"" , " & S q u a r e U n i o n ; " : " Ф"" , " & S s c r ; " : " 5╪о▄" , " & S t a r ; " : " ╞"" , " & S u b ; " : " ╨"" , " & S u b s e t ; " : " ╨"" , " & S u b s e t E q u a l ; " : " Ж"" , " & S u c c e e d s ; " : " {"" , " & S u c c e e d s E q u a l ; " : " ░*" , " & S u c c e e d s S l a n t E q u a l ; " : " }"" , " & S u c c e e d s T i l d e ; " : " "" , " & S u c h T h a t ; " : " "" , " & S u m ; " : " "" , " & S u p ; " : " ╤"" , " & S u p e r s e t ; " : " Г"" , " & S u p e r s e t E q u a l ; " : " З"" , " & S u p s e t ; " : " ╤"" , " & T H O R N " : " ▐ " , " & T H O R N ; " : " ▐ " , " & T R A D E ; " : " "!" , " & T S H c y ; " : " " , " & T S c y ; " : " &" , " & T a b ; " : " \ t " , " & T a u ; " : " д" , " & T c a r o n ; " : " d" , " & T c e d i l ; " : " b" , " & T c y ; " : " "" , " & T f r ; " : " 5╪▌" , " & T h e r e f o r e ; " : " 4"" , " & T h e t a ; " : " Ш" , " & T h i c k S p a c e ; " : " _ 
 " , " & T h i n S p a c e ; " : " 	 " , " & T i l d e ; " : " <"" , " & T i l d e E q u a l ; " : " C"" , " & T i l d e F u l l E q u a l ; " : " E"" , " & T i l d e T i l d e ; " : " H"" , " & T o p f ; " : " 5╪K▌" , " & T r i p l e D o t ; " : " █ " , " & T s c r ; " : " 5╪п▄" , " & T s t r o k ; " : " f" , " & U a c u t e " : " ┌ " , " & U a c u t e ; " : " ┌ " , " & U a r r ; " : " Я!" , " & U a r r o c i r ; " : " I)" , " & U b r c y ; " : " " , " & U b r e v e ; " : " l" , " & U c i r c " : " █ " , " & U c i r c ; " : " █ " , " & U c y ; " : " #" , " & U d b l a c ; " : " p" , " & U f r ; " : " 5╪▌" , " & U g r a v e " : " ┘ " , " & U g r a v e ; " : " ┘ " , " & U m a c r ; " : " j" , " & U n d e r B a r ; " : " _ " , " & U n d e r B r a c e ; " : " ▀#" , " & U n d e r B r a c k e t ; " : " ╡#" , " & U n d e r P a r e n t h e s i s ; " : " ▌#" , " & U n i o n ; " : " ├"" , " & U n i o n P l u s ; " : " О"" , " & U o g o n ; " : " r" , " & U o p f ; " : " 5╪L▌" , " & U p A r r o w ; " : " С!" , " & U p A r r o w B a r ; " : " )" , " & U p A r r o w D o w n A r r o w ; " : " ┼!" , " & U p D o w n A r r o w ; " : " Х!" , " & U p E q u i l i b r i u m ; " : " n)" , " & U p T e e ; " : " е"" , " & U p T e e A r r o w ; " : " е!" , " & U p a r r o w ; " : " ╤!" , " & U p d o w n a r r o w ; " : " ╒!" , " & U p p e r L e f t A r r o w ; " : " Ц!" , " & U p p e r R i g h t A r r o w ; " : " Ч!" , " & U p s i ; " : " ╥" , " & U p s i l o n ; " : " е" , " & U r i n g ; " : " n" , " & U s c r ; " : " 5╪░▄" , " & U t i l d e ; " : " h" , " & U u m l " : " ▄ " , " & U u m l ; " : " ▄ " , " & V D a s h ; " : " л"" , " & V b a r ; " : " ы*" , " & V c y ; " : " " , " & V d a s h ; " : " й"" , " & V d a s h l ; " : " ц*" , " & V e e ; " : " ┴"" , " & V e r b a r ; " : "  " , " & V e r t ; " : "  " , " & V e r t i c a l B a r ; " : " #"" , " & V e r t i c a l L i n e ; " : " | " , " & V e r t i c a l S e p a r a t o r ; " : " X'" , " & V e r t i c a l T i l d e ; " : " @"" , " & V e r y T h i n S p a c e ; " : " 
 " , " & V f r ; " : " 5╪▌" , " & V o p f ; " : " 5╪M▌" , " & V s c r ; " : " 5╪▒▄" , " & V v d a s h ; " : " к"" , " & W c i r c ; " : " t" , " & W e d g e ; " : " └"" , " & W f r ; " : " 5╪▌" , " & W o p f ; " : " 5╪N▌" , " & W s c r ; " : " 5╪▓▄" , " & X f r ; " : " 5╪▌" , " & X i ; " : " Ю" , " & X o p f ; " : " 5╪O▌" , " & X s c r ; " : " 5╪│▄" , " & Y A c y ; " : " /" , " & Y I c y ; " : " " , " & Y U c y ; " : " ." , " & Y a c u t e " : " ▌ " , " & Y a c u t e ; " : " ▌ " , " & Y c i r c ; " : " v" , " & Y c y ; " : " +" , " & Y f r ; " : " 5╪▌" , " & Y o p f ; " : " 5╪P▌" , " & Y s c r ; " : " 5╪┤▄" , " & Y u m l ; " : " x" , " & Z H c y ; " : " " , " & Z a c u t e ; " : " y" , " & Z c a r o n ; " : " }" , " & Z c y ; " : " " , " & Z d o t ; " : " {" , " & Z e r o W i d t h S p a c e ; " : "  " , " & Z e t a ; " : " Ц" , " & Z f r ; " : " (!" , " & Z o p f ; " : " $!" , " & Z s c r ; " : " 5╪╡▄" , " & a a c u t e " : " с " , " & a a c u t e ; " : " с " , " & a b r e v e ; " : " " , " & a c ; " : " >"" , " & a c E ; " : " >"3" , " & a c d ; " : " ?"" , " & a c i r c " : " т " , " & a c i r c ; " : " т " , " & a c u t e " : " ┤ " , " & a c u t e ; " : " ┤ " , " & a c y ; " : " 0" , " & a e l i g " : " ц " , " & a e l i g ; " : " ц " , " & a f ; " : " a " , " & a f r ; " : " 5╪▌" , " & a g r a v e " : " р " , " & a g r a v e ; " : " р " , " & a l e f s y m ; " : " 5!" , " & a l e p h ; " : " 5!" , " & a l p h a ; " : " ▒" , " & a m a c r ; " : " " , " & a m a l g ; " : " ?*" , " & a m p " : " & " , " & a m p ; " : " & " , " & a n d ; " : " '"" , " & a n d a n d ; " : " U*" , " & a n d d ; " : " \*" , " & a n d s l o p e ; " : " X*" , " & a n d v ; " : " Z*" , " & a n g ; " : "  "" , " & a n g e ; " : " д)" , " & a n g l e ; " : "  "" , " & a n g m s d ; " : " !"" , " & a n g m s d a a ; " : " и)" , " & a n g m s d a b ; " : " й)" , " & a n g m s d a c ; " : " к)" , " & a n g m s d a d ; " : " л)" , " & a n g m s d a e ; " : " м)" , " & a n g m s d a f ; " : " н)" , " & a n g m s d a g ; " : " о)" , " & a n g m s d a h ; " : " п)" , " & a n g r t ; " : " "" , " & a n g r t v b ; " : " ╛"" , " & a n g r t v b d ; " : " Э)" , " & a n g s p h ; " : " """ , " & a n g s t ; " : " ┼ " , " & a n g z a r r ; " : " |#" , " & a o g o n ; " : " " , " & a o p f ; " : " 5╪R▌" , " & a p ; " : " H"" , " & a p E ; " : " p*" , " & a p a c i r ; " : " o*" , " & a p e ; " : " J"" , " & a p i d ; " : " K"" , " & a p o s ; " : " ' " , " & a p p r o x ; " : " H"" , " & a p p r o x e q ; " : " J"" , " & a r i n g " : " х " , " & a r i n g ; " : " х " , " & a s c r ; " : " 5╪╢▄" , " & a s t ; " : " * " , " & a s y m p ; " : " H"" , " & a s y m p e q ; " : " M"" , " & a t i l d e " : " у " , " & a t i l d e ; " : " у " , " & a u m l " : " ф " , " & a u m l ; " : " ф " , " & a w c o n i n t ; " : " 3"" , " & a w i n t ; " : " *" , " & b N o t ; " : " э*" , " & b a c k c o n g ; " : " L"" , " & b a c k e p s i l o n ; " : " Ў" , " & b a c k p r i m e ; " : " 5 " , " & b a c k s i m ; " : " ="" , " & b a c k s i m e q ; " : " ═"" , " & b a r v e e ; " : " ╜"" , " & b a r w e d ; " : " #" , " & b a r w e d g e ; " : " #" , " & b b r k ; " : " ╡#" , " & b b r k t b r k ; " : " ╢#" , " & b c o n g ; " : " L"" , " & b c y ; " : " 1" , " & b d q u o ; " : "  " , " & b e c a u s ; " : " 5"" , " & b e c a u s e ; " : " 5"" , " & b e m p t y v ; " : " ░)" , " & b e p s i ; " : " Ў" , " & b e r n o u ; " : " ,!" , " & b e t a ; " : " ▓" , " & b e t h ; " : " 6!" , " & b e t w e e n ; " : " l"" , " & b f r ; " : " 5╪▌" , " & b i g c a p ; " : " ┬"" , " & b i g c i r c ; " : " я%" , " & b i g c u p ; " : " ├"" , " & b i g o d o t ; " : "  *" , " & b i g o p l u s ; " : " *" , " & b i g o t i m e s ; " : " *" , " & b i g s q c u p ; " : " *" , " & b i g s t a r ; " : " &" , " & b i g t r i a n g l e d o w n ; " : " ╜%" , " & b i g t r i a n g l e u p ; " : " │%" , " & b i g u p l u s ; " : " *" , " & b i g v e e ; " : " ┴"" , " & b i g w e d g e ; " : " └"" , " & b k a r o w ; " : " )" , " & b l a c k l o z e n g e ; " : " ы)" , " & b l a c k s q u a r e ; " : " к%" , " & b l a c k t r i a n g l e ; " : " ┤%" , " & b l a c k t r i a n g l e d o w n ; " : " ╛%" , " & b l a c k t r i a n g l e l e f t ; " : " ┬%" , " & b l a c k t r i a n g l e r i g h t ; " : " ╕%" , " & b l a n k ; " : " #$" , " & b l k 1 2 ; " : " Т%" , " & b l k 1 4 ; " : " С%" , " & b l k 3 4 ; " : " У%" , " & b l o c k ; " : " И%" , " & b n e ; " : " = х " , " & b n e q u i v ; " : " a"х " , " & b n o t ; " : " #" , " & b o p f ; " : " 5╪S▌" , " & b o t ; " : " е"" , " & b o t t o m ; " : " е"" , " & b o w t i e ; " : " ╚"" , " & b o x D L ; " : " W%" , " & b o x D R ; " : " T%" , " & b o x D l ; " : " V%" , " & b o x D r ; " : " S%" , " & b o x H ; " : " P%" , " & b o x H D ; " : " f%" , " & b o x H U ; " : " i%" , " & b o x H d ; " : " d%" , " & b o x H u ; " : " g%" , " & b o x U L ; " : " ]%" , " & b o x U R ; " : " Z%" , " & b o x U l ; " : " \%" , " & b o x U r ; " : " Y%" , " & b o x V ; " : " Q%" , " & b o x V H ; " : " l%" , " & b o x V L ; " : " c%" , " & b o x V R ; " : " `%" , " & b o x V h ; " : " k%" , " & b o x V l ; " : " b%" , " & b o x V r ; " : " _%" , " & b o x b o x ; " : " ╔)" , " & b o x d L ; " : " U%" , " & b o x d R ; " : " R%" , " & b o x d l ; " : " %" , " & b o x d r ; " : " %" , " & b o x h ; " : "  %" , " & b o x h D ; " : " e%" , " & b o x h U ; " : " h%" , " & b o x h d ; " : " ,%" , " & b o x h u ; " : " 4%" , " & b o x m i n u s ; " : " Я"" , " & b o x p l u s ; " : " Ю"" , " & b o x t i m e s ; " : " а"" , " & b o x u L ; " : " [%" , " & b o x u R ; " : " X%" , " & b o x u l ; " : " %" , " & b o x u r ; " : " %" , " & b o x v ; " : " %" , " & b o x v H ; " : " j%" , " & b o x v L ; " : " a%" , " & b o x v R ; " : " ^%" , " & b o x v h ; " : " <%" , " & b o x v l ; " : " $%" , " & b o x v r ; " : " %" , " & b p r i m e ; " : " 5 " , " & b r e v e ; " : " ╪" , " & b r v b a r " : " ж " , " & b r v b a r ; " : " ж " , " & b s c r ; " : " 5╪╖▄" , " & b s e m i ; " : " O " , " & b s i m ; " : " ="" , " & b s i m e ; " : " ═"" , " & b s o l ; " : " \ \ " , " & b s o l b ; " : " ┼)" , " & b s o l h s u b ; " : " ╚'" , " & b u l l ; " : " " " , " & b u l l e t ; " : " " " , " & b u m p ; " : " N"" , " & b u m p E ; " : " о*" , " & b u m p e ; " : " O"" , " & b u m p e q ; " : " O"" , " & c a c u t e ; " : " " , " & c a p ; " : " )"" , " & c a p a n d ; " : " D*" , " & c a p b r c u p ; " : " I*" , " & c a p c a p ; " : " K*" , " & c a p c u p ; " : " G*" , " & c a p d o t ; " : " @*" , " & c a p s ; " : " )" ■" , " & c a r e t ; " : " A " , " & c a r o n ; " : " ╟" , " & c c a p s ; " : " M*" , " & c c a r o n ; " : " " , " & c c e d i l " : " ч " , " & c c e d i l ; " : " ч " , " & c c i r c ; " : " 	" , " & c c u p s ; " : " L*" , " & c c u p s s m ; " : " P*" , " & c d o t ; " : " " , " & c e d i l " : " ╕ " , " & c e d i l ; " : " ╕ " , " & c e m p t y v ; " : " ▓)" , " & c e n t " : " в " , " & c e n t ; " : " в " , " & c e n t e r d o t ; " : " ╖ " , " & c f r ; " : " 5╪ ▌" , " & c h c y ; " : " G" , " & c h e c k ; " : " '" , " & c h e c k m a r k ; " : " '" , " & c h i ; " : " ╟" , " & c i r ; " : " ╦%" , " & c i r E ; " : " ├)" , " & c i r c ; " : " ╞" , " & c i r c e q ; " : " W"" , " & c i r c l e a r r o w l e f t ; " : " ║!" , " & c i r c l e a r r o w r i g h t ; " : " ╗!" , " & c i r c l e d R ; " : " о " , " & c i r c l e d S ; " : " ╚$" , " & c i r c l e d a s t ; " : " Ы"" , " & c i r c l e d c i r c ; " : " Ъ"" , " & c i r c l e d d a s h ; " : " Э"" , " & c i r e ; " : " W"" , " & c i r f n i n t ; " : " *" , " & c i r m i d ; " : " я*" , " & c i r s c i r ; " : " ┬)" , " & c l u b s ; " : " c&" , " & c l u b s u i t ; " : " c&" , " & c o l o n ; " : " : " , " & c o l o n e ; " : " T"" , " & c o l o n e q ; " : " T"" , " & c o m m a ; " : " , " , " & c o m m a t ; " : " @ " , " & c o m p ; " : " "" , " & c o m p f n ; " : " "" , " & c o m p l e m e n t ; " : " "" , " & c o m p l e x e s ; " : " !" , " & c o n g ; " : " E"" , " & c o n g d o t ; " : " m*" , " & c o n i n t ; " : " ."" , " & c o p f ; " : " 5╪T▌" , " & c o p r o d ; " : " "" , " & c o p y " : " й " , " & c o p y ; " : " й " , " & c o p y s r ; " : " !" , " & c r a r r ; " : " ╡!" , " & c r o s s ; " : " '" , " & c s c r ; " : " 5╪╕▄" , " & c s u b ; " : " ╧*" , " & c s u b e ; " : " ╤*" , " & c s u p ; " : " ╨*" , " & c s u p e ; " : " ╥*" , " & c t d o t ; " : " я"" , " & c u d a r r l ; " : " 8)" , " & c u d a r r r ; " : " 5)" , " & c u e p r ; " : " ▐"" , " & c u e s c ; " : " ▀"" , " & c u l a r r ; " : " ╢!" , " & c u l a r r p ; " : " =)" , " & c u p ; " : " *"" , " & c u p b r c a p ; " : " H*" , " & c u p c a p ; " : " F*" , " & c u p c u p ; " : " J*" , " & c u p d o t ; " : " Н"" , " & c u p o r ; " : " E*" , " & c u p s ; " : " *" ■" , " & c u r a r r ; " : " ╖!" , " & c u r a r r m ; " : " <)" , " & c u r l y e q p r e c ; " : " ▐"" , " & c u r l y e q s u c c ; " : " ▀"" , " & c u r l y v e e ; " : " ╬"" , " & c u r l y w e d g e ; " : " ╧"" , " & c u r r e n " : " д " , " & c u r r e n ; " : " д " , " & c u r v e a r r o w l e f t ; " : " ╢!" , " & c u r v e a r r o w r i g h t ; " : " ╖!" , " & c u v e e ; " : " ╬"" , " & c u w e d ; " : " ╧"" , " & c w c o n i n t ; " : " 2"" , " & c w i n t ; " : " 1"" , " & c y l c t y ; " : " -#" , " & d A r r ; " : " ╙!" , " & d H a r ; " : " e)" , " & d a g g e r ; " : "   " , " & d a l e t h ; " : " 8!" , " & d a r r ; " : " У!" , " & d a s h ; " : "  " , " & d a s h v ; " : " г"" , " & d b k a r o w ; " : " )" , " & d b l a c ; " : " ▌" , " & d c a r o n ; " : " " , " & d c y ; " : " 4" , " & d d ; " : " F!" , " & d d a g g e r ; " : " ! " , " & d d a r r ; " : " ╩!" , " & d d o t s e q ; " : " w*" , " & d e g " : " ░ " , " & d e g ; " : " ░ " , " & d e l t a ; " : " ┤" , " & d e m p t y v ; " : " ▒)" , " & d f i s h t ; " : " )" , " & d f r ; " : " 5╪!▌" , " & d h a r l ; " : " ├!" , " & d h a r r ; " : " ┬!" , " & d i a m ; " : " ─"" , " & d i a m o n d ; " : " ─"" , " & d i a m o n d s u i t ; " : " f&" , " & d i a m s ; " : " f&" , " & d i e ; " : " и " , " & d i g a m m a ; " : " ▌" , " & d i s i n ; " : " Є"" , " & d i v ; " : " ў " , " & d i v i d e " : " ў " , " & d i v i d e ; " : " ў " , " & d i v i d e o n t i m e s ; " : " ╟"" , " & d i v o n x ; " : " ╟"" , " & d j c y ; " : " R" , " & d l c o r n ; " : " #" , " & d l c r o p ; " : " #" , " & d o l l a r ; " : " $ " , " & d o p f ; " : " 5╪U▌" , " & d o t ; " : " ┘" , " & d o t e q ; " : " P"" , " & d o t e q d o t ; " : " Q"" , " & d o t m i n u s ; " : " 8"" , " & d o t p l u s ; " : " "" , " & d o t s q u a r e ; " : " б"" , " & d o u b l e b a r w e d g e ; " : " #" , " & d o w n a r r o w ; " : " У!" , " & d o w n d o w n a r r o w s ; " : " ╩!" , " & d o w n h a r p o o n l e f t ; " : " ├!" , " & d o w n h a r p o o n r i g h t ; " : " ┬!" , " & d r b k a r o w ; " : " )" , " & d r c o r n ; " : " #" , " & d r c r o p ; " : " #" , " & d s c r ; " : " 5╪╣▄" , " & d s c y ; " : " U" , " & d s o l ; " : " Ў)" , " & d s t r o k ; " : " " , " & d t d o t ; " : " ё"" , " & d t r i ; " : " ┐%" , " & d t r i f ; " : " ╛%" , " & d u a r r ; " : " ї!" , " & d u h a r ; " : " o)" , " & d w a n g l e ; " : " ж)" , " & d z c y ; " : " _" , " & d z i g r a r r ; " : "  '" , " & e D D o t ; " : " w*" , " & e D o t ; " : " Q"" , " & e a c u t e " : " щ " , " & e a c u t e ; " : " щ " , " & e a s t e r ; " : " n*" , " & e c a r o n ; " : " " , " & e c i r ; " : " V"" , " & e c i r c " : " ъ " , " & e c i r c ; " : " ъ " , " & e c o l o n ; " : " U"" , " & e c y ; " : " M" , " & e d o t ; " : " " , " & e e ; " : " G!" , " & e f D o t ; " : " R"" , " & e f r ; " : " 5╪"▌" , " & e g ; " : " Ъ*" , " & e g r a v e " : " ш " , " & e g r a v e ; " : " ш " , " & e g s ; " : " Ц*" , " & e g s d o t ; " : " Ш*" , " & e l ; " : " Щ*" , " & e l i n t e r s ; " : " ч#" , " & e l l ; " : " !" , " & e l s ; " : " Х*" , " & e l s d o t ; " : " Ч*" , " & e m a c r ; " : " " , " & e m p t y ; " : " "" , " & e m p t y s e t ; " : " "" , " & e m p t y v ; " : " "" , " & e m s p 1 3 ; " : "  " , " & e m s p 1 4 ; " : "  " , " & e m s p ; " : "  " , " & e n g ; " : " K" , " & e n s p ; " : "  " , " & e o g o n ; " : " " , " & e o p f ; " : " 5╪V▌" , " & e p a r ; " : " ╒"" , " & e p a r s l ; " : " у)" , " & e p l u s ; " : " q*" , " & e p s i ; " : " ╡" , " & e p s i l o n ; " : " ╡" , " & e p s i v ; " : " ї" , " & e q c i r c ; " : " V"" , " & e q c o l o n ; " : " U"" , " & e q s i m ; " : " B"" , " & e q s l a n t g t r ; " : " Ц*" , " & e q s l a n t l e s s ; " : " Х*" , " & e q u a l s ; " : " = " , " & e q u e s t ; " : " _"" , " & e q u i v ; " : " a"" , " & e q u i v D D ; " : " x*" , " & e q v p a r s l ; " : " х)" , " & e r D o t ; " : " S"" , " & e r a r r ; " : " q)" , " & e s c r ; " : " /!" , " & e s d o t ; " : " P"" , " & e s i m ; " : " B"" , " & e t a ; " : " ╖" , " & e t h " : " Ё " , " & e t h ; " : " Ё " , " & e u m l " : " ы " , " & e u m l ; " : " ы " , " & e u r o ; " : " м " , " & e x c l ; " : " ! " , " & e x i s t ; " : " "" , " & e x p e c t a t i o n ; " : " 0!" , " & e x p o n e n t i a l e ; " : " G!" , " & f a l l i n g d o t s e q ; " : " R"" , " & f c y ; " : " D" , " & f e m a l e ; " : " @&" , " & f f i l i g ; " : " √" , " & f f l i g ; " : "  √" , " & f f l l i g ; " : " √" , " & f f r ; " : " 5╪#▌" , " & f i l i g ; " : " √" , " & f j l i g ; " : " f j " , " & f l a t ; " : " m&" , " & f l l i g ; " : " √" , " & f l t n s ; " : " ▒%" , " & f n o f ; " : " Т" , " & f o p f ; " : " 5╪W▌" , " & f o r a l l ; " : "  "" , " & f o r k ; " : " ╘"" , " & f o r k v ; " : " ┘*" , " & f p a r t i n t ; " : " *" , " & f r a c 1 2 " : " ╜ " , " & f r a c 1 2 ; " : " ╜ " , " & f r a c 1 3 ; " : " S!" , " & f r a c 1 4 " : " ╝ " , " & f r a c 1 4 ; " : " ╝ " , " & f r a c 1 5 ; " : " U!" , " & f r a c 1 6 ; " : " Y!" , " & f r a c 1 8 ; " : " [!" , " & f r a c 2 3 ; " : " T!" , " & f r a c 2 5 ; " : " V!" , " & f r a c 3 4 " : " ╛ " , " & f r a c 3 4 ; " : " ╛ " , " & f r a c 3 5 ; " : " W!" , " & f r a c 3 8 ; " : " \!" , " & f r a c 4 5 ; " : " X!" , " & f r a c 5 6 ; " : " Z!" , " & f r a c 5 8 ; " : " ]!" , " & f r a c 7 8 ; " : " ^!" , " & f r a s l ; " : " D " , " & f r o w n ; " : " "#" , " & f s c r ; " : " 5╪╗▄" , " & g E ; " : " g"" , " & g E l ; " : " М*" , " & g a c u t e ; " : " ї" , " & g a m m a ; " : " │" , " & g a m m a d ; " : " ▌" , " & g a p ; " : " Ж*" , " & g b r e v e ; " : " " , " & g c i r c ; " : " " , " & g c y ; " : " 3" , " & g d o t ; " : " !" , " & g e ; " : " e"" , " & g e l ; " : " █"" , " & g e q ; " : " e"" , " & g e q q ; " : " g"" , " & g e q s l a n t ; " : " ~*" , " & g e s ; " : " ~*" , " & g e s c c ; " : " й*" , " & g e s d o t ; " : " А*" , " & g e s d o t o ; " : " В*" , " & g e s d o t o l ; " : " Д*" , " & g e s l ; " : " █" ■" , " & g e s l e s ; " : " Ф*" , " & g f r ; " : " 5╪$▌" , " & g g ; " : " k"" , " & g g g ; " : " ┘"" , " & g i m e l ; " : " 7!" , " & g j c y ; " : " S" , " & g l ; " : " w"" , " & g l E ; " : " Т*" , " & g l a ; " : " е*" , " & g l j ; " : " д*" , " & g n E ; " : " i"" , " & g n a p ; " : " К*" , " & g n a p p r o x ; " : " К*" , " & g n e ; " : " И*" , " & g n e q ; " : " И*" , " & g n e q q ; " : " i"" , " & g n s i m ; " : " ч"" , " & g o p f ; " : " 5╪X▌" , " & g r a v e ; " : " ` " , " & g s c r ; " : " 
!" , " & g s i m ; " : " s"" , " & g s i m e ; " : " О*" , " & g s i m l ; " : " Р*" , " & g t " : " > " , " & g t ; " : " > " , " & g t c c ; " : " з*" , " & g t c i r ; " : " z*" , " & g t d o t ; " : " ╫"" , " & g t l P a r ; " : " Х)" , " & g t q u e s t ; " : " |*" , " & g t r a p p r o x ; " : " Ж*" , " & g t r a r r ; " : " x)" , " & g t r d o t ; " : " ╫"" , " & g t r e q l e s s ; " : " █"" , " & g t r e q q l e s s ; " : " М*" , " & g t r l e s s ; " : " w"" , " & g t r s i m ; " : " s"" , " & g v e r t n e q q ; " : " i" ■" , " & g v n E ; " : " i" ■" , " & h A r r ; " : " ╘!" , " & h a i r s p ; " : " 
 " , " & h a l f ; " : " ╜ " , " & h a m i l t ; " : " !" , " & h a r d c y ; " : " J" , " & h a r r ; " : " Ф!" , " & h a r r c i r ; " : " H)" , " & h a r r w ; " : " н!" , " & h b a r ; " : " !" , " & h c i r c ; " : " %" , " & h e a r t s ; " : " e&" , " & h e a r t s u i t ; " : " e&" , " & h e l l i p ; " : " & " , " & h e r c o n ; " : " ╣"" , " & h f r ; " : " 5╪%▌" , " & h k s e a r o w ; " : " %)" , " & h k s w a r o w ; " : " &)" , " & h o a r r ; " : "  !" , " & h o m t h t ; " : " ;"" , " & h o o k l e f t a r r o w ; " : " й!" , " & h o o k r i g h t a r r o w ; " : " к!" , " & h o p f ; " : " 5╪Y▌" , " & h o r b a r ; " : "  " , " & h s c r ; " : " 5╪╜▄" , " & h s l a s h ; " : " !" , " & h s t r o k ; " : " '" , " & h y b u l l ; " : " C " , " & h y p h e n ; " : "  " , " & i a c u t e " : " э " , " & i a c u t e ; " : " э " , " & i c ; " : " c " , " & i c i r c " : " ю " , " & i c i r c ; " : " ю " , " & i c y ; " : " 8" , " & i e c y ; " : " 5" , " & i e x c l " : " б " , " & i e x c l ; " : " б " , " & i f f ; " : " ╘!" , " & i f r ; " : " 5╪&▌" , " & i g r a v e " : " ь " , " & i g r a v e ; " : " ь " , " & i i ; " : " H!" , " & i i i i n t ; " : " *" , " & i i i n t ; " : " -"" , " & i i n f i n ; " : " ▄)" , " & i i o t a ; " : " )!" , " & i j l i g ; " : " 3" , " & i m a c r ; " : " +" , " & i m a g e ; " : " !" , " & i m a g l i n e ; " : " !" , " & i m a g p a r t ; " : " !" , " & i m a t h ; " : " 1" , " & i m o f ; " : " ╖"" , " & i m p e d ; " : " ╡" , " & i n ; " : " "" , " & i n c a r e ; " : " !" , " & i n f i n ; " : " "" , " & i n f i n t i e ; " : " ▌)" , " & i n o d o t ; " : " 1" , " & i n t ; " : " +"" , " & i n t c a l ; " : " ║"" , " & i n t e g e r s ; " : " $!" , " & i n t e r c a l ; " : " ║"" , " & i n t l a r h k ; " : " *" , " & i n t p r o d ; " : " <*" , " & i o c y ; " : " Q" , " & i o g o n ; " : " /" , " & i o p f ; " : " 5╪Z▌" , " & i o t a ; " : " ╣" , " & i p r o d ; " : " <*" , " & i q u e s t " : " ┐ " , " & i q u e s t ; " : " ┐ " , " & i s c r ; " : " 5╪╛▄" , " & i s i n ; " : " "" , " & i s i n E ; " : " ∙"" , " & i s i n d o t ; " : " ї"" , " & i s i n s ; " : " Ї"" , " & i s i n s v ; " : " є"" , " & i s i n v ; " : " "" , " & i t ; " : " b " , " & i t i l d e ; " : " )" , " & i u k c y ; " : " V" , " & i u m l " : " я " , " & i u m l ; " : " я " , " & j c i r c ; " : " 5" , " & j c y ; " : " 9" , " & j f r ; " : " 5╪'▌" , " & j m a t h ; " : " 7" , " & j o p f ; " : " 5╪[▌" , " & j s c r ; " : " 5╪┐▄" , " & j s e r c y ; " : " X" , " & j u k c y ; " : " T" , " & k a p p a ; " : " ║" , " & k a p p a v ; " : " Ё" , " & k c e d i l ; " : " 7" , " & k c y ; " : " :" , " & k f r ; " : " 5╪(▌" , " & k g r e e n ; " : " 8" , " & k h c y ; " : " E" , " & k j c y ; " : " \" , " & k o p f ; " : " 5╪\▌" , " & k s c r ; " : " 5╪└▄" , " & l A a r r ; " : " ┌!" , " & l A r r ; " : " ╨!" , " & l A t a i l ; " : " )" , " & l B a r r ; " : " )" , " & l E ; " : " f"" , " & l E g ; " : " Л*" , " & l H a r ; " : " b)" , " & l a c u t e ; " : " :" , " & l a e m p t y v ; " : " ┤)" , " & l a g r a n ; " : " !" , " & l a m b d a ; " : " ╗" , " & l a n g ; " : " ш'" , " & l a n g d ; " : " С)" , " & l a n g l e ; " : " ш'" , " & l a p ; " : " Е*" , " & l a q u o " : " л " , " & l a q u o ; " : " л " , " & l a r r ; " : " Р!" , " & l a r r b ; " : " ф!" , " & l a r r b f s ; " : " )" , " & l a r r f s ; " : " )" , " & l a r r h k ; " : " й!" , " & l a r r l p ; " : " л!" , " & l a r r p l ; " : " 9)" , " & l a r r s i m ; " : " s)" , " & l a r r t l ; " : " в!" , " & l a t ; " : " л*" , " & l a t a i l ; " : " )" , " & l a t e ; " : " н*" , " & l a t e s ; " : " н* ■" , " & l b a r r ; " : " )" , " & l b b r k ; " : " r'" , " & l b r a c e ; " : " { " , " & l b r a c k ; " : " [ " , " & l b r k e ; " : " Л)" , " & l b r k s l d ; " : " П)" , " & l b r k s l u ; " : " Н)" , " & l c a r o n ; " : " >" , " & l c e d i l ; " : " <" , " & l c e i l ; " : " #" , " & l c u b ; " : " { " , " & l c y ; " : " ;" , " & l d c a ; " : " 6)" , " & l d q u o ; " : "  " , " & l d q u o r ; " : "  " , " & l d r d h a r ; " : " g)" , " & l d r u s h a r ; " : " K)" , " & l d s h ; " : " ▓!" , " & l e ; " : " d"" , " & l e f t a r r o w ; " : " Р!" , " & l e f t a r r o w t a i l ; " : " в!" , " & l e f t h a r p o o n d o w n ; " : " ╜!" , " & l e f t h a r p o o n u p ; " : " ╝!" , " & l e f t l e f t a r r o w s ; " : " ╟!" , " & l e f t r i g h t a r r o w ; " : " Ф!" , " & l e f t r i g h t a r r o w s ; " : " ╞!" , " & l e f t r i g h t h a r p o o n s ; " : " ╦!" , " & l e f t r i g h t s q u i g a r r o w ; " : " н!" , " & l e f t t h r e e t i m e s ; " : " ╦"" , " & l e g ; " : " ┌"" , " & l e q ; " : " d"" , " & l e q q ; " : " f"" , " & l e q s l a n t ; " : " }*" , " & l e s ; " : " }*" , " & l e s c c ; " : " и*" , " & l e s d o t ; " : " *" , " & l e s d o t o ; " : " Б*" , " & l e s d o t o r ; " : " Г*" , " & l e s g ; " : " ┌" ■" , " & l e s g e s ; " : " У*" , " & l e s s a p p r o x ; " : " Е*" , " & l e s s d o t ; " : " ╓"" , " & l e s s e q g t r ; " : " ┌"" , " & l e s s e q q g t r ; " : " Л*" , " & l e s s g t r ; " : " v"" , " & l e s s s i m ; " : " r"" , " & l f i s h t ; " : " |)" , " & l f l o o r ; " : " 
#" , " & l f r ; " : " 5╪)▌" , " & l g ; " : " v"" , " & l g E ; " : " С*" , " & l h a r d ; " : " ╜!" , " & l h a r u ; " : " ╝!" , " & l h a r u l ; " : " j)" , " & l h b l k ; " : " Д%" , " & l j c y ; " : " Y" , " & l l ; " : " j"" , " & l l a r r ; " : " ╟!" , " & l l c o r n e r ; " : " #" , " & l l h a r d ; " : " k)" , " & l l t r i ; " : " ·%" , " & l m i d o t ; " : " @" , " & l m o u s t ; " : " ░#" , " & l m o u s t a c h e ; " : " ░#" , " & l n E ; " : " h"" , " & l n a p ; " : " Й*" , " & l n a p p r o x ; " : " Й*" , " & l n e ; " : " З*" , " & l n e q ; " : " З*" , " & l n e q q ; " : " h"" , " & l n s i m ; " : " ц"" , " & l o a n g ; " : " ь'" , " & l o a r r ; " : " ¤!" , " & l o b r k ; " : " ц'" , " & l o n g l e f t a r r o w ; " : " ї'" , " & l o n g l e f t r i g h t a r r o w ; " : " ў'" , " & l o n g m a p s t o ; " : " №'" , " & l o n g r i g h t a r r o w ; " : " Ў'" , " & l o o p a r r o w l e f t ; " : " л!" , " & l o o p a r r o w r i g h t ; " : " м!" , " & l o p a r ; " : " Е)" , " & l o p f ; " : " 5╪]▌" , " & l o p l u s ; " : " -*" , " & l o t i m e s ; " : " 4*" , " & l o w a s t ; " : " "" , " & l o w b a r ; " : " _ " , " & l o z ; " : " ╩%" , " & l o z e n g e ; " : " ╩%" , " & l o z f ; " : " ы)" , " & l p a r ; " : " ( " , " & l p a r l t ; " : " У)" , " & l r a r r ; " : " ╞!" , " & l r c o r n e r ; " : " #" , " & l r h a r ; " : " ╦!" , " & l r h a r d ; " : " m)" , " & l r m ; " : "  " , " & l r t r i ; " : " ┐"" , " & l s a q u o ; " : " 9 " , " & l s c r ; " : " 5╪┴▄" , " & l s h ; " : " ░!" , " & l s i m ; " : " r"" , " & l s i m e ; " : " Н*" , " & l s i m g ; " : " П*" , " & l s q b ; " : " [ " , " & l s q u o ; " : "  " , " & l s q u o r ; " : "  " , " & l s t r o k ; " : " B" , " & l t " : " < " , " & l t ; " : " < " , " & l t c c ; " : " ж*" , " & l t c i r ; " : " y*" , " & l t d o t ; " : " ╓"" , " & l t h r e e ; " : " ╦"" , " & l t i m e s ; " : " ╔"" , " & l t l a r r ; " : " v)" , " & l t q u e s t ; " : " {*" , " & l t r P a r ; " : " Ц)" , " & l t r i ; " : " ├%" , " & l t r i e ; " : " ┤"" , " & l t r i f ; " : " ┬%" , " & l u r d s h a r ; " : " J)" , " & l u r u h a r ; " : " f)" , " & l v e r t n e q q ; " : " h" ■" , " & l v n E ; " : " h" ■" , " & m D D o t ; " : " :"" , " & m a c r " : " п " , " & m a c r ; " : " п " , " & m a l e ; " : " B&" , " & m a l t ; " : "  '" , " & m a l t e s e ; " : "  '" , " & m a p ; " : " ж!" , " & m a p s t o ; " : " ж!" , " & m a p s t o d o w n ; " : " з!" , " & m a p s t o l e f t ; " : " д!" , " & m a p s t o u p ; " : " е!" , " & m a r k e r ; " : " о%" , " & m c o m m a ; " : " )*" , " & m c y ; " : " <" , " & m d a s h ; " : "  " , " & m e a s u r e d a n g l e ; " : " !"" , " & m f r ; " : " 5╪*▌" , " & m h o ; " : " '!" , " & m i c r o " : " ╡ " , " & m i c r o ; " : " ╡ " , " & m i d ; " : " #"" , " & m i d a s t ; " : " * " , " & m i d c i r ; " : " Ё*" , " & m i d d o t " : " ╖ " , " & m i d d o t ; " : " ╖ " , " & m i n u s ; " : " "" , " & m i n u s b ; " : " Я"" , " & m i n u s d ; " : " 8"" , " & m i n u s d u ; " : " **" , " & m l c p ; " : " █*" , " & m l d r ; " : " & " , " & m n p l u s ; " : " "" , " & m o d e l s ; " : " з"" , " & m o p f ; " : " 5╪^▌" , " & m p ; " : " "" , " & m s c r ; " : " 5╪┬▄" , " & m s t p o s ; " : " >"" , " & m u ; " : " ╝" , " & m u l t i m a p ; " : " ╕"" , " & m u m a p ; " : " ╕"" , " & n G g ; " : " ┘"8" , " & n G t ; " : " k"╥ " , " & n G t v ; " : " k"8" , " & n L e f t a r r o w ; " : " ═!" , " & n L e f t r i g h t a r r o w ; " : " ╬!" , " & n L l ; " : " ╪"8" , " & n L t ; " : " j"╥ " , " & n L t v ; " : " j"8" , " & n R i g h t a r r o w ; " : " ╧!" , " & n V D a s h ; " : " п"" , " & n V d a s h ; " : " о"" , " & n a b l a ; " : " "" , " & n a c u t e ; " : " D" , " & n a n g ; " : "  "╥ " , " & n a p ; " : " I"" , " & n a p E ; " : " p*8" , " & n a p i d ; " : " K"8" , " & n a p o s ; " : " I" , " & n a p p r o x ; " : " I"" , " & n a t u r ; " : " n&" , " & n a t u r a l ; " : " n&" , " & n a t u r a l s ; " : " !" , " & n b s p " : " а " , " & n b s p ; " : " а " , " & n b u m p ; " : " N"8" , " & n b u m p e ; " : " O"8" , " & n c a p ; " : " C*" , " & n c a r o n ; " : " H" , " & n c e d i l ; " : " F" , " & n c o n g ; " : " G"" , " & n c o n g d o t ; " : " m*8" , " & n c u p ; " : " B*" , " & n c y ; " : " =" , " & n d a s h ; " : "  " , " & n e ; " : " `"" , " & n e A r r ; " : " ╫!" , " & n e a r h k ; " : " $)" , " & n e a r r ; " : " Ч!" , " & n e a r r o w ; " : " Ч!" , " & n e d o t ; " : " P"8" , " & n e q u i v ; " : " b"" , " & n e s e a r ; " : " ()" , " & n e s i m ; " : " B"8" , " & n e x i s t ; " : " "" , " & n e x i s t s ; " : " "" , " & n f r ; " : " 5╪+▌" , " & n g E ; " : " g"8" , " & n g e ; " : " q"" , " & n g e q ; " : " q"" , " & n g e q q ; " : " g"8" , " & n g e q s l a n t ; " : " ~*8" , " & n g e s ; " : " ~*8" , " & n g s i m ; " : " u"" , " & n g t ; " : " o"" , " & n g t r ; " : " o"" , " & n h A r r ; " : " ╬!" , " & n h a r r ; " : " о!" , " & n h p a r ; " : " Є*" , " & n i ; " : " "" , " & n i s ; " : " №"" , " & n i s d ; " : " ·"" , " & n i v ; " : " "" , " & n j c y ; " : " Z" , " & n l A r r ; " : " ═!" , " & n l E ; " : " f"8" , " & n l a r r ; " : " Ъ!" , " & n l d r ; " : " % " , " & n l e ; " : " p"" , " & n l e f t a r r o w ; " : " Ъ!" , " & n l e f t r i g h t a r r o w ; " : " о!" , " & n l e q ; " : " p"" , " & n l e q q ; " : " f"8" , " & n l e q s l a n t ; " : " }*8" , " & n l e s ; " : " }*8" , " & n l e s s ; " : " n"" , " & n l s i m ; " : " t"" , " & n l t ; " : " n"" , " & n l t r i ; " : " ъ"" , " & n l t r i e ; " : " ь"" , " & n m i d ; " : " $"" , " & n o p f ; " : " 5╪_▌" , " & n o t " : " м " , " & n o t ; " : " м " , " & n o t i n ; " : " 	"" , " & n o t i n E ; " : " ∙"8" , " & n o t i n d o t ; " : " ї"8" , " & n o t i n v a ; " : " 	"" , " & n o t i n v b ; " : " ў"" , " & n o t i n v c ; " : " Ў"" , " & n o t n i ; " : " "" , " & n o t n i v a ; " : " "" , " & n o t n i v b ; " : " ■"" , " & n o t n i v c ; " : " ¤"" , " & n p a r ; " : " &"" , " & n p a r a l l e l ; " : " &"" , " & n p a r s l ; " : " ¤*х " , " & n p a r t ; " : " "8" , " & n p o l i n t ; " : " *" , " & n p r ; " : " А"" , " & n p r c u e ; " : " р"" , " & n p r e ; " : " п*8" , " & n p r e c ; " : " А"" , " & n p r e c e q ; " : " п*8" , " & n r A r r ; " : " ╧!" , " & n r a r r ; " : " Ы!" , " & n r a r r c ; " : " 3)8" , " & n r a r r w ; " : " Э!8" , " & n r i g h t a r r o w ; " : " Ы!" , " & n r t r i ; " : " ы"" , " & n r t r i e ; " : " э"" , " & n s c ; " : " Б"" , " & n s c c u e ; " : " с"" , " & n s c e ; " : " ░*8" , " & n s c r ; " : " 5╪├▄" , " & n s h o r t m i d ; " : " $"" , " & n s h o r t p a r a l l e l ; " : " &"" , " & n s i m ; " : " A"" , " & n s i m e ; " : " D"" , " & n s i m e q ; " : " D"" , " & n s m i d ; " : " $"" , " & n s p a r ; " : " &"" , " & n s q s u b e ; " : " т"" , " & n s q s u p e ; " : " у"" , " & n s u b ; " : " Д"" , " & n s u b E ; " : " ┼*8" , " & n s u b e ; " : " И"" , " & n s u b s e t ; " : " В"╥ " , " & n s u b s e t e q ; " : " И"" , " & n s u b s e t e q q ; " : " ┼*8" , " & n s u c c ; " : " Б"" , " & n s u c c e q ; " : " ░*8" , " & n s u p ; " : " Е"" , " & n s u p E ; " : " ╞*8" , " & n s u p e ; " : " Й"" , " & n s u p s e t ; " : " Г"╥ " , " & n s u p s e t e q ; " : " Й"" , " & n s u p s e t e q q ; " : " ╞*8" , " & n t g l ; " : " y"" , " & n t i l d e " : " ё " , " & n t i l d e ; " : " ё " , " & n t l g ; " : " x"" , " & n t r i a n g l e l e f t ; " : " ъ"" , " & n t r i a n g l e l e f t e q ; " : " ь"" , " & n t r i a n g l e r i g h t ; " : " ы"" , " & n t r i a n g l e r i g h t e q ; " : " э"" , " & n u ; " : " ╜" , " & n u m ; " : " # " , " & n u m e r o ; " : " !" , " & n u m s p ; " : "  " , " & n v D a s h ; " : " н"" , " & n v H a r r ; " : " )" , " & n v a p ; " : " M"╥ " , " & n v d a s h ; " : " м"" , " & n v g e ; " : " e"╥ " , " & n v g t ; " : " > ╥ " , " & n v i n f i n ; " : " ▐)" , " & n v l A r r ; " : " )" , " & n v l e ; " : " d"╥ " , " & n v l t ; " : " < ╥ " , " & n v l t r i e ; " : " ┤"╥ " , " & n v r A r r ; " : " )" , " & n v r t r i e ; " : " ╡"╥ " , " & n v s i m ; " : " <"╥ " , " & n w A r r ; " : " ╓!" , " & n w a r h k ; " : " #)" , " & n w a r r ; " : " Ц!" , " & n w a r r o w ; " : " Ц!" , " & n w n e a r ; " : " ')" , " & o S ; " : " ╚$" , " & o a c u t e " : " є " , " & o a c u t e ; " : " є " , " & o a s t ; " : " Ы"" , " & o c i r ; " : " Ъ"" , " & o c i r c " : " Ї " , " & o c i r c ; " : " Ї " , " & o c y ; " : " >" , " & o d a s h ; " : " Э"" , " & o d b l a c ; " : " Q" , " & o d i v ; " : " 8*" , " & o d o t ; " : " Щ"" , " & o d s o l d ; " : " ╝)" , " & o e l i g ; " : " S" , " & o f c i r ; " : " ┐)" , " & o f r ; " : " 5╪,▌" , " & o g o n ; " : " █" , " & o g r a v e " : " Є " , " & o g r a v e ; " : " Є " , " & o g t ; " : " ┴)" , " & o h b a r ; " : " ╡)" , " & o h m ; " : " й" , " & o i n t ; " : " ."" , " & o l a r r ; " : " ║!" , " & o l c i r ; " : " ╛)" , " & o l c r o s s ; " : " ╗)" , " & o l i n e ; " : " > " , " & o l t ; " : " └)" , " & o m a c r ; " : " M" , " & o m e g a ; " : " ╔" , " & o m i c r o n ; " : " ┐" , " & o m i d ; " : " ╢)" , " & o m i n u s ; " : " Ц"" , " & o o p f ; " : " 5╪`▌" , " & o p a r ; " : " ╖)" , " & o p e r p ; " : " ╣)" , " & o p l u s ; " : " Х"" , " & o r ; " : " ("" , " & o r a r r ; " : " ╗!" , " & o r d ; " : " ]*" , " & o r d e r ; " : " 4!" , " & o r d e r o f ; " : " 4!" , " & o r d f " : " к " , " & o r d f ; " : " к " , " & o r d m " : " ║ " , " & o r d m ; " : " ║ " , " & o r i g o f ; " : " ╢"" , " & o r o r ; " : " V*" , " & o r s l o p e ; " : " W*" , " & o r v ; " : " [*" , " & o s c r ; " : " 4!" , " & o s l a s h " : " ° " , " & o s l a s h ; " : " ° " , " & o s o l ; " : " Ш"" , " & o t i l d e " : " ї " , " & o t i l d e ; " : " ї " , " & o t i m e s ; " : " Ч"" , " & o t i m e s a s ; " : " 6*" , " & o u m l " : " Ў " , " & o u m l ; " : " Ў " , " & o v b a r ; " : " =#" , " & p a r ; " : " %"" , " & p a r a " : " ╢ " , " & p a r a ; " : " ╢ " , " & p a r a l l e l ; " : " %"" , " & p a r s i m ; " : " є*" , " & p a r s l ; " : " ¤*" , " & p a r t ; " : " "" , " & p c y ; " : " ?" , " & p e r c n t ; " : " % " , " & p e r i o d ; " : " . " , " & p e r m i l ; " : " 0 " , " & p e r p ; " : " е"" , " & p e r t e n k ; " : " 1 " , " & p f r ; " : " 5╪-▌" , " & p h i ; " : " ╞" , " & p h i v ; " : " ╒" , " & p h m m a t ; " : " 3!" , " & p h o n e ; " : " &" , " & p i ; " : " └" , " & p i t c h f o r k ; " : " ╘"" , " & p i v ; " : " ╓" , " & p l a n c k ; " : " !" , " & p l a n c k h ; " : " !" , " & p l a n k v ; " : " !" , " & p l u s ; " : " + " , " & p l u s a c i r ; " : " #*" , " & p l u s b ; " : " Ю"" , " & p l u s c i r ; " : " "*" , " & p l u s d o ; " : " "" , " & p l u s d u ; " : " %*" , " & p l u s e ; " : " r*" , " & p l u s m n " : " ▒ " , " & p l u s m n ; " : " ▒ " , " & p l u s s i m ; " : " &*" , " & p l u s t w o ; " : " '*" , " & p m ; " : " ▒ " , " & p o i n t i n t ; " : " *" , " & p o p f ; " : " 5╪a▌" , " & p o u n d " : " г " , " & p o u n d ; " : " г " , " & p r ; " : " z"" , " & p r E ; " : " │*" , " & p r a p ; " : " ╖*" , " & p r c u e ; " : " |"" , " & p r e ; " : " п*" , " & p r e c ; " : " z"" , " & p r e c a p p r o x ; " : " ╖*" , " & p r e c c u r l y e q ; " : " |"" , " & p r e c e q ; " : " п*" , " & p r e c n a p p r o x ; " : " ╣*" , " & p r e c n e q q ; " : " ╡*" , " & p r e c n s i m ; " : " ш"" , " & p r e c s i m ; " : " ~"" , " & p r i m e ; " : " 2 " , " & p r i m e s ; " : " !" , " & p r n E ; " : " ╡*" , " & p r n a p ; " : " ╣*" , " & p r n s i m ; " : " ш"" , " & p r o d ; " : " "" , " & p r o f a l a r ; " : " .#" , " & p r o f l i n e ; " : " #" , " & p r o f s u r f ; " : " #" , " & p r o p ; " : " "" , " & p r o p t o ; " : " "" , " & p r s i m ; " : " ~"" , " & p r u r e l ; " : " ░"" , " & p s c r ; " : " 5╪┼▄" , " & p s i ; " : " ╚" , " & p u n c s p ; " : "  " , " & q f r ; " : " 5╪.▌" , " & q i n t ; " : " *" , " & q o p f ; " : " 5╪b▌" , " & q p r i m e ; " : " W " , " & q s c r ; " : " 5╪╞▄" , " & q u a t e r n i o n s ; " : " !" , " & q u a t i n t ; " : " *" , " & q u e s t ; " : " ? " , " & q u e s t e q ; " : " _"" , " & q u o t " : ' " ' , " & q u o t ; " : ' " ' , " & r A a r r ; " : " █!" , " & r A r r ; " : " ╥!" , " & r A t a i l ; " : " )" , " & r B a r r ; " : " )" , " & r H a r ; " : " d)" , " & r a c e ; " : " ="1" , " & r a c u t e ; " : " U" , " & r a d i c ; " : " "" , " & r a e m p t y v ; " : " │)" , " & r a n g ; " : " щ'" , " & r a n g d ; " : " Т)" , " & r a n g e ; " : " е)" , " & r a n g l e ; " : " щ'" , " & r a q u o " : " ╗ " , " & r a q u o ; " : " ╗ " , " & r a r r ; " : " Т!" , " & r a r r a p ; " : " u)" , " & r a r r b ; " : " х!" , " & r a r r b f s ; " : "  )" , " & r a r r c ; " : " 3)" , " & r a r r f s ; " : " )" , " & r a r r h k ; " : " к!" , " & r a r r l p ; " : " м!" , " & r a r r p l ; " : " E)" , " & r a r r s i m ; " : " t)" , " & r a r r t l ; " : " г!" , " & r a r r w ; " : " Э!" , " & r a t a i l ; " : " )" , " & r a t i o ; " : " 6"" , " & r a t i o n a l s ; " : " !" , " & r b a r r ; " : " )" , " & r b b r k ; " : " s'" , " & r b r a c e ; " : " } " , " & r b r a c k ; " : " ] " , " & r b r k e ; " : " М)" , " & r b r k s l d ; " : " О)" , " & r b r k s l u ; " : " Р)" , " & r c a r o n ; " : " Y" , " & r c e d i l ; " : " W" , " & r c e i l ; " : " 	#" , " & r c u b ; " : " } " , " & r c y ; " : " @" , " & r d c a ; " : " 7)" , " & r d l d h a r ; " : " i)" , " & r d q u o ; " : "  " , " & r d q u o r ; " : "  " , " & r d s h ; " : " │!" , " & r e a l ; " : " !" , " & r e a l i n e ; " : " !" , " & r e a l p a r t ; " : " !" , " & r e a l s ; " : " !" , " & r e c t ; " : " н%" , " & r e g " : " о " , " & r e g ; " : " о " , " & r f i s h t ; " : " })" , " & r f l o o r ; " : " #" , " & r f r ; " : " 5╪/▌" , " & r h a r d ; " : " ┴!" , " & r h a r u ; " : " └!" , " & r h a r u l ; " : " l)" , " & r h o ; " : " ┴" , " & r h o v ; " : " ё" , " & r i g h t a r r o w ; " : " Т!" , " & r i g h t a r r o w t a i l ; " : " г!" , " & r i g h t h a r p o o n d o w n ; " : " ┴!" , " & r i g h t h a r p o o n u p ; " : " └!" , " & r i g h t l e f t a r r o w s ; " : " ─!" , " & r i g h t l e f t h a r p o o n s ; " : " ╠!" , " & r i g h t r i g h t a r r o w s ; " : " ╔!" , " & r i g h t s q u i g a r r o w ; " : " Э!" , " & r i g h t t h r e e t i m e s ; " : " ╠"" , " & r i n g ; " : " ┌" , " & r i s i n g d o t s e q ; " : " S"" , " & r l a r r ; " : " ─!" , " & r l h a r ; " : " ╠!" , " & r l m ; " : "  " , " & r m o u s t ; " : " ▒#" , " & r m o u s t a c h e ; " : " ▒#" , " & r n m i d ; " : " ю*" , " & r o a n g ; " : " э'" , " & r o a r r ; " : " ■!" , " & r o b r k ; " : " ч'" , " & r o p a r ; " : " Ж)" , " & r o p f ; " : " 5╪c▌" , " & r o p l u s ; " : " .*" , " & r o t i m e s ; " : " 5*" , " & r p a r ; " : " ) " , " & r p a r g t ; " : " Ф)" , " & r p p o l i n t ; " : " *" , " & r r a r r ; " : " ╔!" , " & r s a q u o ; " : " : " , " & r s c r ; " : " 5╪╟▄" , " & r s h ; " : " ▒!" , " & r s q b ; " : " ] " , " & r s q u o ; " : "  " , " & r s q u o r ; " : "  " , " & r t h r e e ; " : " ╠"" , " & r t i m e s ; " : " ╩"" , " & r t r i ; " : " ╣%" , " & r t r i e ; " : " ╡"" , " & r t r i f ; " : " ╕%" , " & r t r i l t r i ; " : " ╬)" , " & r u l u h a r ; " : " h)" , " & r x ; " : " !" , " & s a c u t e ; " : " [" , " & s b q u o ; " : "  " , " & s c ; " : " {"" , " & s c E ; " : " ┤*" , " & s c a p ; " : " ╕*" , " & s c a r o n ; " : " a" , " & s c c u e ; " : " }"" , " & s c e ; " : " ░*" , " & s c e d i l ; " : " _" , " & s c i r c ; " : " ]" , " & s c n E ; " : " ╢*" , " & s c n a p ; " : " ║*" , " & s c n s i m ; " : " щ"" , " & s c p o l i n t ; " : " *" , " & s c s i m ; " : " "" , " & s c y ; " : " A" , " & s d o t ; " : " ┼"" , " & s d o t b ; " : " б"" , " & s d o t e ; " : " f*" , " & s e A r r ; " : " ╪!" , " & s e a r h k ; " : " %)" , " & s e a r r ; " : " Ш!" , " & s e a r r o w ; " : " Ш!" , " & s e c t " : " з " , " & s e c t ; " : " з " , " & s e m i ; " : " ; " , " & s e s w a r ; " : " ))" , " & s e t m i n u s ; " : " "" , " & s e t m n ; " : " "" , " & s e x t ; " : " 6'" , " & s f r ; " : " 5╪0▌" , " & s f r o w n ; " : " "#" , " & s h a r p ; " : " o&" , " & s h c h c y ; " : " I" , " & s h c y ; " : " H" , " & s h o r t m i d ; " : " #"" , " & s h o r t p a r a l l e l ; " : " %"" , " & s h y " : " н " , " & s h y ; " : " н " , " & s i g m a ; " : " ├" , " & s i g m a f ; " : " ┬" , " & s i g m a v ; " : " ┬" , " & s i m ; " : " <"" , " & s i m d o t ; " : " j*" , " & s i m e ; " : " C"" , " & s i m e q ; " : " C"" , " & s i m g ; " : " Ю*" , " & s i m g E ; " : " а*" , " & s i m l ; " : " Э*" , " & s i m l E ; " : " Я*" , " & s i m n e ; " : " F"" , " & s i m p l u s ; " : " $*" , " & s i m r a r r ; " : " r)" , " & s l a r r ; " : " Р!" , " & s m a l l s e t m i n u s ; " : " "" , " & s m a s h p ; " : " 3*" , " & s m e p a r s l ; " : " ф)" , " & s m i d ; " : " #"" , " & s m i l e ; " : " ##" , " & s m t ; " : " к*" , " & s m t e ; " : " м*" , " & s m t e s ; " : " м* ■" , " & s o f t c y ; " : " L" , " & s o l ; " : " / " , " & s o l b ; " : " ─)" , " & s o l b a r ; " : " ?#" , " & s o p f ; " : " 5╪d▌" , " & s p a d e s ; " : " `&" , " & s p a d e s u i t ; " : " `&" , " & s p a r ; " : " %"" , " & s q c a p ; " : " У"" , " & s q c a p s ; " : " У" ■" , " & s q c u p ; " : " Ф"" , " & s q c u p s ; " : " Ф" ■" , " & s q s u b ; " : " П"" , " & s q s u b e ; " : " С"" , " & s q s u b s e t ; " : " П"" , " & s q s u b s e t e q ; " : " С"" , " & s q s u p ; " : " Р"" , " & s q s u p e ; " : " Т"" , " & s q s u p s e t ; " : " Р"" , " & s q s u p s e t e q ; " : " Т"" , " & s q u ; " : " б%" , " & s q u a r e ; " : " б%" , " & s q u a r f ; " : " к%" , " & s q u f ; " : " к%" , " & s r a r r ; " : " Т!" , " & s s c r ; " : " 5╪╚▄" , " & s s e t m n ; " : " "" , " & s s m i l e ; " : " ##" , " & s s t a r f ; " : " ╞"" , " & s t a r ; " : " &" , " & s t a r f ; " : " &" , " & s t r a i g h t e p s i l o n ; " : " ї" , " & s t r a i g h t p h i ; " : " ╒" , " & s t r n s ; " : " п " , " & s u b ; " : " В"" , " & s u b E ; " : " ┼*" , " & s u b d o t ; " : " ╜*" , " & s u b e ; " : " Ж"" , " & s u b e d o t ; " : " ├*" , " & s u b m u l t ; " : " ┴*" , " & s u b n E ; " : " ╦*" , " & s u b n e ; " : " К"" , " & s u b p l u s ; " : " ┐*" , " & s u b r a r r ; " : " y)" , " & s u b s e t ; " : " В"" , " & s u b s e t e q ; " : " Ж"" , " & s u b s e t e q q ; " : " ┼*" , " & s u b s e t n e q ; " : " К"" , " & s u b s e t n e q q ; " : " ╦*" , " & s u b s i m ; " : " ╟*" , " & s u b s u b ; " : " ╒*" , " & s u b s u p ; " : " ╙*" , " & s u c c ; " : " {"" , " & s u c c a p p r o x ; " : " ╕*" , " & s u c c c u r l y e q ; " : " }"" , " & s u c c e q ; " : " ░*" , " & s u c c n a p p r o x ; " : " ║*" , " & s u c c n e q q ; " : " ╢*" , " & s u c c n s i m ; " : " щ"" , " & s u c c s i m ; " : " "" , " & s u m ; " : " "" , " & s u n g ; " : " j&" , " & s u p 1 " : " ╣ " , " & s u p 1 ; " : " ╣ " , " & s u p 2 " : " ▓ " , " & s u p 2 ; " : " ▓ " , " & s u p 3 " : " │ " , " & s u p 3 ; " : " │ " , " & s u p ; " : " Г"" , " & s u p E ; " : " ╞*" , " & s u p d o t ; " : " ╛*" , " & s u p d s u b ; " : " ╪*" , " & s u p e ; " : " З"" , " & s u p e d o t ; " : " ─*" , " & s u p h s o l ; " : " ╔'" , " & s u p h s u b ; " : " ╫*" , " & s u p l a r r ; " : " {)" , " & s u p m u l t ; " : " ┬*" , " & s u p n E ; " : " ╠*" , " & s u p n e ; " : " Л"" , " & s u p p l u s ; " : " └*" , " & s u p s e t ; " : " Г"" , " & s u p s e t e q ; " : " З"" , " & s u p s e t e q q ; " : " ╞*" , " & s u p s e t n e q ; " : " Л"" , " & s u p s e t n e q q ; " : " ╠*" , " & s u p s i m ; " : " ╚*" , " & s u p s u b ; " : " ╘*" , " & s u p s u p ; " : " ╓*" , " & s w A r r ; " : " ┘!" , " & s w a r h k ; " : " &)" , " & s w a r r ; " : " Щ!" , " & s w a r r o w ; " : " Щ!" , " & s w n w a r ; " : " *)" , " & s z l i g " : " ▀ " , " & s z l i g ; " : " ▀ " , " & t a r g e t ; " : " #" , " & t a u ; " : " ─" , " & t b r k ; " : " ┤#" , " & t c a r o n ; " : " e" , " & t c e d i l ; " : " c" , " & t c y ; " : " B" , " & t d o t ; " : " █ " , " & t e l r e c ; " : " #" , " & t f r ; " : " 5╪1▌" , " & t h e r e 4 ; " : " 4"" , " & t h e r e f o r e ; " : " 4"" , " & t h e t a ; " : " ╕" , " & t h e t a s y m ; " : " ╤" , " & t h e t a v ; " : " ╤" , " & t h i c k a p p r o x ; " : " H"" , " & t h i c k s i m ; " : " <"" , " & t h i n s p ; " : " 	 " , " & t h k a p ; " : " H"" , " & t h k s i m ; " : " <"" , " & t h o r n " : " ■ " , " & t h o r n ; " : " ■ " , " & t i l d e ; " : " ▄" , " & t i m e s " : " ╫ " , " & t i m e s ; " : " ╫ " , " & t i m e s b ; " : " а"" , " & t i m e s b a r ; " : " 1*" , " & t i m e s d ; " : " 0*" , " & t i n t ; " : " -"" , " & t o e a ; " : " ()" , " & t o p ; " : " д"" , " & t o p b o t ; " : " 6#" , " & t o p c i r ; " : " ё*" , " & t o p f ; " : " 5╪e▌" , " & t o p f o r k ; " : " ┌*" , " & t o s a ; " : " ))" , " & t p r i m e ; " : " 4 " , " & t r a d e ; " : " "!" , " & t r i a n g l e ; " : " ╡%" , " & t r i a n g l e d o w n ; " : " ┐%" , " & t r i a n g l e l e f t ; " : " ├%" , " & t r i a n g l e l e f t e q ; " : " ┤"" , " & t r i a n g l e q ; " : " \"" , " & t r i a n g l e r i g h t ; " : " ╣%" , " & t r i a n g l e r i g h t e q ; " : " ╡"" , " & t r i d o t ; " : " ь%" , " & t r i e ; " : " \"" , " & t r i m i n u s ; " : " :*" , " & t r i p l u s ; " : " 9*" , " & t r i s b ; " : " ═)" , " & t r i t i m e ; " : " ;*" , " & t r p e z i u m ; " : " т#" , " & t s c r ; " : " 5╪╔▄" , " & t s c y ; " : " F" , " & t s h c y ; " : " [" , " & t s t r o k ; " : " g" , " & t w i x t ; " : " l"" , " & t w o h e a d l e f t a r r o w ; " : " Ю!" , " & t w o h e a d r i g h t a r r o w ; " : " а!" , " & u A r r ; " : " ╤!" , " & u H a r ; " : " c)" , " & u a c u t e " : " · " , " & u a c u t e ; " : " · " , " & u a r r ; " : " С!" , " & u b r c y ; " : " ^" , " & u b r e v e ; " : " m" , " & u c i r c " : " √ " , " & u c i r c ; " : " √ " , " & u c y ; " : " C" , " & u d a r r ; " : " ┼!" , " & u d b l a c ; " : " q" , " & u d h a r ; " : " n)" , " & u f i s h t ; " : " ~)" , " & u f r ; " : " 5╪2▌" , " & u g r a v e " : " ∙ " , " & u g r a v e ; " : " ∙ " , " & u h a r l ; " : " ┐!" , " & u h a r r ; " : " ╛!" , " & u h b l k ; " : " А%" , " & u l c o r n ; " : " #" , " & u l c o r n e r ; " : " #" , " & u l c r o p ; " : " #" , " & u l t r i ; " : " °%" , " & u m a c r ; " : " k" , " & u m l " : " и " , " & u m l ; " : " и " , " & u o g o n ; " : " s" , " & u o p f ; " : " 5╪f▌" , " & u p a r r o w ; " : " С!" , " & u p d o w n a r r o w ; " : " Х!" , " & u p h a r p o o n l e f t ; " : " ┐!" , " & u p h a r p o o n r i g h t ; " : " ╛!" , " & u p l u s ; " : " О"" , " & u p s i ; " : " ┼" , " & u p s i h ; " : " ╥" , " & u p s i l o n ; " : " ┼" , " & u p u p a r r o w s ; " : " ╚!" , " & u r c o r n ; " : " #" , " & u r c o r n e r ; " : " #" , " & u r c r o p ; " : " #" , " & u r i n g ; " : " o" , " & u r t r i ; " : " ∙%" , " & u s c r ; " : " 5╪╩▄" , " & u t d o t ; " : " Ё"" , " & u t i l d e ; " : " i" , " & u t r i ; " : " ╡%" , " & u t r i f ; " : " ┤%" , " & u u a r r ; " : " ╚!" , " & u u m l " : " № " , " & u u m l ; " : " № " , " & u w a n g l e ; " : " з)" , " & v A r r ; " : " ╒!" , " & v B a r ; " : " ш*" , " & v B a r v ; " : " щ*" , " & v D a s h ; " : " и"" , " & v a n g r t ; " : " Ь)" , " & v a r e p s i l o n ; " : " ї" , " & v a r k a p p a ; " : " Ё" , " & v a r n o t h i n g ; " : " "" , " & v a r p h i ; " : " ╒" , " & v a r p i ; " : " ╓" , " & v a r p r o p t o ; " : " "" , " & v a r r ; " : " Х!" , " & v a r r h o ; " : " ё" , " & v a r s i g m a ; " : " ┬" , " & v a r s u b s e t n e q ; " : " К" ■" , " & v a r s u b s e t n e q q ; " : " ╦* ■" , " & v a r s u p s e t n e q ; " : " Л" ■" , " & v a r s u p s e t n e q q ; " : " ╠* ■" , " & v a r t h e t a ; " : " ╤" , " & v a r t r i a n g l e l e f t ; " : " ▓"" , " & v a r t r i a n g l e r i g h t ; " : " │"" , " & v c y ; " : " 2" , " & v d a s h ; " : " в"" , " & v e e ; " : " ("" , " & v e e b a r ; " : " ╗"" , " & v e e e q ; " : " Z"" , " & v e l l i p ; " : " ю"" , " & v e r b a r ; " : " | " , " & v e r t ; " : " | " , " & v f r ; " : " 5╪3▌" , " & v l t r i ; " : " ▓"" , " & v n s u b ; " : " В"╥ " , " & v n s u p ; " : " Г"╥ " , " & v o p f ; " : " 5╪g▌" , " & v p r o p ; " : " "" , " & v r t r i ; " : " │"" , " & v s c r ; " : " 5╪╦▄" , " & v s u b n E ; " : " ╦* ■" , " & v s u b n e ; " : " К" ■" , " & v s u p n E ; " : " ╠* ■" , " & v s u p n e ; " : " Л" ■" , " & v z i g z a g ; " : " Ъ)" , " & w c i r c ; " : " u" , " & w e d b a r ; " : " _*" , " & w e d g e ; " : " '"" , " & w e d g e q ; " : " Y"" , " & w e i e r p ; " : " !" , " & w f r ; " : " 5╪4▌" , " & w o p f ; " : " 5╪h▌" , " & w p ; " : " !" , " & w r ; " : " @"" , " & w r e a t h ; " : " @"" , " & w s c r ; " : " 5╪╠▄" , " & x c a p ; " : " ┬"" , " & x c i r c ; " : " я%" , " & x c u p ; " : " ├"" , " & x d t r i ; " : " ╜%" , " & x f r ; " : " 5╪5▌" , " & x h A r r ; " : " ·'" , " & x h a r r ; " : " ў'" , " & x i ; " : " ╛" , " & x l A r r ; " : " °'" , " & x l a r r ; " : " ї'" , " & x m a p ; " : " №'" , " & x n i s ; " : " √"" , " & x o d o t ; " : "  *" , " & x o p f ; " : " 5╪i▌" , " & x o p l u s ; " : " *" , " & x o t i m e ; " : " *" , " & x r A r r ; " : " ∙'" , " & x r a r r ; " : " Ў'" , " & x s c r ; " : " 5╪═▄" , " & x s q c u p ; " : " *" , " & x u p l u s ; " : " *" , " & x u t r i ; " : " │%" , " & x v e e ; " : " ┴"" , " & x w e d g e ; " : " └"" , " & y a c u t e " : " ¤ " , " & y a c u t e ; " : " ¤ " , " & y a c y ; " : " O" , " & y c i r c ; " : " w" , " & y c y ; " : " K" , " & y e n " : " е " , " & y e n ; " : " е " , " & y f r ; " : " 5╪6▌" , " & y i c y ; " : " W" , " & y o p f ; " : " 5╪j▌" , " & y s c r ; " : " 5╪╬▄" , " & y u c y ; " : " N" , " & y u m l " : "   " , " & y u m l ; " : "   " , " & z a c u t e ; " : " z" , " & z c a r o n ; " : " ~" , " & z c y ; " : " 7" , " & z d o t ; " : " |" , " & z e e t r f ; " : " (!" , " & z e t a ; " : " ╢" , " & z f r ; " : " 5╪7▌" , " & z h c y ; " : " 6" , " & z i g r a r r ; " : " ▌!" , " & z o p f ; " : " 5╪k▌" , " & z s c r ; " : " 5╪╧▄" , " & z w j ; " : "  " , " & z w n j ; " : "  " } , c h a r a c t e r s : { " ╞ " : " & A E l i g ; " , " & " : " & a m p ; " , " ┴ " : " & A a c u t e ; " , " " : " & A b r e v e ; " , " ┬ " : " & A c i r c ; " , " " : " & A c y ; " , " 5╪▌" : " & A f r ; " , " └ " : " & A g r a v e ; " , " С" : " & A l p h a ; " , "  " : " & A m a c r ; " , " S*" : " & A n d ; " , " " : " & A o g o n ; " , " 5╪8▌" : " & A o p f ; " , " a " : " & a f ; " , " ┼ " : " & a n g s t ; " , " 5╪Ь▄" : " & A s c r ; " , " T"" : " & c o l o n e q ; " , " ├ " : " & A t i l d e ; " , " ─ " : " & A u m l ; " , " "" : " & s s e t m n ; " , " ч*" : " & B a r v ; " , " #" : " & d o u b l e b a r w e d g e ; " , " " : " & B c y ; " , " 5"" : " & b e c a u s e ; " , " ,!" : " & b e r n o u ; " , " Т" : " & B e t a ; " , " 5╪▌" : " & B f r ; " , " 5╪9▌" : " & B o p f ; " , " ╪" : " & b r e v e ; " , " N"" : " & b u m p ; " , " '" : " & C H c y ; " , " й " : " & c o p y ; " , " " : " & C a c u t e ; " , " ╥"" : " & C a p ; " , " E!" : " & D D ; " , " -!" : " & C f r ; " , " " : " & C c a r o n ; " , " ╟ " : " & C c e d i l ; " , " " : " & C c i r c ; " , " 0"" : " & C c o n i n t ; " , " 
" : " & C d o t ; " , " ╕ " : " & c e d i l ; " , " ╖ " : " & m i d d o t ; " , " з" : " & C h i ; " , " Щ"" : " & o d o t ; " , " Ц"" : " & o m i n u s ; " , " Х"" : " & o p l u s ; " , " Ч"" : " & o t i m e s ; " , " 2"" : " & c w c o n i n t ; " , "  " : " & r d q u o r ; " , "  " : " & r s q u o r ; " , " 7"" : " & P r o p o r t i o n ; " , " t*" : " & C o l o n e ; " , " a"" : " & e q u i v ; " , " /"" : " & D o u b l e C o n t o u r I n t e g r a l ; " , " ."" : " & o i n t ; " , " !" : " & c o m p l e x e s ; " , " "" : " & c o p r o d ; " , " 3"" : " & a w c o n i n t ; " , " /*" : " & C r o s s ; " , " 5╪Ю▄" : " & C s c r ; " , " ╙"" : " & C u p ; " , " M"" : " & a s y m p e q ; " , " )" : " & D D o t r a h d ; " , " " : " & D J c y ; " , " " : " & D S c y ; " , " " : " & D Z c y ; " , " ! " : " & d d a g g e r ; " , " б!" : " & D a r r ; " , " ф*" : " & D o u b l e L e f t T e e ; " , " " : " & D c a r o n ; " , " " : " & D c y ; " , " "" : " & n a b l a ; " , " Ф" : " & D e l t a ; " , " 5╪▌" : " & D f r ; " , " ┤ " : " & a c u t e ; " , " ┘" : " & d o t ; " , " ▌" : " & d b l a c ; " , " ` " : " & g r a v e ; " , " ▄" : " & t i l d e ; " , " ─"" : " & d i a m o n d ; " , " F!" : " & d d ; " , " 5╪;▌" : " & D o p f ; " , " и " : " & u m l ; " , " ▄ " : " & D o t D o t ; " , " P"" : " & e s d o t ; " , " ╙!" : " & d A r r ; " , " ╨!" : " & l A r r ; " , " ╘!" : " & i f f ; " , " °'" : " & x l A r r ; " , " ·'" : " & x h A r r ; " , " ∙'" : " & x r A r r ; " , " ╥!" : " & r A r r ; " , " и"" : " & v D a s h ; " , " ╤!" : " & u A r r ; " , " ╒!" : " & v A r r ; " , " %"" : " & s p a r ; " , " У!" : " & d o w n a r r o w ; " , " )" : " & D o w n A r r o w B a r ; " , " ї!" : " & d u a r r ; " , " " : " & D o w n B r e v e ; " , " P)" : " & D o w n L e f t R i g h t V e c t o r ; " , " ^)" : " & D o w n L e f t T e e V e c t o r ; " , " ╜!" : " & l h a r d ; " , " V)" : " & D o w n L e f t V e c t o r B a r ; " , " _)" : " & D o w n R i g h t T e e V e c t o r ; " , " ┴!" : " & r i g h t h a r p o o n d o w n ; " , " W)" : " & D o w n R i g h t V e c t o r B a r ; " , " д"" : " & t o p ; " , " з!" : " & m a p s t o d o w n ; " , " 5╪Я▄" : " & D s c r ; " , " " : " & D s t r o k ; " , " J" : " & E N G ; " , " ╨ " : " & E T H ; " , " ╔ " : " & E a c u t e ; " , " " : " & E c a r o n ; " , " ╩ " : " & E c i r c ; " , " -" : " & E c y ; " , " " : " & E d o t ; " , " 5╪▌" : " & E f r ; " , " ╚ " : " & E g r a v e ; " , " "" : " & i s i n v ; " , " " : " & E m a c r ; " , " √%" : " & E m p t y S m a l l S q u a r e ; " , " л%" : " & E m p t y V e r y S m a l l S q u a r e ; " , " " : " & E o g o n ; " , " 5╪<▌" : " & E o p f ; " , " Х" : " & E p s i l o n ; " , " u*" : " & E q u a l ; " , " B"" : " & e s i m ; " , " ╠!" : " & r l h a r ; " , " 0!" : " & e x p e c t a t i o n ; " , " s*" : " & E s i m ; " , " Ч" : " & E t a ; " , " ╦ " : " & E u m l ; " , " "" : " & e x i s t ; " , " G!" : " & e x p o n e n t i a l e ; " , " $" : " & F c y ; " , " 5╪	▌" : " & F f r ; " , " №%" : " & F i l l e d S m a l l S q u a r e ; " , " к%" : " & s q u f ; " , " 5╪=▌" : " & F o p f ; " , "  "" : " & f o r a l l ; " , " 1!" : " & F s c r ; " , " " : " & G J c y ; " , " > " : " & g t ; " , " У" : " & G a m m a ; " , " ▄" : " & G a m m a d ; " , " " : " & G b r e v e ; " , " "" : " & G c e d i l ; " , " " : " & G c i r c ; " , " " : " & G c y ; " , "  " : " & G d o t ; " , " 5╪
▌" : " & G f r ; " , " ┘"" : " & g g g ; " , " 5╪>▌" : " & G o p f ; " , " e"" : " & g e q ; " , " █"" : " & g t r e q l e s s ; " , " g"" : " & g e q q ; " , " в*" : " & G r e a t e r G r e a t e r ; " , " w"" : " & g t r l e s s ; " , " ~*" : " & g e s ; " , " s"" : " & g t r s i m ; " , " 5╪в▄" : " & G s c r ; " , " k"" : " & g g ; " , " *" : " & H A R D c y ; " , " ╟" : " & c a r o n ; " , " ^ " : " & H a t ; " , " $" : " & H c i r c ; " , " !" : " & P o i n c a r e p l a n e ; " , " !" : " & h a m i l t ; " , " !" : " & q u a t e r n i o n s ; " , "  %" : " & b o x h ; " , " &" : " & H s t r o k ; " , " O"" : " & b u m p e q ; " , " " : " & I E c y ; " , " 2" : " & I J l i g ; " , " " : " & I O c y ; " , " ═ " : " & I a c u t e ; " , " ╬ " : " & I c i r c ; " , " " : " & I c y ; " , " 0" : " & I d o t ; " , " !" : " & i m a g p a r t ; " , " ╠ " : " & I g r a v e ; " , " *" : " & I m a c r ; " , " H!" : " & i i ; " , " ,"" : " & I n t ; " , " +"" : " & i n t ; " , " ┬"" : " & x c a p ; " , " c " : " & i c ; " , " b " : " & i t ; " , " ." : " & I o g o n ; " , " 5╪@▌" : " & I o p f ; " , " Щ" : " & I o t a ; " , " !" : " & i m a g l i n e ; " , " (" : " & I t i l d e ; " , " " : " & I u k c y ; " , " ╧ " : " & I u m l ; " , " 4" : " & J c i r c ; " , " " : " & J c y ; " , " 5╪▌" : " & J f r ; " , " 5╪A▌" : " & J o p f ; " , " 5╪е▄" : " & J s c r ; " , " " : " & J s e r c y ; " , " " : " & J u k c y ; " , " %" : " & K H c y ; " , " " : " & K J c y ; " , " Ъ" : " & K a p p a ; " , " 6" : " & K c e d i l ; " , " " : " & K c y ; " , " 5╪▌" : " & K f r ; " , " 5╪B▌" : " & K o p f ; " , " 5╪ж▄" : " & K s c r ; " , " 	" : " & L J c y ; " , " < " : " & l t ; " , " 9" : " & L a c u t e ; " , " Ы" : " & L a m b d a ; " , " ъ'" : " & L a n g ; " , " !" : " & l a g r a n ; " , " Ю!" : " & t w o h e a d l e f t a r r o w ; " , " =" : " & L c a r o n ; " , " ;" : " & L c e d i l ; " , " " : " & L c y ; " , " ш'" : " & l a n g l e ; " , " Р!" : " & s l a r r ; " , " ф!" : " & l a r r b ; " , " ╞!" : " & l r a r r ; " , " #" : " & l c e i l ; " , " ц'" : " & l o b r k ; " , " a)" : " & L e f t D o w n T e e V e c t o r ; " , " ├!" : " & d o w n h a r p o o n l e f t ; " , " Y)" : " & L e f t D o w n V e c t o r B a r ; " , " 
#" : " & l f l o o r ; " , " Ф!" : " & l e f t r i g h t a r r o w ; " , " N)" : " & L e f t R i g h t V e c t o r ; " , " г"" : " & d a s h v ; " , " д!" : " & m a p s t o l e f t ; " , " Z)" : " & L e f t T e e V e c t o r ; " , " ▓"" : " & v l t r i ; " , " ╧)" : " & L e f t T r i a n g l e B a r ; " , " ┤"" : " & t r i a n g l e l e f t e q ; " , " Q)" : " & L e f t U p D o w n V e c t o r ; " , " `)" : " & L e f t U p T e e V e c t o r ; " , " ┐!" : " & u p h a r p o o n l e f t ; " , " X)" : " & L e f t U p V e c t o r B a r ; " , " ╝!" : " & l h a r u ; " , " R)" : " & L e f t V e c t o r B a r ; " , " ┌"" : " & l e s s e q g t r ; " , " f"" : " & l e q q ; " , " v"" : " & l g ; " , " б*" : " & L e s s L e s s ; " , " }*" : " & l e s ; " , " r"" : " & l s i m ; " , " 5╪▌" : " & L f r ; " , " ╪"" : " & L l ; " , " ┌!" : " & l A a r r ; " , " ?" : " & L m i d o t ; " , " ї'" : " & x l a r r ; " , " ў'" : " & x h a r r ; " , " Ў'" : " & x r a r r ; " , " 5╪C▌" : " & L o p f ; " , " Щ!" : " & s w a r r o w ; " , " Ш!" : " & s e a r r o w ; " , " ░!" : " & l s h ; " , " A" : " & L s t r o k ; " , " j"" : " & l l ; " , " )" : " & M a p ; " , " " : " & M c y ; " , " _ " : " & M e d i u m S p a c e ; " , " 3!" : " & p h m m a t ; " , " 5╪▌" : " & M f r ; " , " "" : " & m p ; " , " 5╪D▌" : " & M o p f ; " , " Ь" : " & M u ; " , " 
" : " & N J c y ; " , " C" : " & N a c u t e ; " , " G" : " & N c a r o n ; " , " E" : " & N c e d i l ; " , " " : " & N c y ; " , "  " : " & Z e r o W i d t h S p a c e ; " , " \ n " : " & N e w L i n e ; " , " 5╪▌" : " & N f r ; " , " ` " : " & N o B r e a k ; " , " а " : " & n b s p ; " , " !" : " & n a t u r a l s ; " , " ь*" : " & N o t ; " , " b"" : " & n e q u i v ; " , " m"" : " & N o t C u p C a p ; " , " &"" : " & n s p a r ; " , " 	"" : " & n o t i n v a ; " , " `"" : " & n e ; " , " B"8" : " & n e s i m ; " , " "" : " & n e x i s t s ; " , " o"" : " & n g t r ; " , " q"" : " & n g e q ; " , " g"8" : " & n g e q q ; " , " k"8" : " & n G t v ; " , " y"" : " & n t g l ; " , " ~*8" : " & n g e s ; " , " u"" : " & n g s i m ; " , " N"8" : " & n b u m p ; " , " O"8" : " & n b u m p e ; " , " ъ"" : " & n t r i a n g l e l e f t ; " , " ╧)8" : " & N o t L e f t T r i a n g l e B a r ; " , " ь"" : " & n t r i a n g l e l e f t e q ; " , " n"" : " & n l t ; " , " p"" : " & n l e q ; " , " x"" : " & n t l g ; " , " j"8" : " & n L t v ; " , " }*8" : " & n l e s ; " , " t"" : " & n l s i m ; " , " в*8" : " & N o t N e s t e d G r e a t e r G r e a t e r ; " , " б*8" : " & N o t N e s t e d L e s s L e s s ; " , " А"" : " & n p r e c ; " , " п*8" : " & n p r e c e q ; " , " р"" : " & n p r c u e ; " , " "" : " & n o t n i v a ; " , " ы"" : " & n t r i a n g l e r i g h t ; " , " ╨)8" : " & N o t R i g h t T r i a n g l e B a r ; " , " э"" : " & n t r i a n g l e r i g h t e q ; " , " П"8" : " & N o t S q u a r e S u b s e t ; " , " т"" : " & n s q s u b e ; " , " Р"8" : " & N o t S q u a r e S u p e r s e t ; " , " у"" : " & n s q s u p e ; " , " В"╥ " : " & v n s u b ; " , " И"" : " & n s u b s e t e q ; " , " Б"" : " & n s u c c ; " , " ░*8" : " & n s u c c e q ; " , " с"" : " & n s c c u e ; " , " "8" : " & N o t S u c c e e d s T i l d e ; " , " Г"╥ " : " & v n s u p ; " , " Й"" : " & n s u p s e t e q ; " , " A"" : " & n s i m ; " , " D"" : " & n s i m e q ; " , " G"" : " & n c o n g ; " , " I"" : " & n a p p r o x ; " , " $"" : " & n s m i d ; " , " 5╪й▄" : " & N s c r ; " , " ╤ " : " & N t i l d e ; " , " Э" : " & N u ; " , " R" : " & O E l i g ; " , " ╙ " : " & O a c u t e ; " , " ╘ " : " & O c i r c ; " , " " : " & O c y ; " , " P" : " & O d b l a c ; " , " 5╪▌" : " & O f r ; " , " ╥ " : " & O g r a v e ; " , " L" : " & O m a c r ; " , " й" : " & o h m ; " , " Я" : " & O m i c r o n ; " , " 5╪F▌" : " & O o p f ; " , "  " : " & l d q u o ; " , "  " : " & l s q u o ; " , " T*" : " & O r ; " , " 5╪к▄" : " & O s c r ; " , " ╪ " : " & O s l a s h ; " , " ╒ " : " & O t i l d e ; " , " 7*" : " & O t i m e s ; " , " ╓ " : " & O u m l ; " , " > " : " & o l i n e ; " , " ▐#" : " & O v e r B r a c e ; " , " ┤#" : " & t b r k ; " , " ▄#" : " & O v e r P a r e n t h e s i s ; " , " "" : " & p a r t ; " , " " : " & P c y ; " , " 5╪▌" : " & P f r ; " , " ж" : " & P h i ; " , " а" : " & P i ; " , " ▒ " : " & p m ; " , " !" : " & p r i m e s ; " , " ╗*" : " & P r ; " , " z"" : " & p r e c ; " , " п*" : " & p r e c e q ; " , " |"" : " & p r e c c u r l y e q ; " , " ~"" : " & p r s i m ; " , " 3 " : " & P r i m e ; " , " "" : " & p r o d ; " , " "" : " & v p r o p ; " , " 5╪л▄" : " & P s c r ; " , " и" : " & P s i ; " , ' " ' : " & q u o t ; " , " 5╪▌" : " & Q f r ; " , " !" : " & r a t i o n a l s ; " , " 5╪м▄" : " & Q s c r ; " , " )" : " & d r b k a r o w ; " , " о " : " & r e g ; " , " T" : " & R a c u t e ; " , " ы'" : " & R a n g ; " , " а!" : " & t w o h e a d r i g h t a r r o w ; " , " )" : " & R a r r t l ; " , " X" : " & R c a r o n ; " , " V" : " & R c e d i l ; " , "  " : " & R c y ; " , " !" : " & r e a l p a r t ; " , " "" : " & n i v ; " , " ╦!" : " & l r h a r ; " , " o)" : " & d u h a r ; " , " б" : " & R h o ; " , " щ'" : " & r a n g l e ; " , " Т!" : " & s r a r r ; " , " х!" : " & r a r r b ; " , " ─!" : " & r l a r r ; " , " 	#" : " & r c e i l ; " , " ч'" : " & r o b r k ; " , " ])" : " & R i g h t D o w n T e e V e c t o r ; " , " ┬!" : " & d o w n h a r p o o n r i g h t ; " , " U)" : " & R i g h t D o w n V e c t o r B a r ; " , " #" : " & r f l o o r ; " , " в"" : " & v d a s h ; " , " ж!" : " & m a p s t o ; " , " [)" : " & R i g h t T e e V e c t o r ; " , " │"" : " & v r t r i ; " , " ╨)" : " & R i g h t T r i a n g l e B a r ; " , " ╡"" : " & t r i a n g l e r i g h t e q ; " , " O)" : " & R i g h t U p D o w n V e c t o r ; " , " \)" : " & R i g h t U p T e e V e c t o r ; " , " ╛!" : " & u p h a r p o o n r i g h t ; " , " T)" : " & R i g h t U p V e c t o r B a r ; " , " └!" : " & r i g h t h a r p o o n u p ; " , " S)" : " & R i g h t V e c t o r B a r ; " , " !" : " & r e a l s ; " , " p)" : " & R o u n d I m p l i e s ; " , " █!" : " & r A a r r ; " , " !" : " & r e a l i n e ; " , " ▒!" : " & r s h ; " , " Ї)" : " & R u l e D e l a y e d ; " , " )" : " & S H C H c y ; " , " (" : " & S H c y ; " , " ," : " & S O F T c y ; " , " Z" : " & S a c u t e ; " , " ╝*" : " & S c ; " , " `" : " & S c a r o n ; " , " ^" : " & S c e d i l ; " , " \" : " & S c i r c ; " , " !" : " & S c y ; " , " 5╪▌" : " & S f r ; " , " С!" : " & u p a r r o w ; " , " г" : " & S i g m a ; " , " "" : " & c o m p f n ; " , " 5╪J▌" : " & S o p f ; " , " "" : " & r a d i c ; " , " б%" : " & s q u a r e ; " , " У"" : " & s q c a p ; " , " П"" : " & s q s u b s e t ; " , " С"" : " & s q s u b s e t e q ; " , " Р"" : " & s q s u p s e t ; " , " Т"" : " & s q s u p s e t e q ; " , " Ф"" : " & s q c u p ; " , " 5╪о▄" : " & S s c r ; " , " ╞"" : " & s s t a r f ; " , " ╨"" : " & S u b s e t ; " , " Ж"" : " & s u b s e t e q ; " , " {"" : " & s u c c ; " , " ░*" : " & s u c c e q ; " , " }"" : " & s u c c c u r l y e q ; " , " "" : " & s u c c s i m ; " , " "" : " & s u m ; " , " ╤"" : " & S u p s e t ; " , " Г"" : " & s u p s e t ; " , " З"" : " & s u p s e t e q ; " , " ▐ " : " & T H O R N ; " , " "!" : " & t r a d e ; " , " " : " & T S H c y ; " , " &" : " & T S c y ; " , " \ t " : " & T a b ; " , " д" : " & T a u ; " , " d" : " & T c a r o n ; " , " b" : " & T c e d i l ; " , " "" : " & T c y ; " , " 5╪▌" : " & T f r ; " , " 4"" : " & t h e r e f o r e ; " , " Ш" : " & T h e t a ; " , " _ 
 " : " & T h i c k S p a c e ; " , " 	 " : " & t h i n s p ; " , " <"" : " & t h k s i m ; " , " C"" : " & s i m e q ; " , " E"" : " & c o n g ; " , " H"" : " & t h k a p ; " , " 5╪K▌" : " & T o p f ; " , " █ " : " & t d o t ; " , " 5╪п▄" : " & T s c r ; " , " f" : " & T s t r o k ; " , " ┌ " : " & U a c u t e ; " , " Я!" : " & U a r r ; " , " I)" : " & U a r r o c i r ; " , " " : " & U b r c y ; " , " l" : " & U b r e v e ; " , " █ " : " & U c i r c ; " , " #" : " & U c y ; " , " p" : " & U d b l a c ; " , " 5╪▌" : " & U f r ; " , " ┘ " : " & U g r a v e ; " , " j" : " & U m a c r ; " , _ : " & l o w b a r ; " , " ▀#" : " & U n d e r B r a c e ; " , " ╡#" : " & b b r k ; " , " ▌#" : " & U n d e r P a r e n t h e s i s ; " , " ├"" : " & x c u p ; " , " О"" : " & u p l u s ; " , " r" : " & U o g o n ; " , " 5╪L▌" : " & U o p f ; " , " )" : " & U p A r r o w B a r ; " , " ┼!" : " & u d a r r ; " , " Х!" : " & v a r r ; " , " n)" : " & u d h a r ; " , " е"" : " & p e r p ; " , " е!" : " & m a p s t o u p ; " , " Ц!" : " & n w a r r o w ; " , " Ч!" : " & n e a r r o w ; " , " ╥" : " & u p s i h ; " , " е" : " & U p s i l o n ; " , " n" : " & U r i n g ; " , " 5╪░▄" : " & U s c r ; " , " h" : " & U t i l d e ; " , " ▄ " : " & U u m l ; " , " л"" : " & V D a s h ; " , " ы*" : " & V b a r ; " , " " : " & V c y ; " , " й"" : " & V d a s h ; " , " ц*" : " & V d a s h l ; " , " ┴"" : " & x v e e ; " , "  " : " & V e r t ; " , " #"" : " & s m i d ; " , " | " : " & v e r t ; " , " X'" : " & V e r t i c a l S e p a r a t o r ; " , " @"" : " & w r e a t h ; " , " 
 " : " & h a i r s p ; " , " 5╪▌" : " & V f r ; " , " 5╪M▌" : " & V o p f ; " , " 5╪▒▄" : " & V s c r ; " , " к"" : " & V v d a s h ; " , " t" : " & W c i r c ; " , " └"" : " & x w e d g e ; " , " 5╪▌" : " & W f r ; " , " 5╪N▌" : " & W o p f ; " , " 5╪▓▄" : " & W s c r ; " , " 5╪▌" : " & X f r ; " , " Ю" : " & X i ; " , " 5╪O▌" : " & X o p f ; " , " 5╪│▄" : " & X s c r ; " , " /" : " & Y A c y ; " , " " : " & Y I c y ; " , " ." : " & Y U c y ; " , " ▌ " : " & Y a c u t e ; " , " v" : " & Y c i r c ; " , " +" : " & Y c y ; " , " 5╪▌" : " & Y f r ; " , " 5╪P▌" : " & Y o p f ; " , " 5╪┤▄" : " & Y s c r ; " , " x" : " & Y u m l ; " , " " : " & Z H c y ; " , " y" : " & Z a c u t e ; " , " }" : " & Z c a r o n ; " , " " : " & Z c y ; " , " {" : " & Z d o t ; " , " Ц" : " & Z e t a ; " , " (!" : " & z e e t r f ; " , " $!" : " & i n t e g e r s ; " , " 5╪╡▄" : " & Z s c r ; " , " с " : " & a a c u t e ; " , " " : " & a b r e v e ; " , " >"" : " & m s t p o s ; " , " >"3" : " & a c E ; " , " ?"" : " & a c d ; " , " т " : " & a c i r c ; " , " 0" : " & a c y ; " , " ц " : " & a e l i g ; " , " 5╪▌" : " & a f r ; " , " р " : " & a g r a v e ; " , " 5!" : " & a l e p h ; " , " ▒" : " & a l p h a ; " , " " : " & a m a c r ; " , " ?*" : " & a m a l g ; " , " '"" : " & w e d g e ; " , " U*" : " & a n d a n d ; " , " \*" : " & a n d d ; " , " X*" : " & a n d s l o p e ; " , " Z*" : " & a n d v ; " , "  "" : " & a n g l e ; " , " д)" : " & a n g e ; " , " !"" : " & m e a s u r e d a n g l e ; " , " и)" : " & a n g m s d a a ; " , " й)" : " & a n g m s d a b ; " , " к)" : " & a n g m s d a c ; " , " л)" : " & a n g m s d a d ; " , " м)" : " & a n g m s d a e ; " , " н)" : " & a n g m s d a f ; " , " о)" : " & a n g m s d a g ; " , " п)" : " & a n g m s d a h ; " , " "" : " & a n g r t ; " , " ╛"" : " & a n g r t v b ; " , " Э)" : " & a n g r t v b d ; " , " """ : " & a n g s p h ; " , " |#" : " & a n g z a r r ; " , " " : " & a o g o n ; " , " 5╪R▌" : " & a o p f ; " , " p*" : " & a p E ; " , " o*" : " & a p a c i r ; " , " J"" : " & a p p r o x e q ; " , " K"" : " & a p i d ; " , " ' " : " & a p o s ; " , " х " : " & a r i n g ; " , " 5╪╢▄" : " & a s c r ; " , " * " : " & m i d a s t ; " , " у " : " & a t i l d e ; " , " ф " : " & a u m l ; " , " *" : " & a w i n t ; " , " э*" : " & b N o t ; " , " L"" : " & b c o n g ; " , " Ў" : " & b e p s i ; " , " 5 " : " & b p r i m e ; " , " ="" : " & b s i m ; " , " ═"" : " & b s i m e ; " , " ╜"" : " & b a r v e e ; " , " #" : " & b a r w e d g e ; " , " ╢#" : " & b b r k t b r k ; " , " 1" : " & b c y ; " , "  " : " & l d q u o r ; " , " ░)" : " & b e m p t y v ; " , " ▓" : " & b e t a ; " , " 6!" : " & b e t h ; " , " l"" : " & t w i x t ; " , " 5╪▌" : " & b f r ; " , " я%" : " & x c i r c ; " , "  *" : " & x o d o t ; " , " *" : " & x o p l u s ; " , " *" : " & x o t i m e ; " , " *" : " & x s q c u p ; " , " &" : " & s t a r f ; " , " ╜%" : " & x d t r i ; " , " │%" : " & x u t r i ; " , " *" : " & x u p l u s ; " , " )" : " & r b a r r ; " , " ы)" : " & l o z f ; " , " ┤%" : " & u t r i f ; " , " ╛%" : " & d t r i f ; " , " ┬%" : " & l t r i f ; " , " ╕%" : " & r t r i f ; " , " #$" : " & b l a n k ; " , " Т%" : " & b l k 1 2 ; " , " С%" : " & b l k 1 4 ; " , " У%" : " & b l k 3 4 ; " , " И%" : " & b l o c k ; " , " = х " : " & b n e ; " , " a"х " : " & b n e q u i v ; " , " #" : " & b n o t ; " , " 5╪S▌" : " & b o p f ; " , " ╚"" : " & b o w t i e ; " , " W%" : " & b o x D L ; " , " T%" : " & b o x D R ; " , " V%" : " & b o x D l ; " , " S%" : " & b o x D r ; " , " P%" : " & b o x H ; " , " f%" : " & b o x H D ; " , " i%" : " & b o x H U ; " , " d%" : " & b o x H d ; " , " g%" : " & b o x H u ; " , " ]%" : " & b o x U L ; " , " Z%" : " & b o x U R ; " , " \%" : " & b o x U l ; " , " Y%" : " & b o x U r ; " , " Q%" : " & b o x V ; " , " l%" : " & b o x V H ; " , " c%" : " & b o x V L ; " , " `%" : " & b o x V R ; " , " k%" : " & b o x V h ; " , " b%" : " & b o x V l ; " , " _%" : " & b o x V r ; " , " ╔)" : " & b o x b o x ; " , " U%" : " & b o x d L ; " , " R%" : " & b o x d R ; " , " %" : " & b o x d l ; " , " %" : " & b o x d r ; " , " e%" : " & b o x h D ; " , " h%" : " & b o x h U ; " , " ,%" : " & b o x h d ; " , " 4%" : " & b o x h u ; " , " Я"" : " & m i n u s b ; " , " Ю"" : " & p l u s b ; " , " а"" : " & t i m e s b ; " , " [%" : " & b o x u L ; " , " X%" : " & b o x u R ; " , " %" : " & b o x u l ; " , " %" : " & b o x u r ; " , " %" : " & b o x v ; " , " j%" : " & b o x v H ; " , " a%" : " & b o x v L ; " , " ^%" : " & b o x v R ; " , " <%" : " & b o x v h ; " , " $%" : " & b o x v l ; " , " %" : " & b o x v r ; " , " ж " : " & b r v b a r ; " , " 5╪╖▄" : " & b s c r ; " , " O " : " & b s e m i ; " , " \ \ " : " & b s o l ; " , " ┼)" : " & b s o l b ; " , " ╚'" : " & b s o l h s u b ; " , " " " : " & b u l l e t ; " , " о*" : " & b u m p E ; " , " " : " & c a c u t e ; " , " )"" : " & c a p ; " , " D*" : " & c a p a n d ; " , " I*" : " & c a p b r c u p ; " , " K*" : " & c a p c a p ; " , " G*" : " & c a p c u p ; " , " @*" : " & c a p d o t ; " , " )" ■" : " & c a p s ; " , " A " : " & c a r e t ; " , " M*" : " & c c a p s ; " , " " : " & c c a r o n ; " , " ч " : " & c c e d i l ; " , " 	" : " & c c i r c ; " , " L*" : " & c c u p s ; " , " P*" : " & c c u p s s m ; " , " " : " & c d o t ; " , " ▓)" : " & c e m p t y v ; " , " в " : " & c e n t ; " , " 5╪ ▌" : " & c f r ; " , " G" : " & c h c y ; " , " '" : " & c h e c k m a r k ; " , " ╟" : " & c h i ; " , " ╦%" : " & c i r ; " , " ├)" : " & c i r E ; " , " ╞" : " & c i r c ; " , " W"" : " & c i r e ; " , " ║!" : " & o l a r r ; " , " ╗!" : " & o r a r r ; " , " ╚$" : " & o S ; " , " Ы"" : " & o a s t ; " , " Ъ"" : " & o c i r ; " , " Э"" : " & o d a s h ; " , " *" : " & c i r f n i n t ; " , " я*" : " & c i r m i d ; " , " ┬)" : " & c i r s c i r ; " , " c&" : " & c l u b s u i t ; " , " : " : " & c o l o n ; " , " , " : " & c o m m a ; " , " @ " : " & c o m m a t ; " , " "" : " & c o m p l e m e n t ; " , " m*" : " & c o n g d o t ; " , " 5╪T▌" : " & c o p f ; " , " !" : " & c o p y s r ; " , " ╡!" : " & c r a r r ; " , " '" : " & c r o s s ; " , " 5╪╕▄" : " & c s c r ; " , " ╧*" : " & c s u b ; " , " ╤*" : " & c s u b e ; " , " ╨*" : " & c s u p ; " , " ╥*" : " & c s u p e ; " , " я"" : " & c t d o t ; " , " 8)" : " & c u d a r r l ; " , " 5)" : " & c u d a r r r ; " , " ▐"" : " & c u r l y e q p r e c ; " , " ▀"" : " & c u r l y e q s u c c ; " , " ╢!" : " & c u r v e a r r o w l e f t ; " , " =)" : " & c u l a r r p ; " , " *"" : " & c u p ; " , " H*" : " & c u p b r c a p ; " , " F*" : " & c u p c a p ; " , " J*" : " & c u p c u p ; " , " Н"" : " & c u p d o t ; " , " E*" : " & c u p o r ; " , " *" ■" : " & c u p s ; " , " ╖!" : " & c u r v e a r r o w r i g h t ; " , " <)" : " & c u r a r r m ; " , " ╬"" : " & c u v e e ; " , " ╧"" : " & c u w e d ; " , " д " : " & c u r r e n ; " , " 1"" : " & c w i n t ; " , " -#" : " & c y l c t y ; " , " e)" : " & d H a r ; " , "   " : " & d a g g e r ; " , " 8!" : " & d a l e t h ; " , "  " : " & h y p h e n ; " , " )" : " & r B a r r ; " , " " : " & d c a r o n ; " , " 4" : " & d c y ; " , " ╩!" : " & d o w n d o w n a r r o w s ; " , " w*" : " & e D D o t ; " , " ░ " : " & d e g ; " , " ┤" : " & d e l t a ; " , " ▒)" : " & d e m p t y v ; " , " )" : " & d f i s h t ; " , " 5╪!▌" : " & d f r ; " , " f&" : " & d i a m s ; " , " ▌" : " & g a m m a d ; " , " Є"" : " & d i s i n ; " , " ў " : " & d i v i d e ; " , " ╟"" : " & d i v o n x ; " , " R" : " & d j c y ; " , " #" : " & l l c o r n e r ; " , " #" : " & d l c r o p ; " , $ : " & d o l l a r ; " , " 5╪U▌" : " & d o p f ; " , " Q"" : " & e D o t ; " , " 8"" : " & m i n u s d ; " , " "" : " & p l u s d o ; " , " б"" : " & s d o t b ; " , " #" : " & l r c o r n e r ; " , " #" : " & d r c r o p ; " , " 5╪╣▄" : " & d s c r ; " , " U" : " & d s c y ; " , " Ў)" : " & d s o l ; " , " " : " & d s t r o k ; " , " ё"" : " & d t d o t ; " , " ┐%" : " & t r i a n g l e d o w n ; " , " ж)" : " & d w a n g l e ; " , " _" : " & d z c y ; " , "  '" : " & d z i g r a r r ; " , " щ " : " & e a c u t e ; " , " n*" : " & e a s t e r ; " , " " : " & e c a r o n ; " , " V"" : " & e q c i r c ; " , " ъ " : " & e c i r c ; " , " U"" : " & e q c o l o n ; " , " M" : " & e c y ; " , " " : " & e d o t ; " , " R"" : " & f a l l i n g d o t s e q ; " , " 5╪"▌" : " & e f r ; " , " Ъ*" : " & e g ; " , " ш " : " & e g r a v e ; " , " Ц*" : " & e q s l a n t g t r ; " , " Ш*" : " & e g s d o t ; " , " Щ*" : " & e l ; " , " ч#" : " & e l i n t e r s ; " , " !" : " & e l l ; " , " Х*" : " & e q s l a n t l e s s ; " , " Ч*" : " & e l s d o t ; " , " " : " & e m a c r ; " , " "" : " & v a r n o t h i n g ; " , "  " : " & e m s p 1 3 ; " , "  " : " & e m s p 1 4 ; " , "  " : " & e m s p ; " , " K" : " & e n g ; " , "  " : " & e n s p ; " , " " : " & e o g o n ; " , " 5╪V▌" : " & e o p f ; " , " ╒"" : " & e p a r ; " , " у)" : " & e p a r s l ; " , " q*" : " & e p l u s ; " , " ╡" : " & e p s i l o n ; " , " ї" : " & v a r e p s i l o n ; " , " = " : " & e q u a l s ; " , " _"" : " & q u e s t e q ; " , " x*" : " & e q u i v D D ; " , " х)" : " & e q v p a r s l ; " , " S"" : " & r i s i n g d o t s e q ; " , " q)" : " & e r a r r ; " , " /!" : " & e s c r ; " , " ╖" : " & e t a ; " , " Ё " : " & e t h ; " , " ы " : " & e u m l ; " , " м " : " & e u r o ; " , " ! " : " & e x c l ; " , " D" : " & f c y ; " , " @&" : " & f e m a l e ; " , " √" : " & f f i l i g ; " , "  √" : " & f f l i g ; " , " √" : " & f f l l i g ; " , " 5╪#▌" : " & f f r ; " , " √" : " & f i l i g ; " , f j : " & f j l i g ; " , " m&" : " & f l a t ; " , " √" : " & f l l i g ; " , " ▒%" : " & f l t n s ; " , " Т" : " & f n o f ; " , " 5╪W▌" : " & f o p f ; " , " ╘"" : " & p i t c h f o r k ; " , " ┘*" : " & f o r k v ; " , " *" : " & f p a r t i n t ; " , " ╜ " : " & h a l f ; " , " S!" : " & f r a c 1 3 ; " , " ╝ " : " & f r a c 1 4 ; " , " U!" : " & f r a c 1 5 ; " , " Y!" : " & f r a c 1 6 ; " , " [!" : " & f r a c 1 8 ; " , " T!" : " & f r a c 2 3 ; " , " V!" : " & f r a c 2 5 ; " , " ╛ " : " & f r a c 3 4 ; " , " W!" : " & f r a c 3 5 ; " , " \!" : " & f r a c 3 8 ; " , " X!" : " & f r a c 4 5 ; " , " Z!" : " & f r a c 5 6 ; " , " ]!" : " & f r a c 5 8 ; " , " ^!" : " & f r a c 7 8 ; " , " D " : " & f r a s l ; " , " "#" : " & s f r o w n ; " , " 5╪╗▄" : " & f s c r ; " , " М*" : " & g t r e q q l e s s ; " , " ї" : " & g a c u t e ; " , " │" : " & g a m m a ; " , " Ж*" : " & g t r a p p r o x ; " , " " : " & g b r e v e ; " , " " : " & g c i r c ; " , " 3" : " & g c y ; " , " !" : " & g d o t ; " , " й*" : " & g e s c c ; " , " А*" : " & g e s d o t ; " , " В*" : " & g e s d o t o ; " , " Д*" : " & g e s d o t o l ; " , " █" ■" : " & g e s l ; " , " Ф*" : " & g e s l e s ; " , " 5╪$▌" : " & g f r ; " , " 7!" : " & g i m e l ; " , " S" : " & g j c y ; " , " Т*" : " & g l E ; " , " е*" : " & g l a ; " , " д*" : " & g l j ; " , " i"" : " & g n e q q ; " , " К*" : " & g n a p p r o x ; " , " И*" : " & g n e q ; " , " ч"" : " & g n s i m ; " , " 5╪X▌" : " & g o p f ; " , " 
!" : " & g s c r ; " , " О*" : " & g s i m e ; " , " Р*" : " & g s i m l ; " , " з*" : " & g t c c ; " , " z*" : " & g t c i r ; " , " ╫"" : " & g t r d o t ; " , " Х)" : " & g t l P a r ; " , " |*" : " & g t q u e s t ; " , " x)" : " & g t r a r r ; " , " i" ■" : " & g v n E ; " , " J" : " & h a r d c y ; " , " H)" : " & h a r r c i r ; " , " н!" : " & l e f t r i g h t s q u i g a r r o w ; " , " !" : " & p l a n k v ; " , " %" : " & h c i r c ; " , " e&" : " & h e a r t s u i t ; " , " & " : " & m l d r ; " , " ╣"" : " & h e r c o n ; " , " 5╪%▌" : " & h f r ; " , " %)" : " & s e a r h k ; " , " &)" : " & s w a r h k ; " , "  !" : " & h o a r r ; " , " ;"" : " & h o m t h t ; " , " й!" : " & l a r r h k ; " , " к!" : " & r a r r h k ; " , " 5╪Y▌" : " & h o p f ; " , "  " : " & h o r b a r ; " , " 5╪╜▄" : " & h s c r ; " , " '" : " & h s t r o k ; " , " C " : " & h y b u l l ; " , " э " : " & i a c u t e ; " , " ю " : " & i c i r c ; " , " 8" : " & i c y ; " , " 5" : " & i e c y ; " , " б " : " & i e x c l ; " , " 5╪&▌" : " & i f r ; " , " ь " : " & i g r a v e ; " , " *" : " & q i n t ; " , " -"" : " & t i n t ; " , " ▄)" : " & i i n f i n ; " , " )!" : " & i i o t a ; " , " 3" : " & i j l i g ; " , " +" : " & i m a c r ; " , " 1" : " & i n o d o t ; " , " ╖"" : " & i m o f ; " , " ╡" : " & i m p e d ; " , " !" : " & i n c a r e ; " , " "" : " & i n f i n ; " , " ▌)" : " & i n f i n t i e ; " , " ║"" : " & i n t e r c a l ; " , " *" : " & i n t l a r h k ; " , " <*" : " & i p r o d ; " , " Q" : " & i o c y ; " , " /" : " & i o g o n ; " , " 5╪Z▌" : " & i o p f ; " , " ╣" : " & i o t a ; " , " ┐ " : " & i q u e s t ; " , " 5╪╛▄" : " & i s c r ; " , " ∙"" : " & i s i n E ; " , " ї"" : " & i s i n d o t ; " , " Ї"" : " & i s i n s ; " , " є"" : " & i s i n s v ; " , " )" : " & i t i l d e ; " , " V" : " & i u k c y ; " , " я " : " & i u m l ; " , " 5" : " & j c i r c ; " , " 9" : " & j c y ; " , " 5╪'▌" : " & j f r ; " , " 7" : " & j m a t h ; " , " 5╪[▌" : " & j o p f ; " , " 5╪┐▄" : " & j s c r ; " , " X" : " & j s e r c y ; " , " T" : " & j u k c y ; " , " ║" : " & k a p p a ; " , " Ё" : " & v a r k a p p a ; " , " 7" : " & k c e d i l ; " , " :" : " & k c y ; " , " 5╪(▌" : " & k f r ; " , " 8" : " & k g r e e n ; " , " E" : " & k h c y ; " , " \" : " & k j c y ; " , " 5╪\▌" : " & k o p f ; " , " 5╪└▄" : " & k s c r ; " , " )" : " & l A t a i l ; " , " )" : " & l B a r r ; " , " Л*" : " & l e s s e q q g t r ; " , " b)" : " & l H a r ; " , " :" : " & l a c u t e ; " , " ┤)" : " & l a e m p t y v ; " , " ╗" : " & l a m b d a ; " , " С)" : " & l a n g d ; " , " Е*" : " & l e s s a p p r o x ; " , " л " : " & l a q u o ; " , " )" : " & l a r r b f s ; " , " )" : " & l a r r f s ; " , " л!" : " & l o o p a r r o w l e f t ; " , " 9)" : " & l a r r p l ; " , " s)" : " & l a r r s i m ; " , " в!" : " & l e f t a r r o w t a i l ; " , " л*" : " & l a t ; " , " )" : " & l a t a i l ; " , " н*" : " & l a t e ; " , " н* ■" : " & l a t e s ; " , " )" : " & l b a r r ; " , " r'" : " & l b b r k ; " , " { " : " & l c u b ; " , " [ " : " & l s q b ; " , " Л)" : " & l b r k e ; " , " П)" : " & l b r k s l d ; " , " Н)" : " & l b r k s l u ; " , " >" : " & l c a r o n ; " , " <" : " & l c e d i l ; " , " ;" : " & l c y ; " , " 6)" : " & l d c a ; " , " g)" : " & l d r d h a r ; " , " K)" : " & l d r u s h a r ; " , " ▓!" : " & l d s h ; " , " d"" : " & l e q ; " , " ╟!" : " & l l a r r ; " , " ╦"" : " & l t h r e e ; " , " и*" : " & l e s c c ; " , " *" : " & l e s d o t ; " , " Б*" : " & l e s d o t o ; " , " Г*" : " & l e s d o t o r ; " , " ┌" ■" : " & l e s g ; " , " У*" : " & l e s g e s ; " , " ╓"" : " & l t d o t ; " , " |)" : " & l f i s h t ; " , " 5╪)▌" : " & l f r ; " , " С*" : " & l g E ; " , " j)" : " & l h a r u l ; " , " Д%" : " & l h b l k ; " , " Y" : " & l j c y ; " , " k)" : " & l l h a r d ; " , " ·%" : " & l l t r i ; " , " @" : " & l m i d o t ; " , " ░#" : " & l m o u s t a c h e ; " , " h"" : " & l n e q q ; " , " Й*" : " & l n a p p r o x ; " , " З*" : " & l n e q ; " , " ц"" : " & l n s i m ; " , " ь'" : " & l o a n g ; " , " ¤!" : " & l o a r r ; " , " №'" : " & x m a p ; " , " м!" : " & r a r r l p ; " , " Е)" : " & l o p a r ; " , " 5╪]▌" : " & l o p f ; " , " -*" : " & l o p l u s ; " , " 4*" : " & l o t i m e s ; " , " "" : " & l o w a s t ; " , " ╩%" : " & l o z e n g e ; " , " ( " : " & l p a r ; " , " У)" : " & l p a r l t ; " , " m)" : " & l r h a r d ; " , "  " : " & l r m ; " , " ┐"" : " & l r t r i ; " , " 9 " : " & l s a q u o ; " , " 5╪┴▄" : " & l s c r ; " , " Н*" : " & l s i m e ; " , " П*" : " & l s i m g ; " , "  " : " & s b q u o ; " , " B" : " & l s t r o k ; " , " ж*" : " & l t c c ; " , " y*" : " & l t c i r ; " , " ╔"" : " & l t i m e s ; " , " v)" : " & l t l a r r ; " , " {*" : " & l t q u e s t ; " , " Ц)" : " & l t r P a r ; " , " ├%" : " & t r i a n g l e l e f t ; " , " J)" : " & l u r d s h a r ; " , " f)" : " & l u r u h a r ; " , " h" ■" : " & l v n E ; " , " :"" : " & m D D o t ; " , " п " : " & s t r n s ; " , " B&" : " & m a l e ; " , "  '" : " & m a l t e s e ; " , " о%" : " & m a r k e r ; " , " )*" : " & m c o m m a ; " , " <" : " & m c y ; " , "  " : " & m d a s h ; " , " 5╪*▌" : " & m f r ; " , " '!" : " & m h o ; " , " ╡ " : " & m i c r o ; " , " Ё*" : " & m i d c i r ; " , " "" : " & m i n u s ; " , " **" : " & m i n u s d u ; " , " █*" : " & m l c p ; " , " з"" : " & m o d e l s ; " , " 5╪^▌" : " & m o p f ; " , " 5╪┬▄" : " & m s c r ; " , " ╝" : " & m u ; " , " ╕"" : " & m u m a p ; " , " ┘"8" : " & n G g ; " , " k"╥ " : " & n G t ; " , " ═!" : " & n l A r r ; " , " ╬!" : " & n h A r r ; " , " ╪"8" : " & n L l ; " , " j"╥ " : " & n L t ; " , " ╧!" : " & n r A r r ; " , " п"" : " & n V D a s h ; " , " о"" : " & n V d a s h ; " , " D" : " & n a c u t e ; " , "  "╥ " : " & n a n g ; " , " p*8" : " & n a p E ; " , " K"8" : " & n a p i d ; " , " I" : " & n a p o s ; " , " n&" : " & n a t u r a l ; " , " C*" : " & n c a p ; " , " H" : " & n c a r o n ; " , " F" : " & n c e d i l ; " , " m*8" : " & n c o n g d o t ; " , " B*" : " & n c u p ; " , " =" : " & n c y ; " , "  " : " & n d a s h ; " , " ╫!" : " & n e A r r ; " , " $)" : " & n e a r h k ; " , " P"8" : " & n e d o t ; " , " ()" : " & t o e a ; " , " 5╪+▌" : " & n f r ; " , " о!" : " & n l e f t r i g h t a r r o w ; " , " Є*" : " & n h p a r ; " , " №"" : " & n i s ; " , " ·"" : " & n i s d ; " , " Z" : " & n j c y ; " , " f"8" : " & n l e q q ; " , " Ъ!" : " & n l e f t a r r o w ; " , " % " : " & n l d r ; " , " 5╪_▌" : " & n o p f ; " , " м " : " & n o t ; " , " ∙"8" : " & n o t i n E ; " , " ї"8" : " & n o t i n d o t ; " , " ў"" : " & n o t i n v b ; " , " Ў"" : " & n o t i n v c ; " , " ■"" : " & n o t n i v b ; " , " ¤"" : " & n o t n i v c ; " , " ¤*х " : " & n p a r s l ; " , " "8" : " & n p a r t ; " , " *" : " & n p o l i n t ; " , " Ы!" : " & n r i g h t a r r o w ; " , " 3)8" : " & n r a r r c ; " , " Э!8" : " & n r a r r w ; " , " 5╪├▄" : " & n s c r ; " , " Д"" : " & n s u b ; " , " ┼*8" : " & n s u b s e t e q q ; " , " Е"" : " & n s u p ; " , " ╞*8" : " & n s u p s e t e q q ; " , " ё " : " & n t i l d e ; " , " ╜" : " & n u ; " , " # " : " & n u m ; " , " !" : " & n u m e r o ; " , "  " : " & n u m s p ; " , " н"" : " & n v D a s h ; " , " )" : " & n v H a r r ; " , " M"╥ " : " & n v a p ; " , " м"" : " & n v d a s h ; " , " e"╥ " : " & n v g e ; " , " > ╥ " : " & n v g t ; " , " ▐)" : " & n v i n f i n ; " , " )" : " & n v l A r r ; " , " d"╥ " : " & n v l e ; " , " < ╥ " : " & n v l t ; " , " ┤"╥ " : " & n v l t r i e ; " , " )" : " & n v r A r r ; " , " ╡"╥ " : " & n v r t r i e ; " , " <"╥ " : " & n v s i m ; " , " ╓!" : " & n w A r r ; " , " #)" : " & n w a r h k ; " , " ')" : " & n w n e a r ; " , " є " : " & o a c u t e ; " , " Ї " : " & o c i r c ; " , " >" : " & o c y ; " , " Q" : " & o d b l a c ; " , " 8*" : " & o d i v ; " , " ╝)" : " & o d s o l d ; " , " S" : " & o e l i g ; " , " ┐)" : " & o f c i r ; " , " 5╪,▌" : " & o f r ; " , " █" : " & o g o n ; " , " Є " : " & o g r a v e ; " , " ┴)" : " & o g t ; " , " ╡)" : " & o h b a r ; " , " ╛)" : " & o l c i r ; " , " ╗)" : " & o l c r o s s ; " , " └)" : " & o l t ; " , " M" : " & o m a c r ; " , " ╔" : " & o m e g a ; " , " ┐" : " & o m i c r o n ; " , " ╢)" : " & o m i d ; " , " 5╪`▌" : " & o o p f ; " , " ╖)" : " & o p a r ; " , " ╣)" : " & o p e r p ; " , " ("" : " & v e e ; " , " ]*" : " & o r d ; " , " 4!" : " & o s c r ; " , " к " : " & o r d f ; " , " ║ " : " & o r d m ; " , " ╢"" : " & o r i g o f ; " , " V*" : " & o r o r ; " , " W*" : " & o r s l o p e ; " , " [*" : " & o r v ; " , " ° " : " & o s l a s h ; " , " Ш"" : " & o s o l ; " , " ї " : " & o t i l d e ; " , " 6*" : " & o t i m e s a s ; " , " Ў " : " & o u m l ; " , " =#" : " & o v b a r ; " , " ╢ " : " & p a r a ; " , " є*" : " & p a r s i m ; " , " ¤*" : " & p a r s l ; " , " ?" : " & p c y ; " , " % " : " & p e r c n t ; " , " . " : " & p e r i o d ; " , " 0 " : " & p e r m i l ; " , " 1 " : " & p e r t e n k ; " , " 5╪-▌" : " & p f r ; " , " ╞" : " & p h i ; " , " ╒" : " & v a r p h i ; " , " &" : " & p h o n e ; " , " └" : " & p i ; " , " ╓" : " & v a r p i ; " , " !" : " & p l a n c k h ; " , " + " : " & p l u s ; " , " #*" : " & p l u s a c i r ; " , " "*" : " & p l u s c i r ; " , " %*" : " & p l u s d u ; " , " r*" : " & p l u s e ; " , " &*" : " & p l u s s i m ; " , " '*" : " & p l u s t w o ; " , " *" : " & p o i n t i n t ; " , " 5╪a▌" : " & p o p f ; " , " г " : " & p o u n d ; " , " │*" : " & p r E ; " , " ╖*" : " & p r e c a p p r o x ; " , " ╣*" : " & p r n a p ; " , " ╡*" : " & p r n E ; " , " ш"" : " & p r n s i m ; " , " 2 " : " & p r i m e ; " , " .#" : " & p r o f a l a r ; " , " #" : " & p r o f l i n e ; " , " #" : " & p r o f s u r f ; " , " ░"" : " & p r u r e l ; " , " 5╪┼▄" : " & p s c r ; " , " ╚" : " & p s i ; " , "  " : " & p u n c s p ; " , " 5╪.▌" : " & q f r ; " , " 5╪b▌" : " & q o p f ; " , " W " : " & q p r i m e ; " , " 5╪╞▄" : " & q s c r ; " , " *" : " & q u a t i n t ; " , " ? " : " & q u e s t ; " , " )" : " & r A t a i l ; " , " d)" : " & r H a r ; " , " ="1" : " & r a c e ; " , " U" : " & r a c u t e ; " , " │)" : " & r a e m p t y v ; " , " Т)" : " & r a n g d ; " , " е)" : " & r a n g e ; " , " ╗ " : " & r a q u o ; " , " u)" : " & r a r r a p ; " , "  )" : " & r a r r b f s ; " , " 3)" : " & r a r r c ; " , " )" : " & r a r r f s ; " , " E)" : " & r a r r p l ; " , " t)" : " & r a r r s i m ; " , " г!" : " & r i g h t a r r o w t a i l ; " , " Э!" : " & r i g h t s q u i g a r r o w ; " , " )" : " & r a t a i l ; " , " 6"" : " & r a t i o ; " , " s'" : " & r b b r k ; " , " } " : " & r c u b ; " , " ] " : " & r s q b ; " , " М)" : " & r b r k e ; " , " О)" : " & r b r k s l d ; " , " Р)" : " & r b r k s l u ; " , " Y" : " & r c a r o n ; " , " W" : " & r c e d i l ; " , " @" : " & r c y ; " , " 7)" : " & r d c a ; " , " i)" : " & r d l d h a r ; " , " │!" : " & r d s h ; " , " н%" : " & r e c t ; " , " })" : " & r f i s h t ; " , " 5╪/▌" : " & r f r ; " , " l)" : " & r h a r u l ; " , " ┴" : " & r h o ; " , " ё" : " & v a r r h o ; " , " ╔!" : " & r r a r r ; " , " ╠"" : " & r t h r e e ; " , " ┌" : " & r i n g ; " , "  " : " & r l m ; " , " ▒#" : " & r m o u s t a c h e ; " , " ю*" : " & r n m i d ; " , " э'" : " & r o a n g ; " , " ■!" : " & r o a r r ; " , " Ж)" : " & r o p a r ; " , " 5╪c▌" : " & r o p f ; " , " .*" : " & r o p l u s ; " , " 5*" : " & r o t i m e s ; " , " ) " : " & r p a r ; " , " Ф)" : " & r p a r g t ; " , " *" : " & r p p o l i n t ; " , " : " : " & r s a q u o ; " , " 5╪╟▄" : " & r s c r ; " , " ╩"" : " & r t i m e s ; " , " ╣%" : " & t r i a n g l e r i g h t ; " , " ╬)" : " & r t r i l t r i ; " , " h)" : " & r u l u h a r ; " , " !" : " & r x ; " , " [" : " & s a c u t e ; " , " ┤*" : " & s c E ; " , " ╕*" : " & s u c c a p p r o x ; " , " a" : " & s c a r o n ; " , " _" : " & s c e d i l ; " , " ]" : " & s c i r c ; " , " ╢*" : " & s u c c n e q q ; " , " ║*" : " & s u c c n a p p r o x ; " , " щ"" : " & s u c c n s i m ; " , " *" : " & s c p o l i n t ; " , " A" : " & s c y ; " , " ┼"" : " & s d o t ; " , " f*" : " & s d o t e ; " , " ╪!" : " & s e A r r ; " , " з " : " & s e c t ; " , " ; " : " & s e m i ; " , " ))" : " & t o s a ; " , " 6'" : " & s e x t ; " , " 5╪0▌" : " & s f r ; " , " o&" : " & s h a r p ; " , " I" : " & s h c h c y ; " , " H" : " & s h c y ; " , " н " : " & s h y ; " , " ├" : " & s i g m a ; " , " ┬" : " & v a r s i g m a ; " , " j*" : " & s i m d o t ; " , " Ю*" : " & s i m g ; " , " а*" : " & s i m g E ; " , " Э*" : " & s i m l ; " , " Я*" : " & s i m l E ; " , " F"" : " & s i m n e ; " , " $*" : " & s i m p l u s ; " , " r)" : " & s i m r a r r ; " , " 3*" : " & s m a s h p ; " , " ф)" : " & s m e p a r s l ; " , " ##" : " & s s m i l e ; " , " к*" : " & s m t ; " , " м*" : " & s m t e ; " , " м* ■" : " & s m t e s ; " , " L" : " & s o f t c y ; " , " / " : " & s o l ; " , " ─)" : " & s o l b ; " , " ?#" : " & s o l b a r ; " , " 5╪d▌" : " & s o p f ; " , " `&" : " & s p a d e s u i t ; " , " У" ■" : " & s q c a p s ; " , " Ф" ■" : " & s q c u p s ; " , " 5╪╚▄" : " & s s c r ; " , " &" : " & s t a r ; " , " В"" : " & s u b s e t ; " , " ┼*" : " & s u b s e t e q q ; " , " ╜*" : " & s u b d o t ; " , " ├*" : " & s u b e d o t ; " , " ┴*" : " & s u b m u l t ; " , " ╦*" : " & s u b s e t n e q q ; " , " К"" : " & s u b s e t n e q ; " , " ┐*" : " & s u b p l u s ; " , " y)" : " & s u b r a r r ; " , " ╟*" : " & s u b s i m ; " , " ╒*" : " & s u b s u b ; " , " ╙*" : " & s u b s u p ; " , " j&" : " & s u n g ; " , " ╣ " : " & s u p 1 ; " , " ▓ " : " & s u p 2 ; " , " │ " : " & s u p 3 ; " , " ╞*" : " & s u p s e t e q q ; " , " ╛*" : " & s u p d o t ; " , " ╪*" : " & s u p d s u b ; " , " ─*" : " & s u p e d o t ; " , " ╔'" : " & s u p h s o l ; " , " ╫*" : " & s u p h s u b ; " , " {)" : " & s u p l a r r ; " , " ┬*" : " & s u p m u l t ; " , " ╠*" : " & s u p s e t n e q q ; " , " Л"" : " & s u p s e t n e q ; " , " └*" : " & s u p p l u s ; " , " ╚*" : " & s u p s i m ; " , " ╘*" : " & s u p s u b ; " , " ╓*" : " & s u p s u p ; " , " ┘!" : " & s w A r r ; " , " *)" : " & s w n w a r ; " , " ▀ " : " & s z l i g ; " , " #" : " & t a r g e t ; " , " ─" : " & t a u ; " , " e" : " & t c a r o n ; " , " c" : " & t c e d i l ; " , " B" : " & t c y ; " , " #" : " & t e l r e c ; " , " 5╪1▌" : " & t f r ; " , " ╕" : " & t h e t a ; " , " ╤" : " & v a r t h e t a ; " , " ■ " : " & t h o r n ; " , " ╫ " : " & t i m e s ; " , " 1*" : " & t i m e s b a r ; " , " 0*" : " & t i m e s d ; " , " 6#" : " & t o p b o t ; " , " ё*" : " & t o p c i r ; " , " 5╪e▌" : " & t o p f ; " , " ┌*" : " & t o p f o r k ; " , " 4 " : " & t p r i m e ; " , " ╡%" : " & u t r i ; " , " \"" : " & t r i e ; " , " ь%" : " & t r i d o t ; " , " :*" : " & t r i m i n u s ; " , " 9*" : " & t r i p l u s ; " , " ═)" : " & t r i s b ; " , " ;*" : " & t r i t i m e ; " , " т#" : " & t r p e z i u m ; " , " 5╪╔▄" : " & t s c r ; " , " F" : " & t s c y ; " , " [" : " & t s h c y ; " , " g" : " & t s t r o k ; " , " c)" : " & u H a r ; " , " · " : " & u a c u t e ; " , " ^" : " & u b r c y ; " , " m" : " & u b r e v e ; " , " √ " : " & u c i r c ; " , " C" : " & u c y ; " , " q" : " & u d b l a c ; " , " ~)" : " & u f i s h t ; " , " 5╪2▌" : " & u f r ; " , " ∙ " : " & u g r a v e ; " , " А%" : " & u h b l k ; " , " #" : " & u l c o r n e r ; " , " #" : " & u l c r o p ; " , " °%" : " & u l t r i ; " , " k" : " & u m a c r ; " , " s" : " & u o g o n ; " , " 5╪f▌" : " & u o p f ; " , " ┼" : " & u p s i l o n ; " , " ╚!" : " & u u a r r ; " , " #" : " & u r c o r n e r ; " , " #" : " & u r c r o p ; " , " o" : " & u r i n g ; " , " ∙%" : " & u r t r i ; " , " 5╪╩▄" : " & u s c r ; " , " Ё"" : " & u t d o t ; " , " i" : " & u t i l d e ; " , " № " : " & u u m l ; " , " з)" : " & u w a n g l e ; " , " ш*" : " & v B a r ; " , " щ*" : " & v B a r v ; " , " Ь)" : " & v a n g r t ; " , " К" ■" : " & v s u b n e ; " , " ╦* ■" : " & v s u b n E ; " , " Л" ■" : " & v s u p n e ; " , " ╠* ■" : " & v s u p n E ; " , " 2" : " & v c y ; " , " ╗"" : " & v e e b a r ; " , " Z"" : " & v e e e q ; " , " ю"" : " & v e l l i p ; " , " 5╪3▌" : " & v f r ; " , " 5╪g▌" : " & v o p f ; " , " 5╪╦▄" : " & v s c r ; " , " Ъ)" : " & v z i g z a g ; " , " u" : " & w c i r c ; " , " _*" : " & w e d b a r ; " , " Y"" : " & w e d g e q ; " , " !" : " & w p ; " , " 5╪4▌" : " & w f r ; " , " 5╪h▌" : " & w o p f ; " , " 5╪╠▄" : " & w s c r ; " , " 5╪5▌" : " & x f r ; " , " ╛" : " & x i ; " , " √"" : " & x n i s ; " , " 5╪i▌" : " & x o p f ; " , " 5╪═▄" : " & x s c r ; " , " ¤ " : " & y a c u t e ; " , " O" : " & y a c y ; " , " w" : " & y c i r c ; " , " K" : " & y c y ; " , " е " : " & y e n ; " , " 5╪6▌" : " & y f r ; " , " W" : " & y i c y ; " , " 5╪j▌" : " & y o p f ; " , " 5╪╬▄" : " & y s c r ; " , " N" : " & y u c y ; " , "   " : " & y u m l ; " , " z" : " & z a c u t e ; " , " ~" : " & z c a r o n ; " , " 7" : " & z c y ; " , " |" : " & z d o t ; " , " ╢" : " & z e t a ; " , " 5╪7▌" : " & z f r ; " , " 6" : " & z h c y ; " , " ▌!" : " & z i g r a r r ; " , " 5╪k▌" : " & z o p f ; " , " 5╪╧▄" : " & z s c r ; " , "  " : " & z w j ; " , "  " : " & z w n j ; " } } } ; "╙"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.numericUnicodeMap={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376};"Щ"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.fromCodePoint=String.fromCodePoint||function(astralCodePoint){return String.fromCharCode(Math.floor((astralCodePoint-65536)/1024)+55296,(astralCodePoint-65536)%1024+56320)};exports.getCodePoint=String.prototype.codePointAt?function(input,position){return input.codePointAt(position)}:function(input,position){return(input.charCodeAt(position)-55296)*1024+input.charCodeAt(position+1)-56320+65536};exports.highSurrogateFrom=55296;exports.highSurrogateTo=56319;cж°|/ * * 
   *   @ l i c e n s e   R e a c t 
   *   r e a c t - d o m . d e v e l o p m e n t . j s 
   * 
   *   C o p y r i g h t   ( c )   F a c e b o o k ,   I n c .   a n d   i t s   a f f i l i a t e s . 
   * 
   *   T h i s   s o u r c e   c o d e   i s   l i c e n s e d   u n d e r   t h e   M I T   l i c e n s e   f o u n d   i n   t h e 
   *   L I C E N S E   f i l e   i n   t h e   r o o t   d i r e c t o r y   o f   t h i s   s o u r c e   t r e e . 
   * / 
 
 ' u s e   s t r i c t ' ; 
 
 i f   ( p r o c e s s . e n v . N O D E _ E N V   ! = =   " p r o d u c t i o n " )   { 
     ( f u n c t i o n ( )   { 
 
                     ' u s e   s t r i c t ' ; 
 
 / *   g l o b a l   _ _ R E A C T _ D E V T O O L S _ G L O B A L _ H O O K _ _   * / 
 i f   ( 
     t y p e o f   _ _ R E A C T _ D E V T O O L S _ G L O B A L _ H O O K _ _   ! = =   ' u n d e f i n e d '   & & 
     t y p e o f   _ _ R E A C T _ D E V T O O L S _ G L O B A L _ H O O K _ _ . r e g i s t e r I n t e r n a l M o d u l e S t a r t   = = = 
         ' f u n c t i o n ' 
 )   { 
     _ _ R E A C T _ D E V T O O L S _ G L O B A L _ H O O K _ _ . r e g i s t e r I n t e r n a l M o d u l e S t a r t ( n e w   E r r o r ( ) ) ; 
 } 
                     v a r   R e a c t   =   r e q u i r e ( ' r e a c t ' ) ; 
 v a r   S c h e d u l e r   =   r e q u i r e ( ' s c h e d u l e r ' ) ; 
 
 v a r   R e a c t S h a r e d I n t e r n a l s   =   R e a c t . _ _ S E C R E T _ I N T E R N A L S _ D O _ N O T _ U S E _ O R _ Y O U _ W I L L _ B E _ F I R E D ; 
 
 v a r   s u p p r e s s W a r n i n g   =   f a l s e ; 
 f u n c t i o n   s e t S u p p r e s s W a r n i n g ( n e w S u p p r e s s W a r n i n g )   { 
     { 
         s u p p r e s s W a r n i n g   =   n e w S u p p r e s s W a r n i n g ; 
     } 
 }   / /   I n   D E V ,   c a l l s   t o   c o n s o l e . w a r n   a n d   c o n s o l e . e r r o r   g e t   r e p l a c e d 
 / /   b y   c a l l s   t o   t h e s e   m e t h o d s   b y   a   B a b e l   p l u g i n . 
 / / 
 / /   I n   P R O D   ( o r   i n   p a c k a g e s   w i t h o u t   a c c e s s   t o   R e a c t   i n t e r n a l s ) , 
 / /   t h e y   a r e   l e f t   a s   t h e y   a r e   i n s t e a d . 
 
 f u n c t i o n   w a r n ( f o r m a t )   { 
     { 
         i f   ( ! s u p p r e s s W a r n i n g )   { 
             f o r   ( v a r   _ l e n   =   a r g u m e n t s . l e n g t h ,   a r g s   =   n e w   A r r a y ( _ l e n   >   1   ?   _ l e n   -   1   :   0 ) ,   _ k e y   =   1 ;   _ k e y   <   _ l e n ;   _ k e y + + )   { 
                 a r g s [ _ k e y   -   1 ]   =   a r g u m e n t s [ _ k e y ] ; 
             } 
 
             p r i n t W a r n i n g ( ' w a r n ' ,   f o r m a t ,   a r g s ) ; 
         } 
     } 
 } 
 f u n c t i o n   e r r o r ( f o r m a t )   { 
     { 
         i f   ( ! s u p p r e s s W a r n i n g )   { 
             f o r   ( v a r   _ l e n 2   =   a r g u m e n t s . l e n g t h ,   a r g s   =   n e w   A r r a y ( _ l e n 2   >   1   ?   _ l e n 2   -   1   :   0 ) ,   _ k e y 2   =   1 ;   _ k e y 2   <   _ l e n 2 ;   _ k e y 2 + + )   { 
                 a r g s [ _ k e y 2   -   1 ]   =   a r g u m e n t s [ _ k e y 2 ] ; 
             } 
 
             p r i n t W a r n i n g ( ' e r r o r ' ,   f o r m a t ,   a r g s ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   p r i n t W a r n i n g ( l e v e l ,   f o r m a t ,   a r g s )   { 
     / /   W h e n   c h a n g i n g   t h i s   l o g i c ,   y o u   m i g h t   w a n t   t o   a l s o 
     / /   u p d a t e   c o n s o l e W i t h S t a c k D e v . w w w . j s   a s   w e l l . 
     { 
         v a r   R e a c t D e b u g C u r r e n t F r a m e   =   R e a c t S h a r e d I n t e r n a l s . R e a c t D e b u g C u r r e n t F r a m e ; 
         v a r   s t a c k   =   R e a c t D e b u g C u r r e n t F r a m e . g e t S t a c k A d d e n d u m ( ) ; 
 
         i f   ( s t a c k   ! = =   ' ' )   { 
             f o r m a t   + =   ' % s ' ; 
             a r g s   =   a r g s . c o n c a t ( [ s t a c k ] ) ; 
         }   / /   e s l i n t - d i s a b l e - n e x t - l i n e   r e a c t - i n t e r n a l / s a f e - s t r i n g - c o e r c i o n 
 
 
         v a r   a r g s W i t h F o r m a t   =   a r g s . m a p ( f u n c t i o n   ( i t e m )   { 
             r e t u r n   S t r i n g ( i t e m ) ; 
         } ) ;   / /   C a r e f u l :   R N   c u r r e n t l y   d e p e n d s   o n   t h i s   p r e f i x 
 
         a r g s W i t h F o r m a t . u n s h i f t ( ' W a r n i n g :   '   +   f o r m a t ) ;   / /   W e   i n t e n t i o n a l l y   d o n ' t   u s e   s p r e a d   ( o r   . a p p l y )   d i r e c t l y   b e c a u s e   i t 
         / /   b r e a k s   I E 9 :   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 3 6 1 0 
         / /   e s l i n t - d i s a b l e - n e x t - l i n e   r e a c t - i n t e r n a l / n o - p r o d u c t i o n - l o g g i n g 
 
         F u n c t i o n . p r o t o t y p e . a p p l y . c a l l ( c o n s o l e [ l e v e l ] ,   c o n s o l e ,   a r g s W i t h F o r m a t ) ; 
     } 
 } 
 
 v a r   F u n c t i o n C o m p o n e n t   =   0 ; 
 v a r   C l a s s C o m p o n e n t   =   1 ; 
 v a r   I n d e t e r m i n a t e C o m p o n e n t   =   2 ;   / /   B e f o r e   w e   k n o w   w h e t h e r   i t   i s   f u n c t i o n   o r   c l a s s 
 
 v a r   H o s t R o o t   =   3 ;   / /   R o o t   o f   a   h o s t   t r e e .   C o u l d   b e   n e s t e d   i n s i d e   a n o t h e r   n o d e . 
 
 v a r   H o s t P o r t a l   =   4 ;   / /   A   s u b t r e e .   C o u l d   b e   a n   e n t r y   p o i n t   t o   a   d i f f e r e n t   r e n d e r e r . 
 
 v a r   H o s t C o m p o n e n t   =   5 ; 
 v a r   H o s t T e x t   =   6 ; 
 v a r   F r a g m e n t   =   7 ; 
 v a r   M o d e   =   8 ; 
 v a r   C o n t e x t C o n s u m e r   =   9 ; 
 v a r   C o n t e x t P r o v i d e r   =   1 0 ; 
 v a r   F o r w a r d R e f   =   1 1 ; 
 v a r   P r o f i l e r   =   1 2 ; 
 v a r   S u s p e n s e C o m p o n e n t   =   1 3 ; 
 v a r   M e m o C o m p o n e n t   =   1 4 ; 
 v a r   S i m p l e M e m o C o m p o n e n t   =   1 5 ; 
 v a r   L a z y C o m p o n e n t   =   1 6 ; 
 v a r   I n c o m p l e t e C l a s s C o m p o n e n t   =   1 7 ; 
 v a r   D e h y d r a t e d F r a g m e n t   =   1 8 ; 
 v a r   S u s p e n s e L i s t C o m p o n e n t   =   1 9 ; 
 v a r   S c o p e C o m p o n e n t   =   2 1 ; 
 v a r   O f f s c r e e n C o m p o n e n t   =   2 2 ; 
 v a r   L e g a c y H i d d e n C o m p o n e n t   =   2 3 ; 
 v a r   C a c h e C o m p o n e n t   =   2 4 ; 
 v a r   T r a c i n g M a r k e r C o m p o n e n t   =   2 5 ; 
 
 / /   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 
 v a r   e n a b l e C l i e n t R e n d e r F a l l b a c k O n T e x t M i s m a t c h   =   t r u e ;   / /   T O D O :   N e e d   t o   r e v i e w   t h i s   c o d e   o n e   m o r e   t i m e   b e f o r e   l a n d i n g 
 / /   t h e   r e a c t - r e c o n c i l e r   p a c k a g e . 
 
 v a r   e n a b l e N e w R e c o n c i l e r   =   f a l s e ;   / /   S u p p o r t   l e g a c y   P r i m e r   s u p p o r t   o n   i n t e r n a l   F B   w w w 
 
 v a r   e n a b l e L a z y C o n t e x t P r o p a g a t i o n   =   f a l s e ;   / /   F B - o n l y   u s a g e .   T h e   n e w   A P I   h a s   d i f f e r e n t   s e m a n t i c s . 
 
 v a r   e n a b l e L e g a c y H i d d e n   =   f a l s e ;   / /   E n a b l e s   u n s t a b l e _ a v o i d T h i s F a l l b a c k   f e a t u r e   i n   F i b e r 
 
 v a r   e n a b l e S u s p e n s e A v o i d T h i s F a l l b a c k   =   f a l s e ;   / /   E n a b l e s   u n s t a b l e _ a v o i d T h i s F a l l b a c k   f e a t u r e   i n   F i z z 
 / /   R e a c t   D O M   C h o p p i n g   B l o c k 
 / / 
 / /   S i m i l a r   t o   m a i n   C h o p p i n g   B l o c k   b u t   o n l y   f l a g s   r e l a t e d   t o   R e a c t   D O M .   T h e s e   a r e 
 / /   g r o u p e d   b e c a u s e   w e   w i l l   l i k e l y   b a t c h   a l l   o f   t h e m   i n t o   a   s i n g l e   m a j o r   r e l e a s e . 
 / /   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 / /   D i s a b l e   s u p p o r t   f o r   c o m m e n t   n o d e s   a s   R e a c t   D O M   c o n t a i n e r s .   A l r e a d y   d i s a b l e d 
 / /   i n   o p e n   s o u r c e ,   b u t   w w w   c o d e b a s e   s t i l l   r e l i e s   o n   i t .   N e e d   t o   r e m o v e . 
 
 v a r   d i s a b l e C o m m e n t s A s D O M C o n t a i n e r s   =   t r u e ;   / /   D i s a b l e   j a v a s c r i p t :   U R L   s t r i n g s   i n   h r e f   f o r   X S S   p r o t e c t i o n . 
 / /   a n d   c l i e n t   r e n d e r i n g ,   m o s t l y   t o   a l l o w   J S X   a t t r i b u t e s   t o   a p p l y   t o   t h e   c u s t o m 
 / /   e l e m e n t ' s   o b j e c t   p r o p e r t i e s   i n s t e a d   o f   o n l y   H T M L   a t t r i b u t e s . 
 / /   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 1 3 4 7 
 
 v a r   e n a b l e C u s t o m E l e m e n t P r o p e r t y S u p p o r t   =   f a l s e ;   / /   D i s a b l e s   c h i l d r e n   f o r   < t e x t a r e a >   e l e m e n t s 
 v a r   w a r n A b o u t S t r i n g R e f s   =   f a l s e ;   / /   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 / /   D e b u g g i n g   a n d   D e v T o o l s 
 / /   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 / /   A d d s   u s e r   t i m i n g   m a r k s   f o r   e . g .   s t a t e   u p d a t e s ,   s u s p e n s e ,   a n d   w o r k   l o o p   s t u f f , 
 / /   f o r   a n   e x p e r i m e n t a l   t i m e l i n e   t o o l . 
 
 v a r   e n a b l e S c h e d u l i n g P r o f i l e r   =   t r u e ;   / /   H e l p s   i d e n t i f y   s i d e   e f f e c t s   i n   r e n d e r - p h a s e   l i f e c y c l e   h o o k s   a n d   s e t S t a t e 
 
 v a r   e n a b l e P r o f i l e r T i m e r   =   t r u e ;   / /   R e c o r d   d u r a t i o n s   f o r   c o m m i t   a n d   p a s s i v e   e f f e c t s   p h a s e s . 
 
 v a r   e n a b l e P r o f i l e r C o m m i t H o o k s   =   t r u e ;   / /   P h a s e   p a r a m   p a s s e d   t o   o n R e n d e r   c a l l b a c k   d i f f e r e n t i a t e s   b e t w e e n   a n   " u p d a t e "   a n d   a   " c a s c a d i n g - u p d a t e " . 
 
 v a r   a l l N a t i v e E v e n t s   =   n e w   S e t ( ) ; 
 / * * 
   *   M a p p i n g   f r o m   r e g i s t r a t i o n   n a m e   t o   e v e n t   n a m e 
   * / 
 
 
 v a r   r e g i s t r a t i o n N a m e D e p e n d e n c i e s   =   { } ; 
 / * * 
   *   M a p p i n g   f r o m   l o w e r c a s e   r e g i s t r a t i o n   n a m e s   t o   t h e   p r o p e r l y   c a s e d   v e r s i o n , 
   *   u s e d   t o   w a r n   i n   t h e   c a s e   o f   m i s s i n g   e v e n t   h a n d l e r s .   A v a i l a b l e 
   *   o n l y   i n   t r u e . 
   *   @ t y p e   { O b j e c t } 
   * / 
 
 v a r   p o s s i b l e R e g i s t r a t i o n N a m e s   =     { }   ;   / /   T r u s t   t h e   d e v e l o p e r   t o   o n l y   u s e   p o s s i b l e R e g i s t r a t i o n N a m e s   i n   t r u e 
 
 f u n c t i o n   r e g i s t e r T w o P h a s e E v e n t ( r e g i s t r a t i o n N a m e ,   d e p e n d e n c i e s )   { 
     r e g i s t e r D i r e c t E v e n t ( r e g i s t r a t i o n N a m e ,   d e p e n d e n c i e s ) ; 
     r e g i s t e r D i r e c t E v e n t ( r e g i s t r a t i o n N a m e   +   ' C a p t u r e ' ,   d e p e n d e n c i e s ) ; 
 } 
 f u n c t i o n   r e g i s t e r D i r e c t E v e n t ( r e g i s t r a t i o n N a m e ,   d e p e n d e n c i e s )   { 
     { 
         i f   ( r e g i s t r a t i o n N a m e D e p e n d e n c i e s [ r e g i s t r a t i o n N a m e ] )   { 
             e r r o r ( ' E v e n t R e g i s t r y :   M o r e   t h a n   o n e   p l u g i n   a t t e m p t e d   t o   p u b l i s h   t h e   s a m e   '   +   ' r e g i s t r a t i o n   n a m e ,   ` % s ` . ' ,   r e g i s t r a t i o n N a m e ) ; 
         } 
     } 
 
     r e g i s t r a t i o n N a m e D e p e n d e n c i e s [ r e g i s t r a t i o n N a m e ]   =   d e p e n d e n c i e s ; 
 
     { 
         v a r   l o w e r C a s e d N a m e   =   r e g i s t r a t i o n N a m e . t o L o w e r C a s e ( ) ; 
         p o s s i b l e R e g i s t r a t i o n N a m e s [ l o w e r C a s e d N a m e ]   =   r e g i s t r a t i o n N a m e ; 
 
         i f   ( r e g i s t r a t i o n N a m e   = = =   ' o n D o u b l e C l i c k ' )   { 
             p o s s i b l e R e g i s t r a t i o n N a m e s . o n d b l c l i c k   =   r e g i s t r a t i o n N a m e ; 
         } 
     } 
 
     f o r   ( v a r   i   =   0 ;   i   <   d e p e n d e n c i e s . l e n g t h ;   i + + )   { 
         a l l N a t i v e E v e n t s . a d d ( d e p e n d e n c i e s [ i ] ) ; 
     } 
 } 
 
 v a r   c a n U s e D O M   =   ! ! ( t y p e o f   w i n d o w   ! = =   ' u n d e f i n e d '   & &   t y p e o f   w i n d o w . d o c u m e n t   ! = =   ' u n d e f i n e d '   & &   t y p e o f   w i n d o w . d o c u m e n t . c r e a t e E l e m e n t   ! = =   ' u n d e f i n e d ' ) ; 
 
 v a r   h a s O w n P r o p e r t y   =   O b j e c t . p r o t o t y p e . h a s O w n P r o p e r t y ; 
 
 / * 
   *   T h e   ` ' '   +   v a l u e `   p a t t e r n   ( u s e d   i n   i n   p e r f - s e n s i t i v e   c o d e )   t h r o w s   f o r   S y m b o l 
   *   a n d   T e m p o r a l . *   t y p e s .   S e e   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / p u l l / 2 2 0 6 4 . 
   * 
   *   T h e   f u n c t i o n s   i n   t h i s   m o d u l e   w i l l   t h r o w   a n   e a s i e r - t o - u n d e r s t a n d , 
   *   e a s i e r - t o - d e b u g   e x c e p t i o n   w i t h   a   c l e a r   e r r o r s   m e s s a g e   m e s s a g e   e x p l a i n i n g   t h e 
   *   p r o b l e m .   ( I n s t e a d   o f   a   c o n f u s i n g   e x c e p t i o n   t h r o w n   i n s i d e   t h e   i m p l e m e n t a t i o n 
   *   o f   t h e   ` v a l u e `   o b j e c t ) . 
   * / 
 / /   $ F l o w F i x M e   o n l y   c a l l e d   i n   D E V ,   s o   v o i d   r e t u r n   i s   n o t   p o s s i b l e . 
 f u n c t i o n   t y p e N a m e ( v a l u e )   { 
     { 
         / /   t o S t r i n g T a g   i s   n e e d e d   f o r   n a m e s p a c e d   t y p e s   l i k e   T e m p o r a l . I n s t a n t 
         v a r   h a s T o S t r i n g T a g   =   t y p e o f   S y m b o l   = = =   ' f u n c t i o n '   & &   S y m b o l . t o S t r i n g T a g ; 
         v a r   t y p e   =   h a s T o S t r i n g T a g   & &   v a l u e [ S y m b o l . t o S t r i n g T a g ]   | |   v a l u e . c o n s t r u c t o r . n a m e   | |   ' O b j e c t ' ; 
         r e t u r n   t y p e ; 
     } 
 }   / /   $ F l o w F i x M e   o n l y   c a l l e d   i n   D E V ,   s o   v o i d   r e t u r n   i s   n o t   p o s s i b l e . 
 
 
 f u n c t i o n   w i l l C o e r c i o n T h r o w ( v a l u e )   { 
     { 
         t r y   { 
             t e s t S t r i n g C o e r c i o n ( v a l u e ) ; 
             r e t u r n   f a l s e ; 
         }   c a t c h   ( e )   { 
             r e t u r n   t r u e ; 
         } 
     } 
 } 
 
 f u n c t i o n   t e s t S t r i n g C o e r c i o n ( v a l u e )   { 
     / /   I f   y o u   e n d e d   u p   h e r e   b y   f o l l o w i n g   a n   e x c e p t i o n   c a l l   s t a c k ,   h e r e ' s   w h a t ' s 
     / /   h a p p e n e d :   y o u   s u p p l i e d   a n   o b j e c t   o r   s y m b o l   v a l u e   t o   R e a c t   ( a s   a   p r o p ,   k e y , 
     / /   D O M   a t t r i b u t e ,   C S S   p r o p e r t y ,   s t r i n g   r e f ,   e t c . )   a n d   w h e n   R e a c t   t r i e d   t o 
     / /   c o e r c e   i t   t o   a   s t r i n g   u s i n g   ` ' '   +   v a l u e ` ,   a n   e x c e p t i o n   w a s   t h r o w n . 
     / / 
     / /   T h e   m o s t   c o m m o n   t y p e s   t h a t   w i l l   c a u s e   t h i s   e x c e p t i o n   a r e   ` S y m b o l `   i n s t a n c e s 
     / /   a n d   T e m p o r a l   o b j e c t s   l i k e   ` T e m p o r a l . I n s t a n t ` .   B u t   a n y   o b j e c t   t h a t   h a s   a 
     / /   ` v a l u e O f `   o r   ` [ S y m b o l . t o P r i m i t i v e ] `   m e t h o d   t h a t   t h r o w s   w i l l   a l s o   c a u s e   t h i s 
     / /   e x c e p t i o n .   ( L i b r a r y   a u t h o r s   d o   t h i s   t o   p r e v e n t   u s e r s   f r o m   u s i n g   b u i l t - i n 
     / /   n u m e r i c   o p e r a t o r s   l i k e   ` + `   o r   c o m p a r i s o n   o p e r a t o r s   l i k e   ` > = `   b e c a u s e   c u s t o m 
     / /   m e t h o d s   a r e   n e e d e d   t o   p e r f o r m   a c c u r a t e   a r i t h m e t i c   o r   c o m p a r i s o n . ) 
     / / 
     / /   T o   f i x   t h e   p r o b l e m ,   c o e r c e   t h i s   o b j e c t   o r   s y m b o l   v a l u e   t o   a   s t r i n g   b e f o r e 
     / /   p a s s i n g   i t   t o   R e a c t .   T h e   m o s t   r e l i a b l e   w a y   i s   u s u a l l y   ` S t r i n g ( v a l u e ) ` . 
     / / 
     / /   T o   f i n d   w h i c h   v a l u e   i s   t h r o w i n g ,   c h e c k   t h e   b r o w s e r   o r   d e b u g g e r   c o n s o l e . 
     / /   B e f o r e   t h i s   e x c e p t i o n   w a s   t h r o w n ,   t h e r e   s h o u l d   b e   ` c o n s o l e . e r r o r `   o u t p u t 
     / /   t h a t   s h o w s   t h e   t y p e   ( S y m b o l ,   T e m p o r a l . P l a i n D a t e ,   e t c . )   t h a t   c a u s e d   t h e 
     / /   p r o b l e m   a n d   h o w   t h a t   t y p e   w a s   u s e d :   k e y ,   a t r r i b u t e ,   i n p u t   v a l u e   p r o p ,   e t c . 
     / /   I n   m o s t   c a s e s ,   t h i s   c o n s o l e   o u t p u t   a l s o   s h o w s   t h e   c o m p o n e n t   a n d   i t s 
     / /   a n c e s t o r   c o m p o n e n t s   w h e r e   t h e   e x c e p t i o n   h a p p e n e d . 
     / / 
     / /   e s l i n t - d i s a b l e - n e x t - l i n e   r e a c t - i n t e r n a l / s a f e - s t r i n g - c o e r c i o n 
     r e t u r n   ' '   +   v a l u e ; 
 } 
 
 f u n c t i o n   c h e c k A t t r i b u t e S t r i n g C o e r c i o n ( v a l u e ,   a t t r i b u t e N a m e )   { 
     { 
         i f   ( w i l l C o e r c i o n T h r o w ( v a l u e ) )   { 
             e r r o r ( ' T h e   p r o v i d e d   ` % s `   a t t r i b u t e   i s   a n   u n s u p p o r t e d   t y p e   % s . '   +   '   T h i s   v a l u e   m u s t   b e   c o e r c e d   t o   a   s t r i n g   b e f o r e   b e f o r e   u s i n g   i t   h e r e . ' ,   a t t r i b u t e N a m e ,   t y p e N a m e ( v a l u e ) ) ; 
 
             r e t u r n   t e s t S t r i n g C o e r c i o n ( v a l u e ) ;   / /   t h r o w   ( t o   h e l p   c a l l e r s   f i n d   t r o u b l e s h o o t i n g   c o m m e n t s ) 
         } 
     } 
 } 
 f u n c t i o n   c h e c k K e y S t r i n g C o e r c i o n ( v a l u e )   { 
     { 
         i f   ( w i l l C o e r c i o n T h r o w ( v a l u e ) )   { 
             e r r o r ( ' T h e   p r o v i d e d   k e y   i s   a n   u n s u p p o r t e d   t y p e   % s . '   +   '   T h i s   v a l u e   m u s t   b e   c o e r c e d   t o   a   s t r i n g   b e f o r e   b e f o r e   u s i n g   i t   h e r e . ' ,   t y p e N a m e ( v a l u e ) ) ; 
 
             r e t u r n   t e s t S t r i n g C o e r c i o n ( v a l u e ) ;   / /   t h r o w   ( t o   h e l p   c a l l e r s   f i n d   t r o u b l e s h o o t i n g   c o m m e n t s ) 
         } 
     } 
 } 
 f u n c t i o n   c h e c k P r o p S t r i n g C o e r c i o n ( v a l u e ,   p r o p N a m e )   { 
     { 
         i f   ( w i l l C o e r c i o n T h r o w ( v a l u e ) )   { 
             e r r o r ( ' T h e   p r o v i d e d   ` % s `   p r o p   i s   a n   u n s u p p o r t e d   t y p e   % s . '   +   '   T h i s   v a l u e   m u s t   b e   c o e r c e d   t o   a   s t r i n g   b e f o r e   b e f o r e   u s i n g   i t   h e r e . ' ,   p r o p N a m e ,   t y p e N a m e ( v a l u e ) ) ; 
 
             r e t u r n   t e s t S t r i n g C o e r c i o n ( v a l u e ) ;   / /   t h r o w   ( t o   h e l p   c a l l e r s   f i n d   t r o u b l e s h o o t i n g   c o m m e n t s ) 
         } 
     } 
 } 
 f u n c t i o n   c h e c k C S S P r o p e r t y S t r i n g C o e r c i o n ( v a l u e ,   p r o p N a m e )   { 
     { 
         i f   ( w i l l C o e r c i o n T h r o w ( v a l u e ) )   { 
             e r r o r ( ' T h e   p r o v i d e d   ` % s `   C S S   p r o p e r t y   i s   a n   u n s u p p o r t e d   t y p e   % s . '   +   '   T h i s   v a l u e   m u s t   b e   c o e r c e d   t o   a   s t r i n g   b e f o r e   b e f o r e   u s i n g   i t   h e r e . ' ,   p r o p N a m e ,   t y p e N a m e ( v a l u e ) ) ; 
 
             r e t u r n   t e s t S t r i n g C o e r c i o n ( v a l u e ) ;   / /   t h r o w   ( t o   h e l p   c a l l e r s   f i n d   t r o u b l e s h o o t i n g   c o m m e n t s ) 
         } 
     } 
 } 
 f u n c t i o n   c h e c k H t m l S t r i n g C o e r c i o n ( v a l u e )   { 
     { 
         i f   ( w i l l C o e r c i o n T h r o w ( v a l u e ) )   { 
             e r r o r ( ' T h e   p r o v i d e d   H T M L   m a r k u p   u s e s   a   v a l u e   o f   u n s u p p o r t e d   t y p e   % s . '   +   '   T h i s   v a l u e   m u s t   b e   c o e r c e d   t o   a   s t r i n g   b e f o r e   b e f o r e   u s i n g   i t   h e r e . ' ,   t y p e N a m e ( v a l u e ) ) ; 
 
             r e t u r n   t e s t S t r i n g C o e r c i o n ( v a l u e ) ;   / /   t h r o w   ( t o   h e l p   c a l l e r s   f i n d   t r o u b l e s h o o t i n g   c o m m e n t s ) 
         } 
     } 
 } 
 f u n c t i o n   c h e c k F o r m F i e l d V a l u e S t r i n g C o e r c i o n ( v a l u e )   { 
     { 
         i f   ( w i l l C o e r c i o n T h r o w ( v a l u e ) )   { 
             e r r o r ( ' F o r m   f i e l d   v a l u e s   ( v a l u e ,   c h e c k e d ,   d e f a u l t V a l u e ,   o r   d e f a u l t C h e c k e d   p r o p s ) '   +   '   m u s t   b e   s t r i n g s ,   n o t   % s . '   +   '   T h i s   v a l u e   m u s t   b e   c o e r c e d   t o   a   s t r i n g   b e f o r e   b e f o r e   u s i n g   i t   h e r e . ' ,   t y p e N a m e ( v a l u e ) ) ; 
 
             r e t u r n   t e s t S t r i n g C o e r c i o n ( v a l u e ) ;   / /   t h r o w   ( t o   h e l p   c a l l e r s   f i n d   t r o u b l e s h o o t i n g   c o m m e n t s ) 
         } 
     } 
 } 
 
 / /   A   r e s e r v e d   a t t r i b u t e . 
 / /   I t   i s   h a n d l e d   b y   R e a c t   s e p a r a t e l y   a n d   s h o u l d n ' t   b e   w r i t t e n   t o   t h e   D O M . 
 v a r   R E S E R V E D   =   0 ;   / /   A   s i m p l e   s t r i n g   a t t r i b u t e . 
 / /   A t t r i b u t e s   t h a t   a r e n ' t   i n   t h e   f i l t e r   a r e   p r e s u m e d   t o   h a v e   t h i s   t y p e . 
 
 v a r   S T R I N G   =   1 ;   / /   A   s t r i n g   a t t r i b u t e   t h a t   a c c e p t s   b o o l e a n s   i n   R e a c t .   I n   H T M L ,   t h e s e   a r e   c a l l e d 
 / /   " e n u m e r a t e d "   a t t r i b u t e s   w i t h   " t r u e "   a n d   " f a l s e "   a s   p o s s i b l e   v a l u e s . 
 / /   W h e n   t r u e ,   i t   s h o u l d   b e   s e t   t o   a   " t r u e "   s t r i n g . 
 / /   W h e n   f a l s e ,   i t   s h o u l d   b e   s e t   t o   a   " f a l s e "   s t r i n g . 
 
 v a r   B O O L E A N I S H _ S T R I N G   =   2 ;   / /   A   r e a l   b o o l e a n   a t t r i b u t e . 
 / /   W h e n   t r u e ,   i t   s h o u l d   b e   p r e s e n t   ( s e t   e i t h e r   t o   a n   e m p t y   s t r i n g   o r   i t s   n a m e ) . 
 / /   W h e n   f a l s e ,   i t   s h o u l d   b e   o m i t t e d . 
 
 v a r   B O O L E A N   =   3 ;   / /   A n   a t t r i b u t e   t h a t   c a n   b e   u s e d   a s   a   f l a g   a s   w e l l   a s   w i t h   a   v a l u e . 
 / /   W h e n   t r u e ,   i t   s h o u l d   b e   p r e s e n t   ( s e t   e i t h e r   t o   a n   e m p t y   s t r i n g   o r   i t s   n a m e ) . 
 / /   W h e n   f a l s e ,   i t   s h o u l d   b e   o m i t t e d . 
 / /   F o r   a n y   o t h e r   v a l u e ,   s h o u l d   b e   p r e s e n t   w i t h   t h a t   v a l u e . 
 
 v a r   O V E R L O A D E D _ B O O L E A N   =   4 ;   / /   A n   a t t r i b u t e   t h a t   m u s t   b e   n u m e r i c   o r   p a r s e   a s   a   n u m e r i c . 
 / /   W h e n   f a l s y ,   i t   s h o u l d   b e   r e m o v e d . 
 
 v a r   N U M E R I C   =   5 ;   / /   A n   a t t r i b u t e   t h a t   m u s t   b e   p o s i t i v e   n u m e r i c   o r   p a r s e   a s   a   p o s i t i v e   n u m e r i c . 
 / /   W h e n   f a l s y ,   i t   s h o u l d   b e   r e m o v e d . 
 
 v a r   P O S I T I V E _ N U M E R I C   =   6 ; 
 
 / *   e s l i n t - d i s a b l e   m a x - l e n   * / 
 v a r   A T T R I B U T E _ N A M E _ S T A R T _ C H A R   =   " : A - Z _ a - z \ \ u 0 0 C 0 - \ \ u 0 0 D 6 \ \ u 0 0 D 8 - \ \ u 0 0 F 6 \ \ u 0 0 F 8 - \ \ u 0 2 F F \ \ u 0 3 7 0 - \ \ u 0 3 7 D \ \ u 0 3 7 F - \ \ u 1 F F F \ \ u 2 0 0 C - \ \ u 2 0 0 D \ \ u 2 0 7 0 - \ \ u 2 1 8 F \ \ u 2 C 0 0 - \ \ u 2 F E F \ \ u 3 0 0 1 - \ \ u D 7 F F \ \ u F 9 0 0 - \ \ u F D C F \ \ u F D F 0 - \ \ u F F F D " ; 
 / *   e s l i n t - e n a b l e   m a x - l e n   * / 
 
 v a r   A T T R I B U T E _ N A M E _ C H A R   =   A T T R I B U T E _ N A M E _ S T A R T _ C H A R   +   " \ \ - . 0 - 9 \ \ u 0 0 B 7 \ \ u 0 3 0 0 - \ \ u 0 3 6 F \ \ u 2 0 3 F - \ \ u 2 0 4 0 " ; 
 v a r   V A L I D _ A T T R I B U T E _ N A M E _ R E G E X   =   n e w   R e g E x p ( ' ^ [ '   +   A T T R I B U T E _ N A M E _ S T A R T _ C H A R   +   ' ] [ '   +   A T T R I B U T E _ N A M E _ C H A R   +   ' ] * $ ' ) ; 
 v a r   i l l e g a l A t t r i b u t e N a m e C a c h e   =   { } ; 
 v a r   v a l i d a t e d A t t r i b u t e N a m e C a c h e   =   { } ; 
 f u n c t i o n   i s A t t r i b u t e N a m e S a f e ( a t t r i b u t e N a m e )   { 
     i f   ( h a s O w n P r o p e r t y . c a l l ( v a l i d a t e d A t t r i b u t e N a m e C a c h e ,   a t t r i b u t e N a m e ) )   { 
         r e t u r n   t r u e ; 
     } 
 
     i f   ( h a s O w n P r o p e r t y . c a l l ( i l l e g a l A t t r i b u t e N a m e C a c h e ,   a t t r i b u t e N a m e ) )   { 
         r e t u r n   f a l s e ; 
     } 
 
     i f   ( V A L I D _ A T T R I B U T E _ N A M E _ R E G E X . t e s t ( a t t r i b u t e N a m e ) )   { 
         v a l i d a t e d A t t r i b u t e N a m e C a c h e [ a t t r i b u t e N a m e ]   =   t r u e ; 
         r e t u r n   t r u e ; 
     } 
 
     i l l e g a l A t t r i b u t e N a m e C a c h e [ a t t r i b u t e N a m e ]   =   t r u e ; 
 
     { 
         e r r o r ( ' I n v a l i d   a t t r i b u t e   n a m e :   ` % s ` ' ,   a t t r i b u t e N a m e ) ; 
     } 
 
     r e t u r n   f a l s e ; 
 } 
 f u n c t i o n   s h o u l d I g n o r e A t t r i b u t e ( n a m e ,   p r o p e r t y I n f o ,   i s C u s t o m C o m p o n e n t T a g )   { 
     i f   ( p r o p e r t y I n f o   ! = =   n u l l )   { 
         r e t u r n   p r o p e r t y I n f o . t y p e   = = =   R E S E R V E D ; 
     } 
 
     i f   ( i s C u s t o m C o m p o n e n t T a g )   { 
         r e t u r n   f a l s e ; 
     } 
 
     i f   ( n a m e . l e n g t h   >   2   & &   ( n a m e [ 0 ]   = = =   ' o '   | |   n a m e [ 0 ]   = = =   ' O ' )   & &   ( n a m e [ 1 ]   = = =   ' n '   | |   n a m e [ 1 ]   = = =   ' N ' ) )   { 
         r e t u r n   t r u e ; 
     } 
 
     r e t u r n   f a l s e ; 
 } 
 f u n c t i o n   s h o u l d R e m o v e A t t r i b u t e W i t h W a r n i n g ( n a m e ,   v a l u e ,   p r o p e r t y I n f o ,   i s C u s t o m C o m p o n e n t T a g )   { 
     i f   ( p r o p e r t y I n f o   ! = =   n u l l   & &   p r o p e r t y I n f o . t y p e   = = =   R E S E R V E D )   { 
         r e t u r n   f a l s e ; 
     } 
 
     s w i t c h   ( t y p e o f   v a l u e )   { 
         c a s e   ' f u n c t i o n ' :   / /   $ F l o w I s s u e   s y m b o l   i s   p e r f e c t l y   v a l i d   h e r e 
 
         c a s e   ' s y m b o l ' : 
             / /   e s l i n t - d i s a b l e - l i n e 
             r e t u r n   t r u e ; 
 
         c a s e   ' b o o l e a n ' : 
             { 
                 i f   ( i s C u s t o m C o m p o n e n t T a g )   { 
                     r e t u r n   f a l s e ; 
                 } 
 
                 i f   ( p r o p e r t y I n f o   ! = =   n u l l )   { 
                     r e t u r n   ! p r o p e r t y I n f o . a c c e p t s B o o l e a n s ; 
                 }   e l s e   { 
                     v a r   p r e f i x   =   n a m e . t o L o w e r C a s e ( ) . s l i c e ( 0 ,   5 ) ; 
                     r e t u r n   p r e f i x   ! = =   ' d a t a - '   & &   p r e f i x   ! = =   ' a r i a - ' ; 
                 } 
             } 
 
         d e f a u l t : 
             r e t u r n   f a l s e ; 
     } 
 } 
 f u n c t i o n   s h o u l d R e m o v e A t t r i b u t e ( n a m e ,   v a l u e ,   p r o p e r t y I n f o ,   i s C u s t o m C o m p o n e n t T a g )   { 
     i f   ( v a l u e   = = =   n u l l   | |   t y p e o f   v a l u e   = = =   ' u n d e f i n e d ' )   { 
         r e t u r n   t r u e ; 
     } 
 
     i f   ( s h o u l d R e m o v e A t t r i b u t e W i t h W a r n i n g ( n a m e ,   v a l u e ,   p r o p e r t y I n f o ,   i s C u s t o m C o m p o n e n t T a g ) )   { 
         r e t u r n   t r u e ; 
     } 
 
     i f   ( i s C u s t o m C o m p o n e n t T a g )   { 
         r e t u r n   f a l s e ; 
     } 
 
     i f   ( p r o p e r t y I n f o   ! = =   n u l l )   { 
 
         s w i t c h   ( p r o p e r t y I n f o . t y p e )   { 
             c a s e   B O O L E A N : 
                 r e t u r n   ! v a l u e ; 
 
             c a s e   O V E R L O A D E D _ B O O L E A N : 
                 r e t u r n   v a l u e   = = =   f a l s e ; 
 
             c a s e   N U M E R I C : 
                 r e t u r n   i s N a N ( v a l u e ) ; 
 
             c a s e   P O S I T I V E _ N U M E R I C : 
                 r e t u r n   i s N a N ( v a l u e )   | |   v a l u e   <   1 ; 
         } 
     } 
 
     r e t u r n   f a l s e ; 
 } 
 f u n c t i o n   g e t P r o p e r t y I n f o ( n a m e )   { 
     r e t u r n   p r o p e r t i e s . h a s O w n P r o p e r t y ( n a m e )   ?   p r o p e r t i e s [ n a m e ]   :   n u l l ; 
 } 
 
 f u n c t i o n   P r o p e r t y I n f o R e c o r d ( n a m e ,   t y p e ,   m u s t U s e P r o p e r t y ,   a t t r i b u t e N a m e ,   a t t r i b u t e N a m e s p a c e ,   s a n i t i z e U R L ,   r e m o v e E m p t y S t r i n g )   { 
     t h i s . a c c e p t s B o o l e a n s   =   t y p e   = = =   B O O L E A N I S H _ S T R I N G   | |   t y p e   = = =   B O O L E A N   | |   t y p e   = = =   O V E R L O A D E D _ B O O L E A N ; 
     t h i s . a t t r i b u t e N a m e   =   a t t r i b u t e N a m e ; 
     t h i s . a t t r i b u t e N a m e s p a c e   =   a t t r i b u t e N a m e s p a c e ; 
     t h i s . m u s t U s e P r o p e r t y   =   m u s t U s e P r o p e r t y ; 
     t h i s . p r o p e r t y N a m e   =   n a m e ; 
     t h i s . t y p e   =   t y p e ; 
     t h i s . s a n i t i z e U R L   =   s a n i t i z e U R L ; 
     t h i s . r e m o v e E m p t y S t r i n g   =   r e m o v e E m p t y S t r i n g ; 
 }   / /   W h e n   a d d i n g   a t t r i b u t e s   t o   t h i s   l i s t ,   b e   s u r e   t o   a l s o   a d d   t h e m   t o 
 / /   t h e   ` p o s s i b l e S t a n d a r d N a m e s `   m o d u l e   t o   e n s u r e   c a s i n g   a n d   i n c o r r e c t 
 / /   n a m e   w a r n i n g s . 
 
 
 v a r   p r o p e r t i e s   =   { } ;   / /   T h e s e   p r o p s   a r e   r e s e r v e d   b y   R e a c t .   T h e y   s h o u l d n ' t   b e   w r i t t e n   t o   t h e   D O M . 
 
 v a r   r e s e r v e d P r o p s   =   [ ' c h i l d r e n ' ,   ' d a n g e r o u s l y S e t I n n e r H T M L ' ,   / /   T O D O :   T h i s   p r e v e n t s   t h e   a s s i g n m e n t   o f   d e f a u l t V a l u e   t o   r e g u l a r 
 / /   e l e m e n t s   ( n o t   j u s t   i n p u t s ) .   N o w   t h a t   R e a c t D O M I n p u t   a s s i g n s   t o   t h e 
 / /   d e f a u l t V a l u e   p r o p e r t y   - -   d o   w e   n e e d   t h i s ? 
 ' d e f a u l t V a l u e ' ,   ' d e f a u l t C h e c k e d ' ,   ' i n n e r H T M L ' ,   ' s u p p r e s s C o n t e n t E d i t a b l e W a r n i n g ' ,   ' s u p p r e s s H y d r a t i o n W a r n i n g ' ,   ' s t y l e ' ] ; 
 
 r e s e r v e d P r o p s . f o r E a c h ( f u n c t i o n   ( n a m e )   { 
     p r o p e r t i e s [ n a m e ]   =   n e w   P r o p e r t y I n f o R e c o r d ( n a m e ,   R E S E R V E D ,   f a l s e ,   / /   m u s t U s e P r o p e r t y 
     n a m e ,   / /   a t t r i b u t e N a m e 
     n u l l ,   / /   a t t r i b u t e N a m e s p a c e 
     f a l s e ,   / /   s a n i t i z e U R L 
     f a l s e ) ; 
 } ) ;   / /   A   f e w   R e a c t   s t r i n g   a t t r i b u t e s   h a v e   a   d i f f e r e n t   n a m e . 
 / /   T h i s   i s   a   m a p p i n g   f r o m   R e a c t   p r o p   n a m e s   t o   t h e   a t t r i b u t e   n a m e s . 
 
 [ [ ' a c c e p t C h a r s e t ' ,   ' a c c e p t - c h a r s e t ' ] ,   [ ' c l a s s N a m e ' ,   ' c l a s s ' ] ,   [ ' h t m l F o r ' ,   ' f o r ' ] ,   [ ' h t t p E q u i v ' ,   ' h t t p - e q u i v ' ] ] . f o r E a c h ( f u n c t i o n   ( _ r e f )   { 
     v a r   n a m e   =   _ r e f [ 0 ] , 
             a t t r i b u t e N a m e   =   _ r e f [ 1 ] ; 
     p r o p e r t i e s [ n a m e ]   =   n e w   P r o p e r t y I n f o R e c o r d ( n a m e ,   S T R I N G ,   f a l s e ,   / /   m u s t U s e P r o p e r t y 
     a t t r i b u t e N a m e ,   / /   a t t r i b u t e N a m e 
     n u l l ,   / /   a t t r i b u t e N a m e s p a c e 
     f a l s e ,   / /   s a n i t i z e U R L 
     f a l s e ) ; 
 } ) ;   / /   T h e s e   a r e   " e n u m e r a t e d "   H T M L   a t t r i b u t e s   t h a t   a c c e p t   " t r u e "   a n d   " f a l s e " . 
 / /   I n   R e a c t ,   w e   l e t   u s e r s   p a s s   ` t r u e `   a n d   ` f a l s e `   e v e n   t h o u g h   t e c h n i c a l l y 
 / /   t h e s e   a r e n ' t   b o o l e a n   a t t r i b u t e s   ( t h e y   a r e   c o e r c e d   t o   s t r i n g s ) . 
 
 [ ' c o n t e n t E d i t a b l e ' ,   ' d r a g g a b l e ' ,   ' s p e l l C h e c k ' ,   ' v a l u e ' ] . f o r E a c h ( f u n c t i o n   ( n a m e )   { 
     p r o p e r t i e s [ n a m e ]   =   n e w   P r o p e r t y I n f o R e c o r d ( n a m e ,   B O O L E A N I S H _ S T R I N G ,   f a l s e ,   / /   m u s t U s e P r o p e r t y 
     n a m e . t o L o w e r C a s e ( ) ,   / /   a t t r i b u t e N a m e 
     n u l l ,   / /   a t t r i b u t e N a m e s p a c e 
     f a l s e ,   / /   s a n i t i z e U R L 
     f a l s e ) ; 
 } ) ;   / /   T h e s e   a r e   " e n u m e r a t e d "   S V G   a t t r i b u t e s   t h a t   a c c e p t   " t r u e "   a n d   " f a l s e " . 
 / /   I n   R e a c t ,   w e   l e t   u s e r s   p a s s   ` t r u e `   a n d   ` f a l s e `   e v e n   t h o u g h   t e c h n i c a l l y 
 / /   t h e s e   a r e n ' t   b o o l e a n   a t t r i b u t e s   ( t h e y   a r e   c o e r c e d   t o   s t r i n g s ) . 
 / /   S i n c e   t h e s e   a r e   S V G   a t t r i b u t e s ,   t h e i r   a t t r i b u t e   n a m e s   a r e   c a s e - s e n s i t i v e . 
 
 [ ' a u t o R e v e r s e ' ,   ' e x t e r n a l R e s o u r c e s R e q u i r e d ' ,   ' f o c u s a b l e ' ,   ' p r e s e r v e A l p h a ' ] . f o r E a c h ( f u n c t i o n   ( n a m e )   { 
     p r o p e r t i e s [ n a m e ]   =   n e w   P r o p e r t y I n f o R e c o r d ( n a m e ,   B O O L E A N I S H _ S T R I N G ,   f a l s e ,   / /   m u s t U s e P r o p e r t y 
     n a m e ,   / /   a t t r i b u t e N a m e 
     n u l l ,   / /   a t t r i b u t e N a m e s p a c e 
     f a l s e ,   / /   s a n i t i z e U R L 
     f a l s e ) ; 
 } ) ;   / /   T h e s e   a r e   H T M L   b o o l e a n   a t t r i b u t e s . 
 
 [ ' a l l o w F u l l S c r e e n ' ,   ' a s y n c ' ,   / /   N o t e :   t h e r e   i s   a   s p e c i a l   c a s e   t h a t   p r e v e n t s   i t   f r o m   b e i n g   w r i t t e n   t o   t h e   D O M 
 / /   o n   t h e   c l i e n t   s i d e   b e c a u s e   t h e   b r o w s e r s   a r e   i n c o n s i s t e n t .   I n s t e a d   w e   c a l l   f o c u s ( ) . 
 ' a u t o F o c u s ' ,   ' a u t o P l a y ' ,   ' c o n t r o l s ' ,   ' d e f a u l t ' ,   ' d e f e r ' ,   ' d i s a b l e d ' ,   ' d i s a b l e P i c t u r e I n P i c t u r e ' ,   ' d i s a b l e R e m o t e P l a y b a c k ' ,   ' f o r m N o V a l i d a t e ' ,   ' h i d d e n ' ,   ' l o o p ' ,   ' n o M o d u l e ' ,   ' n o V a l i d a t e ' ,   ' o p e n ' ,   ' p l a y s I n l i n e ' ,   ' r e a d O n l y ' ,   ' r e q u i r e d ' ,   ' r e v e r s e d ' ,   ' s c o p e d ' ,   ' s e a m l e s s ' ,   / /   M i c r o d a t a 
 ' i t e m S c o p e ' ] . f o r E a c h ( f u n c t i o n   ( n a m e )   { 
     p r o p e r t i e s [ n a m e ]   =   n e w   P r o p e r t y I n f o R e c o r d ( n a m e ,   B O O L E A N ,   f a l s e ,   / /   m u s t U s e P r o p e r t y 
     n a m e . t o L o w e r C a s e ( ) ,   / /   a t t r i b u t e N a m e 
     n u l l ,   / /   a t t r i b u t e N a m e s p a c e 
     f a l s e ,   / /   s a n i t i z e U R L 
     f a l s e ) ; 
 } ) ;   / /   T h e s e   a r e   t h e   f e w   R e a c t   p r o p s   t h a t   w e   s e t   a s   D O M   p r o p e r t i e s 
 / /   r a t h e r   t h a n   a t t r i b u t e s .   T h e s e   a r e   a l l   b o o l e a n s . 
 
 [ ' c h e c k e d ' ,   / /   N o t e :   ` o p t i o n . s e l e c t e d `   i s   n o t   u p d a t e d   i f   ` s e l e c t . m u l t i p l e `   i s 
 / /   d i s a b l e d   w i t h   ` r e m o v e A t t r i b u t e ` .   W e   h a v e   s p e c i a l   l o g i c   f o r   h a n d l i n g   t h i s . 
 ' m u l t i p l e ' ,   ' m u t e d ' ,   ' s e l e c t e d '   / /   N O T E :   i f   y o u   a d d   a   c a m e l C a s e d   p r o p   t o   t h i s   l i s t , 
 / /   y o u ' l l   n e e d   t o   s e t   a t t r i b u t e N a m e   t o   n a m e . t o L o w e r C a s e ( ) 
 / /   i n s t e a d   i n   t h e   a s s i g n m e n t   b e l o w . 
 ] . f o r E a c h ( f u n c t i o n   ( n a m e )   { 
     p r o p e r t i e s [ n a m e ]   =   n e w   P r o p e r t y I n f o R e c o r d ( n a m e ,   B O O L E A N ,   t r u e ,   / /   m u s t U s e P r o p e r t y 
     n a m e ,   / /   a t t r i b u t e N a m e 
     n u l l ,   / /   a t t r i b u t e N a m e s p a c e 
     f a l s e ,   / /   s a n i t i z e U R L 
     f a l s e ) ; 
 } ) ;   / /   T h e s e   a r e   H T M L   a t t r i b u t e s   t h a t   a r e   " o v e r l o a d e d   b o o l e a n s " :   t h e y   b e h a v e   l i k e 
 / /   b o o l e a n s ,   b u t   c a n   a l s o   a c c e p t   a   s t r i n g   v a l u e . 
 
 [ ' c a p t u r e ' ,   ' d o w n l o a d '   / /   N O T E :   i f   y o u   a d d   a   c a m e l C a s e d   p r o p   t o   t h i s   l i s t , 
 / /   y o u ' l l   n e e d   t o   s e t   a t t r i b u t e N a m e   t o   n a m e . t o L o w e r C a s e ( ) 
 / /   i n s t e a d   i n   t h e   a s s i g n m e n t   b e l o w . 
 ] . f o r E a c h ( f u n c t i o n   ( n a m e )   { 
     p r o p e r t i e s [ n a m e ]   =   n e w   P r o p e r t y I n f o R e c o r d ( n a m e ,   O V E R L O A D E D _ B O O L E A N ,   f a l s e ,   / /   m u s t U s e P r o p e r t y 
     n a m e ,   / /   a t t r i b u t e N a m e 
     n u l l ,   / /   a t t r i b u t e N a m e s p a c e 
     f a l s e ,   / /   s a n i t i z e U R L 
     f a l s e ) ; 
 } ) ;   / /   T h e s e   a r e   H T M L   a t t r i b u t e s   t h a t   m u s t   b e   p o s i t i v e   n u m b e r s . 
 
 [ ' c o l s ' ,   ' r o w s ' ,   ' s i z e ' ,   ' s p a n '   / /   N O T E :   i f   y o u   a d d   a   c a m e l C a s e d   p r o p   t o   t h i s   l i s t , 
 / /   y o u ' l l   n e e d   t o   s e t   a t t r i b u t e N a m e   t o   n a m e . t o L o w e r C a s e ( ) 
 / /   i n s t e a d   i n   t h e   a s s i g n m e n t   b e l o w . 
 ] . f o r E a c h ( f u n c t i o n   ( n a m e )   { 
     p r o p e r t i e s [ n a m e ]   =   n e w   P r o p e r t y I n f o R e c o r d ( n a m e ,   P O S I T I V E _ N U M E R I C ,   f a l s e ,   / /   m u s t U s e P r o p e r t y 
     n a m e ,   / /   a t t r i b u t e N a m e 
     n u l l ,   / /   a t t r i b u t e N a m e s p a c e 
     f a l s e ,   / /   s a n i t i z e U R L 
     f a l s e ) ; 
 } ) ;   / /   T h e s e   a r e   H T M L   a t t r i b u t e s   t h a t   m u s t   b e   n u m b e r s . 
 
 [ ' r o w S p a n ' ,   ' s t a r t ' ] . f o r E a c h ( f u n c t i o n   ( n a m e )   { 
     p r o p e r t i e s [ n a m e ]   =   n e w   P r o p e r t y I n f o R e c o r d ( n a m e ,   N U M E R I C ,   f a l s e ,   / /   m u s t U s e P r o p e r t y 
     n a m e . t o L o w e r C a s e ( ) ,   / /   a t t r i b u t e N a m e 
     n u l l ,   / /   a t t r i b u t e N a m e s p a c e 
     f a l s e ,   / /   s a n i t i z e U R L 
     f a l s e ) ; 
 } ) ; 
 v a r   C A M E L I Z E   =   / [ \ - \ : ] ( [ a - z ] ) / g ; 
 
 v a r   c a p i t a l i z e   =   f u n c t i o n   ( t o k e n )   { 
     r e t u r n   t o k e n [ 1 ] . t o U p p e r C a s e ( ) ; 
 } ;   / /   T h i s   i s   a   l i s t   o f   a l l   S V G   a t t r i b u t e s   t h a t   n e e d   s p e c i a l   c a s i n g ,   n a m e s p a c i n g , 
 / /   o r   b o o l e a n   v a l u e   a s s i g n m e n t .   R e g u l a r   a t t r i b u t e s   t h a t   j u s t   a c c e p t   s t r i n g s 
 / /   a n d   h a v e   t h e   s a m e   n a m e s   a r e   o m i t t e d ,   j u s t   l i k e   i n   t h e   H T M L   a t t r i b u t e   f i l t e r . 
 / /   S o m e   o f   t h e s e   a t t r i b u t e s   c a n   b e   h a r d   t o   f i n d .   T h i s   l i s t   w a s   c r e a t e d   b y 
 / /   s c r a p i n g   t h e   M D N   d o c u m e n t a t i o n . 
 
 
 [ ' a c c e n t - h e i g h t ' ,   ' a l i g n m e n t - b a s e l i n e ' ,   ' a r a b i c - f o r m ' ,   ' b a s e l i n e - s h i f t ' ,   ' c a p - h e i g h t ' ,   ' c l i p - p a t h ' ,   ' c l i p - r u l e ' ,   ' c o l o r - i n t e r p o l a t i o n ' ,   ' c o l o r - i n t e r p o l a t i o n - f i l t e r s ' ,   ' c o l o r - p r o f i l e ' ,   ' c o l o r - r e n d e r i n g ' ,   ' d o m i n a n t - b a s e l i n e ' ,   ' e n a b l e - b a c k g r o u n d ' ,   ' f i l l - o p a c i t y ' ,   ' f i l l - r u l e ' ,   ' f l o o d - c o l o r ' ,   ' f l o o d - o p a c i t y ' ,   ' f o n t - f a m i l y ' ,   ' f o n t - s i z e ' ,   ' f o n t - s i z e - a d j u s t ' ,   ' f o n t - s t r e t c h ' ,   ' f o n t - s t y l e ' ,   ' f o n t - v a r i a n t ' ,   ' f o n t - w e i g h t ' ,   ' g l y p h - n a m e ' ,   ' g l y p h - o r i e n t a t i o n - h o r i z o n t a l ' ,   ' g l y p h - o r i e n t a t i o n - v e r t i c a l ' ,   ' h o r i z - a d v - x ' ,   ' h o r i z - o r i g i n - x ' ,   ' i m a g e - r e n d e r i n g ' ,   ' l e t t e r - s p a c i n g ' ,   ' l i g h t i n g - c o l o r ' ,   ' m a r k e r - e n d ' ,   ' m a r k e r - m i d ' ,   ' m a r k e r - s t a r t ' ,   ' o v e r l i n e - p o s i t i o n ' ,   ' o v e r l i n e - t h i c k n e s s ' ,   ' p a i n t - o r d e r ' ,   ' p a n o s e - 1 ' ,   ' p o i n t e r - e v e n t s ' ,   ' r e n d e r i n g - i n t e n t ' ,   ' s h a p e - r e n d e r i n g ' ,   ' s t o p - c o l o r ' ,   ' s t o p - o p a c i t y ' ,   ' s t r i k e t h r o u g h - p o s i t i o n ' ,   ' s t r i k e t h r o u g h - t h i c k n e s s ' ,   ' s t r o k e - d a s h a r r a y ' ,   ' s t r o k e - d a s h o f f s e t ' ,   ' s t r o k e - l i n e c a p ' ,   ' s t r o k e - l i n e j o i n ' ,   ' s t r o k e - m i t e r l i m i t ' ,   ' s t r o k e - o p a c i t y ' ,   ' s t r o k e - w i d t h ' ,   ' t e x t - a n c h o r ' ,   ' t e x t - d e c o r a t i o n ' ,   ' t e x t - r e n d e r i n g ' ,   ' u n d e r l i n e - p o s i t i o n ' ,   ' u n d e r l i n e - t h i c k n e s s ' ,   ' u n i c o d e - b i d i ' ,   ' u n i c o d e - r a n g e ' ,   ' u n i t s - p e r - e m ' ,   ' v - a l p h a b e t i c ' ,   ' v - h a n g i n g ' ,   ' v - i d e o g r a p h i c ' ,   ' v - m a t h e m a t i c a l ' ,   ' v e c t o r - e f f e c t ' ,   ' v e r t - a d v - y ' ,   ' v e r t - o r i g i n - x ' ,   ' v e r t - o r i g i n - y ' ,   ' w o r d - s p a c i n g ' ,   ' w r i t i n g - m o d e ' ,   ' x m l n s : x l i n k ' ,   ' x - h e i g h t '   / /   N O T E :   i f   y o u   a d d   a   c a m e l C a s e d   p r o p   t o   t h i s   l i s t , 
 / /   y o u ' l l   n e e d   t o   s e t   a t t r i b u t e N a m e   t o   n a m e . t o L o w e r C a s e ( ) 
 / /   i n s t e a d   i n   t h e   a s s i g n m e n t   b e l o w . 
 ] . f o r E a c h ( f u n c t i o n   ( a t t r i b u t e N a m e )   { 
     v a r   n a m e   =   a t t r i b u t e N a m e . r e p l a c e ( C A M E L I Z E ,   c a p i t a l i z e ) ; 
     p r o p e r t i e s [ n a m e ]   =   n e w   P r o p e r t y I n f o R e c o r d ( n a m e ,   S T R I N G ,   f a l s e ,   / /   m u s t U s e P r o p e r t y 
     a t t r i b u t e N a m e ,   n u l l ,   / /   a t t r i b u t e N a m e s p a c e 
     f a l s e ,   / /   s a n i t i z e U R L 
     f a l s e ) ; 
 } ) ;   / /   S t r i n g   S V G   a t t r i b u t e s   w i t h   t h e   x l i n k   n a m e s p a c e . 
 
 [ ' x l i n k : a c t u a t e ' ,   ' x l i n k : a r c r o l e ' ,   ' x l i n k : r o l e ' ,   ' x l i n k : s h o w ' ,   ' x l i n k : t i t l e ' ,   ' x l i n k : t y p e '   / /   N O T E :   i f   y o u   a d d   a   c a m e l C a s e d   p r o p   t o   t h i s   l i s t , 
 / /   y o u ' l l   n e e d   t o   s e t   a t t r i b u t e N a m e   t o   n a m e . t o L o w e r C a s e ( ) 
 / /   i n s t e a d   i n   t h e   a s s i g n m e n t   b e l o w . 
 ] . f o r E a c h ( f u n c t i o n   ( a t t r i b u t e N a m e )   { 
     v a r   n a m e   =   a t t r i b u t e N a m e . r e p l a c e ( C A M E L I Z E ,   c a p i t a l i z e ) ; 
     p r o p e r t i e s [ n a m e ]   =   n e w   P r o p e r t y I n f o R e c o r d ( n a m e ,   S T R I N G ,   f a l s e ,   / /   m u s t U s e P r o p e r t y 
     a t t r i b u t e N a m e ,   ' h t t p : / / w w w . w 3 . o r g / 1 9 9 9 / x l i n k ' ,   f a l s e ,   / /   s a n i t i z e U R L 
     f a l s e ) ; 
 } ) ;   / /   S t r i n g   S V G   a t t r i b u t e s   w i t h   t h e   x m l   n a m e s p a c e . 
 
 [ ' x m l : b a s e ' ,   ' x m l : l a n g ' ,   ' x m l : s p a c e '   / /   N O T E :   i f   y o u   a d d   a   c a m e l C a s e d   p r o p   t o   t h i s   l i s t , 
 / /   y o u ' l l   n e e d   t o   s e t   a t t r i b u t e N a m e   t o   n a m e . t o L o w e r C a s e ( ) 
 / /   i n s t e a d   i n   t h e   a s s i g n m e n t   b e l o w . 
 ] . f o r E a c h ( f u n c t i o n   ( a t t r i b u t e N a m e )   { 
     v a r   n a m e   =   a t t r i b u t e N a m e . r e p l a c e ( C A M E L I Z E ,   c a p i t a l i z e ) ; 
     p r o p e r t i e s [ n a m e ]   =   n e w   P r o p e r t y I n f o R e c o r d ( n a m e ,   S T R I N G ,   f a l s e ,   / /   m u s t U s e P r o p e r t y 
     a t t r i b u t e N a m e ,   ' h t t p : / / w w w . w 3 . o r g / X M L / 1 9 9 8 / n a m e s p a c e ' ,   f a l s e ,   / /   s a n i t i z e U R L 
     f a l s e ) ; 
 } ) ;   / /   T h e s e   a t t r i b u t e   e x i s t s   b o t h   i n   H T M L   a n d   S V G . 
 / /   T h e   a t t r i b u t e   n a m e   i s   c a s e - s e n s i t i v e   i n   S V G   s o   w e   c a n ' t   j u s t   u s e 
 / /   t h e   R e a c t   n a m e   l i k e   w e   d o   f o r   a t t r i b u t e s   t h a t   e x i s t   o n l y   i n   H T M L . 
 
 [ ' t a b I n d e x ' ,   ' c r o s s O r i g i n ' ] . f o r E a c h ( f u n c t i o n   ( a t t r i b u t e N a m e )   { 
     p r o p e r t i e s [ a t t r i b u t e N a m e ]   =   n e w   P r o p e r t y I n f o R e c o r d ( a t t r i b u t e N a m e ,   S T R I N G ,   f a l s e ,   / /   m u s t U s e P r o p e r t y 
     a t t r i b u t e N a m e . t o L o w e r C a s e ( ) ,   / /   a t t r i b u t e N a m e 
     n u l l ,   / /   a t t r i b u t e N a m e s p a c e 
     f a l s e ,   / /   s a n i t i z e U R L 
     f a l s e ) ; 
 } ) ;   / /   T h e s e   a t t r i b u t e s   a c c e p t   U R L s .   T h e s e   m u s t   n o t   a l l o w   j a v a s c r i p t :   U R L S . 
 / /   T h e s e   w i l l   a l s o   n e e d   t o   a c c e p t   T r u s t e d   T y p e s   o b j e c t   i n   t h e   f u t u r e . 
 
 v a r   x l i n k H r e f   =   ' x l i n k H r e f ' ; 
 p r o p e r t i e s [ x l i n k H r e f ]   =   n e w   P r o p e r t y I n f o R e c o r d ( ' x l i n k H r e f ' ,   S T R I N G ,   f a l s e ,   / /   m u s t U s e P r o p e r t y 
 ' x l i n k : h r e f ' ,   ' h t t p : / / w w w . w 3 . o r g / 1 9 9 9 / x l i n k ' ,   t r u e ,   / /   s a n i t i z e U R L 
 f a l s e ) ; 
 [ ' s r c ' ,   ' h r e f ' ,   ' a c t i o n ' ,   ' f o r m A c t i o n ' ] . f o r E a c h ( f u n c t i o n   ( a t t r i b u t e N a m e )   { 
     p r o p e r t i e s [ a t t r i b u t e N a m e ]   =   n e w   P r o p e r t y I n f o R e c o r d ( a t t r i b u t e N a m e ,   S T R I N G ,   f a l s e ,   / /   m u s t U s e P r o p e r t y 
     a t t r i b u t e N a m e . t o L o w e r C a s e ( ) ,   / /   a t t r i b u t e N a m e 
     n u l l ,   / /   a t t r i b u t e N a m e s p a c e 
     t r u e ,   / /   s a n i t i z e U R L 
     t r u e ) ; 
 } ) ; 
 
 / /   a n d   a n y   n e w l i n e   o r   t a b   a r e   f i l t e r e d   o u t   a s   i f   t h e y ' r e   n o t   p a r t   o f   t h e   U R L . 
 / /   h t t p s : / / u r l . s p e c . w h a t w g . o r g / # u r l - p a r s i n g 
 / /   T a b   o r   n e w l i n e   a r e   d e f i n e d   a s   \ r \ n \ t : 
 / /   h t t p s : / / i n f r a . s p e c . w h a t w g . o r g / # a s c i i - t a b - o r - n e w l i n e 
 / /   A   C 0   c o n t r o l   i s   a   c o d e   p o i n t   i n   t h e   r a n g e   \ u 0 0 0 0   N U L L   t o   \ u 0 0 1 F 
 / /   I N F O R M A T I O N   S E P A R A T O R   O N E ,   i n c l u s i v e : 
 / /   h t t p s : / / i n f r a . s p e c . w h a t w g . o r g / # c 0 - c o n t r o l - o r - s p a c e 
 
 / *   e s l i n t - d i s a b l e   m a x - l e n   * / 
 
 v a r   i s J a v a S c r i p t P r o t o c o l   =   / ^ [ \ u 0 0 0 0 - \ u 0 0 1 F   ] * j [ \ r \ n \ t ] * a [ \ r \ n \ t ] * v [ \ r \ n \ t ] * a [ \ r \ n \ t ] * s [ \ r \ n \ t ] * c [ \ r \ n \ t ] * r [ \ r \ n \ t ] * i [ \ r \ n \ t ] * p [ \ r \ n \ t ] * t [ \ r \ n \ t ] * \ : / i ; 
 v a r   d i d W a r n   =   f a l s e ; 
 
 f u n c t i o n   s a n i t i z e U R L ( u r l )   { 
     { 
         i f   ( ! d i d W a r n   & &   i s J a v a S c r i p t P r o t o c o l . t e s t ( u r l ) )   { 
             d i d W a r n   =   t r u e ; 
 
             e r r o r ( ' A   f u t u r e   v e r s i o n   o f   R e a c t   w i l l   b l o c k   j a v a s c r i p t :   U R L s   a s   a   s e c u r i t y   p r e c a u t i o n .   '   +   ' U s e   e v e n t   h a n d l e r s   i n s t e a d   i f   y o u   c a n .   I f   y o u   n e e d   t o   g e n e r a t e   u n s a f e   H T M L   t r y   '   +   ' u s i n g   d a n g e r o u s l y S e t I n n e r H T M L   i n s t e a d .   R e a c t   w a s   p a s s e d   % s . ' ,   J S O N . s t r i n g i f y ( u r l ) ) ; 
         } 
     } 
 } 
 
 / * * 
   *   G e t   t h e   v a l u e   f o r   a   p r o p e r t y   o n   a   n o d e .   O n l y   u s e d   i n   D E V   f o r   S S R   v a l i d a t i o n . 
   *   T h e   " e x p e c t e d "   a r g u m e n t   i s   u s e d   a s   a   h i n t   o f   w h a t   t h e   e x p e c t e d   v a l u e   i s . 
   *   S o m e   p r o p e r t i e s   h a v e   m u l t i p l e   e q u i v a l e n t   v a l u e s . 
   * / 
 f u n c t i o n   g e t V a l u e F o r P r o p e r t y ( n o d e ,   n a m e ,   e x p e c t e d ,   p r o p e r t y I n f o )   { 
     { 
         i f   ( p r o p e r t y I n f o . m u s t U s e P r o p e r t y )   { 
             v a r   p r o p e r t y N a m e   =   p r o p e r t y I n f o . p r o p e r t y N a m e ; 
             r e t u r n   n o d e [ p r o p e r t y N a m e ] ; 
         }   e l s e   { 
             / /   T h i s   c h e c k   p r o t e c t s   m u l t i p l e   u s e s   o f   ` e x p e c t e d ` ,   w h i c h   i s   w h y   t h e 
             / /   r e a c t - i n t e r n a l / s a f e - s t r i n g - c o e r c i o n   r u l e   i s   d i s a b l e d   i n   s e v e r a l   s p o t s 
             / /   b e l o w . 
             { 
                 c h e c k A t t r i b u t e S t r i n g C o e r c i o n ( e x p e c t e d ,   n a m e ) ; 
             } 
 
             i f   (   p r o p e r t y I n f o . s a n i t i z e U R L )   { 
                 / /   I f   w e   h a v e n ' t   f u l l y   d i s a b l e d   j a v a s c r i p t :   U R L s ,   a n d   i f 
                 / /   t h e   h y d r a t i o n   i s   s u c c e s s f u l   o f   a   j a v a s c r i p t :   U R L ,   w e 
                 / /   s t i l l   w a n t   t o   w a r n   o n   t h e   c l i e n t . 
                 / /   e s l i n t - d i s a b l e - n e x t - l i n e   r e a c t - i n t e r n a l / s a f e - s t r i n g - c o e r c i o n 
                 s a n i t i z e U R L ( ' '   +   e x p e c t e d ) ; 
             } 
 
             v a r   a t t r i b u t e N a m e   =   p r o p e r t y I n f o . a t t r i b u t e N a m e ; 
             v a r   s t r i n g V a l u e   =   n u l l ; 
 
             i f   ( p r o p e r t y I n f o . t y p e   = = =   O V E R L O A D E D _ B O O L E A N )   { 
                 i f   ( n o d e . h a s A t t r i b u t e ( a t t r i b u t e N a m e ) )   { 
                     v a r   v a l u e   =   n o d e . g e t A t t r i b u t e ( a t t r i b u t e N a m e ) ; 
 
                     i f   ( v a l u e   = = =   ' ' )   { 
                         r e t u r n   t r u e ; 
                     } 
 
                     i f   ( s h o u l d R e m o v e A t t r i b u t e ( n a m e ,   e x p e c t e d ,   p r o p e r t y I n f o ,   f a l s e ) )   { 
                         r e t u r n   v a l u e ; 
                     }   / /   e s l i n t - d i s a b l e - n e x t - l i n e   r e a c t - i n t e r n a l / s a f e - s t r i n g - c o e r c i o n 
 
 
                     i f   ( v a l u e   = = =   ' '   +   e x p e c t e d )   { 
                         r e t u r n   e x p e c t e d ; 
                     } 
 
                     r e t u r n   v a l u e ; 
                 } 
             }   e l s e   i f   ( n o d e . h a s A t t r i b u t e ( a t t r i b u t e N a m e ) )   { 
                 i f   ( s h o u l d R e m o v e A t t r i b u t e ( n a m e ,   e x p e c t e d ,   p r o p e r t y I n f o ,   f a l s e ) )   { 
                     / /   W e   h a d   a n   a t t r i b u t e   b u t   s h o u l d n ' t   h a v e   h a d   o n e ,   s o   r e a d   i t 
                     / /   f o r   t h e   e r r o r   m e s s a g e . 
                     r e t u r n   n o d e . g e t A t t r i b u t e ( a t t r i b u t e N a m e ) ; 
                 } 
 
                 i f   ( p r o p e r t y I n f o . t y p e   = = =   B O O L E A N )   { 
                     / /   I f   t h i s   w a s   a   b o o l e a n ,   i t   d o e s n ' t   m a t t e r   w h a t   t h e   v a l u e   i s 
                     / /   t h e   f a c t   t h a t   w e   h a v e   i t   i s   t h e   s a m e   a s   t h e   e x p e c t e d . 
                     r e t u r n   e x p e c t e d ; 
                 }   / /   E v e n   i f   t h i s   p r o p e r t y   u s e s   a   n a m e s p a c e   w e   u s e   g e t A t t r i b u t e 
                 / /   b e c a u s e   w e   a s s u m e   i t s   n a m e s p a c e d   n a m e   i s   t h e   s a m e   a s   o u r   c o n f i g . 
                 / /   T o   u s e   g e t A t t r i b u t e N S   w e   n e e d   t h e   l o c a l   n a m e   w h i c h   w e   d o n ' t   h a v e 
                 / /   i n   o u r   c o n f i g   a t m . 
 
 
                 s t r i n g V a l u e   =   n o d e . g e t A t t r i b u t e ( a t t r i b u t e N a m e ) ; 
             } 
 
             i f   ( s h o u l d R e m o v e A t t r i b u t e ( n a m e ,   e x p e c t e d ,   p r o p e r t y I n f o ,   f a l s e ) )   { 
                 r e t u r n   s t r i n g V a l u e   = = =   n u l l   ?   e x p e c t e d   :   s t r i n g V a l u e ;   / /   e s l i n t - d i s a b l e - n e x t - l i n e   r e a c t - i n t e r n a l / s a f e - s t r i n g - c o e r c i o n 
             }   e l s e   i f   ( s t r i n g V a l u e   = = =   ' '   +   e x p e c t e d )   { 
                 r e t u r n   e x p e c t e d ; 
             }   e l s e   { 
                 r e t u r n   s t r i n g V a l u e ; 
             } 
         } 
     } 
 } 
 / * * 
   *   G e t   t h e   v a l u e   f o r   a   a t t r i b u t e   o n   a   n o d e .   O n l y   u s e d   i n   D E V   f o r   S S R   v a l i d a t i o n . 
   *   T h e   t h i r d   a r g u m e n t   i s   u s e d   a s   a   h i n t   o f   w h a t   t h e   e x p e c t e d   v a l u e   i s .   S o m e 
   *   a t t r i b u t e s   h a v e   m u l t i p l e   e q u i v a l e n t   v a l u e s . 
   * / 
 
 f u n c t i o n   g e t V a l u e F o r A t t r i b u t e ( n o d e ,   n a m e ,   e x p e c t e d )   { 
     { 
         i f   ( ! i s A t t r i b u t e N a m e S a f e ( n a m e ) )   { 
             r e t u r n ; 
         } 
 
         i f   ( ! n o d e . h a s A t t r i b u t e ( n a m e ) )   { 
             r e t u r n   e x p e c t e d   = = =   u n d e f i n e d   ?   u n d e f i n e d   :   n u l l ; 
         } 
 
         v a r   v a l u e   =   n o d e . g e t A t t r i b u t e ( n a m e ) ; 
 
         { 
             c h e c k A t t r i b u t e S t r i n g C o e r c i o n ( e x p e c t e d ,   n a m e ) ; 
         } 
 
         i f   ( v a l u e   = = =   ' '   +   e x p e c t e d )   { 
             r e t u r n   e x p e c t e d ; 
         } 
 
         r e t u r n   v a l u e ; 
     } 
 } 
 / * * 
   *   S e t s   t h e   v a l u e   f o r   a   p r o p e r t y   o n   a   n o d e . 
   * 
   *   @ p a r a m   { D O M E l e m e n t }   n o d e 
   *   @ p a r a m   { s t r i n g }   n a m e 
   *   @ p a r a m   { * }   v a l u e 
   * / 
 
 f u n c t i o n   s e t V a l u e F o r P r o p e r t y ( n o d e ,   n a m e ,   v a l u e ,   i s C u s t o m C o m p o n e n t T a g )   { 
     v a r   p r o p e r t y I n f o   =   g e t P r o p e r t y I n f o ( n a m e ) ; 
 
     i f   ( s h o u l d I g n o r e A t t r i b u t e ( n a m e ,   p r o p e r t y I n f o ,   i s C u s t o m C o m p o n e n t T a g ) )   { 
         r e t u r n ; 
     } 
 
     i f   ( s h o u l d R e m o v e A t t r i b u t e ( n a m e ,   v a l u e ,   p r o p e r t y I n f o ,   i s C u s t o m C o m p o n e n t T a g ) )   { 
         v a l u e   =   n u l l ; 
     }   / /   I f   t h e   p r o p   i s n ' t   i n   t h e   s p e c i a l   l i s t ,   t r e a t   i t   a s   a   s i m p l e   a t t r i b u t e . 
 
 
     i f   ( i s C u s t o m C o m p o n e n t T a g   | |   p r o p e r t y I n f o   = = =   n u l l )   { 
         i f   ( i s A t t r i b u t e N a m e S a f e ( n a m e ) )   { 
             v a r   _ a t t r i b u t e N a m e   =   n a m e ; 
 
             i f   ( v a l u e   = = =   n u l l )   { 
                 n o d e . r e m o v e A t t r i b u t e ( _ a t t r i b u t e N a m e ) ; 
             }   e l s e   { 
                 { 
                     c h e c k A t t r i b u t e S t r i n g C o e r c i o n ( v a l u e ,   n a m e ) ; 
                 } 
 
                 n o d e . s e t A t t r i b u t e ( _ a t t r i b u t e N a m e ,     ' '   +   v a l u e ) ; 
             } 
         } 
 
         r e t u r n ; 
     } 
 
     v a r   m u s t U s e P r o p e r t y   =   p r o p e r t y I n f o . m u s t U s e P r o p e r t y ; 
 
     i f   ( m u s t U s e P r o p e r t y )   { 
         v a r   p r o p e r t y N a m e   =   p r o p e r t y I n f o . p r o p e r t y N a m e ; 
 
         i f   ( v a l u e   = = =   n u l l )   { 
             v a r   t y p e   =   p r o p e r t y I n f o . t y p e ; 
             n o d e [ p r o p e r t y N a m e ]   =   t y p e   = = =   B O O L E A N   ?   f a l s e   :   ' ' ; 
         }   e l s e   { 
             / /   C o n t r a r y   t o   ` s e t A t t r i b u t e ` ,   o b j e c t   p r o p e r t i e s   a r e   p r o p e r l y 
             / /   ` t o S t r i n g ` e d   b y   I E 8 / 9 . 
             n o d e [ p r o p e r t y N a m e ]   =   v a l u e ; 
         } 
 
         r e t u r n ; 
     }   / /   T h e   r e s t   a r e   t r e a t e d   a s   a t t r i b u t e s   w i t h   s p e c i a l   c a s e s . 
 
 
     v a r   a t t r i b u t e N a m e   =   p r o p e r t y I n f o . a t t r i b u t e N a m e , 
             a t t r i b u t e N a m e s p a c e   =   p r o p e r t y I n f o . a t t r i b u t e N a m e s p a c e ; 
 
     i f   ( v a l u e   = = =   n u l l )   { 
         n o d e . r e m o v e A t t r i b u t e ( a t t r i b u t e N a m e ) ; 
     }   e l s e   { 
         v a r   _ t y p e   =   p r o p e r t y I n f o . t y p e ; 
         v a r   a t t r i b u t e V a l u e ; 
 
         i f   ( _ t y p e   = = =   B O O L E A N   | |   _ t y p e   = = =   O V E R L O A D E D _ B O O L E A N   & &   v a l u e   = = =   t r u e )   { 
             / /   I f   a t t r i b u t e   t y p e   i s   b o o l e a n ,   w e   k n o w   f o r   s u r e   i t   w o n ' t   b e   a n   e x e c u t i o n   s i n k 
             / /   a n d   w e   w o n ' t   r e q u i r e   T r u s t e d   T y p e   h e r e . 
             a t t r i b u t e V a l u e   =   ' ' ; 
         }   e l s e   { 
             / /   ` s e t A t t r i b u t e `   w i t h   o b j e c t s   b e c o m e s   o n l y   ` [ o b j e c t ] `   i n   I E 8 / 9 , 
             / /   ( ' '   +   v a l u e )   m a k e s   i t   o u t p u t   t h e   c o r r e c t   t o S t r i n g ( ) - v a l u e . 
             { 
                 { 
                     c h e c k A t t r i b u t e S t r i n g C o e r c i o n ( v a l u e ,   a t t r i b u t e N a m e ) ; 
                 } 
 
                 a t t r i b u t e V a l u e   =   ' '   +   v a l u e ; 
             } 
 
             i f   ( p r o p e r t y I n f o . s a n i t i z e U R L )   { 
                 s a n i t i z e U R L ( a t t r i b u t e V a l u e . t o S t r i n g ( ) ) ; 
             } 
         } 
 
         i f   ( a t t r i b u t e N a m e s p a c e )   { 
             n o d e . s e t A t t r i b u t e N S ( a t t r i b u t e N a m e s p a c e ,   a t t r i b u t e N a m e ,   a t t r i b u t e V a l u e ) ; 
         }   e l s e   { 
             n o d e . s e t A t t r i b u t e ( a t t r i b u t e N a m e ,   a t t r i b u t e V a l u e ) ; 
         } 
     } 
 } 
 
 / /   A T T E N T I O N 
 
 v a r   R E A C T _ E L E M E N T _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . e l e m e n t ' ) ; 
 v a r   R E A C T _ P O R T A L _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . p o r t a l ' ) ; 
 v a r   R E A C T _ F R A G M E N T _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . f r a g m e n t ' ) ; 
 v a r   R E A C T _ S T R I C T _ M O D E _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . s t r i c t _ m o d e ' ) ; 
 v a r   R E A C T _ P R O F I L E R _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . p r o f i l e r ' ) ; 
 v a r   R E A C T _ P R O V I D E R _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . p r o v i d e r ' ) ; 
 v a r   R E A C T _ C O N T E X T _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . c o n t e x t ' ) ; 
 v a r   R E A C T _ F O R W A R D _ R E F _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . f o r w a r d _ r e f ' ) ; 
 v a r   R E A C T _ S U S P E N S E _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . s u s p e n s e ' ) ; 
 v a r   R E A C T _ S U S P E N S E _ L I S T _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . s u s p e n s e _ l i s t ' ) ; 
 v a r   R E A C T _ M E M O _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . m e m o ' ) ; 
 v a r   R E A C T _ L A Z Y _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . l a z y ' ) ; 
 v a r   R E A C T _ S C O P E _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . s c o p e ' ) ; 
 v a r   R E A C T _ D E B U G _ T R A C I N G _ M O D E _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . d e b u g _ t r a c e _ m o d e ' ) ; 
 v a r   R E A C T _ O F F S C R E E N _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . o f f s c r e e n ' ) ; 
 v a r   R E A C T _ L E G A C Y _ H I D D E N _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . l e g a c y _ h i d d e n ' ) ; 
 v a r   R E A C T _ C A C H E _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . c a c h e ' ) ; 
 v a r   R E A C T _ T R A C I N G _ M A R K E R _ T Y P E   =     S y m b o l . f o r ( ' r e a c t . t r a c i n g _ m a r k e r ' ) ; 
 v a r   M A Y B E _ I T E R A T O R _ S Y M B O L   =     S y m b o l . i t e r a t o r ; 
 v a r   F A U X _ I T E R A T O R _ S Y M B O L   =   ' @ @ i t e r a t o r ' ; 
 f u n c t i o n   g e t I t e r a t o r F n ( m a y b e I t e r a b l e )   { 
     i f   ( m a y b e I t e r a b l e   = = =   n u l l   | |   t y p e o f   m a y b e I t e r a b l e   ! = =   ' o b j e c t ' )   { 
         r e t u r n   n u l l ; 
     } 
 
     v a r   m a y b e I t e r a t o r   =   M A Y B E _ I T E R A T O R _ S Y M B O L   & &   m a y b e I t e r a b l e [ M A Y B E _ I T E R A T O R _ S Y M B O L ]   | |   m a y b e I t e r a b l e [ F A U X _ I T E R A T O R _ S Y M B O L ] ; 
 
     i f   ( t y p e o f   m a y b e I t e r a t o r   = = =   ' f u n c t i o n ' )   { 
         r e t u r n   m a y b e I t e r a t o r ; 
     } 
 
     r e t u r n   n u l l ; 
 } 
 
 v a r   a s s i g n   =   O b j e c t . a s s i g n ; 
 
 / /   H e l p e r s   t o   p a t c h   c o n s o l e . l o g s   t o   a v o i d   l o g g i n g   d u r i n g   s i d e - e f f e c t   f r e e 
 / /   r e p l a y i n g   o n   r e n d e r   f u n c t i o n .   T h i s   c u r r e n t l y   o n l y   p a t c h e s   t h e   o b j e c t 
 / /   l a z i l y   w h i c h   w o n ' t   c o v e r   i f   t h e   l o g   f u n c t i o n   w a s   e x t r a c t e d   e a g e r l y . 
 / /   W e   c o u l d   a l s o   e a g e r l y   p a t c h   t h e   m e t h o d . 
 v a r   d i s a b l e d D e p t h   =   0 ; 
 v a r   p r e v L o g ; 
 v a r   p r e v I n f o ; 
 v a r   p r e v W a r n ; 
 v a r   p r e v E r r o r ; 
 v a r   p r e v G r o u p ; 
 v a r   p r e v G r o u p C o l l a p s e d ; 
 v a r   p r e v G r o u p E n d ; 
 
 f u n c t i o n   d i s a b l e d L o g ( )   { } 
 
 d i s a b l e d L o g . _ _ r e a c t D i s a b l e d L o g   =   t r u e ; 
 f u n c t i o n   d i s a b l e L o g s ( )   { 
     { 
         i f   ( d i s a b l e d D e p t h   = = =   0 )   { 
             / *   e s l i n t - d i s a b l e   r e a c t - i n t e r n a l / n o - p r o d u c t i o n - l o g g i n g   * / 
             p r e v L o g   =   c o n s o l e . l o g ; 
             p r e v I n f o   =   c o n s o l e . i n f o ; 
             p r e v W a r n   =   c o n s o l e . w a r n ; 
             p r e v E r r o r   =   c o n s o l e . e r r o r ; 
             p r e v G r o u p   =   c o n s o l e . g r o u p ; 
             p r e v G r o u p C o l l a p s e d   =   c o n s o l e . g r o u p C o l l a p s e d ; 
             p r e v G r o u p E n d   =   c o n s o l e . g r o u p E n d ;   / /   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 9 0 9 9 
 
             v a r   p r o p s   =   { 
                 c o n f i g u r a b l e :   t r u e , 
                 e n u m e r a b l e :   t r u e , 
                 v a l u e :   d i s a b l e d L o g , 
                 w r i t a b l e :   t r u e 
             } ;   / /   $ F l o w F i x M e   F l o w   t h i n k s   c o n s o l e   i s   i m m u t a b l e . 
 
             O b j e c t . d e f i n e P r o p e r t i e s ( c o n s o l e ,   { 
                 i n f o :   p r o p s , 
                 l o g :   p r o p s , 
                 w a r n :   p r o p s , 
                 e r r o r :   p r o p s , 
                 g r o u p :   p r o p s , 
                 g r o u p C o l l a p s e d :   p r o p s , 
                 g r o u p E n d :   p r o p s 
             } ) ; 
             / *   e s l i n t - e n a b l e   r e a c t - i n t e r n a l / n o - p r o d u c t i o n - l o g g i n g   * / 
         } 
 
         d i s a b l e d D e p t h + + ; 
     } 
 } 
 f u n c t i o n   r e e n a b l e L o g s ( )   { 
     { 
         d i s a b l e d D e p t h - - ; 
 
         i f   ( d i s a b l e d D e p t h   = = =   0 )   { 
             / *   e s l i n t - d i s a b l e   r e a c t - i n t e r n a l / n o - p r o d u c t i o n - l o g g i n g   * / 
             v a r   p r o p s   =   { 
                 c o n f i g u r a b l e :   t r u e , 
                 e n u m e r a b l e :   t r u e , 
                 w r i t a b l e :   t r u e 
             } ;   / /   $ F l o w F i x M e   F l o w   t h i n k s   c o n s o l e   i s   i m m u t a b l e . 
 
             O b j e c t . d e f i n e P r o p e r t i e s ( c o n s o l e ,   { 
                 l o g :   a s s i g n ( { } ,   p r o p s ,   { 
                     v a l u e :   p r e v L o g 
                 } ) , 
                 i n f o :   a s s i g n ( { } ,   p r o p s ,   { 
                     v a l u e :   p r e v I n f o 
                 } ) , 
                 w a r n :   a s s i g n ( { } ,   p r o p s ,   { 
                     v a l u e :   p r e v W a r n 
                 } ) , 
                 e r r o r :   a s s i g n ( { } ,   p r o p s ,   { 
                     v a l u e :   p r e v E r r o r 
                 } ) , 
                 g r o u p :   a s s i g n ( { } ,   p r o p s ,   { 
                     v a l u e :   p r e v G r o u p 
                 } ) , 
                 g r o u p C o l l a p s e d :   a s s i g n ( { } ,   p r o p s ,   { 
                     v a l u e :   p r e v G r o u p C o l l a p s e d 
                 } ) , 
                 g r o u p E n d :   a s s i g n ( { } ,   p r o p s ,   { 
                     v a l u e :   p r e v G r o u p E n d 
                 } ) 
             } ) ; 
             / *   e s l i n t - e n a b l e   r e a c t - i n t e r n a l / n o - p r o d u c t i o n - l o g g i n g   * / 
         } 
 
         i f   ( d i s a b l e d D e p t h   <   0 )   { 
             e r r o r ( ' d i s a b l e d D e p t h   f e l l   b e l o w   z e r o .   '   +   ' T h i s   i s   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
         } 
     } 
 } 
 
 v a r   R e a c t C u r r e n t D i s p a t c h e r   =   R e a c t S h a r e d I n t e r n a l s . R e a c t C u r r e n t D i s p a t c h e r ; 
 v a r   p r e f i x ; 
 f u n c t i o n   d e s c r i b e B u i l t I n C o m p o n e n t F r a m e ( n a m e ,   s o u r c e ,   o w n e r F n )   { 
     { 
         i f   ( p r e f i x   = = =   u n d e f i n e d )   { 
             / /   E x t r a c t   t h e   V M   s p e c i f i c   p r e f i x   u s e d   b y   e a c h   l i n e . 
             t r y   { 
                 t h r o w   E r r o r ( ) ; 
             }   c a t c h   ( x )   { 
                 v a r   m a t c h   =   x . s t a c k . t r i m ( ) . m a t c h ( / \ n (   * ( a t   ) ? ) / ) ; 
                 p r e f i x   =   m a t c h   & &   m a t c h [ 1 ]   | |   ' ' ; 
             } 
         }   / /   W e   u s e   t h e   p r e f i x   t o   e n s u r e   o u r   s t a c k s   l i n e   u p   w i t h   n a t i v e   s t a c k   f r a m e s . 
 
 
         r e t u r n   ' \ n '   +   p r e f i x   +   n a m e ; 
     } 
 } 
 v a r   r e e n t r y   =   f a l s e ; 
 v a r   c o m p o n e n t F r a m e C a c h e ; 
 
 { 
     v a r   P o s s i b l y W e a k M a p   =   t y p e o f   W e a k M a p   = = =   ' f u n c t i o n '   ?   W e a k M a p   :   M a p ; 
     c o m p o n e n t F r a m e C a c h e   =   n e w   P o s s i b l y W e a k M a p ( ) ; 
 } 
 
 f u n c t i o n   d e s c r i b e N a t i v e C o m p o n e n t F r a m e ( f n ,   c o n s t r u c t )   { 
     / /   I f   s o m e t h i n g   a s k e d   f o r   a   s t a c k   i n s i d e   a   f a k e   r e n d e r ,   i t   s h o u l d   g e t   i g n o r e d . 
     i f   (   ! f n   | |   r e e n t r y )   { 
         r e t u r n   ' ' ; 
     } 
 
     { 
         v a r   f r a m e   =   c o m p o n e n t F r a m e C a c h e . g e t ( f n ) ; 
 
         i f   ( f r a m e   ! = =   u n d e f i n e d )   { 
             r e t u r n   f r a m e ; 
         } 
     } 
 
     v a r   c o n t r o l ; 
     r e e n t r y   =   t r u e ; 
     v a r   p r e v i o u s P r e p a r e S t a c k T r a c e   =   E r r o r . p r e p a r e S t a c k T r a c e ;   / /   $ F l o w F i x M e   I t   d o e s   a c c e p t   u n d e f i n e d . 
 
     E r r o r . p r e p a r e S t a c k T r a c e   =   u n d e f i n e d ; 
     v a r   p r e v i o u s D i s p a t c h e r ; 
 
     { 
         p r e v i o u s D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r . c u r r e n t ;   / /   S e t   t h e   d i s p a t c h e r   i n   D E V   b e c a u s e   t h i s   m i g h t   b e   c a l l   i n   t h e   r e n d e r   f u n c t i o n 
         / /   f o r   w a r n i n g s . 
 
         R e a c t C u r r e n t D i s p a t c h e r . c u r r e n t   =   n u l l ; 
         d i s a b l e L o g s ( ) ; 
     } 
 
     t r y   { 
         / /   T h i s   s h o u l d   t h r o w . 
         i f   ( c o n s t r u c t )   { 
             / /   S o m e t h i n g   s h o u l d   b e   s e t t i n g   t h e   p r o p s   i n   t h e   c o n s t r u c t o r . 
             v a r   F a k e   =   f u n c t i o n   ( )   { 
                 t h r o w   E r r o r ( ) ; 
             } ;   / /   $ F l o w F i x M e 
 
 
             O b j e c t . d e f i n e P r o p e r t y ( F a k e . p r o t o t y p e ,   ' p r o p s ' ,   { 
                 s e t :   f u n c t i o n   ( )   { 
                     / /   W e   u s e   a   t h r o w i n g   s e t t e r   i n s t e a d   o f   f r o z e n   o r   n o n - w r i t a b l e   p r o p s 
                     / /   b e c a u s e   t h a t   w o n ' t   t h r o w   i n   a   n o n - s t r i c t   m o d e   f u n c t i o n . 
                     t h r o w   E r r o r ( ) ; 
                 } 
             } ) ; 
 
             i f   ( t y p e o f   R e f l e c t   = = =   ' o b j e c t '   & &   R e f l e c t . c o n s t r u c t )   { 
                 / /   W e   c o n s t r u c t   a   d i f f e r e n t   c o n t r o l   f o r   t h i s   c a s e   t o   i n c l u d e   a n y   e x t r a 
                 / /   f r a m e s   a d d e d   b y   t h e   c o n s t r u c t   c a l l . 
                 t r y   { 
                     R e f l e c t . c o n s t r u c t ( F a k e ,   [ ] ) ; 
                 }   c a t c h   ( x )   { 
                     c o n t r o l   =   x ; 
                 } 
 
                 R e f l e c t . c o n s t r u c t ( f n ,   [ ] ,   F a k e ) ; 
             }   e l s e   { 
                 t r y   { 
                     F a k e . c a l l ( ) ; 
                 }   c a t c h   ( x )   { 
                     c o n t r o l   =   x ; 
                 } 
 
                 f n . c a l l ( F a k e . p r o t o t y p e ) ; 
             } 
         }   e l s e   { 
             t r y   { 
                 t h r o w   E r r o r ( ) ; 
             }   c a t c h   ( x )   { 
                 c o n t r o l   =   x ; 
             } 
 
             f n ( ) ; 
         } 
     }   c a t c h   ( s a m p l e )   { 
         / /   T h i s   i s   i n l i n e d   m a n u a l l y   b e c a u s e   c l o s u r e   d o e s n ' t   d o   i t   f o r   u s . 
         i f   ( s a m p l e   & &   c o n t r o l   & &   t y p e o f   s a m p l e . s t a c k   = = =   ' s t r i n g ' )   { 
             / /   T h i s   e x t r a c t s   t h e   f i r s t   f r a m e   f r o m   t h e   s a m p l e   t h a t   i s n ' t   a l s o   i n   t h e   c o n t r o l . 
             / /   S k i p p i n g   o n e   f r a m e   t h a t   w e   a s s u m e   i s   t h e   f r a m e   t h a t   c a l l s   t h e   t w o . 
             v a r   s a m p l e L i n e s   =   s a m p l e . s t a c k . s p l i t ( ' \ n ' ) ; 
             v a r   c o n t r o l L i n e s   =   c o n t r o l . s t a c k . s p l i t ( ' \ n ' ) ; 
             v a r   s   =   s a m p l e L i n e s . l e n g t h   -   1 ; 
             v a r   c   =   c o n t r o l L i n e s . l e n g t h   -   1 ; 
 
             w h i l e   ( s   > =   1   & &   c   > =   0   & &   s a m p l e L i n e s [ s ]   ! = =   c o n t r o l L i n e s [ c ] )   { 
                 / /   W e   e x p e c t   a t   l e a s t   o n e   s t a c k   f r a m e   t o   b e   s h a r e d . 
                 / /   T y p i c a l l y   t h i s   w i l l   b e   t h e   r o o t   m o s t   o n e .   H o w e v e r ,   s t a c k   f r a m e s   m a y   b e 
                 / /   c u t   o f f   d u e   t o   m a x i m u m   s t a c k   l i m i t s .   I n   t h i s   c a s e ,   o n e   m a y b e   c u t   o f f 
                 / /   e a r l i e r   t h a n   t h e   o t h e r .   W e   a s s u m e   t h a t   t h e   s a m p l e   i s   l o n g e r   o r   t h e   s a m e 
                 / /   a n d   t h e r e   f o r   c u t   o f f   e a r l i e r .   S o   w e   s h o u l d   f i n d   t h e   r o o t   m o s t   f r a m e   i n 
                 / /   t h e   s a m p l e   s o m e w h e r e   i n   t h e   c o n t r o l . 
                 c - - ; 
             } 
 
             f o r   ( ;   s   > =   1   & &   c   > =   0 ;   s - - ,   c - - )   { 
                 / /   N e x t   w e   f i n d   t h e   f i r s t   o n e   t h a t   i s n ' t   t h e   s a m e   w h i c h   s h o u l d   b e   t h e 
                 / /   f r a m e   t h a t   c a l l e d   o u r   s a m p l e   f u n c t i o n   a n d   t h e   c o n t r o l . 
                 i f   ( s a m p l e L i n e s [ s ]   ! = =   c o n t r o l L i n e s [ c ] )   { 
                     / /   I n   V 8 ,   t h e   f i r s t   l i n e   i s   d e s c r i b i n g   t h e   m e s s a g e   b u t   o t h e r   V M s   d o n ' t . 
                     / /   I f   w e ' r e   a b o u t   t o   r e t u r n   t h e   f i r s t   l i n e ,   a n d   t h e   c o n t r o l   i s   a l s o   o n   t h e   s a m e 
                     / /   l i n e ,   t h a t ' s   a   p r e t t y   g o o d   i n d i c a t o r   t h a t   o u r   s a m p l e   t h r e w   a t   s a m e   l i n e   a s 
                     / /   t h e   c o n t r o l .   I . e .   b e f o r e   w e   e n t e r e d   t h e   s a m p l e   f r a m e .   S o   w e   i g n o r e   t h i s   r e s u l t . 
                     / /   T h i s   c a n   h a p p e n   i f   y o u   p a s s e d   a   c l a s s   t o   f u n c t i o n   c o m p o n e n t ,   o r   n o n - f u n c t i o n . 
                     i f   ( s   ! = =   1   | |   c   ! = =   1 )   { 
                         d o   { 
                             s - - ; 
                             c - - ;   / /   W e   m a y   s t i l l   h a v e   s i m i l a r   i n t e r m e d i a t e   f r a m e s   f r o m   t h e   c o n s t r u c t   c a l l . 
                             / /   T h e   n e x t   o n e   t h a t   i s n ' t   t h e   s a m e   s h o u l d   b e   o u r   m a t c h   t h o u g h . 
 
                             i f   ( c   <   0   | |   s a m p l e L i n e s [ s ]   ! = =   c o n t r o l L i n e s [ c ] )   { 
                                 / /   V 8   a d d s   a   " n e w "   p r e f i x   f o r   n a t i v e   c l a s s e s .   L e t ' s   r e m o v e   i t   t o   m a k e   i t   p r e t t i e r . 
                                 v a r   _ f r a m e   =   ' \ n '   +   s a m p l e L i n e s [ s ] . r e p l a c e ( '   a t   n e w   ' ,   '   a t   ' ) ;   / /   I f   o u r   c o m p o n e n t   f r a m e   i s   l a b e l e d   " < a n o n y m o u s > " 
                                 / /   b u t   w e   h a v e   a   u s e r - p r o v i d e d   " d i s p l a y N a m e " 
                                 / /   s p l i c e   i t   i n   t o   m a k e   t h e   s t a c k   m o r e   r e a d a b l e . 
 
 
                                 i f   ( f n . d i s p l a y N a m e   & &   _ f r a m e . i n c l u d e s ( ' < a n o n y m o u s > ' ) )   { 
                                     _ f r a m e   =   _ f r a m e . r e p l a c e ( ' < a n o n y m o u s > ' ,   f n . d i s p l a y N a m e ) ; 
                                 } 
 
                                 { 
                                     i f   ( t y p e o f   f n   = = =   ' f u n c t i o n ' )   { 
                                         c o m p o n e n t F r a m e C a c h e . s e t ( f n ,   _ f r a m e ) ; 
                                     } 
                                 }   / /   R e t u r n   t h e   l i n e   w e   f o u n d . 
 
 
                                 r e t u r n   _ f r a m e ; 
                             } 
                         }   w h i l e   ( s   > =   1   & &   c   > =   0 ) ; 
                     } 
 
                     b r e a k ; 
                 } 
             } 
         } 
     }   f i n a l l y   { 
         r e e n t r y   =   f a l s e ; 
 
         { 
             R e a c t C u r r e n t D i s p a t c h e r . c u r r e n t   =   p r e v i o u s D i s p a t c h e r ; 
             r e e n a b l e L o g s ( ) ; 
         } 
 
         E r r o r . p r e p a r e S t a c k T r a c e   =   p r e v i o u s P r e p a r e S t a c k T r a c e ; 
     }   / /   F a l l b a c k   t o   j u s t   u s i n g   t h e   n a m e   i f   w e   c o u l d n ' t   m a k e   i t   t h r o w . 
 
 
     v a r   n a m e   =   f n   ?   f n . d i s p l a y N a m e   | |   f n . n a m e   :   ' ' ; 
     v a r   s y n t h e t i c F r a m e   =   n a m e   ?   d e s c r i b e B u i l t I n C o m p o n e n t F r a m e ( n a m e )   :   ' ' ; 
 
     { 
         i f   ( t y p e o f   f n   = = =   ' f u n c t i o n ' )   { 
             c o m p o n e n t F r a m e C a c h e . s e t ( f n ,   s y n t h e t i c F r a m e ) ; 
         } 
     } 
 
     r e t u r n   s y n t h e t i c F r a m e ; 
 } 
 
 f u n c t i o n   d e s c r i b e C l a s s C o m p o n e n t F r a m e ( c t o r ,   s o u r c e ,   o w n e r F n )   { 
     { 
         r e t u r n   d e s c r i b e N a t i v e C o m p o n e n t F r a m e ( c t o r ,   t r u e ) ; 
     } 
 } 
 f u n c t i o n   d e s c r i b e F u n c t i o n C o m p o n e n t F r a m e ( f n ,   s o u r c e ,   o w n e r F n )   { 
     { 
         r e t u r n   d e s c r i b e N a t i v e C o m p o n e n t F r a m e ( f n ,   f a l s e ) ; 
     } 
 } 
 
 f u n c t i o n   s h o u l d C o n s t r u c t ( C o m p o n e n t )   { 
     v a r   p r o t o t y p e   =   C o m p o n e n t . p r o t o t y p e ; 
     r e t u r n   ! ! ( p r o t o t y p e   & &   p r o t o t y p e . i s R e a c t C o m p o n e n t ) ; 
 } 
 
 f u n c t i o n   d e s c r i b e U n k n o w n E l e m e n t T y p e F r a m e I n D E V ( t y p e ,   s o u r c e ,   o w n e r F n )   { 
 
     i f   ( t y p e   = =   n u l l )   { 
         r e t u r n   ' ' ; 
     } 
 
     i f   ( t y p e o f   t y p e   = = =   ' f u n c t i o n ' )   { 
         { 
             r e t u r n   d e s c r i b e N a t i v e C o m p o n e n t F r a m e ( t y p e ,   s h o u l d C o n s t r u c t ( t y p e ) ) ; 
         } 
     } 
 
     i f   ( t y p e o f   t y p e   = = =   ' s t r i n g ' )   { 
         r e t u r n   d e s c r i b e B u i l t I n C o m p o n e n t F r a m e ( t y p e ) ; 
     } 
 
     s w i t c h   ( t y p e )   { 
         c a s e   R E A C T _ S U S P E N S E _ T Y P E : 
             r e t u r n   d e s c r i b e B u i l t I n C o m p o n e n t F r a m e ( ' S u s p e n s e ' ) ; 
 
         c a s e   R E A C T _ S U S P E N S E _ L I S T _ T Y P E : 
             r e t u r n   d e s c r i b e B u i l t I n C o m p o n e n t F r a m e ( ' S u s p e n s e L i s t ' ) ; 
     } 
 
     i f   ( t y p e o f   t y p e   = = =   ' o b j e c t ' )   { 
         s w i t c h   ( t y p e . $ $ t y p e o f )   { 
             c a s e   R E A C T _ F O R W A R D _ R E F _ T Y P E : 
                 r e t u r n   d e s c r i b e F u n c t i o n C o m p o n e n t F r a m e ( t y p e . r e n d e r ) ; 
 
             c a s e   R E A C T _ M E M O _ T Y P E : 
                 / /   M e m o   m a y   c o n t a i n   a n y   c o m p o n e n t   t y p e   s o   w e   r e c u r s i v e l y   r e s o l v e   i t . 
                 r e t u r n   d e s c r i b e U n k n o w n E l e m e n t T y p e F r a m e I n D E V ( t y p e . t y p e ,   s o u r c e ,   o w n e r F n ) ; 
 
             c a s e   R E A C T _ L A Z Y _ T Y P E : 
                 { 
                     v a r   l a z y C o m p o n e n t   =   t y p e ; 
                     v a r   p a y l o a d   =   l a z y C o m p o n e n t . _ p a y l o a d ; 
                     v a r   i n i t   =   l a z y C o m p o n e n t . _ i n i t ; 
 
                     t r y   { 
                         / /   L a z y   m a y   c o n t a i n   a n y   c o m p o n e n t   t y p e   s o   w e   r e c u r s i v e l y   r e s o l v e   i t . 
                         r e t u r n   d e s c r i b e U n k n o w n E l e m e n t T y p e F r a m e I n D E V ( i n i t ( p a y l o a d ) ,   s o u r c e ,   o w n e r F n ) ; 
                     }   c a t c h   ( x )   { } 
                 } 
         } 
     } 
 
     r e t u r n   ' ' ; 
 } 
 
 f u n c t i o n   d e s c r i b e F i b e r ( f i b e r )   { 
     v a r   o w n e r   =     f i b e r . _ d e b u g O w n e r   ?   f i b e r . _ d e b u g O w n e r . t y p e   :   n u l l   ; 
     v a r   s o u r c e   =     f i b e r . _ d e b u g S o u r c e   ; 
 
     s w i t c h   ( f i b e r . t a g )   { 
         c a s e   H o s t C o m p o n e n t : 
             r e t u r n   d e s c r i b e B u i l t I n C o m p o n e n t F r a m e ( f i b e r . t y p e ) ; 
 
         c a s e   L a z y C o m p o n e n t : 
             r e t u r n   d e s c r i b e B u i l t I n C o m p o n e n t F r a m e ( ' L a z y ' ) ; 
 
         c a s e   S u s p e n s e C o m p o n e n t : 
             r e t u r n   d e s c r i b e B u i l t I n C o m p o n e n t F r a m e ( ' S u s p e n s e ' ) ; 
 
         c a s e   S u s p e n s e L i s t C o m p o n e n t : 
             r e t u r n   d e s c r i b e B u i l t I n C o m p o n e n t F r a m e ( ' S u s p e n s e L i s t ' ) ; 
 
         c a s e   F u n c t i o n C o m p o n e n t : 
         c a s e   I n d e t e r m i n a t e C o m p o n e n t : 
         c a s e   S i m p l e M e m o C o m p o n e n t : 
             r e t u r n   d e s c r i b e F u n c t i o n C o m p o n e n t F r a m e ( f i b e r . t y p e ) ; 
 
         c a s e   F o r w a r d R e f : 
             r e t u r n   d e s c r i b e F u n c t i o n C o m p o n e n t F r a m e ( f i b e r . t y p e . r e n d e r ) ; 
 
         c a s e   C l a s s C o m p o n e n t : 
             r e t u r n   d e s c r i b e C l a s s C o m p o n e n t F r a m e ( f i b e r . t y p e ) ; 
 
         d e f a u l t : 
             r e t u r n   ' ' ; 
     } 
 } 
 
 f u n c t i o n   g e t S t a c k B y F i b e r I n D e v A n d P r o d ( w o r k I n P r o g r e s s )   { 
     t r y   { 
         v a r   i n f o   =   ' ' ; 
         v a r   n o d e   =   w o r k I n P r o g r e s s ; 
 
         d o   { 
             i n f o   + =   d e s c r i b e F i b e r ( n o d e ) ; 
             n o d e   =   n o d e . r e t u r n ; 
         }   w h i l e   ( n o d e ) ; 
 
         r e t u r n   i n f o ; 
     }   c a t c h   ( x )   { 
         r e t u r n   ' \ n E r r o r   g e n e r a t i n g   s t a c k :   '   +   x . m e s s a g e   +   ' \ n '   +   x . s t a c k ; 
     } 
 } 
 
 f u n c t i o n   g e t W r a p p e d N a m e ( o u t e r T y p e ,   i n n e r T y p e ,   w r a p p e r N a m e )   { 
     v a r   d i s p l a y N a m e   =   o u t e r T y p e . d i s p l a y N a m e ; 
 
     i f   ( d i s p l a y N a m e )   { 
         r e t u r n   d i s p l a y N a m e ; 
     } 
 
     v a r   f u n c t i o n N a m e   =   i n n e r T y p e . d i s p l a y N a m e   | |   i n n e r T y p e . n a m e   | |   ' ' ; 
     r e t u r n   f u n c t i o n N a m e   ! = =   ' '   ?   w r a p p e r N a m e   +   " ( "   +   f u n c t i o n N a m e   +   " ) "   :   w r a p p e r N a m e ; 
 }   / /   K e e p   i n   s y n c   w i t h   r e a c t - r e c o n c i l e r / g e t C o m p o n e n t N a m e F r o m F i b e r 
 
 
 f u n c t i o n   g e t C o n t e x t N a m e ( t y p e )   { 
     r e t u r n   t y p e . d i s p l a y N a m e   | |   ' C o n t e x t ' ; 
 }   / /   N o t e   t h a t   t h e   r e c o n c i l e r   p a c k a g e   s h o u l d   g e n e r a l l y   p r e f e r   t o   u s e   g e t C o m p o n e n t N a m e F r o m F i b e r ( )   i n s t e a d . 
 
 
 f u n c t i o n   g e t C o m p o n e n t N a m e F r o m T y p e ( t y p e )   { 
     i f   ( t y p e   = =   n u l l )   { 
         / /   H o s t   r o o t ,   t e x t   n o d e   o r   j u s t   i n v a l i d   t y p e . 
         r e t u r n   n u l l ; 
     } 
 
     { 
         i f   ( t y p e o f   t y p e . t a g   = = =   ' n u m b e r ' )   { 
             e r r o r ( ' R e c e i v e d   a n   u n e x p e c t e d   o b j e c t   i n   g e t C o m p o n e n t N a m e F r o m T y p e ( ) .   '   +   ' T h i s   i s   l i k e l y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
         } 
     } 
 
     i f   ( t y p e o f   t y p e   = = =   ' f u n c t i o n ' )   { 
         r e t u r n   t y p e . d i s p l a y N a m e   | |   t y p e . n a m e   | |   n u l l ; 
     } 
 
     i f   ( t y p e o f   t y p e   = = =   ' s t r i n g ' )   { 
         r e t u r n   t y p e ; 
     } 
 
     s w i t c h   ( t y p e )   { 
         c a s e   R E A C T _ F R A G M E N T _ T Y P E : 
             r e t u r n   ' F r a g m e n t ' ; 
 
         c a s e   R E A C T _ P O R T A L _ T Y P E : 
             r e t u r n   ' P o r t a l ' ; 
 
         c a s e   R E A C T _ P R O F I L E R _ T Y P E : 
             r e t u r n   ' P r o f i l e r ' ; 
 
         c a s e   R E A C T _ S T R I C T _ M O D E _ T Y P E : 
             r e t u r n   ' S t r i c t M o d e ' ; 
 
         c a s e   R E A C T _ S U S P E N S E _ T Y P E : 
             r e t u r n   ' S u s p e n s e ' ; 
 
         c a s e   R E A C T _ S U S P E N S E _ L I S T _ T Y P E : 
             r e t u r n   ' S u s p e n s e L i s t ' ; 
 
     } 
 
     i f   ( t y p e o f   t y p e   = = =   ' o b j e c t ' )   { 
         s w i t c h   ( t y p e . $ $ t y p e o f )   { 
             c a s e   R E A C T _ C O N T E X T _ T Y P E : 
                 v a r   c o n t e x t   =   t y p e ; 
                 r e t u r n   g e t C o n t e x t N a m e ( c o n t e x t )   +   ' . C o n s u m e r ' ; 
 
             c a s e   R E A C T _ P R O V I D E R _ T Y P E : 
                 v a r   p r o v i d e r   =   t y p e ; 
                 r e t u r n   g e t C o n t e x t N a m e ( p r o v i d e r . _ c o n t e x t )   +   ' . P r o v i d e r ' ; 
 
             c a s e   R E A C T _ F O R W A R D _ R E F _ T Y P E : 
                 r e t u r n   g e t W r a p p e d N a m e ( t y p e ,   t y p e . r e n d e r ,   ' F o r w a r d R e f ' ) ; 
 
             c a s e   R E A C T _ M E M O _ T Y P E : 
                 v a r   o u t e r N a m e   =   t y p e . d i s p l a y N a m e   | |   n u l l ; 
 
                 i f   ( o u t e r N a m e   ! = =   n u l l )   { 
                     r e t u r n   o u t e r N a m e ; 
                 } 
 
                 r e t u r n   g e t C o m p o n e n t N a m e F r o m T y p e ( t y p e . t y p e )   | |   ' M e m o ' ; 
 
             c a s e   R E A C T _ L A Z Y _ T Y P E : 
                 { 
                     v a r   l a z y C o m p o n e n t   =   t y p e ; 
                     v a r   p a y l o a d   =   l a z y C o m p o n e n t . _ p a y l o a d ; 
                     v a r   i n i t   =   l a z y C o m p o n e n t . _ i n i t ; 
 
                     t r y   { 
                         r e t u r n   g e t C o m p o n e n t N a m e F r o m T y p e ( i n i t ( p a y l o a d ) ) ; 
                     }   c a t c h   ( x )   { 
                         r e t u r n   n u l l ; 
                     } 
                 } 
 
             / /   e s l i n t - d i s a b l e - n e x t - l i n e   n o - f a l l t h r o u g h 
         } 
     } 
 
     r e t u r n   n u l l ; 
 } 
 
 f u n c t i o n   g e t W r a p p e d N a m e $ 1 ( o u t e r T y p e ,   i n n e r T y p e ,   w r a p p e r N a m e )   { 
     v a r   f u n c t i o n N a m e   =   i n n e r T y p e . d i s p l a y N a m e   | |   i n n e r T y p e . n a m e   | |   ' ' ; 
     r e t u r n   o u t e r T y p e . d i s p l a y N a m e   | |   ( f u n c t i o n N a m e   ! = =   ' '   ?   w r a p p e r N a m e   +   " ( "   +   f u n c t i o n N a m e   +   " ) "   :   w r a p p e r N a m e ) ; 
 }   / /   K e e p   i n   s y n c   w i t h   s h a r e d / g e t C o m p o n e n t N a m e F r o m T y p e 
 
 
 f u n c t i o n   g e t C o n t e x t N a m e $ 1 ( t y p e )   { 
     r e t u r n   t y p e . d i s p l a y N a m e   | |   ' C o n t e x t ' ; 
 } 
 
 f u n c t i o n   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i b e r )   { 
     v a r   t a g   =   f i b e r . t a g , 
             t y p e   =   f i b e r . t y p e ; 
 
     s w i t c h   ( t a g )   { 
         c a s e   C a c h e C o m p o n e n t : 
             r e t u r n   ' C a c h e ' ; 
 
         c a s e   C o n t e x t C o n s u m e r : 
             v a r   c o n t e x t   =   t y p e ; 
             r e t u r n   g e t C o n t e x t N a m e $ 1 ( c o n t e x t )   +   ' . C o n s u m e r ' ; 
 
         c a s e   C o n t e x t P r o v i d e r : 
             v a r   p r o v i d e r   =   t y p e ; 
             r e t u r n   g e t C o n t e x t N a m e $ 1 ( p r o v i d e r . _ c o n t e x t )   +   ' . P r o v i d e r ' ; 
 
         c a s e   D e h y d r a t e d F r a g m e n t : 
             r e t u r n   ' D e h y d r a t e d F r a g m e n t ' ; 
 
         c a s e   F o r w a r d R e f : 
             r e t u r n   g e t W r a p p e d N a m e $ 1 ( t y p e ,   t y p e . r e n d e r ,   ' F o r w a r d R e f ' ) ; 
 
         c a s e   F r a g m e n t : 
             r e t u r n   ' F r a g m e n t ' ; 
 
         c a s e   H o s t C o m p o n e n t : 
             / /   H o s t   c o m p o n e n t   t y p e   i s   t h e   d i s p l a y   n a m e   ( e . g .   " d i v " ,   " V i e w " ) 
             r e t u r n   t y p e ; 
 
         c a s e   H o s t P o r t a l : 
             r e t u r n   ' P o r t a l ' ; 
 
         c a s e   H o s t R o o t : 
             r e t u r n   ' R o o t ' ; 
 
         c a s e   H o s t T e x t : 
             r e t u r n   ' T e x t ' ; 
 
         c a s e   L a z y C o m p o n e n t : 
             / /   N a m e   c o m e s   f r o m   t h e   t y p e   i n   t h i s   c a s e ;   w e   d o n ' t   h a v e   a   t a g . 
             r e t u r n   g e t C o m p o n e n t N a m e F r o m T y p e ( t y p e ) ; 
 
         c a s e   M o d e : 
             i f   ( t y p e   = = =   R E A C T _ S T R I C T _ M O D E _ T Y P E )   { 
                 / /   D o n ' t   b e   l e s s   s p e c i f i c   t h a n   s h a r e d / g e t C o m p o n e n t N a m e F r o m T y p e 
                 r e t u r n   ' S t r i c t M o d e ' ; 
             } 
 
             r e t u r n   ' M o d e ' ; 
 
         c a s e   O f f s c r e e n C o m p o n e n t : 
             r e t u r n   ' O f f s c r e e n ' ; 
 
         c a s e   P r o f i l e r : 
             r e t u r n   ' P r o f i l e r ' ; 
 
         c a s e   S c o p e C o m p o n e n t : 
             r e t u r n   ' S c o p e ' ; 
 
         c a s e   S u s p e n s e C o m p o n e n t : 
             r e t u r n   ' S u s p e n s e ' ; 
 
         c a s e   S u s p e n s e L i s t C o m p o n e n t : 
             r e t u r n   ' S u s p e n s e L i s t ' ; 
 
         c a s e   T r a c i n g M a r k e r C o m p o n e n t : 
             r e t u r n   ' T r a c i n g M a r k e r ' ; 
         / /   T h e   d i s p l a y   n a m e   f o r   t h i s   t a g s   c o m e   f r o m   t h e   u s e r - p r o v i d e d   t y p e : 
 
         c a s e   C l a s s C o m p o n e n t : 
         c a s e   F u n c t i o n C o m p o n e n t : 
         c a s e   I n c o m p l e t e C l a s s C o m p o n e n t : 
         c a s e   I n d e t e r m i n a t e C o m p o n e n t : 
         c a s e   M e m o C o m p o n e n t : 
         c a s e   S i m p l e M e m o C o m p o n e n t : 
             i f   ( t y p e o f   t y p e   = = =   ' f u n c t i o n ' )   { 
                 r e t u r n   t y p e . d i s p l a y N a m e   | |   t y p e . n a m e   | |   n u l l ; 
             } 
 
             i f   ( t y p e o f   t y p e   = = =   ' s t r i n g ' )   { 
                 r e t u r n   t y p e ; 
             } 
 
             b r e a k ; 
 
     } 
 
     r e t u r n   n u l l ; 
 } 
 
 v a r   R e a c t D e b u g C u r r e n t F r a m e   =   R e a c t S h a r e d I n t e r n a l s . R e a c t D e b u g C u r r e n t F r a m e ; 
 v a r   c u r r e n t   =   n u l l ; 
 v a r   i s R e n d e r i n g   =   f a l s e ; 
 f u n c t i o n   g e t C u r r e n t F i b e r O w n e r N a m e I n D e v O r N u l l ( )   { 
     { 
         i f   ( c u r r e n t   = = =   n u l l )   { 
             r e t u r n   n u l l ; 
         } 
 
         v a r   o w n e r   =   c u r r e n t . _ d e b u g O w n e r ; 
 
         i f   ( o w n e r   ! = =   n u l l   & &   t y p e o f   o w n e r   ! = =   ' u n d e f i n e d ' )   { 
             r e t u r n   g e t C o m p o n e n t N a m e F r o m F i b e r ( o w n e r ) ; 
         } 
     } 
 
     r e t u r n   n u l l ; 
 } 
 
 f u n c t i o n   g e t C u r r e n t F i b e r S t a c k I n D e v ( )   { 
     { 
         i f   ( c u r r e n t   = = =   n u l l )   { 
             r e t u r n   ' ' ; 
         }   / /   S a f e   b e c a u s e   i f   c u r r e n t   f i b e r   e x i s t s ,   w e   a r e   r e c o n c i l i n g , 
         / /   a n d   i t   i s   g u a r a n t e e d   t o   b e   t h e   w o r k - i n - p r o g r e s s   v e r s i o n . 
 
 
         r e t u r n   g e t S t a c k B y F i b e r I n D e v A n d P r o d ( c u r r e n t ) ; 
     } 
 } 
 
 f u n c t i o n   r e s e t C u r r e n t F i b e r ( )   { 
     { 
         R e a c t D e b u g C u r r e n t F r a m e . g e t C u r r e n t S t a c k   =   n u l l ; 
         c u r r e n t   =   n u l l ; 
         i s R e n d e r i n g   =   f a l s e ; 
     } 
 } 
 f u n c t i o n   s e t C u r r e n t F i b e r ( f i b e r )   { 
     { 
         R e a c t D e b u g C u r r e n t F r a m e . g e t C u r r e n t S t a c k   =   f i b e r   = = =   n u l l   ?   n u l l   :   g e t C u r r e n t F i b e r S t a c k I n D e v ; 
         c u r r e n t   =   f i b e r ; 
         i s R e n d e r i n g   =   f a l s e ; 
     } 
 } 
 f u n c t i o n   g e t C u r r e n t F i b e r ( )   { 
     { 
         r e t u r n   c u r r e n t ; 
     } 
 } 
 f u n c t i o n   s e t I s R e n d e r i n g ( r e n d e r i n g )   { 
     { 
         i s R e n d e r i n g   =   r e n d e r i n g ; 
     } 
 } 
 
 / /   F l o w   d o e s   n o t   a l l o w   s t r i n g   c o n c a t e n a t i o n   o f   m o s t   n o n - s t r i n g   t y p e s .   T o   w o r k 
 / /   a r o u n d   t h i s   l i m i t a t i o n ,   w e   u s e   a n   o p a q u e   t y p e   t h a t   c a n   o n l y   b e   o b t a i n e d   b y 
 / /   p a s s i n g   t h e   v a l u e   t h r o u g h   g e t T o S t r i n g V a l u e   f i r s t . 
 f u n c t i o n   t o S t r i n g ( v a l u e )   { 
     / /   T h e   c o e r c i o n   s a f e t y   c h e c k   i s   p e r f o r m e d   i n   g e t T o S t r i n g V a l u e ( ) . 
     / /   e s l i n t - d i s a b l e - n e x t - l i n e   r e a c t - i n t e r n a l / s a f e - s t r i n g - c o e r c i o n 
     r e t u r n   ' '   +   v a l u e ; 
 } 
 f u n c t i o n   g e t T o S t r i n g V a l u e ( v a l u e )   { 
     s w i t c h   ( t y p e o f   v a l u e )   { 
         c a s e   ' b o o l e a n ' : 
         c a s e   ' n u m b e r ' : 
         c a s e   ' s t r i n g ' : 
         c a s e   ' u n d e f i n e d ' : 
             r e t u r n   v a l u e ; 
 
         c a s e   ' o b j e c t ' : 
             { 
                 c h e c k F o r m F i e l d V a l u e S t r i n g C o e r c i o n ( v a l u e ) ; 
             } 
 
             r e t u r n   v a l u e ; 
 
         d e f a u l t : 
             / /   f u n c t i o n ,   s y m b o l   a r e   a s s i g n e d   a s   e m p t y   s t r i n g s 
             r e t u r n   ' ' ; 
     } 
 } 
 
 v a r   h a s R e a d O n l y V a l u e   =   { 
     b u t t o n :   t r u e , 
     c h e c k b o x :   t r u e , 
     i m a g e :   t r u e , 
     h i d d e n :   t r u e , 
     r a d i o :   t r u e , 
     r e s e t :   t r u e , 
     s u b m i t :   t r u e 
 } ; 
 f u n c t i o n   c h e c k C o n t r o l l e d V a l u e P r o p s ( t a g N a m e ,   p r o p s )   { 
     { 
         i f   ( ! ( h a s R e a d O n l y V a l u e [ p r o p s . t y p e ]   | |   p r o p s . o n C h a n g e   | |   p r o p s . o n I n p u t   | |   p r o p s . r e a d O n l y   | |   p r o p s . d i s a b l e d   | |   p r o p s . v a l u e   = =   n u l l ) )   { 
             e r r o r ( ' Y o u   p r o v i d e d   a   ` v a l u e `   p r o p   t o   a   f o r m   f i e l d   w i t h o u t   a n   '   +   ' ` o n C h a n g e `   h a n d l e r .   T h i s   w i l l   r e n d e r   a   r e a d - o n l y   f i e l d .   I f   '   +   ' t h e   f i e l d   s h o u l d   b e   m u t a b l e   u s e   ` d e f a u l t V a l u e ` .   O t h e r w i s e ,   '   +   ' s e t   e i t h e r   ` o n C h a n g e `   o r   ` r e a d O n l y ` . ' ) ; 
         } 
 
         i f   ( ! ( p r o p s . o n C h a n g e   | |   p r o p s . r e a d O n l y   | |   p r o p s . d i s a b l e d   | |   p r o p s . c h e c k e d   = =   n u l l ) )   { 
             e r r o r ( ' Y o u   p r o v i d e d   a   ` c h e c k e d `   p r o p   t o   a   f o r m   f i e l d   w i t h o u t   a n   '   +   ' ` o n C h a n g e `   h a n d l e r .   T h i s   w i l l   r e n d e r   a   r e a d - o n l y   f i e l d .   I f   '   +   ' t h e   f i e l d   s h o u l d   b e   m u t a b l e   u s e   ` d e f a u l t C h e c k e d ` .   O t h e r w i s e ,   '   +   ' s e t   e i t h e r   ` o n C h a n g e `   o r   ` r e a d O n l y ` . ' ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   i s C h e c k a b l e ( e l e m )   { 
     v a r   t y p e   =   e l e m . t y p e ; 
     v a r   n o d e N a m e   =   e l e m . n o d e N a m e ; 
     r e t u r n   n o d e N a m e   & &   n o d e N a m e . t o L o w e r C a s e ( )   = = =   ' i n p u t '   & &   ( t y p e   = = =   ' c h e c k b o x '   | |   t y p e   = = =   ' r a d i o ' ) ; 
 } 
 
 f u n c t i o n   g e t T r a c k e r ( n o d e )   { 
     r e t u r n   n o d e . _ v a l u e T r a c k e r ; 
 } 
 
 f u n c t i o n   d e t a c h T r a c k e r ( n o d e )   { 
     n o d e . _ v a l u e T r a c k e r   =   n u l l ; 
 } 
 
 f u n c t i o n   g e t V a l u e F r o m N o d e ( n o d e )   { 
     v a r   v a l u e   =   ' ' ; 
 
     i f   ( ! n o d e )   { 
         r e t u r n   v a l u e ; 
     } 
 
     i f   ( i s C h e c k a b l e ( n o d e ) )   { 
         v a l u e   =   n o d e . c h e c k e d   ?   ' t r u e '   :   ' f a l s e ' ; 
     }   e l s e   { 
         v a l u e   =   n o d e . v a l u e ; 
     } 
 
     r e t u r n   v a l u e ; 
 } 
 
 f u n c t i o n   t r a c k V a l u e O n N o d e ( n o d e )   { 
     v a r   v a l u e F i e l d   =   i s C h e c k a b l e ( n o d e )   ?   ' c h e c k e d '   :   ' v a l u e ' ; 
     v a r   d e s c r i p t o r   =   O b j e c t . g e t O w n P r o p e r t y D e s c r i p t o r ( n o d e . c o n s t r u c t o r . p r o t o t y p e ,   v a l u e F i e l d ) ; 
 
     { 
         c h e c k F o r m F i e l d V a l u e S t r i n g C o e r c i o n ( n o d e [ v a l u e F i e l d ] ) ; 
     } 
 
     v a r   c u r r e n t V a l u e   =   ' '   +   n o d e [ v a l u e F i e l d ] ;   / /   i f   s o m e o n e   h a s   a l r e a d y   d e f i n e d   a   v a l u e   o r   S a f a r i ,   t h e n   b a i l 
     / /   a n d   d o n ' t   t r a c k   v a l u e   w i l l   c a u s e   o v e r   r e p o r t i n g   o f   c h a n g e s , 
     / /   b u t   i t ' s   b e t t e r   t h e n   a   h a r d   f a i l u r e 
     / /   ( n e e d e d   f o r   c e r t a i n   t e s t s   t h a t   s p y O n   i n p u t   v a l u e s   a n d   S a f a r i ) 
 
     i f   ( n o d e . h a s O w n P r o p e r t y ( v a l u e F i e l d )   | |   t y p e o f   d e s c r i p t o r   = = =   ' u n d e f i n e d '   | |   t y p e o f   d e s c r i p t o r . g e t   ! = =   ' f u n c t i o n '   | |   t y p e o f   d e s c r i p t o r . s e t   ! = =   ' f u n c t i o n ' )   { 
         r e t u r n ; 
     } 
 
     v a r   g e t   =   d e s c r i p t o r . g e t , 
             s e t   =   d e s c r i p t o r . s e t ; 
     O b j e c t . d e f i n e P r o p e r t y ( n o d e ,   v a l u e F i e l d ,   { 
         c o n f i g u r a b l e :   t r u e , 
         g e t :   f u n c t i o n   ( )   { 
             r e t u r n   g e t . c a l l ( t h i s ) ; 
         } , 
         s e t :   f u n c t i o n   ( v a l u e )   { 
             { 
                 c h e c k F o r m F i e l d V a l u e S t r i n g C o e r c i o n ( v a l u e ) ; 
             } 
 
             c u r r e n t V a l u e   =   ' '   +   v a l u e ; 
             s e t . c a l l ( t h i s ,   v a l u e ) ; 
         } 
     } ) ;   / /   W e   c o u l d ' v e   p a s s e d   t h i s   t h e   f i r s t   t i m e 
     / /   b u t   i t   t r i g g e r s   a   b u g   i n   I E 1 1   a n d   E d g e   1 4 / 1 5 . 
     / /   C a l l i n g   d e f i n e P r o p e r t y ( )   a g a i n   s h o u l d   b e   e q u i v a l e n t . 
     / /   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 1 7 6 8 
 
     O b j e c t . d e f i n e P r o p e r t y ( n o d e ,   v a l u e F i e l d ,   { 
         e n u m e r a b l e :   d e s c r i p t o r . e n u m e r a b l e 
     } ) ; 
     v a r   t r a c k e r   =   { 
         g e t V a l u e :   f u n c t i o n   ( )   { 
             r e t u r n   c u r r e n t V a l u e ; 
         } , 
         s e t V a l u e :   f u n c t i o n   ( v a l u e )   { 
             { 
                 c h e c k F o r m F i e l d V a l u e S t r i n g C o e r c i o n ( v a l u e ) ; 
             } 
 
             c u r r e n t V a l u e   =   ' '   +   v a l u e ; 
         } , 
         s t o p T r a c k i n g :   f u n c t i o n   ( )   { 
             d e t a c h T r a c k e r ( n o d e ) ; 
             d e l e t e   n o d e [ v a l u e F i e l d ] ; 
         } 
     } ; 
     r e t u r n   t r a c k e r ; 
 } 
 
 f u n c t i o n   t r a c k ( n o d e )   { 
     i f   ( g e t T r a c k e r ( n o d e ) )   { 
         r e t u r n ; 
     }   / /   T O D O :   O n c e   i t ' s   j u s t   F i b e r   w e   c a n   m o v e   t h i s   t o   n o d e . _ w r a p p e r S t a t e 
 
 
     n o d e . _ v a l u e T r a c k e r   =   t r a c k V a l u e O n N o d e ( n o d e ) ; 
 } 
 f u n c t i o n   u p d a t e V a l u e I f C h a n g e d ( n o d e )   { 
     i f   ( ! n o d e )   { 
         r e t u r n   f a l s e ; 
     } 
 
     v a r   t r a c k e r   =   g e t T r a c k e r ( n o d e ) ;   / /   i f   t h e r e   i s   n o   t r a c k e r   a t   t h i s   p o i n t   i t ' s   u n l i k e l y 
     / /   t h a t   t r y i n g   a g a i n   w i l l   s u c c e e d 
 
     i f   ( ! t r a c k e r )   { 
         r e t u r n   t r u e ; 
     } 
 
     v a r   l a s t V a l u e   =   t r a c k e r . g e t V a l u e ( ) ; 
     v a r   n e x t V a l u e   =   g e t V a l u e F r o m N o d e ( n o d e ) ; 
 
     i f   ( n e x t V a l u e   ! = =   l a s t V a l u e )   { 
         t r a c k e r . s e t V a l u e ( n e x t V a l u e ) ; 
         r e t u r n   t r u e ; 
     } 
 
     r e t u r n   f a l s e ; 
 } 
 
 f u n c t i o n   g e t A c t i v e E l e m e n t ( d o c )   { 
     d o c   =   d o c   | |   ( t y p e o f   d o c u m e n t   ! = =   ' u n d e f i n e d '   ?   d o c u m e n t   :   u n d e f i n e d ) ; 
 
     i f   ( t y p e o f   d o c   = = =   ' u n d e f i n e d ' )   { 
         r e t u r n   n u l l ; 
     } 
 
     t r y   { 
         r e t u r n   d o c . a c t i v e E l e m e n t   | |   d o c . b o d y ; 
     }   c a t c h   ( e )   { 
         r e t u r n   d o c . b o d y ; 
     } 
 } 
 
 v a r   d i d W a r n V a l u e D e f a u l t V a l u e   =   f a l s e ; 
 v a r   d i d W a r n C h e c k e d D e f a u l t C h e c k e d   =   f a l s e ; 
 v a r   d i d W a r n C o n t r o l l e d T o U n c o n t r o l l e d   =   f a l s e ; 
 v a r   d i d W a r n U n c o n t r o l l e d T o C o n t r o l l e d   =   f a l s e ; 
 
 f u n c t i o n   i s C o n t r o l l e d ( p r o p s )   { 
     v a r   u s e s C h e c k e d   =   p r o p s . t y p e   = = =   ' c h e c k b o x '   | |   p r o p s . t y p e   = = =   ' r a d i o ' ; 
     r e t u r n   u s e s C h e c k e d   ?   p r o p s . c h e c k e d   ! =   n u l l   :   p r o p s . v a l u e   ! =   n u l l ; 
 } 
 / * * 
   *   I m p l e m e n t s   a n   < i n p u t >   h o s t   c o m p o n e n t   t h a t   a l l o w s   s e t t i n g   t h e s e   o p t i o n a l 
   *   p r o p s :   ` c h e c k e d ` ,   ` v a l u e ` ,   ` d e f a u l t C h e c k e d ` ,   a n d   ` d e f a u l t V a l u e ` . 
   * 
   *   I f   ` c h e c k e d `   o r   ` v a l u e `   a r e   n o t   s u p p l i e d   ( o r   n u l l / u n d e f i n e d ) ,   u s e r   a c t i o n s 
   *   t h a t   a f f e c t   t h e   c h e c k e d   s t a t e   o r   v a l u e   w i l l   t r i g g e r   u p d a t e s   t o   t h e   e l e m e n t . 
   * 
   *   I f   t h e y   a r e   s u p p l i e d   ( a n d   n o t   n u l l / u n d e f i n e d ) ,   t h e   r e n d e r e d   e l e m e n t   w i l l   n o t 
   *   t r i g g e r   u p d a t e s   t o   t h e   e l e m e n t .   I n s t e a d ,   t h e   p r o p s   m u s t   c h a n g e   i n   o r d e r   f o r 
   *   t h e   r e n d e r e d   e l e m e n t   t o   b e   u p d a t e d . 
   * 
   *   T h e   r e n d e r e d   e l e m e n t   w i l l   b e   i n i t i a l i z e d   a s   u n c h e c k e d   ( o r   ` d e f a u l t C h e c k e d ` ) 
   *   w i t h   a n   e m p t y   v a l u e   ( o r   ` d e f a u l t V a l u e ` ) . 
   * 
   *   S e e   h t t p : / / w w w . w 3 . o r g / T R / 2 0 1 2 / W D - h t m l 5 - 2 0 1 2 1 0 2 5 / t h e - i n p u t - e l e m e n t . h t m l 
   * / 
 
 
 f u n c t i o n   g e t H o s t P r o p s ( e l e m e n t ,   p r o p s )   { 
     v a r   n o d e   =   e l e m e n t ; 
     v a r   c h e c k e d   =   p r o p s . c h e c k e d ; 
     v a r   h o s t P r o p s   =   a s s i g n ( { } ,   p r o p s ,   { 
         d e f a u l t C h e c k e d :   u n d e f i n e d , 
         d e f a u l t V a l u e :   u n d e f i n e d , 
         v a l u e :   u n d e f i n e d , 
         c h e c k e d :   c h e c k e d   ! =   n u l l   ?   c h e c k e d   :   n o d e . _ w r a p p e r S t a t e . i n i t i a l C h e c k e d 
     } ) ; 
     r e t u r n   h o s t P r o p s ; 
 } 
 f u n c t i o n   i n i t W r a p p e r S t a t e ( e l e m e n t ,   p r o p s )   { 
     { 
         c h e c k C o n t r o l l e d V a l u e P r o p s ( ' i n p u t ' ,   p r o p s ) ; 
 
         i f   ( p r o p s . c h e c k e d   ! = =   u n d e f i n e d   & &   p r o p s . d e f a u l t C h e c k e d   ! = =   u n d e f i n e d   & &   ! d i d W a r n C h e c k e d D e f a u l t C h e c k e d )   { 
             e r r o r ( ' % s   c o n t a i n s   a n   i n p u t   o f   t y p e   % s   w i t h   b o t h   c h e c k e d   a n d   d e f a u l t C h e c k e d   p r o p s .   '   +   ' I n p u t   e l e m e n t s   m u s t   b e   e i t h e r   c o n t r o l l e d   o r   u n c o n t r o l l e d   '   +   ' ( s p e c i f y   e i t h e r   t h e   c h e c k e d   p r o p ,   o r   t h e   d e f a u l t C h e c k e d   p r o p ,   b u t   n o t   '   +   ' b o t h ) .   D e c i d e   b e t w e e n   u s i n g   a   c o n t r o l l e d   o r   u n c o n t r o l l e d   i n p u t   '   +   ' e l e m e n t   a n d   r e m o v e   o n e   o f   t h e s e   p r o p s .   M o r e   i n f o :   '   +   ' h t t p s : / / r e a c t j s . o r g / l i n k / c o n t r o l l e d - c o m p o n e n t s ' ,   g e t C u r r e n t F i b e r O w n e r N a m e I n D e v O r N u l l ( )   | |   ' A   c o m p o n e n t ' ,   p r o p s . t y p e ) ; 
 
             d i d W a r n C h e c k e d D e f a u l t C h e c k e d   =   t r u e ; 
         } 
 
         i f   ( p r o p s . v a l u e   ! = =   u n d e f i n e d   & &   p r o p s . d e f a u l t V a l u e   ! = =   u n d e f i n e d   & &   ! d i d W a r n V a l u e D e f a u l t V a l u e )   { 
             e r r o r ( ' % s   c o n t a i n s   a n   i n p u t   o f   t y p e   % s   w i t h   b o t h   v a l u e   a n d   d e f a u l t V a l u e   p r o p s .   '   +   ' I n p u t   e l e m e n t s   m u s t   b e   e i t h e r   c o n t r o l l e d   o r   u n c o n t r o l l e d   '   +   ' ( s p e c i f y   e i t h e r   t h e   v a l u e   p r o p ,   o r   t h e   d e f a u l t V a l u e   p r o p ,   b u t   n o t   '   +   ' b o t h ) .   D e c i d e   b e t w e e n   u s i n g   a   c o n t r o l l e d   o r   u n c o n t r o l l e d   i n p u t   '   +   ' e l e m e n t   a n d   r e m o v e   o n e   o f   t h e s e   p r o p s .   M o r e   i n f o :   '   +   ' h t t p s : / / r e a c t j s . o r g / l i n k / c o n t r o l l e d - c o m p o n e n t s ' ,   g e t C u r r e n t F i b e r O w n e r N a m e I n D e v O r N u l l ( )   | |   ' A   c o m p o n e n t ' ,   p r o p s . t y p e ) ; 
 
             d i d W a r n V a l u e D e f a u l t V a l u e   =   t r u e ; 
         } 
     } 
 
     v a r   n o d e   =   e l e m e n t ; 
     v a r   d e f a u l t V a l u e   =   p r o p s . d e f a u l t V a l u e   = =   n u l l   ?   ' '   :   p r o p s . d e f a u l t V a l u e ; 
     n o d e . _ w r a p p e r S t a t e   =   { 
         i n i t i a l C h e c k e d :   p r o p s . c h e c k e d   ! =   n u l l   ?   p r o p s . c h e c k e d   :   p r o p s . d e f a u l t C h e c k e d , 
         i n i t i a l V a l u e :   g e t T o S t r i n g V a l u e ( p r o p s . v a l u e   ! =   n u l l   ?   p r o p s . v a l u e   :   d e f a u l t V a l u e ) , 
         c o n t r o l l e d :   i s C o n t r o l l e d ( p r o p s ) 
     } ; 
 } 
 f u n c t i o n   u p d a t e C h e c k e d ( e l e m e n t ,   p r o p s )   { 
     v a r   n o d e   =   e l e m e n t ; 
     v a r   c h e c k e d   =   p r o p s . c h e c k e d ; 
 
     i f   ( c h e c k e d   ! =   n u l l )   { 
         s e t V a l u e F o r P r o p e r t y ( n o d e ,   ' c h e c k e d ' ,   c h e c k e d ,   f a l s e ) ; 
     } 
 } 
 f u n c t i o n   u p d a t e W r a p p e r ( e l e m e n t ,   p r o p s )   { 
     v a r   n o d e   =   e l e m e n t ; 
 
     { 
         v a r   c o n t r o l l e d   =   i s C o n t r o l l e d ( p r o p s ) ; 
 
         i f   ( ! n o d e . _ w r a p p e r S t a t e . c o n t r o l l e d   & &   c o n t r o l l e d   & &   ! d i d W a r n U n c o n t r o l l e d T o C o n t r o l l e d )   { 
             e r r o r ( ' A   c o m p o n e n t   i s   c h a n g i n g   a n   u n c o n t r o l l e d   i n p u t   t o   b e   c o n t r o l l e d .   '   +   ' T h i s   i s   l i k e l y   c a u s e d   b y   t h e   v a l u e   c h a n g i n g   f r o m   u n d e f i n e d   t o   '   +   ' a   d e f i n e d   v a l u e ,   w h i c h   s h o u l d   n o t   h a p p e n .   '   +   ' D e c i d e   b e t w e e n   u s i n g   a   c o n t r o l l e d   o r   u n c o n t r o l l e d   i n p u t   '   +   ' e l e m e n t   f o r   t h e   l i f e t i m e   o f   t h e   c o m p o n e n t .   M o r e   i n f o :   h t t p s : / / r e a c t j s . o r g / l i n k / c o n t r o l l e d - c o m p o n e n t s ' ) ; 
 
             d i d W a r n U n c o n t r o l l e d T o C o n t r o l l e d   =   t r u e ; 
         } 
 
         i f   ( n o d e . _ w r a p p e r S t a t e . c o n t r o l l e d   & &   ! c o n t r o l l e d   & &   ! d i d W a r n C o n t r o l l e d T o U n c o n t r o l l e d )   { 
             e r r o r ( ' A   c o m p o n e n t   i s   c h a n g i n g   a   c o n t r o l l e d   i n p u t   t o   b e   u n c o n t r o l l e d .   '   +   ' T h i s   i s   l i k e l y   c a u s e d   b y   t h e   v a l u e   c h a n g i n g   f r o m   a   d e f i n e d   t o   '   +   ' u n d e f i n e d ,   w h i c h   s h o u l d   n o t   h a p p e n .   '   +   ' D e c i d e   b e t w e e n   u s i n g   a   c o n t r o l l e d   o r   u n c o n t r o l l e d   i n p u t   '   +   ' e l e m e n t   f o r   t h e   l i f e t i m e   o f   t h e   c o m p o n e n t .   M o r e   i n f o :   h t t p s : / / r e a c t j s . o r g / l i n k / c o n t r o l l e d - c o m p o n e n t s ' ) ; 
 
             d i d W a r n C o n t r o l l e d T o U n c o n t r o l l e d   =   t r u e ; 
         } 
     } 
 
     u p d a t e C h e c k e d ( e l e m e n t ,   p r o p s ) ; 
     v a r   v a l u e   =   g e t T o S t r i n g V a l u e ( p r o p s . v a l u e ) ; 
     v a r   t y p e   =   p r o p s . t y p e ; 
 
     i f   ( v a l u e   ! =   n u l l )   { 
         i f   ( t y p e   = = =   ' n u m b e r ' )   { 
             i f   ( v a l u e   = = =   0   & &   n o d e . v a l u e   = = =   ' '   | |   / /   W e   e x p l i c i t l y   w a n t   t o   c o e r c e   t o   n u m b e r   h e r e   i f   p o s s i b l e . 
             / /   e s l i n t - d i s a b l e - n e x t - l i n e 
             n o d e . v a l u e   ! =   v a l u e )   { 
                 n o d e . v a l u e   =   t o S t r i n g ( v a l u e ) ; 
             } 
         }   e l s e   i f   ( n o d e . v a l u e   ! = =   t o S t r i n g ( v a l u e ) )   { 
             n o d e . v a l u e   =   t o S t r i n g ( v a l u e ) ; 
         } 
     }   e l s e   i f   ( t y p e   = = =   ' s u b m i t '   | |   t y p e   = = =   ' r e s e t ' )   { 
         / /   S u b m i t / r e s e t   i n p u t s   n e e d   t h e   a t t r i b u t e   r e m o v e d   c o m p l e t e l y   t o   a v o i d 
         / /   b l a n k - t e x t   b u t t o n s . 
         n o d e . r e m o v e A t t r i b u t e ( ' v a l u e ' ) ; 
         r e t u r n ; 
     } 
 
     { 
         / /   W h e n   s y n c i n g   t h e   v a l u e   a t t r i b u t e ,   t h e   v a l u e   c o m e s   f r o m   a   c a s c a d e   o f 
         / /   p r o p e r t i e s : 
         / /     1 .   T h e   v a l u e   R e a c t   p r o p e r t y 
         / /     2 .   T h e   d e f a u l t V a l u e   R e a c t   p r o p e r t y 
         / /     3 .   O t h e r w i s e   t h e r e   s h o u l d   b e   n o   c h a n g e 
         i f   ( p r o p s . h a s O w n P r o p e r t y ( ' v a l u e ' ) )   { 
             s e t D e f a u l t V a l u e ( n o d e ,   p r o p s . t y p e ,   v a l u e ) ; 
         }   e l s e   i f   ( p r o p s . h a s O w n P r o p e r t y ( ' d e f a u l t V a l u e ' ) )   { 
             s e t D e f a u l t V a l u e ( n o d e ,   p r o p s . t y p e ,   g e t T o S t r i n g V a l u e ( p r o p s . d e f a u l t V a l u e ) ) ; 
         } 
     } 
 
     { 
         / /   W h e n   s y n c i n g   t h e   c h e c k e d   a t t r i b u t e ,   i t   o n l y   c h a n g e s   w h e n   i t   n e e d s 
         / /   t o   b e   r e m o v e d ,   s u c h   a s   t r a n s i t i o n i n g   f r o m   a   c h e c k b o x   i n t o   a   t e x t   i n p u t 
         i f   ( p r o p s . c h e c k e d   = =   n u l l   & &   p r o p s . d e f a u l t C h e c k e d   ! =   n u l l )   { 
             n o d e . d e f a u l t C h e c k e d   =   ! ! p r o p s . d e f a u l t C h e c k e d ; 
         } 
     } 
 } 
 f u n c t i o n   p o s t M o u n t W r a p p e r ( e l e m e n t ,   p r o p s ,   i s H y d r a t i n g )   { 
     v a r   n o d e   =   e l e m e n t ;   / /   D o   n o t   a s s i g n   v a l u e   i f   i t   i s   a l r e a d y   s e t .   T h i s   p r e v e n t s   u s e r   t e x t   i n p u t 
     / /   f r o m   b e i n g   l o s t   d u r i n g   S S R   h y d r a t i o n . 
 
     i f   ( p r o p s . h a s O w n P r o p e r t y ( ' v a l u e ' )   | |   p r o p s . h a s O w n P r o p e r t y ( ' d e f a u l t V a l u e ' ) )   { 
         v a r   t y p e   =   p r o p s . t y p e ; 
         v a r   i s B u t t o n   =   t y p e   = = =   ' s u b m i t '   | |   t y p e   = = =   ' r e s e t ' ;   / /   A v o i d   s e t t i n g   v a l u e   a t t r i b u t e   o n   s u b m i t / r e s e t   i n p u t s   a s   i t   o v e r r i d e s   t h e 
         / /   d e f a u l t   v a l u e   p r o v i d e d   b y   t h e   b r o w s e r .   S e e :   # 1 2 8 7 2 
 
         i f   ( i s B u t t o n   & &   ( p r o p s . v a l u e   = = =   u n d e f i n e d   | |   p r o p s . v a l u e   = = =   n u l l ) )   { 
             r e t u r n ; 
         } 
 
         v a r   i n i t i a l V a l u e   =   t o S t r i n g ( n o d e . _ w r a p p e r S t a t e . i n i t i a l V a l u e ) ;   / /   D o   n o t   a s s i g n   v a l u e   i f   i t   i s   a l r e a d y   s e t .   T h i s   p r e v e n t s   u s e r   t e x t   i n p u t 
         / /   f r o m   b e i n g   l o s t   d u r i n g   S S R   h y d r a t i o n . 
 
         i f   ( ! i s H y d r a t i n g )   { 
             { 
                 / /   W h e n   s y n c i n g   t h e   v a l u e   a t t r i b u t e ,   t h e   v a l u e   p r o p e r t y   s h o u l d   u s e 
                 / /   t h e   w r a p p e r S t a t e . _ i n i t i a l V a l u e   p r o p e r t y .   T h i s   u s e s : 
                 / / 
                 / /       1 .   T h e   v a l u e   R e a c t   p r o p e r t y   w h e n   p r e s e n t 
                 / /       2 .   T h e   d e f a u l t V a l u e   R e a c t   p r o p e r t y   w h e n   p r e s e n t 
                 / /       3 .   A n   e m p t y   s t r i n g 
                 i f   ( i n i t i a l V a l u e   ! = =   n o d e . v a l u e )   { 
                     n o d e . v a l u e   =   i n i t i a l V a l u e ; 
                 } 
             } 
         } 
 
         { 
             / /   O t h e r w i s e ,   t h e   v a l u e   a t t r i b u t e   i s   s y n c h r o n i z e d   t o   t h e   p r o p e r t y , 
             / /   s o   w e   a s s i g n   d e f a u l t V a l u e   t o   t h e   s a m e   t h i n g   a s   t h e   v a l u e   p r o p e r t y 
             / /   a s s i g n m e n t   s t e p   a b o v e . 
             n o d e . d e f a u l t V a l u e   =   i n i t i a l V a l u e ; 
         } 
     }   / /   N o r m a l l y ,   w e ' d   j u s t   d o   ` n o d e . c h e c k e d   =   n o d e . c h e c k e d `   u p o n   i n i t i a l   m o u n t ,   l e s s   t h i s   b u g 
     / /   t h i s   i s   n e e d e d   t o   w o r k   a r o u n d   a   c h r o m e   b u g   w h e r e   s e t t i n g   d e f a u l t C h e c k e d 
     / /   w i l l   s o m e t i m e s   i n f l u e n c e   t h e   v a l u e   o f   c h e c k e d   ( e v e n   a f t e r   d e t a c h m e n t ) . 
     / /   R e f e r e n c e :   h t t p s : / / b u g s . c h r o m i u m . o r g / p / c h r o m i u m / i s s u e s / d e t a i l ? i d = 6 0 8 4 1 6 
     / /   W e   n e e d   t o   t e m p o r a r i l y   u n s e t   n a m e   t o   a v o i d   d i s r u p t i n g   r a d i o   b u t t o n   g r o u p s . 
 
 
     v a r   n a m e   =   n o d e . n a m e ; 
 
     i f   ( n a m e   ! = =   ' ' )   { 
         n o d e . n a m e   =   ' ' ; 
     } 
 
     { 
         / /   W h e n   s y n c i n g   t h e   c h e c k e d   a t t r i b u t e ,   b o t h   t h e   c h e c k e d   p r o p e r t y   a n d 
         / /   a t t r i b u t e   a r e   a s s i g n e d   a t   t h e   s a m e   t i m e   u s i n g   d e f a u l t C h e c k e d .   T h i s   u s e s : 
         / / 
         / /       1 .   T h e   c h e c k e d   R e a c t   p r o p e r t y   w h e n   p r e s e n t 
         / /       2 .   T h e   d e f a u l t C h e c k e d   R e a c t   p r o p e r t y   w h e n   p r e s e n t 
         / /       3 .   O t h e r w i s e ,   f a l s e 
         n o d e . d e f a u l t C h e c k e d   =   ! n o d e . d e f a u l t C h e c k e d ; 
         n o d e . d e f a u l t C h e c k e d   =   ! ! n o d e . _ w r a p p e r S t a t e . i n i t i a l C h e c k e d ; 
     } 
 
     i f   ( n a m e   ! = =   ' ' )   { 
         n o d e . n a m e   =   n a m e ; 
     } 
 } 
 f u n c t i o n   r e s t o r e C o n t r o l l e d S t a t e ( e l e m e n t ,   p r o p s )   { 
     v a r   n o d e   =   e l e m e n t ; 
     u p d a t e W r a p p e r ( n o d e ,   p r o p s ) ; 
     u p d a t e N a m e d C o u s i n s ( n o d e ,   p r o p s ) ; 
 } 
 
 f u n c t i o n   u p d a t e N a m e d C o u s i n s ( r o o t N o d e ,   p r o p s )   { 
     v a r   n a m e   =   p r o p s . n a m e ; 
 
     i f   ( p r o p s . t y p e   = = =   ' r a d i o '   & &   n a m e   ! =   n u l l )   { 
         v a r   q u e r y R o o t   =   r o o t N o d e ; 
 
         w h i l e   ( q u e r y R o o t . p a r e n t N o d e )   { 
             q u e r y R o o t   =   q u e r y R o o t . p a r e n t N o d e ; 
         }   / /   I f   ` r o o t N o d e . f o r m `   w a s   n o n - n u l l ,   t h e n   w e   c o u l d   t r y   ` f o r m . e l e m e n t s ` , 
         / /   b u t   t h a t   s o m e t i m e s   b e h a v e s   s t r a n g e l y   i n   I E 8 .   W e   c o u l d   a l s o   t r y   u s i n g 
         / /   ` f o r m . g e t E l e m e n t s B y N a m e ` ,   b u t   t h a t   w i l l   o n l y   r e t u r n   d i r e c t   c h i l d r e n 
         / /   a n d   w o n ' t   i n c l u d e   i n p u t s   t h a t   u s e   t h e   H T M L 5   ` f o r m = `   a t t r i b u t e .   S i n c e 
         / /   t h e   i n p u t   m i g h t   n o t   e v e n   b e   i n   a   f o r m .   I t   m i g h t   n o t   e v e n   b e   i n   t h e 
         / /   d o c u m e n t .   L e t ' s   j u s t   u s e   t h e   l o c a l   ` q u e r y S e l e c t o r A l l `   t o   e n s u r e   w e   d o n ' t 
         / /   m i s s   a n y t h i n g . 
 
 
         { 
             c h e c k A t t r i b u t e S t r i n g C o e r c i o n ( n a m e ,   ' n a m e ' ) ; 
         } 
 
         v a r   g r o u p   =   q u e r y R o o t . q u e r y S e l e c t o r A l l ( ' i n p u t [ n a m e = '   +   J S O N . s t r i n g i f y ( ' '   +   n a m e )   +   ' ] [ t y p e = " r a d i o " ] ' ) ; 
 
         f o r   ( v a r   i   =   0 ;   i   <   g r o u p . l e n g t h ;   i + + )   { 
             v a r   o t h e r N o d e   =   g r o u p [ i ] ; 
 
             i f   ( o t h e r N o d e   = = =   r o o t N o d e   | |   o t h e r N o d e . f o r m   ! = =   r o o t N o d e . f o r m )   { 
                 c o n t i n u e ; 
             }   / /   T h i s   w i l l   t h r o w   i f   r a d i o   b u t t o n s   r e n d e r e d   b y   d i f f e r e n t   c o p i e s   o f   R e a c t 
             / /   a n d   t h e   s a m e   n a m e   a r e   r e n d e r e d   i n t o   t h e   s a m e   f o r m   ( s a m e   a s   # 1 9 3 9 ) . 
             / /   T h a t ' s   p r o b a b l y   o k a y ;   w e   d o n ' t   s u p p o r t   i t   j u s t   a s   w e   d o n ' t   s u p p o r t 
             / /   m i x i n g   R e a c t   r a d i o   b u t t o n s   w i t h   n o n - R e a c t   o n e s . 
 
 
             v a r   o t h e r P r o p s   =   g e t F i b e r C u r r e n t P r o p s F r o m N o d e ( o t h e r N o d e ) ; 
 
             i f   ( ! o t h e r P r o p s )   { 
                 t h r o w   n e w   E r r o r ( ' R e a c t D O M I n p u t :   M i x i n g   R e a c t   a n d   n o n - R e a c t   r a d i o   i n p u t s   w i t h   t h e   '   +   ' s a m e   ` n a m e `   i s   n o t   s u p p o r t e d . ' ) ; 
             }   / /   W e   n e e d   u p d a t e   t h e   t r a c k e d   v a l u e   o n   t h e   n a m e d   c o u s i n   s i n c e   t h e   v a l u e 
             / /   w a s   c h a n g e d   b u t   t h e   i n p u t   s a w   n o   e v e n t   o r   v a l u e   s e t 
 
 
             u p d a t e V a l u e I f C h a n g e d ( o t h e r N o d e ) ;   / /   I f   t h i s   i s   a   c o n t r o l l e d   r a d i o   b u t t o n   g r o u p ,   f o r c i n g   t h e   i n p u t   t h a t 
             / /   w a s   p r e v i o u s l y   c h e c k e d   t o   u p d a t e   w i l l   c a u s e   i t   t o   b e   c o m e   r e - c h e c k e d 
             / /   a s   a p p r o p r i a t e . 
 
             u p d a t e W r a p p e r ( o t h e r N o d e ,   o t h e r P r o p s ) ; 
         } 
     } 
 }   / /   I n   C h r o m e ,   a s s i g n i n g   d e f a u l t V a l u e   t o   c e r t a i n   i n p u t   t y p e s   t r i g g e r s   i n p u t   v a l i d a t i o n . 
 / /   F o r   n u m b e r   i n p u t s ,   t h e   d i s p l a y   v a l u e   l o s e s   t r a i l i n g   d e c i m a l   p o i n t s .   F o r   e m a i l   i n p u t s , 
 / /   C h r o m e   r a i s e s   " T h e   s p e c i f i e d   v a l u e   < x >   i s   n o t   a   v a l i d   e m a i l   a d d r e s s " . 
 / / 
 / /   H e r e   w e   c h e c k   t o   s e e   i f   t h e   d e f a u l t V a l u e   h a s   a c t u a l l y   c h a n g e d ,   a v o i d i n g   t h e s e   p r o b l e m s 
 / /   w h e n   t h e   u s e r   i s   i n p u t t i n g   t e x t 
 / / 
 / /   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 7 2 5 3 
 
 
 f u n c t i o n   s e t D e f a u l t V a l u e ( n o d e ,   t y p e ,   v a l u e )   { 
     i f   (   / /   F o c u s e d   n u m b e r   i n p u t s   s y n c h r o n i z e   o n   b l u r .   S e e   C h a n g e E v e n t P l u g i n . j s 
     t y p e   ! = =   ' n u m b e r '   | |   g e t A c t i v e E l e m e n t ( n o d e . o w n e r D o c u m e n t )   ! = =   n o d e )   { 
         i f   ( v a l u e   = =   n u l l )   { 
             n o d e . d e f a u l t V a l u e   =   t o S t r i n g ( n o d e . _ w r a p p e r S t a t e . i n i t i a l V a l u e ) ; 
         }   e l s e   i f   ( n o d e . d e f a u l t V a l u e   ! = =   t o S t r i n g ( v a l u e ) )   { 
             n o d e . d e f a u l t V a l u e   =   t o S t r i n g ( v a l u e ) ; 
         } 
     } 
 } 
 
 v a r   d i d W a r n S e l e c t e d S e t O n O p t i o n   =   f a l s e ; 
 v a r   d i d W a r n I n v a l i d C h i l d   =   f a l s e ; 
 v a r   d i d W a r n I n v a l i d I n n e r H T M L   =   f a l s e ; 
 / * * 
   *   I m p l e m e n t s   a n   < o p t i o n >   h o s t   c o m p o n e n t   t h a t   w a r n s   w h e n   ` s e l e c t e d `   i s   s e t . 
   * / 
 
 f u n c t i o n   v a l i d a t e P r o p s ( e l e m e n t ,   p r o p s )   { 
     { 
         / /   I f   a   v a l u e   i s   n o t   p r o v i d e d ,   t h e n   t h e   c h i l d r e n   m u s t   b e   s i m p l e . 
         i f   ( p r o p s . v a l u e   = =   n u l l )   { 
             i f   ( t y p e o f   p r o p s . c h i l d r e n   = = =   ' o b j e c t '   & &   p r o p s . c h i l d r e n   ! = =   n u l l )   { 
                 R e a c t . C h i l d r e n . f o r E a c h ( p r o p s . c h i l d r e n ,   f u n c t i o n   ( c h i l d )   { 
                     i f   ( c h i l d   = =   n u l l )   { 
                         r e t u r n ; 
                     } 
 
                     i f   ( t y p e o f   c h i l d   = = =   ' s t r i n g '   | |   t y p e o f   c h i l d   = = =   ' n u m b e r ' )   { 
                         r e t u r n ; 
                     } 
 
                     i f   ( ! d i d W a r n I n v a l i d C h i l d )   { 
                         d i d W a r n I n v a l i d C h i l d   =   t r u e ; 
 
                         e r r o r ( ' C a n n o t   i n f e r   t h e   o p t i o n   v a l u e   o f   c o m p l e x   c h i l d r e n .   '   +   ' P a s s   a   ` v a l u e `   p r o p   o r   u s e   a   p l a i n   s t r i n g   a s   c h i l d r e n   t o   < o p t i o n > . ' ) ; 
                     } 
                 } ) ; 
             }   e l s e   i f   ( p r o p s . d a n g e r o u s l y S e t I n n e r H T M L   ! =   n u l l )   { 
                 i f   ( ! d i d W a r n I n v a l i d I n n e r H T M L )   { 
                     d i d W a r n I n v a l i d I n n e r H T M L   =   t r u e ; 
 
                     e r r o r ( ' P a s s   a   ` v a l u e `   p r o p   i f   y o u   s e t   d a n g e r o u s l y I n n e r H T M L   s o   R e a c t   k n o w s   '   +   ' w h i c h   v a l u e   s h o u l d   b e   s e l e c t e d . ' ) ; 
                 } 
             } 
         }   / /   T O D O :   R e m o v e   s u p p o r t   f o r   ` s e l e c t e d `   i n   < o p t i o n > . 
 
 
         i f   ( p r o p s . s e l e c t e d   ! =   n u l l   & &   ! d i d W a r n S e l e c t e d S e t O n O p t i o n )   { 
             e r r o r ( ' U s e   t h e   ` d e f a u l t V a l u e `   o r   ` v a l u e `   p r o p s   o n   < s e l e c t >   i n s t e a d   o f   '   +   ' s e t t i n g   ` s e l e c t e d `   o n   < o p t i o n > . ' ) ; 
 
             d i d W a r n S e l e c t e d S e t O n O p t i o n   =   t r u e ; 
         } 
     } 
 } 
 f u n c t i o n   p o s t M o u n t W r a p p e r $ 1 ( e l e m e n t ,   p r o p s )   { 
     / /   v a l u e = " "   s h o u l d   m a k e   a   v a l u e   a t t r i b u t e   ( # 6 2 1 9 ) 
     i f   ( p r o p s . v a l u e   ! =   n u l l )   { 
         e l e m e n t . s e t A t t r i b u t e ( ' v a l u e ' ,   t o S t r i n g ( g e t T o S t r i n g V a l u e ( p r o p s . v a l u e ) ) ) ; 
     } 
 } 
 
 v a r   i s A r r a y I m p l   =   A r r a y . i s A r r a y ;   / /   e s l i n t - d i s a b l e - n e x t - l i n e   n o - r e d e c l a r e 
 
 f u n c t i o n   i s A r r a y ( a )   { 
     r e t u r n   i s A r r a y I m p l ( a ) ; 
 } 
 
 v a r   d i d W a r n V a l u e D e f a u l t V a l u e $ 1 ; 
 
 { 
     d i d W a r n V a l u e D e f a u l t V a l u e $ 1   =   f a l s e ; 
 } 
 
 f u n c t i o n   g e t D e c l a r a t i o n E r r o r A d d e n d u m ( )   { 
     v a r   o w n e r N a m e   =   g e t C u r r e n t F i b e r O w n e r N a m e I n D e v O r N u l l ( ) ; 
 
     i f   ( o w n e r N a m e )   { 
         r e t u r n   ' \ n \ n C h e c k   t h e   r e n d e r   m e t h o d   o f   ` '   +   o w n e r N a m e   +   ' ` . ' ; 
     } 
 
     r e t u r n   ' ' ; 
 } 
 
 v a r   v a l u e P r o p N a m e s   =   [ ' v a l u e ' ,   ' d e f a u l t V a l u e ' ] ; 
 / * * 
   *   V a l i d a t i o n   f u n c t i o n   f o r   ` v a l u e `   a n d   ` d e f a u l t V a l u e ` . 
   * / 
 
 f u n c t i o n   c h e c k S e l e c t P r o p T y p e s ( p r o p s )   { 
     { 
         c h e c k C o n t r o l l e d V a l u e P r o p s ( ' s e l e c t ' ,   p r o p s ) ; 
 
         f o r   ( v a r   i   =   0 ;   i   <   v a l u e P r o p N a m e s . l e n g t h ;   i + + )   { 
             v a r   p r o p N a m e   =   v a l u e P r o p N a m e s [ i ] ; 
 
             i f   ( p r o p s [ p r o p N a m e ]   = =   n u l l )   { 
                 c o n t i n u e ; 
             } 
 
             v a r   p r o p N a m e I s A r r a y   =   i s A r r a y ( p r o p s [ p r o p N a m e ] ) ; 
 
             i f   ( p r o p s . m u l t i p l e   & &   ! p r o p N a m e I s A r r a y )   { 
                 e r r o r ( ' T h e   ` % s `   p r o p   s u p p l i e d   t o   < s e l e c t >   m u s t   b e   a n   a r r a y   i f   '   +   ' ` m u l t i p l e `   i s   t r u e . % s ' ,   p r o p N a m e ,   g e t D e c l a r a t i o n E r r o r A d d e n d u m ( ) ) ; 
             }   e l s e   i f   ( ! p r o p s . m u l t i p l e   & &   p r o p N a m e I s A r r a y )   { 
                 e r r o r ( ' T h e   ` % s `   p r o p   s u p p l i e d   t o   < s e l e c t >   m u s t   b e   a   s c a l a r   '   +   ' v a l u e   i f   ` m u l t i p l e `   i s   f a l s e . % s ' ,   p r o p N a m e ,   g e t D e c l a r a t i o n E r r o r A d d e n d u m ( ) ) ; 
             } 
         } 
     } 
 } 
 
 f u n c t i o n   u p d a t e O p t i o n s ( n o d e ,   m u l t i p l e ,   p r o p V a l u e ,   s e t D e f a u l t S e l e c t e d )   { 
     v a r   o p t i o n s   =   n o d e . o p t i o n s ; 
 
     i f   ( m u l t i p l e )   { 
         v a r   s e l e c t e d V a l u e s   =   p r o p V a l u e ; 
         v a r   s e l e c t e d V a l u e   =   { } ; 
 
         f o r   ( v a r   i   =   0 ;   i   <   s e l e c t e d V a l u e s . l e n g t h ;   i + + )   { 
             / /   P r e f i x   t o   a v o i d   c h a o s   w i t h   s p e c i a l   k e y s . 
             s e l e c t e d V a l u e [ ' $ '   +   s e l e c t e d V a l u e s [ i ] ]   =   t r u e ; 
         } 
 
         f o r   ( v a r   _ i   =   0 ;   _ i   <   o p t i o n s . l e n g t h ;   _ i + + )   { 
             v a r   s e l e c t e d   =   s e l e c t e d V a l u e . h a s O w n P r o p e r t y ( ' $ '   +   o p t i o n s [ _ i ] . v a l u e ) ; 
 
             i f   ( o p t i o n s [ _ i ] . s e l e c t e d   ! = =   s e l e c t e d )   { 
                 o p t i o n s [ _ i ] . s e l e c t e d   =   s e l e c t e d ; 
             } 
 
             i f   ( s e l e c t e d   & &   s e t D e f a u l t S e l e c t e d )   { 
                 o p t i o n s [ _ i ] . d e f a u l t S e l e c t e d   =   t r u e ; 
             } 
         } 
     }   e l s e   { 
         / /   D o   n o t   s e t   ` s e l e c t . v a l u e `   a s   e x a c t   b e h a v i o r   i s n ' t   c o n s i s t e n t   a c r o s s   a l l 
         / /   b r o w s e r s   f o r   a l l   c a s e s . 
         v a r   _ s e l e c t e d V a l u e   =   t o S t r i n g ( g e t T o S t r i n g V a l u e ( p r o p V a l u e ) ) ; 
 
         v a r   d e f a u l t S e l e c t e d   =   n u l l ; 
 
         f o r   ( v a r   _ i 2   =   0 ;   _ i 2   <   o p t i o n s . l e n g t h ;   _ i 2 + + )   { 
             i f   ( o p t i o n s [ _ i 2 ] . v a l u e   = = =   _ s e l e c t e d V a l u e )   { 
                 o p t i o n s [ _ i 2 ] . s e l e c t e d   =   t r u e ; 
 
                 i f   ( s e t D e f a u l t S e l e c t e d )   { 
                     o p t i o n s [ _ i 2 ] . d e f a u l t S e l e c t e d   =   t r u e ; 
                 } 
 
                 r e t u r n ; 
             } 
 
             i f   ( d e f a u l t S e l e c t e d   = = =   n u l l   & &   ! o p t i o n s [ _ i 2 ] . d i s a b l e d )   { 
                 d e f a u l t S e l e c t e d   =   o p t i o n s [ _ i 2 ] ; 
             } 
         } 
 
         i f   ( d e f a u l t S e l e c t e d   ! = =   n u l l )   { 
             d e f a u l t S e l e c t e d . s e l e c t e d   =   t r u e ; 
         } 
     } 
 } 
 / * * 
   *   I m p l e m e n t s   a   < s e l e c t >   h o s t   c o m p o n e n t   t h a t   a l l o w s   o p t i o n a l l y   s e t t i n g   t h e 
   *   p r o p s   ` v a l u e `   a n d   ` d e f a u l t V a l u e ` .   I f   ` m u l t i p l e `   i s   f a l s e ,   t h e   p r o p   m u s t   b e   a 
   *   s t r i n g a b l e .   I f   ` m u l t i p l e `   i s   t r u e ,   t h e   p r o p   m u s t   b e   a n   a r r a y   o f   s t r i n g a b l e s . 
   * 
   *   I f   ` v a l u e `   i s   n o t   s u p p l i e d   ( o r   n u l l / u n d e f i n e d ) ,   u s e r   a c t i o n s   t h a t   c h a n g e   t h e 
   *   s e l e c t e d   o p t i o n   w i l l   t r i g g e r   u p d a t e s   t o   t h e   r e n d e r e d   o p t i o n s . 
   * 
   *   I f   i t   i s   s u p p l i e d   ( a n d   n o t   n u l l / u n d e f i n e d ) ,   t h e   r e n d e r e d   o p t i o n s   w i l l   n o t 
   *   u p d a t e   i n   r e s p o n s e   t o   u s e r   a c t i o n s .   I n s t e a d ,   t h e   ` v a l u e `   p r o p   m u s t   c h a n g e   i n 
   *   o r d e r   f o r   t h e   r e n d e r e d   o p t i o n s   t o   u p d a t e . 
   * 
   *   I f   ` d e f a u l t V a l u e `   i s   p r o v i d e d ,   a n y   o p t i o n s   w i t h   t h e   s u p p l i e d   v a l u e s   w i l l   b e 
   *   s e l e c t e d . 
   * / 
 
 
 f u n c t i o n   g e t H o s t P r o p s $ 1 ( e l e m e n t ,   p r o p s )   { 
     r e t u r n   a s s i g n ( { } ,   p r o p s ,   { 
         v a l u e :   u n d e f i n e d 
     } ) ; 
 } 
 f u n c t i o n   i n i t W r a p p e r S t a t e $ 1 ( e l e m e n t ,   p r o p s )   { 
     v a r   n o d e   =   e l e m e n t ; 
 
     { 
         c h e c k S e l e c t P r o p T y p e s ( p r o p s ) ; 
     } 
 
     n o d e . _ w r a p p e r S t a t e   =   { 
         w a s M u l t i p l e :   ! ! p r o p s . m u l t i p l e 
     } ; 
 
     { 
         i f   ( p r o p s . v a l u e   ! = =   u n d e f i n e d   & &   p r o p s . d e f a u l t V a l u e   ! = =   u n d e f i n e d   & &   ! d i d W a r n V a l u e D e f a u l t V a l u e $ 1 )   { 
             e r r o r ( ' S e l e c t   e l e m e n t s   m u s t   b e   e i t h e r   c o n t r o l l e d   o r   u n c o n t r o l l e d   '   +   ' ( s p e c i f y   e i t h e r   t h e   v a l u e   p r o p ,   o r   t h e   d e f a u l t V a l u e   p r o p ,   b u t   n o t   '   +   ' b o t h ) .   D e c i d e   b e t w e e n   u s i n g   a   c o n t r o l l e d   o r   u n c o n t r o l l e d   s e l e c t   '   +   ' e l e m e n t   a n d   r e m o v e   o n e   o f   t h e s e   p r o p s .   M o r e   i n f o :   '   +   ' h t t p s : / / r e a c t j s . o r g / l i n k / c o n t r o l l e d - c o m p o n e n t s ' ) ; 
 
             d i d W a r n V a l u e D e f a u l t V a l u e $ 1   =   t r u e ; 
         } 
     } 
 } 
 f u n c t i o n   p o s t M o u n t W r a p p e r $ 2 ( e l e m e n t ,   p r o p s )   { 
     v a r   n o d e   =   e l e m e n t ; 
     n o d e . m u l t i p l e   =   ! ! p r o p s . m u l t i p l e ; 
     v a r   v a l u e   =   p r o p s . v a l u e ; 
 
     i f   ( v a l u e   ! =   n u l l )   { 
         u p d a t e O p t i o n s ( n o d e ,   ! ! p r o p s . m u l t i p l e ,   v a l u e ,   f a l s e ) ; 
     }   e l s e   i f   ( p r o p s . d e f a u l t V a l u e   ! =   n u l l )   { 
         u p d a t e O p t i o n s ( n o d e ,   ! ! p r o p s . m u l t i p l e ,   p r o p s . d e f a u l t V a l u e ,   t r u e ) ; 
     } 
 } 
 f u n c t i o n   p o s t U p d a t e W r a p p e r ( e l e m e n t ,   p r o p s )   { 
     v a r   n o d e   =   e l e m e n t ; 
     v a r   w a s M u l t i p l e   =   n o d e . _ w r a p p e r S t a t e . w a s M u l t i p l e ; 
     n o d e . _ w r a p p e r S t a t e . w a s M u l t i p l e   =   ! ! p r o p s . m u l t i p l e ; 
     v a r   v a l u e   =   p r o p s . v a l u e ; 
 
     i f   ( v a l u e   ! =   n u l l )   { 
         u p d a t e O p t i o n s ( n o d e ,   ! ! p r o p s . m u l t i p l e ,   v a l u e ,   f a l s e ) ; 
     }   e l s e   i f   ( w a s M u l t i p l e   ! = =   ! ! p r o p s . m u l t i p l e )   { 
         / /   F o r   s i m p l i c i t y ,   r e a p p l y   ` d e f a u l t V a l u e `   i f   ` m u l t i p l e `   i s   t o g g l e d . 
         i f   ( p r o p s . d e f a u l t V a l u e   ! =   n u l l )   { 
             u p d a t e O p t i o n s ( n o d e ,   ! ! p r o p s . m u l t i p l e ,   p r o p s . d e f a u l t V a l u e ,   t r u e ) ; 
         }   e l s e   { 
             / /   R e v e r t   t h e   s e l e c t   b a c k   t o   i t s   d e f a u l t   u n s e l e c t e d   s t a t e . 
             u p d a t e O p t i o n s ( n o d e ,   ! ! p r o p s . m u l t i p l e ,   p r o p s . m u l t i p l e   ?   [ ]   :   ' ' ,   f a l s e ) ; 
         } 
     } 
 } 
 f u n c t i o n   r e s t o r e C o n t r o l l e d S t a t e $ 1 ( e l e m e n t ,   p r o p s )   { 
     v a r   n o d e   =   e l e m e n t ; 
     v a r   v a l u e   =   p r o p s . v a l u e ; 
 
     i f   ( v a l u e   ! =   n u l l )   { 
         u p d a t e O p t i o n s ( n o d e ,   ! ! p r o p s . m u l t i p l e ,   v a l u e ,   f a l s e ) ; 
     } 
 } 
 
 v a r   d i d W a r n V a l D e f a u l t V a l   =   f a l s e ; 
 
 / * * 
   *   I m p l e m e n t s   a   < t e x t a r e a >   h o s t   c o m p o n e n t   t h a t   a l l o w s   s e t t i n g   ` v a l u e ` ,   a n d 
   *   ` d e f a u l t V a l u e ` .   T h i s   d i f f e r s   f r o m   t h e   t r a d i t i o n a l   D O M   A P I   b e c a u s e   v a l u e   i s 
   *   u s u a l l y   s e t   a s   P C D A T A   c h i l d r e n . 
   * 
   *   I f   ` v a l u e `   i s   n o t   s u p p l i e d   ( o r   n u l l / u n d e f i n e d ) ,   u s e r   a c t i o n s   t h a t   a f f e c t   t h e 
   *   v a l u e   w i l l   t r i g g e r   u p d a t e s   t o   t h e   e l e m e n t . 
   * 
   *   I f   ` v a l u e `   i s   s u p p l i e d   ( a n d   n o t   n u l l / u n d e f i n e d ) ,   t h e   r e n d e r e d   e l e m e n t   w i l l 
   *   n o t   t r i g g e r   u p d a t e s   t o   t h e   e l e m e n t .   I n s t e a d ,   t h e   ` v a l u e `   p r o p   m u s t   c h a n g e   i n 
   *   o r d e r   f o r   t h e   r e n d e r e d   e l e m e n t   t o   b e   u p d a t e d . 
   * 
   *   T h e   r e n d e r e d   e l e m e n t   w i l l   b e   i n i t i a l i z e d   w i t h   a n   e m p t y   v a l u e ,   t h e   p r o p 
   *   ` d e f a u l t V a l u e `   i f   s p e c i f i e d ,   o r   t h e   c h i l d r e n   c o n t e n t   ( d e p r e c a t e d ) . 
   * / 
 f u n c t i o n   g e t H o s t P r o p s $ 2 ( e l e m e n t ,   p r o p s )   { 
     v a r   n o d e   =   e l e m e n t ; 
 
     i f   ( p r o p s . d a n g e r o u s l y S e t I n n e r H T M L   ! =   n u l l )   { 
         t h r o w   n e w   E r r o r ( ' ` d a n g e r o u s l y S e t I n n e r H T M L `   d o e s   n o t   m a k e   s e n s e   o n   < t e x t a r e a > . ' ) ; 
     }   / /   A l w a y s   s e t   c h i l d r e n   t o   t h e   s a m e   t h i n g .   I n   I E 9 ,   t h e   s e l e c t i o n   r a n g e   w i l l 
     / /   g e t   r e s e t   i f   ` t e x t C o n t e n t `   i s   m u t a t e d .     W e   c o u l d   a d d   a   c h e c k   i n   s e t T e x t C o n t e n t 
     / /   t o   o n l y   s e t   t h e   v a l u e   i f / w h e n   t h e   v a l u e   d i f f e r s   f r o m   t h e   n o d e   v a l u e   ( w h i c h   w o u l d 
     / /   c o m p l e t e l y   s o l v e   t h i s   I E 9   b u g ) ,   b u t   S e b a s t i a n + S o p h i e   s e e m e d   t o   l i k e   t h i s 
     / /   s o l u t i o n .   T h e   v a l u e   c a n   b e   a   b o o l e a n   o r   o b j e c t   s o   t h a t ' s   w h y   i t ' s   f o r c e d 
     / /   t o   b e   a   s t r i n g . 
 
 
     v a r   h o s t P r o p s   =   a s s i g n ( { } ,   p r o p s ,   { 
         v a l u e :   u n d e f i n e d , 
         d e f a u l t V a l u e :   u n d e f i n e d , 
         c h i l d r e n :   t o S t r i n g ( n o d e . _ w r a p p e r S t a t e . i n i t i a l V a l u e ) 
     } ) ; 
 
     r e t u r n   h o s t P r o p s ; 
 } 
 f u n c t i o n   i n i t W r a p p e r S t a t e $ 2 ( e l e m e n t ,   p r o p s )   { 
     v a r   n o d e   =   e l e m e n t ; 
 
     { 
         c h e c k C o n t r o l l e d V a l u e P r o p s ( ' t e x t a r e a ' ,   p r o p s ) ; 
 
         i f   ( p r o p s . v a l u e   ! = =   u n d e f i n e d   & &   p r o p s . d e f a u l t V a l u e   ! = =   u n d e f i n e d   & &   ! d i d W a r n V a l D e f a u l t V a l )   { 
             e r r o r ( ' % s   c o n t a i n s   a   t e x t a r e a   w i t h   b o t h   v a l u e   a n d   d e f a u l t V a l u e   p r o p s .   '   +   ' T e x t a r e a   e l e m e n t s   m u s t   b e   e i t h e r   c o n t r o l l e d   o r   u n c o n t r o l l e d   '   +   ' ( s p e c i f y   e i t h e r   t h e   v a l u e   p r o p ,   o r   t h e   d e f a u l t V a l u e   p r o p ,   b u t   n o t   '   +   ' b o t h ) .   D e c i d e   b e t w e e n   u s i n g   a   c o n t r o l l e d   o r   u n c o n t r o l l e d   t e x t a r e a   '   +   ' a n d   r e m o v e   o n e   o f   t h e s e   p r o p s .   M o r e   i n f o :   '   +   ' h t t p s : / / r e a c t j s . o r g / l i n k / c o n t r o l l e d - c o m p o n e n t s ' ,   g e t C u r r e n t F i b e r O w n e r N a m e I n D e v O r N u l l ( )   | |   ' A   c o m p o n e n t ' ) ; 
 
             d i d W a r n V a l D e f a u l t V a l   =   t r u e ; 
         } 
     } 
 
     v a r   i n i t i a l V a l u e   =   p r o p s . v a l u e ;   / /   O n l y   b o t h e r   f e t c h i n g   d e f a u l t   v a l u e   i f   w e ' r e   g o i n g   t o   u s e   i t 
 
     i f   ( i n i t i a l V a l u e   = =   n u l l )   { 
         v a r   c h i l d r e n   =   p r o p s . c h i l d r e n , 
                 d e f a u l t V a l u e   =   p r o p s . d e f a u l t V a l u e ; 
 
         i f   ( c h i l d r e n   ! =   n u l l )   { 
             { 
                 e r r o r ( ' U s e   t h e   ` d e f a u l t V a l u e `   o r   ` v a l u e `   p r o p s   i n s t e a d   o f   s e t t i n g   '   +   ' c h i l d r e n   o n   < t e x t a r e a > . ' ) ; 
             } 
 
             { 
                 i f   ( d e f a u l t V a l u e   ! =   n u l l )   { 
                     t h r o w   n e w   E r r o r ( ' I f   y o u   s u p p l y   ` d e f a u l t V a l u e `   o n   a   < t e x t a r e a > ,   d o   n o t   p a s s   c h i l d r e n . ' ) ; 
                 } 
 
                 i f   ( i s A r r a y ( c h i l d r e n ) )   { 
                     i f   ( c h i l d r e n . l e n g t h   >   1 )   { 
                         t h r o w   n e w   E r r o r ( ' < t e x t a r e a >   c a n   o n l y   h a v e   a t   m o s t   o n e   c h i l d . ' ) ; 
                     } 
 
                     c h i l d r e n   =   c h i l d r e n [ 0 ] ; 
                 } 
 
                 d e f a u l t V a l u e   =   c h i l d r e n ; 
             } 
         } 
 
         i f   ( d e f a u l t V a l u e   = =   n u l l )   { 
             d e f a u l t V a l u e   =   ' ' ; 
         } 
 
         i n i t i a l V a l u e   =   d e f a u l t V a l u e ; 
     } 
 
     n o d e . _ w r a p p e r S t a t e   =   { 
         i n i t i a l V a l u e :   g e t T o S t r i n g V a l u e ( i n i t i a l V a l u e ) 
     } ; 
 } 
 f u n c t i o n   u p d a t e W r a p p e r $ 1 ( e l e m e n t ,   p r o p s )   { 
     v a r   n o d e   =   e l e m e n t ; 
     v a r   v a l u e   =   g e t T o S t r i n g V a l u e ( p r o p s . v a l u e ) ; 
     v a r   d e f a u l t V a l u e   =   g e t T o S t r i n g V a l u e ( p r o p s . d e f a u l t V a l u e ) ; 
 
     i f   ( v a l u e   ! =   n u l l )   { 
         / /   C a s t   ` v a l u e `   t o   a   s t r i n g   t o   e n s u r e   t h e   v a l u e   i s   s e t   c o r r e c t l y .   W h i l e 
         / /   b r o w s e r s   t y p i c a l l y   d o   t h i s   a s   n e c e s s a r y ,   j s d o m   d o e s n ' t . 
         v a r   n e w V a l u e   =   t o S t r i n g ( v a l u e ) ;   / /   T o   a v o i d   s i d e   e f f e c t s   ( s u c h   a s   l o s i n g   t e x t   s e l e c t i o n ) ,   o n l y   s e t   v a l u e   i f   c h a n g e d 
 
         i f   ( n e w V a l u e   ! = =   n o d e . v a l u e )   { 
             n o d e . v a l u e   =   n e w V a l u e ; 
         } 
 
         i f   ( p r o p s . d e f a u l t V a l u e   = =   n u l l   & &   n o d e . d e f a u l t V a l u e   ! = =   n e w V a l u e )   { 
             n o d e . d e f a u l t V a l u e   =   n e w V a l u e ; 
         } 
     } 
 
     i f   ( d e f a u l t V a l u e   ! =   n u l l )   { 
         n o d e . d e f a u l t V a l u e   =   t o S t r i n g ( d e f a u l t V a l u e ) ; 
     } 
 } 
 f u n c t i o n   p o s t M o u n t W r a p p e r $ 3 ( e l e m e n t ,   p r o p s )   { 
     v a r   n o d e   =   e l e m e n t ;   / /   T h i s   i s   i n   p o s t M o u n t   b e c a u s e   w e   n e e d   a c c e s s   t o   t h e   D O M   n o d e ,   w h i c h   i s   n o t 
     / /   a v a i l a b l e   u n t i l   a f t e r   t h e   c o m p o n e n t   h a s   m o u n t e d . 
 
     v a r   t e x t C o n t e n t   =   n o d e . t e x t C o n t e n t ;   / /   O n l y   s e t   n o d e . v a l u e   i f   t e x t C o n t e n t   i s   e q u a l   t o   t h e   e x p e c t e d 
     / /   i n i t i a l   v a l u e .   I n   I E 1 0 / I E 1 1   t h e r e   i s   a   b u g   w h e r e   t h e   p l a c e h o l d e r   a t t r i b u t e 
     / /   w i l l   p o p u l a t e   t e x t C o n t e n t   a s   w e l l . 
     / /   h t t p s : / / d e v e l o p e r . m i c r o s o f t . c o m / m i c r o s o f t - e d g e / p l a t f o r m / i s s u e s / 1 0 1 5 2 5 / 
 
     i f   ( t e x t C o n t e n t   = = =   n o d e . _ w r a p p e r S t a t e . i n i t i a l V a l u e )   { 
         i f   ( t e x t C o n t e n t   ! = =   ' '   & &   t e x t C o n t e n t   ! = =   n u l l )   { 
             n o d e . v a l u e   =   t e x t C o n t e n t ; 
         } 
     } 
 } 
 f u n c t i o n   r e s t o r e C o n t r o l l e d S t a t e $ 2 ( e l e m e n t ,   p r o p s )   { 
     / /   D O M   c o m p o n e n t   i s   s t i l l   m o u n t e d ;   u p d a t e 
     u p d a t e W r a p p e r $ 1 ( e l e m e n t ,   p r o p s ) ; 
 } 
 
 v a r   H T M L _ N A M E S P A C E   =   ' h t t p : / / w w w . w 3 . o r g / 1 9 9 9 / x h t m l ' ; 
 v a r   M A T H _ N A M E S P A C E   =   ' h t t p : / / w w w . w 3 . o r g / 1 9 9 8 / M a t h / M a t h M L ' ; 
 v a r   S V G _ N A M E S P A C E   =   ' h t t p : / / w w w . w 3 . o r g / 2 0 0 0 / s v g ' ;   / /   A s s u m e s   t h e r e   i s   n o   p a r e n t   n a m e s p a c e . 
 
 f u n c t i o n   g e t I n t r i n s i c N a m e s p a c e ( t y p e )   { 
     s w i t c h   ( t y p e )   { 
         c a s e   ' s v g ' : 
             r e t u r n   S V G _ N A M E S P A C E ; 
 
         c a s e   ' m a t h ' : 
             r e t u r n   M A T H _ N A M E S P A C E ; 
 
         d e f a u l t : 
             r e t u r n   H T M L _ N A M E S P A C E ; 
     } 
 } 
 f u n c t i o n   g e t C h i l d N a m e s p a c e ( p a r e n t N a m e s p a c e ,   t y p e )   { 
     i f   ( p a r e n t N a m e s p a c e   = =   n u l l   | |   p a r e n t N a m e s p a c e   = = =   H T M L _ N A M E S P A C E )   { 
         / /   N o   ( o r   d e f a u l t )   p a r e n t   n a m e s p a c e :   p o t e n t i a l   e n t r y   p o i n t . 
         r e t u r n   g e t I n t r i n s i c N a m e s p a c e ( t y p e ) ; 
     } 
 
     i f   ( p a r e n t N a m e s p a c e   = = =   S V G _ N A M E S P A C E   & &   t y p e   = = =   ' f o r e i g n O b j e c t ' )   { 
         / /   W e ' r e   l e a v i n g   S V G . 
         r e t u r n   H T M L _ N A M E S P A C E ; 
     }   / /   B y   d e f a u l t ,   p a s s   n a m e s p a c e   b e l o w . 
 
 
     r e t u r n   p a r e n t N a m e s p a c e ; 
 } 
 
 / *   g l o b a l s   M S A p p   * / 
 
 / * * 
   *   C r e a t e   a   f u n c t i o n   w h i c h   h a s   ' u n s a f e '   p r i v i l e g e s   ( r e q u i r e d   b y   w i n d o w s 8   a p p s ) 
   * / 
 v a r   c r e a t e M i c r o s o f t U n s a f e L o c a l F u n c t i o n   =   f u n c t i o n   ( f u n c )   { 
     i f   ( t y p e o f   M S A p p   ! = =   ' u n d e f i n e d '   & &   M S A p p . e x e c U n s a f e L o c a l F u n c t i o n )   { 
         r e t u r n   f u n c t i o n   ( a r g 0 ,   a r g 1 ,   a r g 2 ,   a r g 3 )   { 
             M S A p p . e x e c U n s a f e L o c a l F u n c t i o n ( f u n c t i o n   ( )   { 
                 r e t u r n   f u n c ( a r g 0 ,   a r g 1 ,   a r g 2 ,   a r g 3 ) ; 
             } ) ; 
         } ; 
     }   e l s e   { 
         r e t u r n   f u n c ; 
     } 
 } ; 
 
 v a r   r e u s a b l e S V G C o n t a i n e r ; 
 / * * 
   *   S e t   t h e   i n n e r H T M L   p r o p e r t y   o f   a   n o d e 
   * 
   *   @ p a r a m   { D O M E l e m e n t }   n o d e 
   *   @ p a r a m   { s t r i n g }   h t m l 
   *   @ i n t e r n a l 
   * / 
 
 v a r   s e t I n n e r H T M L   =   c r e a t e M i c r o s o f t U n s a f e L o c a l F u n c t i o n ( f u n c t i o n   ( n o d e ,   h t m l )   { 
     i f   ( n o d e . n a m e s p a c e U R I   = = =   S V G _ N A M E S P A C E )   { 
 
         i f   ( ! ( ' i n n e r H T M L '   i n   n o d e ) )   { 
             / /   I E   d o e s   n o t   h a v e   i n n e r H T M L   f o r   S V G   n o d e s ,   s o   i n s t e a d   w e   i n j e c t   t h e 
             / /   n e w   m a r k u p   i n   a   t e m p   n o d e   a n d   t h e n   m o v e   t h e   c h i l d   n o d e s   a c r o s s   i n t o 
             / /   t h e   t a r g e t   n o d e 
             r e u s a b l e S V G C o n t a i n e r   =   r e u s a b l e S V G C o n t a i n e r   | |   d o c u m e n t . c r e a t e E l e m e n t ( ' d i v ' ) ; 
             r e u s a b l e S V G C o n t a i n e r . i n n e r H T M L   =   ' < s v g > '   +   h t m l . v a l u e O f ( ) . t o S t r i n g ( )   +   ' < / s v g > ' ; 
             v a r   s v g N o d e   =   r e u s a b l e S V G C o n t a i n e r . f i r s t C h i l d ; 
 
             w h i l e   ( n o d e . f i r s t C h i l d )   { 
                 n o d e . r e m o v e C h i l d ( n o d e . f i r s t C h i l d ) ; 
             } 
 
             w h i l e   ( s v g N o d e . f i r s t C h i l d )   { 
                 n o d e . a p p e n d C h i l d ( s v g N o d e . f i r s t C h i l d ) ; 
             } 
 
             r e t u r n ; 
         } 
     } 
 
     n o d e . i n n e r H T M L   =   h t m l ; 
 } ) ; 
 
 / * * 
   *   H T M L   n o d e T y p e   v a l u e s   t h a t   r e p r e s e n t   t h e   t y p e   o f   t h e   n o d e 
   * / 
 v a r   E L E M E N T _ N O D E   =   1 ; 
 v a r   T E X T _ N O D E   =   3 ; 
 v a r   C O M M E N T _ N O D E   =   8 ; 
 v a r   D O C U M E N T _ N O D E   =   9 ; 
 v a r   D O C U M E N T _ F R A G M E N T _ N O D E   =   1 1 ; 
 
 / * * 
   *   S e t   t h e   t e x t C o n t e n t   p r o p e r t y   o f   a   n o d e .   F o r   t e x t   u p d a t e s ,   i t ' s   f a s t e r 
   *   t o   s e t   t h e   ` n o d e V a l u e `   o f   t h e   T e x t   n o d e   d i r e c t l y   i n s t e a d   o f   u s i n g 
   *   ` . t e x t C o n t e n t `   w h i c h   w i l l   r e m o v e   t h e   e x i s t i n g   n o d e   a n d   c r e a t e   a   n e w   o n e . 
   * 
   *   @ p a r a m   { D O M E l e m e n t }   n o d e 
   *   @ p a r a m   { s t r i n g }   t e x t 
   *   @ i n t e r n a l 
   * / 
 
 v a r   s e t T e x t C o n t e n t   =   f u n c t i o n   ( n o d e ,   t e x t )   { 
     i f   ( t e x t )   { 
         v a r   f i r s t C h i l d   =   n o d e . f i r s t C h i l d ; 
 
         i f   ( f i r s t C h i l d   & &   f i r s t C h i l d   = = =   n o d e . l a s t C h i l d   & &   f i r s t C h i l d . n o d e T y p e   = = =   T E X T _ N O D E )   { 
             f i r s t C h i l d . n o d e V a l u e   =   t e x t ; 
             r e t u r n ; 
         } 
     } 
 
     n o d e . t e x t C o n t e n t   =   t e x t ; 
 } ; 
 
 / /   L i s t   d e r i v e d   f r o m   G e c k o   s o u r c e   c o d e : 
 / /   h t t p s : / / g i t h u b . c o m / m o z i l l a / g e c k o - d e v / b l o b / 4 e 6 3 8 e f c 7 1 / l a y o u t / s t y l e / t e s t / p r o p e r t y _ d a t a b a s e . j s 
 v a r   s h o r t h a n d T o L o n g h a n d   =   { 
     a n i m a t i o n :   [ ' a n i m a t i o n D e l a y ' ,   ' a n i m a t i o n D i r e c t i o n ' ,   ' a n i m a t i o n D u r a t i o n ' ,   ' a n i m a t i o n F i l l M o d e ' ,   ' a n i m a t i o n I t e r a t i o n C o u n t ' ,   ' a n i m a t i o n N a m e ' ,   ' a n i m a t i o n P l a y S t a t e ' ,   ' a n i m a t i o n T i m i n g F u n c t i o n ' ] , 
     b a c k g r o u n d :   [ ' b a c k g r o u n d A t t a c h m e n t ' ,   ' b a c k g r o u n d C l i p ' ,   ' b a c k g r o u n d C o l o r ' ,   ' b a c k g r o u n d I m a g e ' ,   ' b a c k g r o u n d O r i g i n ' ,   ' b a c k g r o u n d P o s i t i o n X ' ,   ' b a c k g r o u n d P o s i t i o n Y ' ,   ' b a c k g r o u n d R e p e a t ' ,   ' b a c k g r o u n d S i z e ' ] , 
     b a c k g r o u n d P o s i t i o n :   [ ' b a c k g r o u n d P o s i t i o n X ' ,   ' b a c k g r o u n d P o s i t i o n Y ' ] , 
     b o r d e r :   [ ' b o r d e r B o t t o m C o l o r ' ,   ' b o r d e r B o t t o m S t y l e ' ,   ' b o r d e r B o t t o m W i d t h ' ,   ' b o r d e r I m a g e O u t s e t ' ,   ' b o r d e r I m a g e R e p e a t ' ,   ' b o r d e r I m a g e S l i c e ' ,   ' b o r d e r I m a g e S o u r c e ' ,   ' b o r d e r I m a g e W i d t h ' ,   ' b o r d e r L e f t C o l o r ' ,   ' b o r d e r L e f t S t y l e ' ,   ' b o r d e r L e f t W i d t h ' ,   ' b o r d e r R i g h t C o l o r ' ,   ' b o r d e r R i g h t S t y l e ' ,   ' b o r d e r R i g h t W i d t h ' ,   ' b o r d e r T o p C o l o r ' ,   ' b o r d e r T o p S t y l e ' ,   ' b o r d e r T o p W i d t h ' ] , 
     b o r d e r B l o c k E n d :   [ ' b o r d e r B l o c k E n d C o l o r ' ,   ' b o r d e r B l o c k E n d S t y l e ' ,   ' b o r d e r B l o c k E n d W i d t h ' ] , 
     b o r d e r B l o c k S t a r t :   [ ' b o r d e r B l o c k S t a r t C o l o r ' ,   ' b o r d e r B l o c k S t a r t S t y l e ' ,   ' b o r d e r B l o c k S t a r t W i d t h ' ] , 
     b o r d e r B o t t o m :   [ ' b o r d e r B o t t o m C o l o r ' ,   ' b o r d e r B o t t o m S t y l e ' ,   ' b o r d e r B o t t o m W i d t h ' ] , 
     b o r d e r C o l o r :   [ ' b o r d e r B o t t o m C o l o r ' ,   ' b o r d e r L e f t C o l o r ' ,   ' b o r d e r R i g h t C o l o r ' ,   ' b o r d e r T o p C o l o r ' ] , 
     b o r d e r I m a g e :   [ ' b o r d e r I m a g e O u t s e t ' ,   ' b o r d e r I m a g e R e p e a t ' ,   ' b o r d e r I m a g e S l i c e ' ,   ' b o r d e r I m a g e S o u r c e ' ,   ' b o r d e r I m a g e W i d t h ' ] , 
     b o r d e r I n l i n e E n d :   [ ' b o r d e r I n l i n e E n d C o l o r ' ,   ' b o r d e r I n l i n e E n d S t y l e ' ,   ' b o r d e r I n l i n e E n d W i d t h ' ] , 
     b o r d e r I n l i n e S t a r t :   [ ' b o r d e r I n l i n e S t a r t C o l o r ' ,   ' b o r d e r I n l i n e S t a r t S t y l e ' ,   ' b o r d e r I n l i n e S t a r t W i d t h ' ] , 
     b o r d e r L e f t :   [ ' b o r d e r L e f t C o l o r ' ,   ' b o r d e r L e f t S t y l e ' ,   ' b o r d e r L e f t W i d t h ' ] , 
     b o r d e r R a d i u s :   [ ' b o r d e r B o t t o m L e f t R a d i u s ' ,   ' b o r d e r B o t t o m R i g h t R a d i u s ' ,   ' b o r d e r T o p L e f t R a d i u s ' ,   ' b o r d e r T o p R i g h t R a d i u s ' ] , 
     b o r d e r R i g h t :   [ ' b o r d e r R i g h t C o l o r ' ,   ' b o r d e r R i g h t S t y l e ' ,   ' b o r d e r R i g h t W i d t h ' ] , 
     b o r d e r S t y l e :   [ ' b o r d e r B o t t o m S t y l e ' ,   ' b o r d e r L e f t S t y l e ' ,   ' b o r d e r R i g h t S t y l e ' ,   ' b o r d e r T o p S t y l e ' ] , 
     b o r d e r T o p :   [ ' b o r d e r T o p C o l o r ' ,   ' b o r d e r T o p S t y l e ' ,   ' b o r d e r T o p W i d t h ' ] , 
     b o r d e r W i d t h :   [ ' b o r d e r B o t t o m W i d t h ' ,   ' b o r d e r L e f t W i d t h ' ,   ' b o r d e r R i g h t W i d t h ' ,   ' b o r d e r T o p W i d t h ' ] , 
     c o l u m n R u l e :   [ ' c o l u m n R u l e C o l o r ' ,   ' c o l u m n R u l e S t y l e ' ,   ' c o l u m n R u l e W i d t h ' ] , 
     c o l u m n s :   [ ' c o l u m n C o u n t ' ,   ' c o l u m n W i d t h ' ] , 
     f l e x :   [ ' f l e x B a s i s ' ,   ' f l e x G r o w ' ,   ' f l e x S h r i n k ' ] , 
     f l e x F l o w :   [ ' f l e x D i r e c t i o n ' ,   ' f l e x W r a p ' ] , 
     f o n t :   [ ' f o n t F a m i l y ' ,   ' f o n t F e a t u r e S e t t i n g s ' ,   ' f o n t K e r n i n g ' ,   ' f o n t L a n g u a g e O v e r r i d e ' ,   ' f o n t S i z e ' ,   ' f o n t S i z e A d j u s t ' ,   ' f o n t S t r e t c h ' ,   ' f o n t S t y l e ' ,   ' f o n t V a r i a n t ' ,   ' f o n t V a r i a n t A l t e r n a t e s ' ,   ' f o n t V a r i a n t C a p s ' ,   ' f o n t V a r i a n t E a s t A s i a n ' ,   ' f o n t V a r i a n t L i g a t u r e s ' ,   ' f o n t V a r i a n t N u m e r i c ' ,   ' f o n t V a r i a n t P o s i t i o n ' ,   ' f o n t W e i g h t ' ,   ' l i n e H e i g h t ' ] , 
     f o n t V a r i a n t :   [ ' f o n t V a r i a n t A l t e r n a t e s ' ,   ' f o n t V a r i a n t C a p s ' ,   ' f o n t V a r i a n t E a s t A s i a n ' ,   ' f o n t V a r i a n t L i g a t u r e s ' ,   ' f o n t V a r i a n t N u m e r i c ' ,   ' f o n t V a r i a n t P o s i t i o n ' ] , 
     g a p :   [ ' c o l u m n G a p ' ,   ' r o w G a p ' ] , 
     g r i d :   [ ' g r i d A u t o C o l u m n s ' ,   ' g r i d A u t o F l o w ' ,   ' g r i d A u t o R o w s ' ,   ' g r i d T e m p l a t e A r e a s ' ,   ' g r i d T e m p l a t e C o l u m n s ' ,   ' g r i d T e m p l a t e R o w s ' ] , 
     g r i d A r e a :   [ ' g r i d C o l u m n E n d ' ,   ' g r i d C o l u m n S t a r t ' ,   ' g r i d R o w E n d ' ,   ' g r i d R o w S t a r t ' ] , 
     g r i d C o l u m n :   [ ' g r i d C o l u m n E n d ' ,   ' g r i d C o l u m n S t a r t ' ] , 
     g r i d C o l u m n G a p :   [ ' c o l u m n G a p ' ] , 
     g r i d G a p :   [ ' c o l u m n G a p ' ,   ' r o w G a p ' ] , 
     g r i d R o w :   [ ' g r i d R o w E n d ' ,   ' g r i d R o w S t a r t ' ] , 
     g r i d R o w G a p :   [ ' r o w G a p ' ] , 
     g r i d T e m p l a t e :   [ ' g r i d T e m p l a t e A r e a s ' ,   ' g r i d T e m p l a t e C o l u m n s ' ,   ' g r i d T e m p l a t e R o w s ' ] , 
     l i s t S t y l e :   [ ' l i s t S t y l e I m a g e ' ,   ' l i s t S t y l e P o s i t i o n ' ,   ' l i s t S t y l e T y p e ' ] , 
     m a r g i n :   [ ' m a r g i n B o t t o m ' ,   ' m a r g i n L e f t ' ,   ' m a r g i n R i g h t ' ,   ' m a r g i n T o p ' ] , 
     m a r k e r :   [ ' m a r k e r E n d ' ,   ' m a r k e r M i d ' ,   ' m a r k e r S t a r t ' ] , 
     m a s k :   [ ' m a s k C l i p ' ,   ' m a s k C o m p o s i t e ' ,   ' m a s k I m a g e ' ,   ' m a s k M o d e ' ,   ' m a s k O r i g i n ' ,   ' m a s k P o s i t i o n X ' ,   ' m a s k P o s i t i o n Y ' ,   ' m a s k R e p e a t ' ,   ' m a s k S i z e ' ] , 
     m a s k P o s i t i o n :   [ ' m a s k P o s i t i o n X ' ,   ' m a s k P o s i t i o n Y ' ] , 
     o u t l i n e :   [ ' o u t l i n e C o l o r ' ,   ' o u t l i n e S t y l e ' ,   ' o u t l i n e W i d t h ' ] , 
     o v e r f l o w :   [ ' o v e r f l o w X ' ,   ' o v e r f l o w Y ' ] , 
     p a d d i n g :   [ ' p a d d i n g B o t t o m ' ,   ' p a d d i n g L e f t ' ,   ' p a d d i n g R i g h t ' ,   ' p a d d i n g T o p ' ] , 
     p l a c e C o n t e n t :   [ ' a l i g n C o n t e n t ' ,   ' j u s t i f y C o n t e n t ' ] , 
     p l a c e I t e m s :   [ ' a l i g n I t e m s ' ,   ' j u s t i f y I t e m s ' ] , 
     p l a c e S e l f :   [ ' a l i g n S e l f ' ,   ' j u s t i f y S e l f ' ] , 
     t e x t D e c o r a t i o n :   [ ' t e x t D e c o r a t i o n C o l o r ' ,   ' t e x t D e c o r a t i o n L i n e ' ,   ' t e x t D e c o r a t i o n S t y l e ' ] , 
     t e x t E m p h a s i s :   [ ' t e x t E m p h a s i s C o l o r ' ,   ' t e x t E m p h a s i s S t y l e ' ] , 
     t r a n s i t i o n :   [ ' t r a n s i t i o n D e l a y ' ,   ' t r a n s i t i o n D u r a t i o n ' ,   ' t r a n s i t i o n P r o p e r t y ' ,   ' t r a n s i t i o n T i m i n g F u n c t i o n ' ] , 
     w o r d W r a p :   [ ' o v e r f l o w W r a p ' ] 
 } ; 
 
 / * * 
   *   C S S   p r o p e r t i e s   w h i c h   a c c e p t   n u m b e r s   b u t   a r e   n o t   i n   u n i t s   o f   " p x " . 
   * / 
 v a r   i s U n i t l e s s N u m b e r   =   { 
     a n i m a t i o n I t e r a t i o n C o u n t :   t r u e , 
     a s p e c t R a t i o :   t r u e , 
     b o r d e r I m a g e O u t s e t :   t r u e , 
     b o r d e r I m a g e S l i c e :   t r u e , 
     b o r d e r I m a g e W i d t h :   t r u e , 
     b o x F l e x :   t r u e , 
     b o x F l e x G r o u p :   t r u e , 
     b o x O r d i n a l G r o u p :   t r u e , 
     c o l u m n C o u n t :   t r u e , 
     c o l u m n s :   t r u e , 
     f l e x :   t r u e , 
     f l e x G r o w :   t r u e , 
     f l e x P o s i t i v e :   t r u e , 
     f l e x S h r i n k :   t r u e , 
     f l e x N e g a t i v e :   t r u e , 
     f l e x O r d e r :   t r u e , 
     g r i d A r e a :   t r u e , 
     g r i d R o w :   t r u e , 
     g r i d R o w E n d :   t r u e , 
     g r i d R o w S p a n :   t r u e , 
     g r i d R o w S t a r t :   t r u e , 
     g r i d C o l u m n :   t r u e , 
     g r i d C o l u m n E n d :   t r u e , 
     g r i d C o l u m n S p a n :   t r u e , 
     g r i d C o l u m n S t a r t :   t r u e , 
     f o n t W e i g h t :   t r u e , 
     l i n e C l a m p :   t r u e , 
     l i n e H e i g h t :   t r u e , 
     o p a c i t y :   t r u e , 
     o r d e r :   t r u e , 
     o r p h a n s :   t r u e , 
     t a b S i z e :   t r u e , 
     w i d o w s :   t r u e , 
     z I n d e x :   t r u e , 
     z o o m :   t r u e , 
     / /   S V G - r e l a t e d   p r o p e r t i e s 
     f i l l O p a c i t y :   t r u e , 
     f l o o d O p a c i t y :   t r u e , 
     s t o p O p a c i t y :   t r u e , 
     s t r o k e D a s h a r r a y :   t r u e , 
     s t r o k e D a s h o f f s e t :   t r u e , 
     s t r o k e M i t e r l i m i t :   t r u e , 
     s t r o k e O p a c i t y :   t r u e , 
     s t r o k e W i d t h :   t r u e 
 } ; 
 / * * 
   *   @ p a r a m   { s t r i n g }   p r e f i x   v e n d o r - s p e c i f i c   p r e f i x ,   e g :   W e b k i t 
   *   @ p a r a m   { s t r i n g }   k e y   s t y l e   n a m e ,   e g :   t r a n s i t i o n D u r a t i o n 
   *   @ r e t u r n   { s t r i n g }   s t y l e   n a m e   p r e f i x e d   w i t h   ` p r e f i x ` ,   p r o p e r l y   c a m e l C a s e d ,   e g : 
   *   W e b k i t T r a n s i t i o n D u r a t i o n 
   * / 
 
 f u n c t i o n   p r e f i x K e y ( p r e f i x ,   k e y )   { 
     r e t u r n   p r e f i x   +   k e y . c h a r A t ( 0 ) . t o U p p e r C a s e ( )   +   k e y . s u b s t r i n g ( 1 ) ; 
 } 
 / * * 
   *   S u p p o r t   s t y l e   n a m e s   t h a t   m a y   c o m e   p a s s e d   i n   p r e f i x e d   b y   a d d i n g   p e r m u t a t i o n s 
   *   o f   v e n d o r   p r e f i x e s . 
   * / 
 
 
 v a r   p r e f i x e s   =   [ ' W e b k i t ' ,   ' m s ' ,   ' M o z ' ,   ' O ' ] ;   / /   U s i n g   O b j e c t . k e y s   h e r e ,   o r   e l s e   t h e   v a n i l l a   f o r - i n   l o o p   m a k e s   I E 8   g o   i n t o   a n 
 / /   i n f i n i t e   l o o p ,   b e c a u s e   i t   i t e r a t e s   o v e r   t h e   n e w l y   a d d e d   p r o p s   t o o . 
 
 O b j e c t . k e y s ( i s U n i t l e s s N u m b e r ) . f o r E a c h ( f u n c t i o n   ( p r o p )   { 
     p r e f i x e s . f o r E a c h ( f u n c t i o n   ( p r e f i x )   { 
         i s U n i t l e s s N u m b e r [ p r e f i x K e y ( p r e f i x ,   p r o p ) ]   =   i s U n i t l e s s N u m b e r [ p r o p ] ; 
     } ) ; 
 } ) ; 
 
 / * * 
   *   C o n v e r t   a   v a l u e   i n t o   t h e   p r o p e r   c s s   w r i t a b l e   v a l u e .   T h e   s t y l e   n a m e   ` n a m e ` 
   *   s h o u l d   b e   l o g i c a l   ( n o   h y p h e n s ) ,   a s   s p e c i f i e d 
   *   i n   ` C S S P r o p e r t y . i s U n i t l e s s N u m b e r ` . 
   * 
   *   @ p a r a m   { s t r i n g }   n a m e   C S S   p r o p e r t y   n a m e   s u c h   a s   ` t o p M a r g i n ` . 
   *   @ p a r a m   { * }   v a l u e   C S S   p r o p e r t y   v a l u e   s u c h   a s   ` 1 0 p x ` . 
   *   @ r e t u r n   { s t r i n g }   N o r m a l i z e d   s t y l e   v a l u e   w i t h   d i m e n s i o n s   a p p l i e d . 
   * / 
 
 f u n c t i o n   d a n g e r o u s S t y l e V a l u e ( n a m e ,   v a l u e ,   i s C u s t o m P r o p e r t y )   { 
     / /   N o t e   t h a t   w e ' v e   r e m o v e d   e s c a p e T e x t F o r B r o w s e r ( )   c a l l s   h e r e   s i n c e   t h e 
     / /   w h o l e   s t r i n g   w i l l   b e   e s c a p e d   w h e n   t h e   a t t r i b u t e   i s   i n j e c t e d   i n t o 
     / /   t h e   m a r k u p .   I f   y o u   p r o v i d e   u n s a f e   u s e r   d a t a   h e r e   t h e y   c a n   i n j e c t 
     / /   a r b i t r a r y   C S S   w h i c h   m a y   b e   p r o b l e m a t i c   ( I   c o u l d n ' t   r e p r o   t h i s ) : 
     / /   h t t p s : / / w w w . o w a s p . o r g / i n d e x . p h p / X S S _ F i l t e r _ E v a s i o n _ C h e a t _ S h e e t 
     / /   h t t p : / / w w w . t h e s p a n n e r . c o . u k / 2 0 0 7 / 1 1 / 2 6 / u l t i m a t e - x s s - c s s - i n j e c t i o n / 
     / /   T h i s   i s   n o t   a n   X S S   h o l e   b u t   i n s t e a d   a   p o t e n t i a l   C S S   i n j e c t i o n   i s s u e 
     / /   w h i c h   h a s   l e a d   t o   a   g r e a t e r   d i s c u s s i o n   a b o u t   h o w   w e ' r e   g o i n g   t o 
     / /   t r u s t   U R L s   m o v i n g   f o r w a r d .   S e e   # 2 1 1 5 9 0 1 
     v a r   i s E m p t y   =   v a l u e   = =   n u l l   | |   t y p e o f   v a l u e   = = =   ' b o o l e a n '   | |   v a l u e   = = =   ' ' ; 
 
     i f   ( i s E m p t y )   { 
         r e t u r n   ' ' ; 
     } 
 
     i f   ( ! i s C u s t o m P r o p e r t y   & &   t y p e o f   v a l u e   = = =   ' n u m b e r '   & &   v a l u e   ! = =   0   & &   ! ( i s U n i t l e s s N u m b e r . h a s O w n P r o p e r t y ( n a m e )   & &   i s U n i t l e s s N u m b e r [ n a m e ] ) )   { 
         r e t u r n   v a l u e   +   ' p x ' ;   / /   P r e s u m e s   i m p l i c i t   ' p x '   s u f f i x   f o r   u n i t l e s s   n u m b e r s 
     } 
 
     { 
         c h e c k C S S P r o p e r t y S t r i n g C o e r c i o n ( v a l u e ,   n a m e ) ; 
     } 
 
     r e t u r n   ( ' '   +   v a l u e ) . t r i m ( ) ; 
 } 
 
 v a r   u p p e r c a s e P a t t e r n   =   / ( [ A - Z ] ) / g ; 
 v a r   m s P a t t e r n   =   / ^ m s - / ; 
 / * * 
   *   H y p h e n a t e s   a   c a m e l c a s e d   C S S   p r o p e r t y   n a m e ,   f o r   e x a m p l e : 
   * 
   *       >   h y p h e n a t e S t y l e N a m e ( ' b a c k g r o u n d C o l o r ' ) 
   *       <   " b a c k g r o u n d - c o l o r " 
   *       >   h y p h e n a t e S t y l e N a m e ( ' M o z T r a n s i t i o n ' ) 
   *       <   " - m o z - t r a n s i t i o n " 
   *       >   h y p h e n a t e S t y l e N a m e ( ' m s T r a n s i t i o n ' ) 
   *       <   " - m s - t r a n s i t i o n " 
   * 
   *   A s   M o d e r n i z r   s u g g e s t s   ( h t t p : / / m o d e r n i z r . c o m / d o c s / # p r e f i x e d ) ,   a n   ` m s `   p r e f i x 
   *   i s   c o n v e r t e d   t o   ` - m s - ` . 
   * / 
 
 f u n c t i o n   h y p h e n a t e S t y l e N a m e ( n a m e )   { 
     r e t u r n   n a m e . r e p l a c e ( u p p e r c a s e P a t t e r n ,   ' - $ 1 ' ) . t o L o w e r C a s e ( ) . r e p l a c e ( m s P a t t e r n ,   ' - m s - ' ) ; 
 } 
 
 v a r   w a r n V a l i d S t y l e   =   f u n c t i o n   ( )   { } ; 
 
 { 
     / /   ' m s T r a n s f o r m '   i s   c o r r e c t ,   b u t   t h e   o t h e r   p r e f i x e s   s h o u l d   b e   c a p i t a l i z e d 
     v a r   b a d V e n d o r e d S t y l e N a m e P a t t e r n   =   / ^ ( ? : w e b k i t | m o z | o ) [ A - Z ] / ; 
     v a r   m s P a t t e r n $ 1   =   / ^ - m s - / ; 
     v a r   h y p h e n P a t t e r n   =   / - ( . ) / g ;   / /   s t y l e   v a l u e s   s h o u l d n ' t   c o n t a i n   a   s e m i c o l o n 
 
     v a r   b a d S t y l e V a l u e W i t h S e m i c o l o n P a t t e r n   =   / ; \ s * $ / ; 
     v a r   w a r n e d S t y l e N a m e s   =   { } ; 
     v a r   w a r n e d S t y l e V a l u e s   =   { } ; 
     v a r   w a r n e d F o r N a N V a l u e   =   f a l s e ; 
     v a r   w a r n e d F o r I n f i n i t y V a l u e   =   f a l s e ; 
 
     v a r   c a m e l i z e   =   f u n c t i o n   ( s t r i n g )   { 
         r e t u r n   s t r i n g . r e p l a c e ( h y p h e n P a t t e r n ,   f u n c t i o n   ( _ ,   c h a r a c t e r )   { 
             r e t u r n   c h a r a c t e r . t o U p p e r C a s e ( ) ; 
         } ) ; 
     } ; 
 
     v a r   w a r n H y p h e n a t e d S t y l e N a m e   =   f u n c t i o n   ( n a m e )   { 
         i f   ( w a r n e d S t y l e N a m e s . h a s O w n P r o p e r t y ( n a m e )   & &   w a r n e d S t y l e N a m e s [ n a m e ] )   { 
             r e t u r n ; 
         } 
 
         w a r n e d S t y l e N a m e s [ n a m e ]   =   t r u e ; 
 
         e r r o r ( ' U n s u p p o r t e d   s t y l e   p r o p e r t y   % s .   D i d   y o u   m e a n   % s ? ' ,   n a m e ,   / /   A s   A n d i   S m i t h   s u g g e s t s 
         / /   ( h t t p : / / w w w . a n d i s m i t h . c o m / b l o g / 2 0 1 2 / 0 2 / m o d e r n i z r - p r e f i x e d / ) ,   a n   ` - m s `   p r e f i x 
         / /   i s   c o n v e r t e d   t o   l o w e r c a s e   ` m s ` . 
         c a m e l i z e ( n a m e . r e p l a c e ( m s P a t t e r n $ 1 ,   ' m s - ' ) ) ) ; 
     } ; 
 
     v a r   w a r n B a d V e n d o r e d S t y l e N a m e   =   f u n c t i o n   ( n a m e )   { 
         i f   ( w a r n e d S t y l e N a m e s . h a s O w n P r o p e r t y ( n a m e )   & &   w a r n e d S t y l e N a m e s [ n a m e ] )   { 
             r e t u r n ; 
         } 
 
         w a r n e d S t y l e N a m e s [ n a m e ]   =   t r u e ; 
 
         e r r o r ( ' U n s u p p o r t e d   v e n d o r - p r e f i x e d   s t y l e   p r o p e r t y   % s .   D i d   y o u   m e a n   % s ? ' ,   n a m e ,   n a m e . c h a r A t ( 0 ) . t o U p p e r C a s e ( )   +   n a m e . s l i c e ( 1 ) ) ; 
     } ; 
 
     v a r   w a r n S t y l e V a l u e W i t h S e m i c o l o n   =   f u n c t i o n   ( n a m e ,   v a l u e )   { 
         i f   ( w a r n e d S t y l e V a l u e s . h a s O w n P r o p e r t y ( v a l u e )   & &   w a r n e d S t y l e V a l u e s [ v a l u e ] )   { 
             r e t u r n ; 
         } 
 
         w a r n e d S t y l e V a l u e s [ v a l u e ]   =   t r u e ; 
 
         e r r o r ( " S t y l e   p r o p e r t y   v a l u e s   s h o u l d n ' t   c o n t a i n   a   s e m i c o l o n .   "   +   ' T r y   " % s :   % s "   i n s t e a d . ' ,   n a m e ,   v a l u e . r e p l a c e ( b a d S t y l e V a l u e W i t h S e m i c o l o n P a t t e r n ,   ' ' ) ) ; 
     } ; 
 
     v a r   w a r n S t y l e V a l u e I s N a N   =   f u n c t i o n   ( n a m e ,   v a l u e )   { 
         i f   ( w a r n e d F o r N a N V a l u e )   { 
             r e t u r n ; 
         } 
 
         w a r n e d F o r N a N V a l u e   =   t r u e ; 
 
         e r r o r ( ' ` N a N `   i s   a n   i n v a l i d   v a l u e   f o r   t h e   ` % s `   c s s   s t y l e   p r o p e r t y . ' ,   n a m e ) ; 
     } ; 
 
     v a r   w a r n S t y l e V a l u e I s I n f i n i t y   =   f u n c t i o n   ( n a m e ,   v a l u e )   { 
         i f   ( w a r n e d F o r I n f i n i t y V a l u e )   { 
             r e t u r n ; 
         } 
 
         w a r n e d F o r I n f i n i t y V a l u e   =   t r u e ; 
 
         e r r o r ( ' ` I n f i n i t y `   i s   a n   i n v a l i d   v a l u e   f o r   t h e   ` % s `   c s s   s t y l e   p r o p e r t y . ' ,   n a m e ) ; 
     } ; 
 
     w a r n V a l i d S t y l e   =   f u n c t i o n   ( n a m e ,   v a l u e )   { 
         i f   ( n a m e . i n d e x O f ( ' - ' )   >   - 1 )   { 
             w a r n H y p h e n a t e d S t y l e N a m e ( n a m e ) ; 
         }   e l s e   i f   ( b a d V e n d o r e d S t y l e N a m e P a t t e r n . t e s t ( n a m e ) )   { 
             w a r n B a d V e n d o r e d S t y l e N a m e ( n a m e ) ; 
         }   e l s e   i f   ( b a d S t y l e V a l u e W i t h S e m i c o l o n P a t t e r n . t e s t ( v a l u e ) )   { 
             w a r n S t y l e V a l u e W i t h S e m i c o l o n ( n a m e ,   v a l u e ) ; 
         } 
 
         i f   ( t y p e o f   v a l u e   = = =   ' n u m b e r ' )   { 
             i f   ( i s N a N ( v a l u e ) )   { 
                 w a r n S t y l e V a l u e I s N a N ( n a m e ,   v a l u e ) ; 
             }   e l s e   i f   ( ! i s F i n i t e ( v a l u e ) )   { 
                 w a r n S t y l e V a l u e I s I n f i n i t y ( n a m e ,   v a l u e ) ; 
             } 
         } 
     } ; 
 } 
 
 v a r   w a r n V a l i d S t y l e $ 1   =   w a r n V a l i d S t y l e ; 
 
 / * * 
   *   O p e r a t i o n s   f o r   d e a l i n g   w i t h   C S S   p r o p e r t i e s . 
   * / 
 
 / * * 
   *   T h i s   c r e a t e s   a   s t r i n g   t h a t   i s   e x p e c t e d   t o   b e   e q u i v a l e n t   t o   t h e   s t y l e 
   *   a t t r i b u t e   g e n e r a t e d   b y   s e r v e r - s i d e   r e n d e r i n g .   I t   b y - p a s s e s   w a r n i n g s   a n d 
   *   s e c u r i t y   c h e c k s   s o   i t ' s   n o t   s a f e   t o   u s e   t h i s   v a l u e   f o r   a n y t h i n g   o t h e r   t h a n 
   *   c o m p a r i s o n .   I t   i s   o n l y   u s e d   i n   D E V   f o r   S S R   v a l i d a t i o n . 
   * / 
 
 f u n c t i o n   c r e a t e D a n g e r o u s S t r i n g F o r S t y l e s ( s t y l e s )   { 
     { 
         v a r   s e r i a l i z e d   =   ' ' ; 
         v a r   d e l i m i t e r   =   ' ' ; 
 
         f o r   ( v a r   s t y l e N a m e   i n   s t y l e s )   { 
             i f   ( ! s t y l e s . h a s O w n P r o p e r t y ( s t y l e N a m e ) )   { 
                 c o n t i n u e ; 
             } 
 
             v a r   s t y l e V a l u e   =   s t y l e s [ s t y l e N a m e ] ; 
 
             i f   ( s t y l e V a l u e   ! =   n u l l )   { 
                 v a r   i s C u s t o m P r o p e r t y   =   s t y l e N a m e . i n d e x O f ( ' - - ' )   = = =   0 ; 
                 s e r i a l i z e d   + =   d e l i m i t e r   +   ( i s C u s t o m P r o p e r t y   ?   s t y l e N a m e   :   h y p h e n a t e S t y l e N a m e ( s t y l e N a m e ) )   +   ' : ' ; 
                 s e r i a l i z e d   + =   d a n g e r o u s S t y l e V a l u e ( s t y l e N a m e ,   s t y l e V a l u e ,   i s C u s t o m P r o p e r t y ) ; 
                 d e l i m i t e r   =   ' ; ' ; 
             } 
         } 
 
         r e t u r n   s e r i a l i z e d   | |   n u l l ; 
     } 
 } 
 / * * 
   *   S e t s   t h e   v a l u e   f o r   m u l t i p l e   s t y l e s   o n   a   n o d e .     I f   a   v a l u e   i s   s p e c i f i e d   a s 
   *   ' '   ( e m p t y   s t r i n g ) ,   t h e   c o r r e s p o n d i n g   s t y l e   p r o p e r t y   w i l l   b e   u n s e t . 
   * 
   *   @ p a r a m   { D O M E l e m e n t }   n o d e 
   *   @ p a r a m   { o b j e c t }   s t y l e s 
   * / 
 
 f u n c t i o n   s e t V a l u e F o r S t y l e s ( n o d e ,   s t y l e s )   { 
     v a r   s t y l e   =   n o d e . s t y l e ; 
 
     f o r   ( v a r   s t y l e N a m e   i n   s t y l e s )   { 
         i f   ( ! s t y l e s . h a s O w n P r o p e r t y ( s t y l e N a m e ) )   { 
             c o n t i n u e ; 
         } 
 
         v a r   i s C u s t o m P r o p e r t y   =   s t y l e N a m e . i n d e x O f ( ' - - ' )   = = =   0 ; 
 
         { 
             i f   ( ! i s C u s t o m P r o p e r t y )   { 
                 w a r n V a l i d S t y l e $ 1 ( s t y l e N a m e ,   s t y l e s [ s t y l e N a m e ] ) ; 
             } 
         } 
 
         v a r   s t y l e V a l u e   =   d a n g e r o u s S t y l e V a l u e ( s t y l e N a m e ,   s t y l e s [ s t y l e N a m e ] ,   i s C u s t o m P r o p e r t y ) ; 
 
         i f   ( s t y l e N a m e   = = =   ' f l o a t ' )   { 
             s t y l e N a m e   =   ' c s s F l o a t ' ; 
         } 
 
         i f   ( i s C u s t o m P r o p e r t y )   { 
             s t y l e . s e t P r o p e r t y ( s t y l e N a m e ,   s t y l e V a l u e ) ; 
         }   e l s e   { 
             s t y l e [ s t y l e N a m e ]   =   s t y l e V a l u e ; 
         } 
     } 
 } 
 
 f u n c t i o n   i s V a l u e E m p t y ( v a l u e )   { 
     r e t u r n   v a l u e   = =   n u l l   | |   t y p e o f   v a l u e   = = =   ' b o o l e a n '   | |   v a l u e   = = =   ' ' ; 
 } 
 / * * 
   *   G i v e n   { c o l o r :   ' r e d ' ,   o v e r f l o w :   ' h i d d e n ' }   r e t u r n s   { 
   *       c o l o r :   ' c o l o r ' , 
   *       o v e r f l o w X :   ' o v e r f l o w ' , 
   *       o v e r f l o w Y :   ' o v e r f l o w ' , 
   *   } .   T h i s   c a n   b e   r e a d   a s   " t h e   o v e r f l o w Y   p r o p e r t y   w a s   s e t   b y   t h e   o v e r f l o w 
   *   s h o r t h a n d " .   T h a t   i s ,   t h e   v a l u e s   a r e   t h e   p r o p e r t y   t h a t   e a c h   w a s   d e r i v e d   f r o m . 
   * / 
 
 
 f u n c t i o n   e x p a n d S h o r t h a n d M a p ( s t y l e s )   { 
     v a r   e x p a n d e d   =   { } ; 
 
     f o r   ( v a r   k e y   i n   s t y l e s )   { 
         v a r   l o n g h a n d s   =   s h o r t h a n d T o L o n g h a n d [ k e y ]   | |   [ k e y ] ; 
 
         f o r   ( v a r   i   =   0 ;   i   <   l o n g h a n d s . l e n g t h ;   i + + )   { 
             e x p a n d e d [ l o n g h a n d s [ i ] ]   =   k e y ; 
         } 
     } 
 
     r e t u r n   e x p a n d e d ; 
 } 
 / * * 
   *   W h e n   m i x i n g   s h o r t h a n d   a n d   l o n g h a n d   p r o p e r t y   n a m e s ,   w e   w a r n   d u r i n g   u p d a t e s   i f 
   *   w e   e x p e c t   a n   i n c o r r e c t   r e s u l t   t o   o c c u r .   I n   p a r t i c u l a r ,   w e   w a r n   f o r : 
   * 
   *   U p d a t i n g   a   s h o r t h a n d   p r o p e r t y   ( l o n g h a n d   g e t s   o v e r w r i t t e n ) : 
   *       { f o n t :   ' f o o ' ,   f o n t V a r i a n t :   ' b a r ' }   - >   { f o n t :   ' b a z ' ,   f o n t V a r i a n t :   ' b a r ' } 
   *       b e c o m e s   . s t y l e . f o n t   =   ' b a z ' 
   *   R e m o v i n g   a   s h o r t h a n d   p r o p e r t y   ( l o n g h a n d   g e t s   l o s t   t o o ) : 
   *       { f o n t :   ' f o o ' ,   f o n t V a r i a n t :   ' b a r ' }   - >   { f o n t V a r i a n t :   ' b a r ' } 
   *       b e c o m e s   . s t y l e . f o n t   =   ' ' 
   *   R e m o v i n g   a   l o n g h a n d   p r o p e r t y   ( s h o u l d   r e v e r t   t o   s h o r t h a n d ;   d o e s n ' t ) : 
   *       { f o n t :   ' f o o ' ,   f o n t V a r i a n t :   ' b a r ' }   - >   { f o n t :   ' f o o ' } 
   *       b e c o m e s   . s t y l e . f o n t V a r i a n t   =   ' ' 
   * / 
 
 
 f u n c t i o n   v a l i d a t e S h o r t h a n d P r o p e r t y C o l l i s i o n I n D e v ( s t y l e U p d a t e s ,   n e x t S t y l e s )   { 
     { 
         i f   ( ! n e x t S t y l e s )   { 
             r e t u r n ; 
         } 
 
         v a r   e x p a n d e d U p d a t e s   =   e x p a n d S h o r t h a n d M a p ( s t y l e U p d a t e s ) ; 
         v a r   e x p a n d e d S t y l e s   =   e x p a n d S h o r t h a n d M a p ( n e x t S t y l e s ) ; 
         v a r   w a r n e d A b o u t   =   { } ; 
 
         f o r   ( v a r   k e y   i n   e x p a n d e d U p d a t e s )   { 
             v a r   o r i g i n a l K e y   =   e x p a n d e d U p d a t e s [ k e y ] ; 
             v a r   c o r r e c t O r i g i n a l K e y   =   e x p a n d e d S t y l e s [ k e y ] ; 
 
             i f   ( c o r r e c t O r i g i n a l K e y   & &   o r i g i n a l K e y   ! = =   c o r r e c t O r i g i n a l K e y )   { 
                 v a r   w a r n i n g K e y   =   o r i g i n a l K e y   +   ' , '   +   c o r r e c t O r i g i n a l K e y ; 
 
                 i f   ( w a r n e d A b o u t [ w a r n i n g K e y ] )   { 
                     c o n t i n u e ; 
                 } 
 
                 w a r n e d A b o u t [ w a r n i n g K e y ]   =   t r u e ; 
 
                 e r r o r ( ' % s   a   s t y l e   p r o p e r t y   d u r i n g   r e r e n d e r   ( % s )   w h e n   a   '   +   ' c o n f l i c t i n g   p r o p e r t y   i s   s e t   ( % s )   c a n   l e a d   t o   s t y l i n g   b u g s .   T o   '   +   " a v o i d   t h i s ,   d o n ' t   m i x   s h o r t h a n d   a n d   n o n - s h o r t h a n d   p r o p e r t i e s   "   +   ' f o r   t h e   s a m e   v a l u e ;   i n s t e a d ,   r e p l a c e   t h e   s h o r t h a n d   w i t h   '   +   ' s e p a r a t e   v a l u e s . ' ,   i s V a l u e E m p t y ( s t y l e U p d a t e s [ o r i g i n a l K e y ] )   ?   ' R e m o v i n g '   :   ' U p d a t i n g ' ,   o r i g i n a l K e y ,   c o r r e c t O r i g i n a l K e y ) ; 
             } 
         } 
     } 
 } 
 
 / /   F o r   H T M L ,   c e r t a i n   t a g s   s h o u l d   o m i t   t h e i r   c l o s e   t a g .   W e   k e e p   a   l i s t   f o r 
 / /   t h o s e   s p e c i a l - c a s e   t a g s . 
 v a r   o m i t t e d C l o s e T a g s   =   { 
     a r e a :   t r u e , 
     b a s e :   t r u e , 
     b r :   t r u e , 
     c o l :   t r u e , 
     e m b e d :   t r u e , 
     h r :   t r u e , 
     i m g :   t r u e , 
     i n p u t :   t r u e , 
     k e y g e n :   t r u e , 
     l i n k :   t r u e , 
     m e t a :   t r u e , 
     p a r a m :   t r u e , 
     s o u r c e :   t r u e , 
     t r a c k :   t r u e , 
     w b r :   t r u e   / /   N O T E :   m e n u i t e m ' s   c l o s e   t a g   s h o u l d   b e   o m i t t e d ,   b u t   t h a t   c a u s e s   p r o b l e m s . 
 
 } ; 
 
 / /   ` o m i t t e d C l o s e T a g s `   e x c e p t   t h a t   ` m e n u i t e m `   s h o u l d   s t i l l   h a v e   i t s   c l o s i n g   t a g . 
 
 v a r   v o i d E l e m e n t T a g s   =   a s s i g n ( { 
     m e n u i t e m :   t r u e 
 } ,   o m i t t e d C l o s e T a g s ) ; 
 
 v a r   H T M L   =   ' _ _ h t m l ' ; 
 
 f u n c t i o n   a s s e r t V a l i d P r o p s ( t a g ,   p r o p s )   { 
     i f   ( ! p r o p s )   { 
         r e t u r n ; 
     }   / /   N o t e   t h e   u s e   o f   ` = = `   w h i c h   c h e c k s   f o r   n u l l   o r   u n d e f i n e d . 
 
 
     i f   ( v o i d E l e m e n t T a g s [ t a g ] )   { 
         i f   ( p r o p s . c h i l d r e n   ! =   n u l l   | |   p r o p s . d a n g e r o u s l y S e t I n n e r H T M L   ! =   n u l l )   { 
             t h r o w   n e w   E r r o r ( t a g   +   "   i s   a   v o i d   e l e m e n t   t a g   a n d   m u s t   n e i t h e r   h a v e   ` c h i l d r e n `   n o r   "   +   ' u s e   ` d a n g e r o u s l y S e t I n n e r H T M L ` . ' ) ; 
         } 
     } 
 
     i f   ( p r o p s . d a n g e r o u s l y S e t I n n e r H T M L   ! =   n u l l )   { 
         i f   ( p r o p s . c h i l d r e n   ! =   n u l l )   { 
             t h r o w   n e w   E r r o r ( ' C a n   o n l y   s e t   o n e   o f   ` c h i l d r e n `   o r   ` p r o p s . d a n g e r o u s l y S e t I n n e r H T M L ` . ' ) ; 
         } 
 
         i f   ( t y p e o f   p r o p s . d a n g e r o u s l y S e t I n n e r H T M L   ! = =   ' o b j e c t '   | |   ! ( H T M L   i n   p r o p s . d a n g e r o u s l y S e t I n n e r H T M L ) )   { 
             t h r o w   n e w   E r r o r ( ' ` p r o p s . d a n g e r o u s l y S e t I n n e r H T M L `   m u s t   b e   i n   t h e   f o r m   ` { _ _ h t m l :   . . . } ` .   '   +   ' P l e a s e   v i s i t   h t t p s : / / r e a c t j s . o r g / l i n k / d a n g e r o u s l y - s e t - i n n e r - h t m l   '   +   ' f o r   m o r e   i n f o r m a t i o n . ' ) ; 
         } 
     } 
 
     { 
         i f   ( ! p r o p s . s u p p r e s s C o n t e n t E d i t a b l e W a r n i n g   & &   p r o p s . c o n t e n t E d i t a b l e   & &   p r o p s . c h i l d r e n   ! =   n u l l )   { 
             e r r o r ( ' A   c o m p o n e n t   i s   ` c o n t e n t E d i t a b l e `   a n d   c o n t a i n s   ` c h i l d r e n `   m a n a g e d   b y   '   +   ' R e a c t .   I t   i s   n o w   y o u r   r e s p o n s i b i l i t y   t o   g u a r a n t e e   t h a t   n o n e   o f   '   +   ' t h o s e   n o d e s   a r e   u n e x p e c t e d l y   m o d i f i e d   o r   d u p l i c a t e d .   T h i s   i s   '   +   ' p r o b a b l y   n o t   i n t e n t i o n a l . ' ) ; 
         } 
     } 
 
     i f   ( p r o p s . s t y l e   ! =   n u l l   & &   t y p e o f   p r o p s . s t y l e   ! = =   ' o b j e c t ' )   { 
         t h r o w   n e w   E r r o r ( ' T h e   ` s t y l e `   p r o p   e x p e c t s   a   m a p p i n g   f r o m   s t y l e   p r o p e r t i e s   t o   v a l u e s ,   '   +   " n o t   a   s t r i n g .   F o r   e x a m p l e ,   s t y l e = { { m a r g i n R i g h t :   s p a c i n g   +   ' e m ' } }   w h e n   "   +   ' u s i n g   J S X . ' ) ; 
     } 
 } 
 
 f u n c t i o n   i s C u s t o m C o m p o n e n t ( t a g N a m e ,   p r o p s )   { 
     i f   ( t a g N a m e . i n d e x O f ( ' - ' )   = = =   - 1 )   { 
         r e t u r n   t y p e o f   p r o p s . i s   = = =   ' s t r i n g ' ; 
     } 
 
     s w i t c h   ( t a g N a m e )   { 
         / /   T h e s e   a r e   r e s e r v e d   S V G   a n d   M a t h M L   e l e m e n t s . 
         / /   W e   d o n ' t   m i n d   t h i s   l i s t   t o o   m u c h   b e c a u s e   w e   e x p e c t   i t   t o   n e v e r   g r o w . 
         / /   T h e   a l t e r n a t i v e   i s   t o   t r a c k   t h e   n a m e s p a c e   i n   a   f e w   p l a c e s   w h i c h   i s   c o n v o l u t e d . 
         / /   h t t p s : / / w 3 c . g i t h u b . i o / w e b c o m p o n e n t s / s p e c / c u s t o m / # c u s t o m - e l e m e n t s - c o r e - c o n c e p t s 
         c a s e   ' a n n o t a t i o n - x m l ' : 
         c a s e   ' c o l o r - p r o f i l e ' : 
         c a s e   ' f o n t - f a c e ' : 
         c a s e   ' f o n t - f a c e - s r c ' : 
         c a s e   ' f o n t - f a c e - u r i ' : 
         c a s e   ' f o n t - f a c e - f o r m a t ' : 
         c a s e   ' f o n t - f a c e - n a m e ' : 
         c a s e   ' m i s s i n g - g l y p h ' : 
             r e t u r n   f a l s e ; 
 
         d e f a u l t : 
             r e t u r n   t r u e ; 
     } 
 } 
 
 / /   W h e n   a d d i n g   a t t r i b u t e s   t o   t h e   H T M L   o r   S V G   a l l o w e d   a t t r i b u t e   l i s t ,   b e   s u r e   t o 
 / /   a l s o   a d d   t h e m   t o   t h i s   m o d u l e   t o   e n s u r e   c a s i n g   a n d   i n c o r r e c t   n a m e 
 / /   w a r n i n g s . 
 v a r   p o s s i b l e S t a n d a r d N a m e s   =   { 
     / /   H T M L 
     a c c e p t :   ' a c c e p t ' , 
     a c c e p t c h a r s e t :   ' a c c e p t C h a r s e t ' , 
     ' a c c e p t - c h a r s e t ' :   ' a c c e p t C h a r s e t ' , 
     a c c e s s k e y :   ' a c c e s s K e y ' , 
     a c t i o n :   ' a c t i o n ' , 
     a l l o w f u l l s c r e e n :   ' a l l o w F u l l S c r e e n ' , 
     a l t :   ' a l t ' , 
     a s :   ' a s ' , 
     a s y n c :   ' a s y n c ' , 
     a u t o c a p i t a l i z e :   ' a u t o C a p i t a l i z e ' , 
     a u t o c o m p l e t e :   ' a u t o C o m p l e t e ' , 
     a u t o c o r r e c t :   ' a u t o C o r r e c t ' , 
     a u t o f o c u s :   ' a u t o F o c u s ' , 
     a u t o p l a y :   ' a u t o P l a y ' , 
     a u t o s a v e :   ' a u t o S a v e ' , 
     c a p t u r e :   ' c a p t u r e ' , 
     c e l l p a d d i n g :   ' c e l l P a d d i n g ' , 
     c e l l s p a c i n g :   ' c e l l S p a c i n g ' , 
     c h a l l e n g e :   ' c h a l l e n g e ' , 
     c h a r s e t :   ' c h a r S e t ' , 
     c h e c k e d :   ' c h e c k e d ' , 
     c h i l d r e n :   ' c h i l d r e n ' , 
     c i t e :   ' c i t e ' , 
     c l a s s :   ' c l a s s N a m e ' , 
     c l a s s i d :   ' c l a s s I D ' , 
     c l a s s n a m e :   ' c l a s s N a m e ' , 
     c o l s :   ' c o l s ' , 
     c o l s p a n :   ' c o l S p a n ' , 
     c o n t e n t :   ' c o n t e n t ' , 
     c o n t e n t e d i t a b l e :   ' c o n t e n t E d i t a b l e ' , 
     c o n t e x t m e n u :   ' c o n t e x t M e n u ' , 
     c o n t r o l s :   ' c o n t r o l s ' , 
     c o n t r o l s l i s t :   ' c o n t r o l s L i s t ' , 
     c o o r d s :   ' c o o r d s ' , 
     c r o s s o r i g i n :   ' c r o s s O r i g i n ' , 
     d a n g e r o u s l y s e t i n n e r h t m l :   ' d a n g e r o u s l y S e t I n n e r H T M L ' , 
     d a t a :   ' d a t a ' , 
     d a t e t i m e :   ' d a t e T i m e ' , 
     d e f a u l t :   ' d e f a u l t ' , 
     d e f a u l t c h e c k e d :   ' d e f a u l t C h e c k e d ' , 
     d e f a u l t v a l u e :   ' d e f a u l t V a l u e ' , 
     d e f e r :   ' d e f e r ' , 
     d i r :   ' d i r ' , 
     d i s a b l e d :   ' d i s a b l e d ' , 
     d i s a b l e p i c t u r e i n p i c t u r e :   ' d i s a b l e P i c t u r e I n P i c t u r e ' , 
     d i s a b l e r e m o t e p l a y b a c k :   ' d i s a b l e R e m o t e P l a y b a c k ' , 
     d o w n l o a d :   ' d o w n l o a d ' , 
     d r a g g a b l e :   ' d r a g g a b l e ' , 
     e n c t y p e :   ' e n c T y p e ' , 
     e n t e r k e y h i n t :   ' e n t e r K e y H i n t ' , 
     f o r :   ' h t m l F o r ' , 
     f o r m :   ' f o r m ' , 
     f o r m m e t h o d :   ' f o r m M e t h o d ' , 
     f o r m a c t i o n :   ' f o r m A c t i o n ' , 
     f o r m e n c t y p e :   ' f o r m E n c T y p e ' , 
     f o r m n o v a l i d a t e :   ' f o r m N o V a l i d a t e ' , 
     f o r m t a r g e t :   ' f o r m T a r g e t ' , 
     f r a m e b o r d e r :   ' f r a m e B o r d e r ' , 
     h e a d e r s :   ' h e a d e r s ' , 
     h e i g h t :   ' h e i g h t ' , 
     h i d d e n :   ' h i d d e n ' , 
     h i g h :   ' h i g h ' , 
     h r e f :   ' h r e f ' , 
     h r e f l a n g :   ' h r e f L a n g ' , 
     h t m l f o r :   ' h t m l F o r ' , 
     h t t p e q u i v :   ' h t t p E q u i v ' , 
     ' h t t p - e q u i v ' :   ' h t t p E q u i v ' , 
     i c o n :   ' i c o n ' , 
     i d :   ' i d ' , 
     i m a g e s i z e s :   ' i m a g e S i z e s ' , 
     i m a g e s r c s e t :   ' i m a g e S r c S e t ' , 
     i n n e r h t m l :   ' i n n e r H T M L ' , 
     i n p u t m o d e :   ' i n p u t M o d e ' , 
     i n t e g r i t y :   ' i n t e g r i t y ' , 
     i s :   ' i s ' , 
     i t e m i d :   ' i t e m I D ' , 
     i t e m p r o p :   ' i t e m P r o p ' , 
     i t e m r e f :   ' i t e m R e f ' , 
     i t e m s c o p e :   ' i t e m S c o p e ' , 
     i t e m t y p e :   ' i t e m T y p e ' , 
     k e y p a r a m s :   ' k e y P a r a m s ' , 
     k e y t y p e :   ' k e y T y p e ' , 
     k i n d :   ' k i n d ' , 
     l a b e l :   ' l a b e l ' , 
     l a n g :   ' l a n g ' , 
     l i s t :   ' l i s t ' , 
     l o o p :   ' l o o p ' , 
     l o w :   ' l o w ' , 
     m a n i f e s t :   ' m a n i f e s t ' , 
     m a r g i n w i d t h :   ' m a r g i n W i d t h ' , 
     m a r g i n h e i g h t :   ' m a r g i n H e i g h t ' , 
     m a x :   ' m a x ' , 
     m a x l e n g t h :   ' m a x L e n g t h ' , 
     m e d i a :   ' m e d i a ' , 
     m e d i a g r o u p :   ' m e d i a G r o u p ' , 
     m e t h o d :   ' m e t h o d ' , 
     m i n :   ' m i n ' , 
     m i n l e n g t h :   ' m i n L e n g t h ' , 
     m u l t i p l e :   ' m u l t i p l e ' , 
     m u t e d :   ' m u t e d ' , 
     n a m e :   ' n a m e ' , 
     n o m o d u l e :   ' n o M o d u l e ' , 
     n o n c e :   ' n o n c e ' , 
     n o v a l i d a t e :   ' n o V a l i d a t e ' , 
     o p e n :   ' o p e n ' , 
     o p t i m u m :   ' o p t i m u m ' , 
     p a t t e r n :   ' p a t t e r n ' , 
     p l a c e h o l d e r :   ' p l a c e h o l d e r ' , 
     p l a y s i n l i n e :   ' p l a y s I n l i n e ' , 
     p o s t e r :   ' p o s t e r ' , 
     p r e l o a d :   ' p r e l o a d ' , 
     p r o f i l e :   ' p r o f i l e ' , 
     r a d i o g r o u p :   ' r a d i o G r o u p ' , 
     r e a d o n l y :   ' r e a d O n l y ' , 
     r e f e r r e r p o l i c y :   ' r e f e r r e r P o l i c y ' , 
     r e l :   ' r e l ' , 
     r e q u i r e d :   ' r e q u i r e d ' , 
     r e v e r s e d :   ' r e v e r s e d ' , 
     r o l e :   ' r o l e ' , 
     r o w s :   ' r o w s ' , 
     r o w s p a n :   ' r o w S p a n ' , 
     s a n d b o x :   ' s a n d b o x ' , 
     s c o p e :   ' s c o p e ' , 
     s c o p e d :   ' s c o p e d ' , 
     s c r o l l i n g :   ' s c r o l l i n g ' , 
     s e a m l e s s :   ' s e a m l e s s ' , 
     s e l e c t e d :   ' s e l e c t e d ' , 
     s h a p e :   ' s h a p e ' , 
     s i z e :   ' s i z e ' , 
     s i z e s :   ' s i z e s ' , 
     s p a n :   ' s p a n ' , 
     s p e l l c h e c k :   ' s p e l l C h e c k ' , 
     s r c :   ' s r c ' , 
     s r c d o c :   ' s r c D o c ' , 
     s r c l a n g :   ' s r c L a n g ' , 
     s r c s e t :   ' s r c S e t ' , 
     s t a r t :   ' s t a r t ' , 
     s t e p :   ' s t e p ' , 
     s t y l e :   ' s t y l e ' , 
     s u m m a r y :   ' s u m m a r y ' , 
     t a b i n d e x :   ' t a b I n d e x ' , 
     t a r g e t :   ' t a r g e t ' , 
     t i t l e :   ' t i t l e ' , 
     t y p e :   ' t y p e ' , 
     u s e m a p :   ' u s e M a p ' , 
     v a l u e :   ' v a l u e ' , 
     w i d t h :   ' w i d t h ' , 
     w m o d e :   ' w m o d e ' , 
     w r a p :   ' w r a p ' , 
     / /   S V G 
     a b o u t :   ' a b o u t ' , 
     a c c e n t h e i g h t :   ' a c c e n t H e i g h t ' , 
     ' a c c e n t - h e i g h t ' :   ' a c c e n t H e i g h t ' , 
     a c c u m u l a t e :   ' a c c u m u l a t e ' , 
     a d d i t i v e :   ' a d d i t i v e ' , 
     a l i g n m e n t b a s e l i n e :   ' a l i g n m e n t B a s e l i n e ' , 
     ' a l i g n m e n t - b a s e l i n e ' :   ' a l i g n m e n t B a s e l i n e ' , 
     a l l o w r e o r d e r :   ' a l l o w R e o r d e r ' , 
     a l p h a b e t i c :   ' a l p h a b e t i c ' , 
     a m p l i t u d e :   ' a m p l i t u d e ' , 
     a r a b i c f o r m :   ' a r a b i c F o r m ' , 
     ' a r a b i c - f o r m ' :   ' a r a b i c F o r m ' , 
     a s c e n t :   ' a s c e n t ' , 
     a t t r i b u t e n a m e :   ' a t t r i b u t e N a m e ' , 
     a t t r i b u t e t y p e :   ' a t t r i b u t e T y p e ' , 
     a u t o r e v e r s e :   ' a u t o R e v e r s e ' , 
     a z i m u t h :   ' a z i m u t h ' , 
     b a s e f r e q u e n c y :   ' b a s e F r e q u e n c y ' , 
     b a s e l i n e s h i f t :   ' b a s e l i n e S h i f t ' , 
     ' b a s e l i n e - s h i f t ' :   ' b a s e l i n e S h i f t ' , 
     b a s e p r o f i l e :   ' b a s e P r o f i l e ' , 
     b b o x :   ' b b o x ' , 
     b e g i n :   ' b e g i n ' , 
     b i a s :   ' b i a s ' , 
     b y :   ' b y ' , 
     c a l c m o d e :   ' c a l c M o d e ' , 
     c a p h e i g h t :   ' c a p H e i g h t ' , 
     ' c a p - h e i g h t ' :   ' c a p H e i g h t ' , 
     c l i p :   ' c l i p ' , 
     c l i p p a t h :   ' c l i p P a t h ' , 
     ' c l i p - p a t h ' :   ' c l i p P a t h ' , 
     c l i p p a t h u n i t s :   ' c l i p P a t h U n i t s ' , 
     c l i p r u l e :   ' c l i p R u l e ' , 
     ' c l i p - r u l e ' :   ' c l i p R u l e ' , 
     c o l o r :   ' c o l o r ' , 
     c o l o r i n t e r p o l a t i o n :   ' c o l o r I n t e r p o l a t i o n ' , 
     ' c o l o r - i n t e r p o l a t i o n ' :   ' c o l o r I n t e r p o l a t i o n ' , 
     c o l o r i n t e r p o l a t i o n f i l t e r s :   ' c o l o r I n t e r p o l a t i o n F i l t e r s ' , 
     ' c o l o r - i n t e r p o l a t i o n - f i l t e r s ' :   ' c o l o r I n t e r p o l a t i o n F i l t e r s ' , 
     c o l o r p r o f i l e :   ' c o l o r P r o f i l e ' , 
     ' c o l o r - p r o f i l e ' :   ' c o l o r P r o f i l e ' , 
     c o l o r r e n d e r i n g :   ' c o l o r R e n d e r i n g ' , 
     ' c o l o r - r e n d e r i n g ' :   ' c o l o r R e n d e r i n g ' , 
     c o n t e n t s c r i p t t y p e :   ' c o n t e n t S c r i p t T y p e ' , 
     c o n t e n t s t y l e t y p e :   ' c o n t e n t S t y l e T y p e ' , 
     c u r s o r :   ' c u r s o r ' , 
     c x :   ' c x ' , 
     c y :   ' c y ' , 
     d :   ' d ' , 
     d a t a t y p e :   ' d a t a t y p e ' , 
     d e c e l e r a t e :   ' d e c e l e r a t e ' , 
     d e s c e n t :   ' d e s c e n t ' , 
     d i f f u s e c o n s t a n t :   ' d i f f u s e C o n s t a n t ' , 
     d i r e c t i o n :   ' d i r e c t i o n ' , 
     d i s p l a y :   ' d i s p l a y ' , 
     d i v i s o r :   ' d i v i s o r ' , 
     d o m i n a n t b a s e l i n e :   ' d o m i n a n t B a s e l i n e ' , 
     ' d o m i n a n t - b a s e l i n e ' :   ' d o m i n a n t B a s e l i n e ' , 
     d u r :   ' d u r ' , 
     d x :   ' d x ' , 
     d y :   ' d y ' , 
     e d g e m o d e :   ' e d g e M o d e ' , 
     e l e v a t i o n :   ' e l e v a t i o n ' , 
     e n a b l e b a c k g r o u n d :   ' e n a b l e B a c k g r o u n d ' , 
     ' e n a b l e - b a c k g r o u n d ' :   ' e n a b l e B a c k g r o u n d ' , 
     e n d :   ' e n d ' , 
     e x p o n e n t :   ' e x p o n e n t ' , 
     e x t e r n a l r e s o u r c e s r e q u i r e d :   ' e x t e r n a l R e s o u r c e s R e q u i r e d ' , 
     f i l l :   ' f i l l ' , 
     f i l l o p a c i t y :   ' f i l l O p a c i t y ' , 
     ' f i l l - o p a c i t y ' :   ' f i l l O p a c i t y ' , 
     f i l l r u l e :   ' f i l l R u l e ' , 
     ' f i l l - r u l e ' :   ' f i l l R u l e ' , 
     f i l t e r :   ' f i l t e r ' , 
     f i l t e r r e s :   ' f i l t e r R e s ' , 
     f i l t e r u n i t s :   ' f i l t e r U n i t s ' , 
     f l o o d o p a c i t y :   ' f l o o d O p a c i t y ' , 
     ' f l o o d - o p a c i t y ' :   ' f l o o d O p a c i t y ' , 
     f l o o d c o l o r :   ' f l o o d C o l o r ' , 
     ' f l o o d - c o l o r ' :   ' f l o o d C o l o r ' , 
     f o c u s a b l e :   ' f o c u s a b l e ' , 
     f o n t f a m i l y :   ' f o n t F a m i l y ' , 
     ' f o n t - f a m i l y ' :   ' f o n t F a m i l y ' , 
     f o n t s i z e :   ' f o n t S i z e ' , 
     ' f o n t - s i z e ' :   ' f o n t S i z e ' , 
     f o n t s i z e a d j u s t :   ' f o n t S i z e A d j u s t ' , 
     ' f o n t - s i z e - a d j u s t ' :   ' f o n t S i z e A d j u s t ' , 
     f o n t s t r e t c h :   ' f o n t S t r e t c h ' , 
     ' f o n t - s t r e t c h ' :   ' f o n t S t r e t c h ' , 
     f o n t s t y l e :   ' f o n t S t y l e ' , 
     ' f o n t - s t y l e ' :   ' f o n t S t y l e ' , 
     f o n t v a r i a n t :   ' f o n t V a r i a n t ' , 
     ' f o n t - v a r i a n t ' :   ' f o n t V a r i a n t ' , 
     f o n t w e i g h t :   ' f o n t W e i g h t ' , 
     ' f o n t - w e i g h t ' :   ' f o n t W e i g h t ' , 
     f o r m a t :   ' f o r m a t ' , 
     f r o m :   ' f r o m ' , 
     f x :   ' f x ' , 
     f y :   ' f y ' , 
     g 1 :   ' g 1 ' , 
     g 2 :   ' g 2 ' , 
     g l y p h n a m e :   ' g l y p h N a m e ' , 
     ' g l y p h - n a m e ' :   ' g l y p h N a m e ' , 
     g l y p h o r i e n t a t i o n h o r i z o n t a l :   ' g l y p h O r i e n t a t i o n H o r i z o n t a l ' , 
     ' g l y p h - o r i e n t a t i o n - h o r i z o n t a l ' :   ' g l y p h O r i e n t a t i o n H o r i z o n t a l ' , 
     g l y p h o r i e n t a t i o n v e r t i c a l :   ' g l y p h O r i e n t a t i o n V e r t i c a l ' , 
     ' g l y p h - o r i e n t a t i o n - v e r t i c a l ' :   ' g l y p h O r i e n t a t i o n V e r t i c a l ' , 
     g l y p h r e f :   ' g l y p h R e f ' , 
     g r a d i e n t t r a n s f o r m :   ' g r a d i e n t T r a n s f o r m ' , 
     g r a d i e n t u n i t s :   ' g r a d i e n t U n i t s ' , 
     h a n g i n g :   ' h a n g i n g ' , 
     h o r i z a d v x :   ' h o r i z A d v X ' , 
     ' h o r i z - a d v - x ' :   ' h o r i z A d v X ' , 
     h o r i z o r i g i n x :   ' h o r i z O r i g i n X ' , 
     ' h o r i z - o r i g i n - x ' :   ' h o r i z O r i g i n X ' , 
     i d e o g r a p h i c :   ' i d e o g r a p h i c ' , 
     i m a g e r e n d e r i n g :   ' i m a g e R e n d e r i n g ' , 
     ' i m a g e - r e n d e r i n g ' :   ' i m a g e R e n d e r i n g ' , 
     i n 2 :   ' i n 2 ' , 
     i n :   ' i n ' , 
     i n l i s t :   ' i n l i s t ' , 
     i n t e r c e p t :   ' i n t e r c e p t ' , 
     k 1 :   ' k 1 ' , 
     k 2 :   ' k 2 ' , 
     k 3 :   ' k 3 ' , 
     k 4 :   ' k 4 ' , 
     k :   ' k ' , 
     k e r n e l m a t r i x :   ' k e r n e l M a t r i x ' , 
     k e r n e l u n i t l e n g t h :   ' k e r n e l U n i t L e n g t h ' , 
     k e r n i n g :   ' k e r n i n g ' , 
     k e y p o i n t s :   ' k e y P o i n t s ' , 
     k e y s p l i n e s :   ' k e y S p l i n e s ' , 
     k e y t i m e s :   ' k e y T i m e s ' , 
     l e n g t h a d j u s t :   ' l e n g t h A d j u s t ' , 
     l e t t e r s p a c i n g :   ' l e t t e r S p a c i n g ' , 
     ' l e t t e r - s p a c i n g ' :   ' l e t t e r S p a c i n g ' , 
     l i g h t i n g c o l o r :   ' l i g h t i n g C o l o r ' , 
     ' l i g h t i n g - c o l o r ' :   ' l i g h t i n g C o l o r ' , 
     l i m i t i n g c o n e a n g l e :   ' l i m i t i n g C o n e A n g l e ' , 
     l o c a l :   ' l o c a l ' , 
     m a r k e r e n d :   ' m a r k e r E n d ' , 
     ' m a r k e r - e n d ' :   ' m a r k e r E n d ' , 
     m a r k e r h e i g h t :   ' m a r k e r H e i g h t ' , 
     m a r k e r m i d :   ' m a r k e r M i d ' , 
     ' m a r k e r - m i d ' :   ' m a r k e r M i d ' , 
     m a r k e r s t a r t :   ' m a r k e r S t a r t ' , 
     ' m a r k e r - s t a r t ' :   ' m a r k e r S t a r t ' , 
     m a r k e r u n i t s :   ' m a r k e r U n i t s ' , 
     m a r k e r w i d t h :   ' m a r k e r W i d t h ' , 
     m a s k :   ' m a s k ' , 
     m a s k c o n t e n t u n i t s :   ' m a s k C o n t e n t U n i t s ' , 
     m a s k u n i t s :   ' m a s k U n i t s ' , 
     m a t h e m a t i c a l :   ' m a t h e m a t i c a l ' , 
     m o d e :   ' m o d e ' , 
     n u m o c t a v e s :   ' n u m O c t a v e s ' , 
     o f f s e t :   ' o f f s e t ' , 
     o p a c i t y :   ' o p a c i t y ' , 
     o p e r a t o r :   ' o p e r a t o r ' , 
     o r d e r :   ' o r d e r ' , 
     o r i e n t :   ' o r i e n t ' , 
     o r i e n t a t i o n :   ' o r i e n t a t i o n ' , 
     o r i g i n :   ' o r i g i n ' , 
     o v e r f l o w :   ' o v e r f l o w ' , 
     o v e r l i n e p o s i t i o n :   ' o v e r l i n e P o s i t i o n ' , 
     ' o v e r l i n e - p o s i t i o n ' :   ' o v e r l i n e P o s i t i o n ' , 
     o v e r l i n e t h i c k n e s s :   ' o v e r l i n e T h i c k n e s s ' , 
     ' o v e r l i n e - t h i c k n e s s ' :   ' o v e r l i n e T h i c k n e s s ' , 
     p a i n t o r d e r :   ' p a i n t O r d e r ' , 
     ' p a i n t - o r d e r ' :   ' p a i n t O r d e r ' , 
     p a n o s e 1 :   ' p a n o s e 1 ' , 
     ' p a n o s e - 1 ' :   ' p a n o s e 1 ' , 
     p a t h l e n g t h :   ' p a t h L e n g t h ' , 
     p a t t e r n c o n t e n t u n i t s :   ' p a t t e r n C o n t e n t U n i t s ' , 
     p a t t e r n t r a n s f o r m :   ' p a t t e r n T r a n s f o r m ' , 
     p a t t e r n u n i t s :   ' p a t t e r n U n i t s ' , 
     p o i n t e r e v e n t s :   ' p o i n t e r E v e n t s ' , 
     ' p o i n t e r - e v e n t s ' :   ' p o i n t e r E v e n t s ' , 
     p o i n t s :   ' p o i n t s ' , 
     p o i n t s a t x :   ' p o i n t s A t X ' , 
     p o i n t s a t y :   ' p o i n t s A t Y ' , 
     p o i n t s a t z :   ' p o i n t s A t Z ' , 
     p r e f i x :   ' p r e f i x ' , 
     p r e s e r v e a l p h a :   ' p r e s e r v e A l p h a ' , 
     p r e s e r v e a s p e c t r a t i o :   ' p r e s e r v e A s p e c t R a t i o ' , 
     p r i m i t i v e u n i t s :   ' p r i m i t i v e U n i t s ' , 
     p r o p e r t y :   ' p r o p e r t y ' , 
     r :   ' r ' , 
     r a d i u s :   ' r a d i u s ' , 
     r e f x :   ' r e f X ' , 
     r e f y :   ' r e f Y ' , 
     r e n d e r i n g i n t e n t :   ' r e n d e r i n g I n t e n t ' , 
     ' r e n d e r i n g - i n t e n t ' :   ' r e n d e r i n g I n t e n t ' , 
     r e p e a t c o u n t :   ' r e p e a t C o u n t ' , 
     r e p e a t d u r :   ' r e p e a t D u r ' , 
     r e q u i r e d e x t e n s i o n s :   ' r e q u i r e d E x t e n s i o n s ' , 
     r e q u i r e d f e a t u r e s :   ' r e q u i r e d F e a t u r e s ' , 
     r e s o u r c e :   ' r e s o u r c e ' , 
     r e s t a r t :   ' r e s t a r t ' , 
     r e s u l t :   ' r e s u l t ' , 
     r e s u l t s :   ' r e s u l t s ' , 
     r o t a t e :   ' r o t a t e ' , 
     r x :   ' r x ' , 
     r y :   ' r y ' , 
     s c a l e :   ' s c a l e ' , 
     s e c u r i t y :   ' s e c u r i t y ' , 
     s e e d :   ' s e e d ' , 
     s h a p e r e n d e r i n g :   ' s h a p e R e n d e r i n g ' , 
     ' s h a p e - r e n d e r i n g ' :   ' s h a p e R e n d e r i n g ' , 
     s l o p e :   ' s l o p e ' , 
     s p a c i n g :   ' s p a c i n g ' , 
     s p e c u l a r c o n s t a n t :   ' s p e c u l a r C o n s t a n t ' , 
     s p e c u l a r e x p o n e n t :   ' s p e c u l a r E x p o n e n t ' , 
     s p e e d :   ' s p e e d ' , 
     s p r e a d m e t h o d :   ' s p r e a d M e t h o d ' , 
     s t a r t o f f s e t :   ' s t a r t O f f s e t ' , 
     s t d d e v i a t i o n :   ' s t d D e v i a t i o n ' , 
     s t e m h :   ' s t e m h ' , 
     s t e m v :   ' s t e m v ' , 
     s t i t c h t i l e s :   ' s t i t c h T i l e s ' , 
     s t o p c o l o r :   ' s t o p C o l o r ' , 
     ' s t o p - c o l o r ' :   ' s t o p C o l o r ' , 
     s t o p o p a c i t y :   ' s t o p O p a c i t y ' , 
     ' s t o p - o p a c i t y ' :   ' s t o p O p a c i t y ' , 
     s t r i k e t h r o u g h p o s i t i o n :   ' s t r i k e t h r o u g h P o s i t i o n ' , 
     ' s t r i k e t h r o u g h - p o s i t i o n ' :   ' s t r i k e t h r o u g h P o s i t i o n ' , 
     s t r i k e t h r o u g h t h i c k n e s s :   ' s t r i k e t h r o u g h T h i c k n e s s ' , 
     ' s t r i k e t h r o u g h - t h i c k n e s s ' :   ' s t r i k e t h r o u g h T h i c k n e s s ' , 
     s t r i n g :   ' s t r i n g ' , 
     s t r o k e :   ' s t r o k e ' , 
     s t r o k e d a s h a r r a y :   ' s t r o k e D a s h a r r a y ' , 
     ' s t r o k e - d a s h a r r a y ' :   ' s t r o k e D a s h a r r a y ' , 
     s t r o k e d a s h o f f s e t :   ' s t r o k e D a s h o f f s e t ' , 
     ' s t r o k e - d a s h o f f s e t ' :   ' s t r o k e D a s h o f f s e t ' , 
     s t r o k e l i n e c a p :   ' s t r o k e L i n e c a p ' , 
     ' s t r o k e - l i n e c a p ' :   ' s t r o k e L i n e c a p ' , 
     s t r o k e l i n e j o i n :   ' s t r o k e L i n e j o i n ' , 
     ' s t r o k e - l i n e j o i n ' :   ' s t r o k e L i n e j o i n ' , 
     s t r o k e m i t e r l i m i t :   ' s t r o k e M i t e r l i m i t ' , 
     ' s t r o k e - m i t e r l i m i t ' :   ' s t r o k e M i t e r l i m i t ' , 
     s t r o k e w i d t h :   ' s t r o k e W i d t h ' , 
     ' s t r o k e - w i d t h ' :   ' s t r o k e W i d t h ' , 
     s t r o k e o p a c i t y :   ' s t r o k e O p a c i t y ' , 
     ' s t r o k e - o p a c i t y ' :   ' s t r o k e O p a c i t y ' , 
     s u p p r e s s c o n t e n t e d i t a b l e w a r n i n g :   ' s u p p r e s s C o n t e n t E d i t a b l e W a r n i n g ' , 
     s u p p r e s s h y d r a t i o n w a r n i n g :   ' s u p p r e s s H y d r a t i o n W a r n i n g ' , 
     s u r f a c e s c a l e :   ' s u r f a c e S c a l e ' , 
     s y s t e m l a n g u a g e :   ' s y s t e m L a n g u a g e ' , 
     t a b l e v a l u e s :   ' t a b l e V a l u e s ' , 
     t a r g e t x :   ' t a r g e t X ' , 
     t a r g e t y :   ' t a r g e t Y ' , 
     t e x t a n c h o r :   ' t e x t A n c h o r ' , 
     ' t e x t - a n c h o r ' :   ' t e x t A n c h o r ' , 
     t e x t d e c o r a t i o n :   ' t e x t D e c o r a t i o n ' , 
     ' t e x t - d e c o r a t i o n ' :   ' t e x t D e c o r a t i o n ' , 
     t e x t l e n g t h :   ' t e x t L e n g t h ' , 
     t e x t r e n d e r i n g :   ' t e x t R e n d e r i n g ' , 
     ' t e x t - r e n d e r i n g ' :   ' t e x t R e n d e r i n g ' , 
     t o :   ' t o ' , 
     t r a n s f o r m :   ' t r a n s f o r m ' , 
     t y p e o f :   ' t y p e o f ' , 
     u 1 :   ' u 1 ' , 
     u 2 :   ' u 2 ' , 
     u n d e r l i n e p o s i t i o n :   ' u n d e r l i n e P o s i t i o n ' , 
     ' u n d e r l i n e - p o s i t i o n ' :   ' u n d e r l i n e P o s i t i o n ' , 
     u n d e r l i n e t h i c k n e s s :   ' u n d e r l i n e T h i c k n e s s ' , 
     ' u n d e r l i n e - t h i c k n e s s ' :   ' u n d e r l i n e T h i c k n e s s ' , 
     u n i c o d e :   ' u n i c o d e ' , 
     u n i c o d e b i d i :   ' u n i c o d e B i d i ' , 
     ' u n i c o d e - b i d i ' :   ' u n i c o d e B i d i ' , 
     u n i c o d e r a n g e :   ' u n i c o d e R a n g e ' , 
     ' u n i c o d e - r a n g e ' :   ' u n i c o d e R a n g e ' , 
     u n i t s p e r e m :   ' u n i t s P e r E m ' , 
     ' u n i t s - p e r - e m ' :   ' u n i t s P e r E m ' , 
     u n s e l e c t a b l e :   ' u n s e l e c t a b l e ' , 
     v a l p h a b e t i c :   ' v A l p h a b e t i c ' , 
     ' v - a l p h a b e t i c ' :   ' v A l p h a b e t i c ' , 
     v a l u e s :   ' v a l u e s ' , 
     v e c t o r e f f e c t :   ' v e c t o r E f f e c t ' , 
     ' v e c t o r - e f f e c t ' :   ' v e c t o r E f f e c t ' , 
     v e r s i o n :   ' v e r s i o n ' , 
     v e r t a d v y :   ' v e r t A d v Y ' , 
     ' v e r t - a d v - y ' :   ' v e r t A d v Y ' , 
     v e r t o r i g i n x :   ' v e r t O r i g i n X ' , 
     ' v e r t - o r i g i n - x ' :   ' v e r t O r i g i n X ' , 
     v e r t o r i g i n y :   ' v e r t O r i g i n Y ' , 
     ' v e r t - o r i g i n - y ' :   ' v e r t O r i g i n Y ' , 
     v h a n g i n g :   ' v H a n g i n g ' , 
     ' v - h a n g i n g ' :   ' v H a n g i n g ' , 
     v i d e o g r a p h i c :   ' v I d e o g r a p h i c ' , 
     ' v - i d e o g r a p h i c ' :   ' v I d e o g r a p h i c ' , 
     v i e w b o x :   ' v i e w B o x ' , 
     v i e w t a r g e t :   ' v i e w T a r g e t ' , 
     v i s i b i l i t y :   ' v i s i b i l i t y ' , 
     v m a t h e m a t i c a l :   ' v M a t h e m a t i c a l ' , 
     ' v - m a t h e m a t i c a l ' :   ' v M a t h e m a t i c a l ' , 
     v o c a b :   ' v o c a b ' , 
     w i d t h s :   ' w i d t h s ' , 
     w o r d s p a c i n g :   ' w o r d S p a c i n g ' , 
     ' w o r d - s p a c i n g ' :   ' w o r d S p a c i n g ' , 
     w r i t i n g m o d e :   ' w r i t i n g M o d e ' , 
     ' w r i t i n g - m o d e ' :   ' w r i t i n g M o d e ' , 
     x 1 :   ' x 1 ' , 
     x 2 :   ' x 2 ' , 
     x :   ' x ' , 
     x c h a n n e l s e l e c t o r :   ' x C h a n n e l S e l e c t o r ' , 
     x h e i g h t :   ' x H e i g h t ' , 
     ' x - h e i g h t ' :   ' x H e i g h t ' , 
     x l i n k a c t u a t e :   ' x l i n k A c t u a t e ' , 
     ' x l i n k : a c t u a t e ' :   ' x l i n k A c t u a t e ' , 
     x l i n k a r c r o l e :   ' x l i n k A r c r o l e ' , 
     ' x l i n k : a r c r o l e ' :   ' x l i n k A r c r o l e ' , 
     x l i n k h r e f :   ' x l i n k H r e f ' , 
     ' x l i n k : h r e f ' :   ' x l i n k H r e f ' , 
     x l i n k r o l e :   ' x l i n k R o l e ' , 
     ' x l i n k : r o l e ' :   ' x l i n k R o l e ' , 
     x l i n k s h o w :   ' x l i n k S h o w ' , 
     ' x l i n k : s h o w ' :   ' x l i n k S h o w ' , 
     x l i n k t i t l e :   ' x l i n k T i t l e ' , 
     ' x l i n k : t i t l e ' :   ' x l i n k T i t l e ' , 
     x l i n k t y p e :   ' x l i n k T y p e ' , 
     ' x l i n k : t y p e ' :   ' x l i n k T y p e ' , 
     x m l b a s e :   ' x m l B a s e ' , 
     ' x m l : b a s e ' :   ' x m l B a s e ' , 
     x m l l a n g :   ' x m l L a n g ' , 
     ' x m l : l a n g ' :   ' x m l L a n g ' , 
     x m l n s :   ' x m l n s ' , 
     ' x m l : s p a c e ' :   ' x m l S p a c e ' , 
     x m l n s x l i n k :   ' x m l n s X l i n k ' , 
     ' x m l n s : x l i n k ' :   ' x m l n s X l i n k ' , 
     x m l s p a c e :   ' x m l S p a c e ' , 
     y 1 :   ' y 1 ' , 
     y 2 :   ' y 2 ' , 
     y :   ' y ' , 
     y c h a n n e l s e l e c t o r :   ' y C h a n n e l S e l e c t o r ' , 
     z :   ' z ' , 
     z o o m a n d p a n :   ' z o o m A n d P a n ' 
 } ; 
 
 v a r   a r i a P r o p e r t i e s   =   { 
     ' a r i a - c u r r e n t ' :   0 , 
     / /   s t a t e 
     ' a r i a - d e s c r i p t i o n ' :   0 , 
     ' a r i a - d e t a i l s ' :   0 , 
     ' a r i a - d i s a b l e d ' :   0 , 
     / /   s t a t e 
     ' a r i a - h i d d e n ' :   0 , 
     / /   s t a t e 
     ' a r i a - i n v a l i d ' :   0 , 
     / /   s t a t e 
     ' a r i a - k e y s h o r t c u t s ' :   0 , 
     ' a r i a - l a b e l ' :   0 , 
     ' a r i a - r o l e d e s c r i p t i o n ' :   0 , 
     / /   W i d g e t   A t t r i b u t e s 
     ' a r i a - a u t o c o m p l e t e ' :   0 , 
     ' a r i a - c h e c k e d ' :   0 , 
     ' a r i a - e x p a n d e d ' :   0 , 
     ' a r i a - h a s p o p u p ' :   0 , 
     ' a r i a - l e v e l ' :   0 , 
     ' a r i a - m o d a l ' :   0 , 
     ' a r i a - m u l t i l i n e ' :   0 , 
     ' a r i a - m u l t i s e l e c t a b l e ' :   0 , 
     ' a r i a - o r i e n t a t i o n ' :   0 , 
     ' a r i a - p l a c e h o l d e r ' :   0 , 
     ' a r i a - p r e s s e d ' :   0 , 
     ' a r i a - r e a d o n l y ' :   0 , 
     ' a r i a - r e q u i r e d ' :   0 , 
     ' a r i a - s e l e c t e d ' :   0 , 
     ' a r i a - s o r t ' :   0 , 
     ' a r i a - v a l u e m a x ' :   0 , 
     ' a r i a - v a l u e m i n ' :   0 , 
     ' a r i a - v a l u e n o w ' :   0 , 
     ' a r i a - v a l u e t e x t ' :   0 , 
     / /   L i v e   R e g i o n   A t t r i b u t e s 
     ' a r i a - a t o m i c ' :   0 , 
     ' a r i a - b u s y ' :   0 , 
     ' a r i a - l i v e ' :   0 , 
     ' a r i a - r e l e v a n t ' :   0 , 
     / /   D r a g - a n d - D r o p   A t t r i b u t e s 
     ' a r i a - d r o p e f f e c t ' :   0 , 
     ' a r i a - g r a b b e d ' :   0 , 
     / /   R e l a t i o n s h i p   A t t r i b u t e s 
     ' a r i a - a c t i v e d e s c e n d a n t ' :   0 , 
     ' a r i a - c o l c o u n t ' :   0 , 
     ' a r i a - c o l i n d e x ' :   0 , 
     ' a r i a - c o l s p a n ' :   0 , 
     ' a r i a - c o n t r o l s ' :   0 , 
     ' a r i a - d e s c r i b e d b y ' :   0 , 
     ' a r i a - e r r o r m e s s a g e ' :   0 , 
     ' a r i a - f l o w t o ' :   0 , 
     ' a r i a - l a b e l l e d b y ' :   0 , 
     ' a r i a - o w n s ' :   0 , 
     ' a r i a - p o s i n s e t ' :   0 , 
     ' a r i a - r o w c o u n t ' :   0 , 
     ' a r i a - r o w i n d e x ' :   0 , 
     ' a r i a - r o w s p a n ' :   0 , 
     ' a r i a - s e t s i z e ' :   0 
 } ; 
 
 v a r   w a r n e d P r o p e r t i e s   =   { } ; 
 v a r   r A R I A   =   n e w   R e g E x p ( ' ^ ( a r i a ) - [ '   +   A T T R I B U T E _ N A M E _ C H A R   +   ' ] * $ ' ) ; 
 v a r   r A R I A C a m e l   =   n e w   R e g E x p ( ' ^ ( a r i a ) [ A - Z ] [ '   +   A T T R I B U T E _ N A M E _ C H A R   +   ' ] * $ ' ) ; 
 
 f u n c t i o n   v a l i d a t e P r o p e r t y ( t a g N a m e ,   n a m e )   { 
     { 
         i f   ( h a s O w n P r o p e r t y . c a l l ( w a r n e d P r o p e r t i e s ,   n a m e )   & &   w a r n e d P r o p e r t i e s [ n a m e ] )   { 
             r e t u r n   t r u e ; 
         } 
 
         i f   ( r A R I A C a m e l . t e s t ( n a m e ) )   { 
             v a r   a r i a N a m e   =   ' a r i a - '   +   n a m e . s l i c e ( 4 ) . t o L o w e r C a s e ( ) ; 
             v a r   c o r r e c t N a m e   =   a r i a P r o p e r t i e s . h a s O w n P r o p e r t y ( a r i a N a m e )   ?   a r i a N a m e   :   n u l l ;   / /   I f   t h i s   i s   a n   a r i a - *   a t t r i b u t e ,   b u t   i s   n o t   l i s t e d   i n   t h e   k n o w n   D O M 
             / /   D O M   p r o p e r t i e s ,   t h e n   i t   i s   a n   i n v a l i d   a r i a - *   a t t r i b u t e . 
 
             i f   ( c o r r e c t N a m e   = =   n u l l )   { 
                 e r r o r ( ' I n v a l i d   A R I A   a t t r i b u t e   ` % s ` .   A R I A   a t t r i b u t e s   f o l l o w   t h e   p a t t e r n   a r i a - *   a n d   m u s t   b e   l o w e r c a s e . ' ,   n a m e ) ; 
 
                 w a r n e d P r o p e r t i e s [ n a m e ]   =   t r u e ; 
                 r e t u r n   t r u e ; 
             }   / /   a r i a - *   a t t r i b u t e s   s h o u l d   b e   l o w e r c a s e ;   s u g g e s t   t h e   l o w e r c a s e   v e r s i o n . 
 
 
             i f   ( n a m e   ! = =   c o r r e c t N a m e )   { 
                 e r r o r ( ' I n v a l i d   A R I A   a t t r i b u t e   ` % s ` .   D i d   y o u   m e a n   ` % s ` ? ' ,   n a m e ,   c o r r e c t N a m e ) ; 
 
                 w a r n e d P r o p e r t i e s [ n a m e ]   =   t r u e ; 
                 r e t u r n   t r u e ; 
             } 
         } 
 
         i f   ( r A R I A . t e s t ( n a m e ) )   { 
             v a r   l o w e r C a s e d N a m e   =   n a m e . t o L o w e r C a s e ( ) ; 
             v a r   s t a n d a r d N a m e   =   a r i a P r o p e r t i e s . h a s O w n P r o p e r t y ( l o w e r C a s e d N a m e )   ?   l o w e r C a s e d N a m e   :   n u l l ;   / /   I f   t h i s   i s   a n   a r i a - *   a t t r i b u t e ,   b u t   i s   n o t   l i s t e d   i n   t h e   k n o w n   D O M 
             / /   D O M   p r o p e r t i e s ,   t h e n   i t   i s   a n   i n v a l i d   a r i a - *   a t t r i b u t e . 
 
             i f   ( s t a n d a r d N a m e   = =   n u l l )   { 
                 w a r n e d P r o p e r t i e s [ n a m e ]   =   t r u e ; 
                 r e t u r n   f a l s e ; 
             }   / /   a r i a - *   a t t r i b u t e s   s h o u l d   b e   l o w e r c a s e ;   s u g g e s t   t h e   l o w e r c a s e   v e r s i o n . 
 
 
             i f   ( n a m e   ! = =   s t a n d a r d N a m e )   { 
                 e r r o r ( ' U n k n o w n   A R I A   a t t r i b u t e   ` % s ` .   D i d   y o u   m e a n   ` % s ` ? ' ,   n a m e ,   s t a n d a r d N a m e ) ; 
 
                 w a r n e d P r o p e r t i e s [ n a m e ]   =   t r u e ; 
                 r e t u r n   t r u e ; 
             } 
         } 
     } 
 
     r e t u r n   t r u e ; 
 } 
 
 f u n c t i o n   w a r n I n v a l i d A R I A P r o p s ( t y p e ,   p r o p s )   { 
     { 
         v a r   i n v a l i d P r o p s   =   [ ] ; 
 
         f o r   ( v a r   k e y   i n   p r o p s )   { 
             v a r   i s V a l i d   =   v a l i d a t e P r o p e r t y ( t y p e ,   k e y ) ; 
 
             i f   ( ! i s V a l i d )   { 
                 i n v a l i d P r o p s . p u s h ( k e y ) ; 
             } 
         } 
 
         v a r   u n k n o w n P r o p S t r i n g   =   i n v a l i d P r o p s . m a p ( f u n c t i o n   ( p r o p )   { 
             r e t u r n   ' ` '   +   p r o p   +   ' ` ' ; 
         } ) . j o i n ( ' ,   ' ) ; 
 
         i f   ( i n v a l i d P r o p s . l e n g t h   = = =   1 )   { 
             e r r o r ( ' I n v a l i d   a r i a   p r o p   % s   o n   < % s >   t a g .   '   +   ' F o r   d e t a i l s ,   s e e   h t t p s : / / r e a c t j s . o r g / l i n k / i n v a l i d - a r i a - p r o p s ' ,   u n k n o w n P r o p S t r i n g ,   t y p e ) ; 
         }   e l s e   i f   ( i n v a l i d P r o p s . l e n g t h   >   1 )   { 
             e r r o r ( ' I n v a l i d   a r i a   p r o p s   % s   o n   < % s >   t a g .   '   +   ' F o r   d e t a i l s ,   s e e   h t t p s : / / r e a c t j s . o r g / l i n k / i n v a l i d - a r i a - p r o p s ' ,   u n k n o w n P r o p S t r i n g ,   t y p e ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   v a l i d a t e P r o p e r t i e s ( t y p e ,   p r o p s )   { 
     i f   ( i s C u s t o m C o m p o n e n t ( t y p e ,   p r o p s ) )   { 
         r e t u r n ; 
     } 
 
     w a r n I n v a l i d A R I A P r o p s ( t y p e ,   p r o p s ) ; 
 } 
 
 v a r   d i d W a r n V a l u e N u l l   =   f a l s e ; 
 f u n c t i o n   v a l i d a t e P r o p e r t i e s $ 1 ( t y p e ,   p r o p s )   { 
     { 
         i f   ( t y p e   ! = =   ' i n p u t '   & &   t y p e   ! = =   ' t e x t a r e a '   & &   t y p e   ! = =   ' s e l e c t ' )   { 
             r e t u r n ; 
         } 
 
         i f   ( p r o p s   ! =   n u l l   & &   p r o p s . v a l u e   = = =   n u l l   & &   ! d i d W a r n V a l u e N u l l )   { 
             d i d W a r n V a l u e N u l l   =   t r u e ; 
 
             i f   ( t y p e   = = =   ' s e l e c t '   & &   p r o p s . m u l t i p l e )   { 
                 e r r o r ( ' ` v a l u e `   p r o p   o n   ` % s `   s h o u l d   n o t   b e   n u l l .   '   +   ' C o n s i d e r   u s i n g   a n   e m p t y   a r r a y   w h e n   ` m u l t i p l e `   i s   s e t   t o   ` t r u e `   '   +   ' t o   c l e a r   t h e   c o m p o n e n t   o r   ` u n d e f i n e d `   f o r   u n c o n t r o l l e d   c o m p o n e n t s . ' ,   t y p e ) ; 
             }   e l s e   { 
                 e r r o r ( ' ` v a l u e `   p r o p   o n   ` % s `   s h o u l d   n o t   b e   n u l l .   '   +   ' C o n s i d e r   u s i n g   a n   e m p t y   s t r i n g   t o   c l e a r   t h e   c o m p o n e n t   o r   ` u n d e f i n e d `   '   +   ' f o r   u n c o n t r o l l e d   c o m p o n e n t s . ' ,   t y p e ) ; 
             } 
         } 
     } 
 } 
 
 v a r   v a l i d a t e P r o p e r t y $ 1   =   f u n c t i o n   ( )   { } ; 
 
 { 
     v a r   w a r n e d P r o p e r t i e s $ 1   =   { } ; 
     v a r   E V E N T _ N A M E _ R E G E X   =   / ^ o n . / ; 
     v a r   I N V A L I D _ E V E N T _ N A M E _ R E G E X   =   / ^ o n [ ^ A - Z ] / ; 
     v a r   r A R I A $ 1   =   n e w   R e g E x p ( ' ^ ( a r i a ) - [ '   +   A T T R I B U T E _ N A M E _ C H A R   +   ' ] * $ ' ) ; 
     v a r   r A R I A C a m e l $ 1   =   n e w   R e g E x p ( ' ^ ( a r i a ) [ A - Z ] [ '   +   A T T R I B U T E _ N A M E _ C H A R   +   ' ] * $ ' ) ; 
 
     v a l i d a t e P r o p e r t y $ 1   =   f u n c t i o n   ( t a g N a m e ,   n a m e ,   v a l u e ,   e v e n t R e g i s t r y )   { 
         i f   ( h a s O w n P r o p e r t y . c a l l ( w a r n e d P r o p e r t i e s $ 1 ,   n a m e )   & &   w a r n e d P r o p e r t i e s $ 1 [ n a m e ] )   { 
             r e t u r n   t r u e ; 
         } 
 
         v a r   l o w e r C a s e d N a m e   =   n a m e . t o L o w e r C a s e ( ) ; 
 
         i f   ( l o w e r C a s e d N a m e   = = =   ' o n f o c u s i n '   | |   l o w e r C a s e d N a m e   = = =   ' o n f o c u s o u t ' )   { 
             e r r o r ( ' R e a c t   u s e s   o n F o c u s   a n d   o n B l u r   i n s t e a d   o f   o n F o c u s I n   a n d   o n F o c u s O u t .   '   +   ' A l l   R e a c t   e v e n t s   a r e   n o r m a l i z e d   t o   b u b b l e ,   s o   o n F o c u s I n   a n d   o n F o c u s O u t   '   +   ' a r e   n o t   n e e d e d / s u p p o r t e d   b y   R e a c t . ' ) ; 
 
             w a r n e d P r o p e r t i e s $ 1 [ n a m e ]   =   t r u e ; 
             r e t u r n   t r u e ; 
         }   / /   W e   c a n ' t   r e l y   o n   t h e   e v e n t   s y s t e m   b e i n g   i n j e c t e d   o n   t h e   s e r v e r . 
 
 
         i f   ( e v e n t R e g i s t r y   ! =   n u l l )   { 
             v a r   r e g i s t r a t i o n N a m e D e p e n d e n c i e s   =   e v e n t R e g i s t r y . r e g i s t r a t i o n N a m e D e p e n d e n c i e s , 
                     p o s s i b l e R e g i s t r a t i o n N a m e s   =   e v e n t R e g i s t r y . p o s s i b l e R e g i s t r a t i o n N a m e s ; 
 
             i f   ( r e g i s t r a t i o n N a m e D e p e n d e n c i e s . h a s O w n P r o p e r t y ( n a m e ) )   { 
                 r e t u r n   t r u e ; 
             } 
 
             v a r   r e g i s t r a t i o n N a m e   =   p o s s i b l e R e g i s t r a t i o n N a m e s . h a s O w n P r o p e r t y ( l o w e r C a s e d N a m e )   ?   p o s s i b l e R e g i s t r a t i o n N a m e s [ l o w e r C a s e d N a m e ]   :   n u l l ; 
 
             i f   ( r e g i s t r a t i o n N a m e   ! =   n u l l )   { 
                 e r r o r ( ' I n v a l i d   e v e n t   h a n d l e r   p r o p e r t y   ` % s ` .   D i d   y o u   m e a n   ` % s ` ? ' ,   n a m e ,   r e g i s t r a t i o n N a m e ) ; 
 
                 w a r n e d P r o p e r t i e s $ 1 [ n a m e ]   =   t r u e ; 
                 r e t u r n   t r u e ; 
             } 
 
             i f   ( E V E N T _ N A M E _ R E G E X . t e s t ( n a m e ) )   { 
                 e r r o r ( ' U n k n o w n   e v e n t   h a n d l e r   p r o p e r t y   ` % s ` .   I t   w i l l   b e   i g n o r e d . ' ,   n a m e ) ; 
 
                 w a r n e d P r o p e r t i e s $ 1 [ n a m e ]   =   t r u e ; 
                 r e t u r n   t r u e ; 
             } 
         }   e l s e   i f   ( E V E N T _ N A M E _ R E G E X . t e s t ( n a m e ) )   { 
             / /   I f   n o   e v e n t   p l u g i n s   h a v e   b e e n   i n j e c t e d ,   w e   a r e   i n   a   s e r v e r   e n v i r o n m e n t . 
             / /   S o   w e   c a n ' t   t e l l   i f   t h e   e v e n t   n a m e   i s   c o r r e c t   f o r   s u r e ,   b u t   w e   c a n   f i l t e r 
             / /   o u t   k n o w n   b a d   o n e s   l i k e   ` o n c l i c k ` .   W e   c a n ' t   s u g g e s t   a   s p e c i f i c   r e p l a c e m e n t   t h o u g h . 
             i f   ( I N V A L I D _ E V E N T _ N A M E _ R E G E X . t e s t ( n a m e ) )   { 
                 e r r o r ( ' I n v a l i d   e v e n t   h a n d l e r   p r o p e r t y   ` % s ` .   '   +   ' R e a c t   e v e n t s   u s e   t h e   c a m e l C a s e   n a m i n g   c o n v e n t i o n ,   f o r   e x a m p l e   ` o n C l i c k ` . ' ,   n a m e ) ; 
             } 
 
             w a r n e d P r o p e r t i e s $ 1 [ n a m e ]   =   t r u e ; 
             r e t u r n   t r u e ; 
         }   / /   L e t   t h e   A R I A   a t t r i b u t e   h o o k   v a l i d a t e   A R I A   a t t r i b u t e s 
 
 
         i f   ( r A R I A $ 1 . t e s t ( n a m e )   | |   r A R I A C a m e l $ 1 . t e s t ( n a m e ) )   { 
             r e t u r n   t r u e ; 
         } 
 
         i f   ( l o w e r C a s e d N a m e   = = =   ' i n n e r h t m l ' )   { 
             e r r o r ( ' D i r e c t l y   s e t t i n g   p r o p e r t y   ` i n n e r H T M L `   i s   n o t   p e r m i t t e d .   '   +   ' F o r   m o r e   i n f o r m a t i o n ,   l o o k u p   d o c u m e n t a t i o n   o n   ` d a n g e r o u s l y S e t I n n e r H T M L ` . ' ) ; 
 
             w a r n e d P r o p e r t i e s $ 1 [ n a m e ]   =   t r u e ; 
             r e t u r n   t r u e ; 
         } 
 
         i f   ( l o w e r C a s e d N a m e   = = =   ' a r i a ' )   { 
             e r r o r ( ' T h e   ` a r i a `   a t t r i b u t e   i s   r e s e r v e d   f o r   f u t u r e   u s e   i n   R e a c t .   '   +   ' P a s s   i n d i v i d u a l   ` a r i a - `   a t t r i b u t e s   i n s t e a d . ' ) ; 
 
             w a r n e d P r o p e r t i e s $ 1 [ n a m e ]   =   t r u e ; 
             r e t u r n   t r u e ; 
         } 
 
         i f   ( l o w e r C a s e d N a m e   = = =   ' i s '   & &   v a l u e   ! = =   n u l l   & &   v a l u e   ! = =   u n d e f i n e d   & &   t y p e o f   v a l u e   ! = =   ' s t r i n g ' )   { 
             e r r o r ( ' R e c e i v e d   a   ` % s `   f o r   a   s t r i n g   a t t r i b u t e   ` i s ` .   I f   t h i s   i s   e x p e c t e d ,   c a s t   '   +   ' t h e   v a l u e   t o   a   s t r i n g . ' ,   t y p e o f   v a l u e ) ; 
 
             w a r n e d P r o p e r t i e s $ 1 [ n a m e ]   =   t r u e ; 
             r e t u r n   t r u e ; 
         } 
 
         i f   ( t y p e o f   v a l u e   = = =   ' n u m b e r '   & &   i s N a N ( v a l u e ) )   { 
             e r r o r ( ' R e c e i v e d   N a N   f o r   t h e   ` % s `   a t t r i b u t e .   I f   t h i s   i s   e x p e c t e d ,   c a s t   '   +   ' t h e   v a l u e   t o   a   s t r i n g . ' ,   n a m e ) ; 
 
             w a r n e d P r o p e r t i e s $ 1 [ n a m e ]   =   t r u e ; 
             r e t u r n   t r u e ; 
         } 
 
         v a r   p r o p e r t y I n f o   =   g e t P r o p e r t y I n f o ( n a m e ) ; 
         v a r   i s R e s e r v e d   =   p r o p e r t y I n f o   ! = =   n u l l   & &   p r o p e r t y I n f o . t y p e   = = =   R E S E R V E D ;   / /   K n o w n   a t t r i b u t e s   s h o u l d   m a t c h   t h e   c a s i n g   s p e c i f i e d   i n   t h e   p r o p e r t y   c o n f i g . 
 
         i f   ( p o s s i b l e S t a n d a r d N a m e s . h a s O w n P r o p e r t y ( l o w e r C a s e d N a m e ) )   { 
             v a r   s t a n d a r d N a m e   =   p o s s i b l e S t a n d a r d N a m e s [ l o w e r C a s e d N a m e ] ; 
 
             i f   ( s t a n d a r d N a m e   ! = =   n a m e )   { 
                 e r r o r ( ' I n v a l i d   D O M   p r o p e r t y   ` % s ` .   D i d   y o u   m e a n   ` % s ` ? ' ,   n a m e ,   s t a n d a r d N a m e ) ; 
 
                 w a r n e d P r o p e r t i e s $ 1 [ n a m e ]   =   t r u e ; 
                 r e t u r n   t r u e ; 
             } 
         }   e l s e   i f   ( ! i s R e s e r v e d   & &   n a m e   ! = =   l o w e r C a s e d N a m e )   { 
             / /   U n k n o w n   a t t r i b u t e s   s h o u l d   h a v e   l o w e r c a s e   c a s i n g   s i n c e   t h a t ' s   h o w   t h e y 
             / /   w i l l   b e   c a s e d   a n y w a y   w i t h   s e r v e r   r e n d e r i n g . 
             e r r o r ( ' R e a c t   d o e s   n o t   r e c o g n i z e   t h e   ` % s `   p r o p   o n   a   D O M   e l e m e n t .   I f   y o u   '   +   ' i n t e n t i o n a l l y   w a n t   i t   t o   a p p e a r   i n   t h e   D O M   a s   a   c u s t o m   '   +   ' a t t r i b u t e ,   s p e l l   i t   a s   l o w e r c a s e   ` % s `   i n s t e a d .   '   +   ' I f   y o u   a c c i d e n t a l l y   p a s s e d   i t   f r o m   a   p a r e n t   c o m p o n e n t ,   r e m o v e   '   +   ' i t   f r o m   t h e   D O M   e l e m e n t . ' ,   n a m e ,   l o w e r C a s e d N a m e ) ; 
 
             w a r n e d P r o p e r t i e s $ 1 [ n a m e ]   =   t r u e ; 
             r e t u r n   t r u e ; 
         } 
 
         i f   ( t y p e o f   v a l u e   = = =   ' b o o l e a n '   & &   s h o u l d R e m o v e A t t r i b u t e W i t h W a r n i n g ( n a m e ,   v a l u e ,   p r o p e r t y I n f o ,   f a l s e ) )   { 
             i f   ( v a l u e )   { 
                 e r r o r ( ' R e c e i v e d   ` % s `   f o r   a   n o n - b o o l e a n   a t t r i b u t e   ` % s ` . \ n \ n '   +   ' I f   y o u   w a n t   t o   w r i t e   i t   t o   t h e   D O M ,   p a s s   a   s t r i n g   i n s t e a d :   '   +   ' % s = " % s "   o r   % s = { v a l u e . t o S t r i n g ( ) } . ' ,   v a l u e ,   n a m e ,   n a m e ,   v a l u e ,   n a m e ) ; 
             }   e l s e   { 
                 e r r o r ( ' R e c e i v e d   ` % s `   f o r   a   n o n - b o o l e a n   a t t r i b u t e   ` % s ` . \ n \ n '   +   ' I f   y o u   w a n t   t o   w r i t e   i t   t o   t h e   D O M ,   p a s s   a   s t r i n g   i n s t e a d :   '   +   ' % s = " % s "   o r   % s = { v a l u e . t o S t r i n g ( ) } . \ n \ n '   +   ' I f   y o u   u s e d   t o   c o n d i t i o n a l l y   o m i t   i t   w i t h   % s = { c o n d i t i o n   & &   v a l u e } ,   '   +   ' p a s s   % s = { c o n d i t i o n   ?   v a l u e   :   u n d e f i n e d }   i n s t e a d . ' ,   v a l u e ,   n a m e ,   n a m e ,   v a l u e ,   n a m e ,   n a m e ,   n a m e ) ; 
             } 
 
             w a r n e d P r o p e r t i e s $ 1 [ n a m e ]   =   t r u e ; 
             r e t u r n   t r u e ; 
         }   / /   N o w   t h a t   w e ' v e   v a l i d a t e d   c a s i n g ,   d o   n o t   v a l i d a t e 
         / /   d a t a   t y p e s   f o r   r e s e r v e d   p r o p s 
 
 
         i f   ( i s R e s e r v e d )   { 
             r e t u r n   t r u e ; 
         }   / /   W a r n   w h e n   a   k n o w n   a t t r i b u t e   i s   a   b a d   t y p e 
 
 
         i f   ( s h o u l d R e m o v e A t t r i b u t e W i t h W a r n i n g ( n a m e ,   v a l u e ,   p r o p e r t y I n f o ,   f a l s e ) )   { 
             w a r n e d P r o p e r t i e s $ 1 [ n a m e ]   =   t r u e ; 
             r e t u r n   f a l s e ; 
         }   / /   W a r n   w h e n   p a s s i n g   t h e   s t r i n g s   ' f a l s e '   o r   ' t r u e '   i n t o   a   b o o l e a n   p r o p 
 
 
         i f   ( ( v a l u e   = = =   ' f a l s e '   | |   v a l u e   = = =   ' t r u e ' )   & &   p r o p e r t y I n f o   ! = =   n u l l   & &   p r o p e r t y I n f o . t y p e   = = =   B O O L E A N )   { 
             e r r o r ( ' R e c e i v e d   t h e   s t r i n g   ` % s `   f o r   t h e   b o o l e a n   a t t r i b u t e   ` % s ` .   '   +   ' % s   '   +   ' D i d   y o u   m e a n   % s = { % s } ? ' ,   v a l u e ,   n a m e ,   v a l u e   = = =   ' f a l s e '   ?   ' T h e   b r o w s e r   w i l l   i n t e r p r e t   i t   a s   a   t r u t h y   v a l u e . '   :   ' A l t h o u g h   t h i s   w o r k s ,   i t   w i l l   n o t   w o r k   a s   e x p e c t e d   i f   y o u   p a s s   t h e   s t r i n g   " f a l s e " . ' ,   n a m e ,   v a l u e ) ; 
 
             w a r n e d P r o p e r t i e s $ 1 [ n a m e ]   =   t r u e ; 
             r e t u r n   t r u e ; 
         } 
 
         r e t u r n   t r u e ; 
     } ; 
 } 
 
 v a r   w a r n U n k n o w n P r o p e r t i e s   =   f u n c t i o n   ( t y p e ,   p r o p s ,   e v e n t R e g i s t r y )   { 
     { 
         v a r   u n k n o w n P r o p s   =   [ ] ; 
 
         f o r   ( v a r   k e y   i n   p r o p s )   { 
             v a r   i s V a l i d   =   v a l i d a t e P r o p e r t y $ 1 ( t y p e ,   k e y ,   p r o p s [ k e y ] ,   e v e n t R e g i s t r y ) ; 
 
             i f   ( ! i s V a l i d )   { 
                 u n k n o w n P r o p s . p u s h ( k e y ) ; 
             } 
         } 
 
         v a r   u n k n o w n P r o p S t r i n g   =   u n k n o w n P r o p s . m a p ( f u n c t i o n   ( p r o p )   { 
             r e t u r n   ' ` '   +   p r o p   +   ' ` ' ; 
         } ) . j o i n ( ' ,   ' ) ; 
 
         i f   ( u n k n o w n P r o p s . l e n g t h   = = =   1 )   { 
             e r r o r ( ' I n v a l i d   v a l u e   f o r   p r o p   % s   o n   < % s >   t a g .   E i t h e r   r e m o v e   i t   f r o m   t h e   e l e m e n t ,   '   +   ' o r   p a s s   a   s t r i n g   o r   n u m b e r   v a l u e   t o   k e e p   i t   i n   t h e   D O M .   '   +   ' F o r   d e t a i l s ,   s e e   h t t p s : / / r e a c t j s . o r g / l i n k / a t t r i b u t e - b e h a v i o r   ' ,   u n k n o w n P r o p S t r i n g ,   t y p e ) ; 
         }   e l s e   i f   ( u n k n o w n P r o p s . l e n g t h   >   1 )   { 
             e r r o r ( ' I n v a l i d   v a l u e s   f o r   p r o p s   % s   o n   < % s >   t a g .   E i t h e r   r e m o v e   t h e m   f r o m   t h e   e l e m e n t ,   '   +   ' o r   p a s s   a   s t r i n g   o r   n u m b e r   v a l u e   t o   k e e p   t h e m   i n   t h e   D O M .   '   +   ' F o r   d e t a i l s ,   s e e   h t t p s : / / r e a c t j s . o r g / l i n k / a t t r i b u t e - b e h a v i o r   ' ,   u n k n o w n P r o p S t r i n g ,   t y p e ) ; 
         } 
     } 
 } ; 
 
 f u n c t i o n   v a l i d a t e P r o p e r t i e s $ 2 ( t y p e ,   p r o p s ,   e v e n t R e g i s t r y )   { 
     i f   ( i s C u s t o m C o m p o n e n t ( t y p e ,   p r o p s ) )   { 
         r e t u r n ; 
     } 
 
     w a r n U n k n o w n P r o p e r t i e s ( t y p e ,   p r o p s ,   e v e n t R e g i s t r y ) ; 
 } 
 
 v a r   I S _ E V E N T _ H A N D L E _ N O N _ M A N A G E D _ N O D E   =   1 ; 
 v a r   I S _ N O N _ D E L E G A T E D   =   1   < <   1 ; 
 v a r   I S _ C A P T U R E _ P H A S E   =   1   < <   2 ; 
 / /   s e t   t o   L E G A C Y _ F B _ S U P P O R T .   L E G A C Y _ F B _ S U P P O R T   o n l y   g e t s   s e t   w h e n 
 / /   w e   c a l l   w i l l D e f e r L a t e r F o r L e g a c y F B S u p p o r t ,   t h u s   n o t   b a i l i n g   o u t 
 / /   w i l l   r e s u l t   i n   e n d l e s s   c y c l e s   l i k e   a n   i n f i n i t e   l o o p . 
 / /   W e   a l s o   d o n ' t   w a n t   t o   d e f e r   d u r i n g   e v e n t   r e p l a y i n g . 
 
 v a r   S H O U L D _ N O T _ P R O C E S S _ P O L Y F I L L _ E V E N T _ P L U G I N S   =   I S _ E V E N T _ H A N D L E _ N O N _ M A N A G E D _ N O D E   |   I S _ N O N _ D E L E G A T E D   |   I S _ C A P T U R E _ P H A S E ; 
 
 / /   T h i s   e x i s t s   t o   a v o i d   c i r c u l a r   d e p e n d e n c y   b e t w e e n   R e a c t D O M E v e n t R e p l a y i n g 
 / /   a n d   D O M P l u g i n E v e n t S y s t e m . 
 v a r   c u r r e n t R e p l a y i n g E v e n t   =   n u l l ; 
 f u n c t i o n   s e t R e p l a y i n g E v e n t ( e v e n t )   { 
     { 
         i f   ( c u r r e n t R e p l a y i n g E v e n t   ! = =   n u l l )   { 
             e r r o r ( ' E x p e c t e d   c u r r e n t l y   r e p l a y i n g   e v e n t   t o   b e   n u l l .   T h i s   e r r o r   '   +   ' i s   l i k e l y   c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
         } 
     } 
 
     c u r r e n t R e p l a y i n g E v e n t   =   e v e n t ; 
 } 
 f u n c t i o n   r e s e t R e p l a y i n g E v e n t ( )   { 
     { 
         i f   ( c u r r e n t R e p l a y i n g E v e n t   = = =   n u l l )   { 
             e r r o r ( ' E x p e c t e d   c u r r e n t l y   r e p l a y i n g   e v e n t   t o   n o t   b e   n u l l .   T h i s   e r r o r   '   +   ' i s   l i k e l y   c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
         } 
     } 
 
     c u r r e n t R e p l a y i n g E v e n t   =   n u l l ; 
 } 
 f u n c t i o n   i s R e p l a y i n g E v e n t ( e v e n t )   { 
     r e t u r n   e v e n t   = = =   c u r r e n t R e p l a y i n g E v e n t ; 
 } 
 
 / * * 
   *   G e t s   t h e   t a r g e t   n o d e   f r o m   a   n a t i v e   b r o w s e r   e v e n t   b y   a c c o u n t i n g   f o r 
   *   i n c o n s i s t e n c i e s   i n   b r o w s e r   D O M   A P I s . 
   * 
   *   @ p a r a m   { o b j e c t }   n a t i v e E v e n t   N a t i v e   b r o w s e r   e v e n t . 
   *   @ r e t u r n   { D O M E v e n t T a r g e t }   T a r g e t   n o d e . 
   * / 
 
 f u n c t i o n   g e t E v e n t T a r g e t ( n a t i v e E v e n t )   { 
     / /   F a l l b a c k   t o   n a t i v e E v e n t . s r c E l e m e n t   f o r   I E 9 
     / /   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 2 5 0 6 
     v a r   t a r g e t   =   n a t i v e E v e n t . t a r g e t   | |   n a t i v e E v e n t . s r c E l e m e n t   | |   w i n d o w ;   / /   N o r m a l i z e   S V G   < u s e >   e l e m e n t   e v e n t s   # 4 9 6 3 
 
     i f   ( t a r g e t . c o r r e s p o n d i n g U s e E l e m e n t )   { 
         t a r g e t   =   t a r g e t . c o r r e s p o n d i n g U s e E l e m e n t ; 
     }   / /   S a f a r i   m a y   f i r e   e v e n t s   o n   t e x t   n o d e s   ( N o d e . T E X T _ N O D E   i s   3 ) . 
     / /   @ s e e   h t t p : / / w w w . q u i r k s m o d e . o r g / j s / e v e n t s _ p r o p e r t i e s . h t m l 
 
 
     r e t u r n   t a r g e t . n o d e T y p e   = = =   T E X T _ N O D E   ?   t a r g e t . p a r e n t N o d e   :   t a r g e t ; 
 } 
 
 v a r   r e s t o r e I m p l   =   n u l l ; 
 v a r   r e s t o r e T a r g e t   =   n u l l ; 
 v a r   r e s t o r e Q u e u e   =   n u l l ; 
 
 f u n c t i o n   r e s t o r e S t a t e O f T a r g e t ( t a r g e t )   { 
     / /   W e   p e r f o r m   t h i s   t r a n s l a t i o n   a t   t h e   e n d   o f   t h e   e v e n t   l o o p   s o   t h a t   w e 
     / /   a l w a y s   r e c e i v e   t h e   c o r r e c t   f i b e r   h e r e 
     v a r   i n t e r n a l I n s t a n c e   =   g e t I n s t a n c e F r o m N o d e ( t a r g e t ) ; 
 
     i f   ( ! i n t e r n a l I n s t a n c e )   { 
         / /   U n m o u n t e d 
         r e t u r n ; 
     } 
 
     i f   ( t y p e o f   r e s t o r e I m p l   ! = =   ' f u n c t i o n ' )   { 
         t h r o w   n e w   E r r o r ( ' s e t R e s t o r e I m p l e m e n t a t i o n ( )   n e e d s   t o   b e   c a l l e d   t o   h a n d l e   a   t a r g e t   f o r   c o n t r o l l e d   '   +   ' e v e n t s .   T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
     } 
 
     v a r   s t a t e N o d e   =   i n t e r n a l I n s t a n c e . s t a t e N o d e ;   / /   G u a r d   a g a i n s t   F i b e r   b e i n g   u n m o u n t e d . 
 
     i f   ( s t a t e N o d e )   { 
         v a r   _ p r o p s   =   g e t F i b e r C u r r e n t P r o p s F r o m N o d e ( s t a t e N o d e ) ; 
 
         r e s t o r e I m p l ( i n t e r n a l I n s t a n c e . s t a t e N o d e ,   i n t e r n a l I n s t a n c e . t y p e ,   _ p r o p s ) ; 
     } 
 } 
 
 f u n c t i o n   s e t R e s t o r e I m p l e m e n t a t i o n ( i m p l )   { 
     r e s t o r e I m p l   =   i m p l ; 
 } 
 f u n c t i o n   e n q u e u e S t a t e R e s t o r e ( t a r g e t )   { 
     i f   ( r e s t o r e T a r g e t )   { 
         i f   ( r e s t o r e Q u e u e )   { 
             r e s t o r e Q u e u e . p u s h ( t a r g e t ) ; 
         }   e l s e   { 
             r e s t o r e Q u e u e   =   [ t a r g e t ] ; 
         } 
     }   e l s e   { 
         r e s t o r e T a r g e t   =   t a r g e t ; 
     } 
 } 
 f u n c t i o n   n e e d s S t a t e R e s t o r e ( )   { 
     r e t u r n   r e s t o r e T a r g e t   ! = =   n u l l   | |   r e s t o r e Q u e u e   ! = =   n u l l ; 
 } 
 f u n c t i o n   r e s t o r e S t a t e I f N e e d e d ( )   { 
     i f   ( ! r e s t o r e T a r g e t )   { 
         r e t u r n ; 
     } 
 
     v a r   t a r g e t   =   r e s t o r e T a r g e t ; 
     v a r   q u e u e d T a r g e t s   =   r e s t o r e Q u e u e ; 
     r e s t o r e T a r g e t   =   n u l l ; 
     r e s t o r e Q u e u e   =   n u l l ; 
     r e s t o r e S t a t e O f T a r g e t ( t a r g e t ) ; 
 
     i f   ( q u e u e d T a r g e t s )   { 
         f o r   ( v a r   i   =   0 ;   i   <   q u e u e d T a r g e t s . l e n g t h ;   i + + )   { 
             r e s t o r e S t a t e O f T a r g e t ( q u e u e d T a r g e t s [ i ] ) ; 
         } 
     } 
 } 
 
 / /   t h e   r e n d e r e r .   S u c h   a s   w h e n   w e ' r e   d i s p a t c h i n g   e v e n t s   o r   i f   t h i r d   p a r t y 
 / /   l i b r a r i e s   n e e d   t o   c a l l   b a t c h e d U p d a t e s .   E v e n t u a l l y ,   t h i s   A P I   w i l l   g o   a w a y   w h e n 
 / /   e v e r y t h i n g   i s   b a t c h e d   b y   d e f a u l t .   W e ' l l   t h e n   h a v e   a   s i m i l a r   A P I   t o   o p t - o u t   o f 
 / /   s c h e d u l e d   w o r k   a n d   i n s t e a d   d o   s y n c h r o n o u s   w o r k . 
 / /   D e f a u l t s 
 
 v a r   b a t c h e d U p d a t e s I m p l   =   f u n c t i o n   ( f n ,   b o o k k e e p i n g )   { 
     r e t u r n   f n ( b o o k k e e p i n g ) ; 
 } ; 
 
 v a r   f l u s h S y n c I m p l   =   f u n c t i o n   ( )   { } ; 
 
 v a r   i s I n s i d e E v e n t H a n d l e r   =   f a l s e ; 
 
 f u n c t i o n   f i n i s h E v e n t H a n d l e r ( )   { 
     / /   H e r e   w e   w a i t   u n t i l   a l l   u p d a t e s   h a v e   p r o p a g a t e d ,   w h i c h   i s   i m p o r t a n t 
     / /   w h e n   u s i n g   c o n t r o l l e d   c o m p o n e n t s   w i t h i n   l a y e r s : 
     / /   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 6 9 8 
     / /   T h e n   w e   r e s t o r e   s t a t e   o f   a n y   c o n t r o l l e d   c o m p o n e n t . 
     v a r   c o n t r o l l e d C o m p o n e n t s H a v e P e n d i n g U p d a t e s   =   n e e d s S t a t e R e s t o r e ( ) ; 
 
     i f   ( c o n t r o l l e d C o m p o n e n t s H a v e P e n d i n g U p d a t e s )   { 
         / /   I f   a   c o n t r o l l e d   e v e n t   w a s   f i r e d ,   w e   m a y   n e e d   t o   r e s t o r e   t h e   s t a t e   o f 
         / /   t h e   D O M   n o d e   b a c k   t o   t h e   c o n t r o l l e d   v a l u e .   T h i s   i s   n e c e s s a r y   w h e n   R e a c t 
         / /   b a i l s   o u t   o f   t h e   u p d a t e   w i t h o u t   t o u c h i n g   t h e   D O M . 
         / /   T O D O :   R e s t o r e   s t a t e   i n   t h e   m i c r o t a s k ,   a f t e r   t h e   d i s c r e t e   u p d a t e s   f l u s h , 
         / /   i n s t e a d   o f   e a r l y   f l u s h i n g   t h e m   h e r e . 
         f l u s h S y n c I m p l ( ) ; 
         r e s t o r e S t a t e I f N e e d e d ( ) ; 
     } 
 } 
 
 f u n c t i o n   b a t c h e d U p d a t e s ( f n ,   a ,   b )   { 
     i f   ( i s I n s i d e E v e n t H a n d l e r )   { 
         / /   I f   w e   a r e   c u r r e n t l y   i n s i d e   a n o t h e r   b a t c h ,   w e   n e e d   t o   w a i t   u n t i l   i t 
         / /   f u l l y   c o m p l e t e s   b e f o r e   r e s t o r i n g   s t a t e . 
         r e t u r n   f n ( a ,   b ) ; 
     } 
 
     i s I n s i d e E v e n t H a n d l e r   =   t r u e ; 
 
     t r y   { 
         r e t u r n   b a t c h e d U p d a t e s I m p l ( f n ,   a ,   b ) ; 
     }   f i n a l l y   { 
         i s I n s i d e E v e n t H a n d l e r   =   f a l s e ; 
         f i n i s h E v e n t H a n d l e r ( ) ; 
     } 
 }   / /   T O D O :   R e p l a c e   w i t h   f l u s h S y n c 
 f u n c t i o n   s e t B a t c h i n g I m p l e m e n t a t i o n ( _ b a t c h e d U p d a t e s I m p l ,   _ d i s c r e t e U p d a t e s I m p l ,   _ f l u s h S y n c I m p l )   { 
     b a t c h e d U p d a t e s I m p l   =   _ b a t c h e d U p d a t e s I m p l ; 
     f l u s h S y n c I m p l   =   _ f l u s h S y n c I m p l ; 
 } 
 
 f u n c t i o n   i s I n t e r a c t i v e ( t a g )   { 
     r e t u r n   t a g   = = =   ' b u t t o n '   | |   t a g   = = =   ' i n p u t '   | |   t a g   = = =   ' s e l e c t '   | |   t a g   = = =   ' t e x t a r e a ' ; 
 } 
 
 f u n c t i o n   s h o u l d P r e v e n t M o u s e E v e n t ( n a m e ,   t y p e ,   p r o p s )   { 
     s w i t c h   ( n a m e )   { 
         c a s e   ' o n C l i c k ' : 
         c a s e   ' o n C l i c k C a p t u r e ' : 
         c a s e   ' o n D o u b l e C l i c k ' : 
         c a s e   ' o n D o u b l e C l i c k C a p t u r e ' : 
         c a s e   ' o n M o u s e D o w n ' : 
         c a s e   ' o n M o u s e D o w n C a p t u r e ' : 
         c a s e   ' o n M o u s e M o v e ' : 
         c a s e   ' o n M o u s e M o v e C a p t u r e ' : 
         c a s e   ' o n M o u s e U p ' : 
         c a s e   ' o n M o u s e U p C a p t u r e ' : 
         c a s e   ' o n M o u s e E n t e r ' : 
             r e t u r n   ! ! ( p r o p s . d i s a b l e d   & &   i s I n t e r a c t i v e ( t y p e ) ) ; 
 
         d e f a u l t : 
             r e t u r n   f a l s e ; 
     } 
 } 
 / * * 
   *   @ p a r a m   { o b j e c t }   i n s t   T h e   i n s t a n c e ,   w h i c h   i s   t h e   s o u r c e   o f   e v e n t s . 
   *   @ p a r a m   { s t r i n g }   r e g i s t r a t i o n N a m e   N a m e   o f   l i s t e n e r   ( e . g .   ` o n C l i c k ` ) . 
   *   @ r e t u r n   { ? f u n c t i o n }   T h e   s t o r e d   c a l l b a c k . 
   * / 
 
 
 f u n c t i o n   g e t L i s t e n e r ( i n s t ,   r e g i s t r a t i o n N a m e )   { 
     v a r   s t a t e N o d e   =   i n s t . s t a t e N o d e ; 
 
     i f   ( s t a t e N o d e   = = =   n u l l )   { 
         / /   W o r k   i n   p r o g r e s s   ( e x :   o n l o a d   e v e n t s   i n   i n c r e m e n t a l   m o d e ) . 
         r e t u r n   n u l l ; 
     } 
 
     v a r   p r o p s   =   g e t F i b e r C u r r e n t P r o p s F r o m N o d e ( s t a t e N o d e ) ; 
 
     i f   ( p r o p s   = = =   n u l l )   { 
         / /   W o r k   i n   p r o g r e s s . 
         r e t u r n   n u l l ; 
     } 
 
     v a r   l i s t e n e r   =   p r o p s [ r e g i s t r a t i o n N a m e ] ; 
 
     i f   ( s h o u l d P r e v e n t M o u s e E v e n t ( r e g i s t r a t i o n N a m e ,   i n s t . t y p e ,   p r o p s ) )   { 
         r e t u r n   n u l l ; 
     } 
 
     i f   ( l i s t e n e r   & &   t y p e o f   l i s t e n e r   ! = =   ' f u n c t i o n ' )   { 
         t h r o w   n e w   E r r o r ( " E x p e c t e d   ` "   +   r e g i s t r a t i o n N a m e   +   " `   l i s t e n e r   t o   b e   a   f u n c t i o n ,   i n s t e a d   g o t   a   v a l u e   o f   ` "   +   t y p e o f   l i s t e n e r   +   " `   t y p e . " ) ; 
     } 
 
     r e t u r n   l i s t e n e r ; 
 } 
 
 v a r   p a s s i v e B r o w s e r E v e n t s S u p p o r t e d   =   f a l s e ;   / /   C h e c k   i f   b r o w s e r   s u p p o r t   e v e n t s   w i t h   p a s s i v e   l i s t e n e r s 
 / /   h t t p s : / / d e v e l o p e r . m o z i l l a . o r g / e n - U S / d o c s / W e b / A P I / E v e n t T a r g e t / a d d E v e n t L i s t e n e r # S a f e l y _ d e t e c t i n g _ o p t i o n _ s u p p o r t 
 
 i f   ( c a n U s e D O M )   { 
     t r y   { 
         v a r   o p t i o n s   =   { } ;   / /   $ F l o w F i x M e :   I g n o r e   F l o w   c o m p l a i n i n g   a b o u t   n e e d i n g   a   v a l u e 
 
         O b j e c t . d e f i n e P r o p e r t y ( o p t i o n s ,   ' p a s s i v e ' ,   { 
             g e t :   f u n c t i o n   ( )   { 
                 p a s s i v e B r o w s e r E v e n t s S u p p o r t e d   =   t r u e ; 
             } 
         } ) ; 
         w i n d o w . a d d E v e n t L i s t e n e r ( ' t e s t ' ,   o p t i o n s ,   o p t i o n s ) ; 
         w i n d o w . r e m o v e E v e n t L i s t e n e r ( ' t e s t ' ,   o p t i o n s ,   o p t i o n s ) ; 
     }   c a t c h   ( e )   { 
         p a s s i v e B r o w s e r E v e n t s S u p p o r t e d   =   f a l s e ; 
     } 
 } 
 
 f u n c t i o n   i n v o k e G u a r d e d C a l l b a c k P r o d ( n a m e ,   f u n c ,   c o n t e x t ,   a ,   b ,   c ,   d ,   e ,   f )   { 
     v a r   f u n c A r g s   =   A r r a y . p r o t o t y p e . s l i c e . c a l l ( a r g u m e n t s ,   3 ) ; 
 
     t r y   { 
         f u n c . a p p l y ( c o n t e x t ,   f u n c A r g s ) ; 
     }   c a t c h   ( e r r o r )   { 
         t h i s . o n E r r o r ( e r r o r ) ; 
     } 
 } 
 
 v a r   i n v o k e G u a r d e d C a l l b a c k I m p l   =   i n v o k e G u a r d e d C a l l b a c k P r o d ; 
 
 { 
     / /   I n   D E V   m o d e ,   w e   s w a p   o u t   i n v o k e G u a r d e d C a l l b a c k   f o r   a   s p e c i a l   v e r s i o n 
     / /   t h a t   p l a y s   m o r e   n i c e l y   w i t h   t h e   b r o w s e r ' s   D e v T o o l s .   T h e   i d e a   i s   t o   p r e s e r v e 
     / /   " P a u s e   o n   e x c e p t i o n s "   b e h a v i o r .   B e c a u s e   R e a c t   w r a p s   a l l   u s e r - p r o v i d e d 
     / /   f u n c t i o n s   i n   i n v o k e G u a r d e d C a l l b a c k ,   a n d   t h e   p r o d u c t i o n   v e r s i o n   o f 
     / /   i n v o k e G u a r d e d C a l l b a c k   u s e s   a   t r y - c a t c h ,   a l l   u s e r   e x c e p t i o n s   a r e   t r e a t e d 
     / /   l i k e   c a u g h t   e x c e p t i o n s ,   a n d   t h e   D e v T o o l s   w o n ' t   p a u s e   u n l e s s   t h e   d e v e l o p e r 
     / /   t a k e s   t h e   e x t r a   s t e p   o f   e n a b l i n g   p a u s e   o n   c a u g h t   e x c e p t i o n s .   T h i s   i s 
     / /   u n i n t u i t i v e ,   t h o u g h ,   b e c a u s e   e v e n   t h o u g h   R e a c t   h a s   c a u g h t   t h e   e r r o r ,   f r o m 
     / /   t h e   d e v e l o p e r ' s   p e r s p e c t i v e ,   t h e   e r r o r   i s   u n c a u g h t . 
     / / 
     / /   T o   p r e s e r v e   t h e   e x p e c t e d   " P a u s e   o n   e x c e p t i o n s "   b e h a v i o r ,   w e   d o n ' t   u s e   a 
     / /   t r y - c a t c h   i n   D E V .   I n s t e a d ,   w e   s y n c h r o n o u s l y   d i s p a t c h   a   f a k e   e v e n t   t o   a   f a k e 
     / /   D O M   n o d e ,   a n d   c a l l   t h e   u s e r - p r o v i d e d   c a l l b a c k   f r o m   i n s i d e   a n   e v e n t   h a n d l e r 
     / /   f o r   t h a t   f a k e   e v e n t .   I f   t h e   c a l l b a c k   t h r o w s ,   t h e   e r r o r   i s   " c a p t u r e d "   u s i n g 
     / /   a   g l o b a l   e v e n t   h a n d l e r .   B u t   b e c a u s e   t h e   e r r o r   h a p p e n s   i n   a   d i f f e r e n t 
     / /   e v e n t   l o o p   c o n t e x t ,   i t   d o e s   n o t   i n t e r r u p t   t h e   n o r m a l   p r o g r a m   f l o w . 
     / /   E f f e c t i v e l y ,   t h i s   g i v e s   u s   t r y - c a t c h   b e h a v i o r   w i t h o u t   a c t u a l l y   u s i n g 
     / /   t r y - c a t c h .   N e a t ! 
     / /   C h e c k   t h a t   t h e   b r o w s e r   s u p p o r t s   t h e   A P I s   w e   n e e d   t o   i m p l e m e n t   o u r   s p e c i a l 
     / /   D E V   v e r s i o n   o f   i n v o k e G u a r d e d C a l l b a c k 
     i f   ( t y p e o f   w i n d o w   ! = =   ' u n d e f i n e d '   & &   t y p e o f   w i n d o w . d i s p a t c h E v e n t   = = =   ' f u n c t i o n '   & &   t y p e o f   d o c u m e n t   ! = =   ' u n d e f i n e d '   & &   t y p e o f   d o c u m e n t . c r e a t e E v e n t   = = =   ' f u n c t i o n ' )   { 
         v a r   f a k e N o d e   =   d o c u m e n t . c r e a t e E l e m e n t ( ' r e a c t ' ) ; 
 
         i n v o k e G u a r d e d C a l l b a c k I m p l   =   f u n c t i o n   i n v o k e G u a r d e d C a l l b a c k D e v ( n a m e ,   f u n c ,   c o n t e x t ,   a ,   b ,   c ,   d ,   e ,   f )   { 
             / /   I f   d o c u m e n t   d o e s n ' t   e x i s t   w e   k n o w   f o r   s u r e   w e   w i l l   c r a s h   i n   t h i s   m e t h o d 
             / /   w h e n   w e   c a l l   d o c u m e n t . c r e a t e E v e n t ( ) .   H o w e v e r   t h i s   c a n   c a u s e   c o n f u s i n g 
             / /   e r r o r s :   h t t p s : / / g i t h u b . c o m / f a c e b o o k / c r e a t e - r e a c t - a p p / i s s u e s / 3 4 8 2 
             / /   S o   w e   p r e e m p t i v e l y   t h r o w   w i t h   a   b e t t e r   m e s s a g e   i n s t e a d . 
             i f   ( t y p e o f   d o c u m e n t   = = =   ' u n d e f i n e d '   | |   d o c u m e n t   = = =   n u l l )   { 
                 t h r o w   n e w   E r r o r ( ' T h e   ` d o c u m e n t `   g l o b a l   w a s   d e f i n e d   w h e n   R e a c t   w a s   i n i t i a l i z e d ,   b u t   i s   n o t   '   +   ' d e f i n e d   a n y m o r e .   T h i s   c a n   h a p p e n   i n   a   t e s t   e n v i r o n m e n t   i f   a   c o m p o n e n t   '   +   ' s c h e d u l e s   a n   u p d a t e   f r o m   a n   a s y n c h r o n o u s   c a l l b a c k ,   b u t   t h e   t e s t   h a s   a l r e a d y   '   +   ' f i n i s h e d   r u n n i n g .   T o   s o l v e   t h i s ,   y o u   c a n   e i t h e r   u n m o u n t   t h e   c o m p o n e n t   a t   '   +   ' t h e   e n d   o f   y o u r   t e s t   ( a n d   e n s u r e   t h a t   a n y   a s y n c h r o n o u s   o p e r a t i o n s   g e t   '   +   ' c a n c e l e d   i n   ` c o m p o n e n t W i l l U n m o u n t ` ) ,   o r   y o u   c a n   c h a n g e   t h e   t e s t   i t s e l f   '   +   ' t o   b e   a s y n c h r o n o u s . ' ) ; 
             } 
 
             v a r   e v t   =   d o c u m e n t . c r e a t e E v e n t ( ' E v e n t ' ) ; 
             v a r   d i d C a l l   =   f a l s e ;   / /   K e e p s   t r a c k   o f   w h e t h e r   t h e   u s e r - p r o v i d e d   c a l l b a c k   t h r e w   a n   e r r o r .   W e 
             / /   s e t   t h i s   t o   t r u e   a t   t h e   b e g i n n i n g ,   t h e n   s e t   i t   t o   f a l s e   r i g h t   a f t e r 
             / /   c a l l i n g   t h e   f u n c t i o n .   I f   t h e   f u n c t i o n   e r r o r s ,   ` d i d E r r o r `   w i l l   n e v e r   b e 
             / /   s e t   t o   f a l s e .   T h i s   s t r a t e g y   w o r k s   e v e n   i f   t h e   b r o w s e r   i s   f l a k y   a n d 
             / /   f a i l s   t o   c a l l   o u r   g l o b a l   e r r o r   h a n d l e r ,   b e c a u s e   i t   d o e s n ' t   r e l y   o n 
             / /   t h e   e r r o r   e v e n t   a t   a l l . 
 
             v a r   d i d E r r o r   =   t r u e ;   / /   K e e p s   t r a c k   o f   t h e   v a l u e   o f   w i n d o w . e v e n t   s o   t h a t   w e   c a n   r e s e t   i t 
             / /   d u r i n g   t h e   c a l l b a c k   t o   l e t   u s e r   c o d e   a c c e s s   w i n d o w . e v e n t   i n   t h e 
             / /   b r o w s e r s   t h a t   s u p p o r t   i t . 
 
             v a r   w i n d o w E v e n t   =   w i n d o w . e v e n t ;   / /   K e e p s   t r a c k   o f   t h e   d e s c r i p t o r   o f   w i n d o w . e v e n t   t o   r e s t o r e   i t   a f t e r   e v e n t 
             / /   d i s p a t c h i n g :   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 3 6 8 8 
 
             v a r   w i n d o w E v e n t D e s c r i p t o r   =   O b j e c t . g e t O w n P r o p e r t y D e s c r i p t o r ( w i n d o w ,   ' e v e n t ' ) ; 
 
             f u n c t i o n   r e s t o r e A f t e r D i s p a t c h ( )   { 
                 / /   W e   i m m e d i a t e l y   r e m o v e   t h e   c a l l b a c k   f r o m   e v e n t   l i s t e n e r s   s o   t h a t 
                 / /   n e s t e d   ` i n v o k e G u a r d e d C a l l b a c k `   c a l l s   d o   n o t   c l a s h .   O t h e r w i s e ,   a 
                 / /   n e s t e d   c a l l   w o u l d   t r i g g e r   t h e   f a k e   e v e n t   h a n d l e r s   o f   a n y   c a l l   h i g h e r 
                 / /   i n   t h e   s t a c k . 
                 f a k e N o d e . r e m o v e E v e n t L i s t e n e r ( e v t T y p e ,   c a l l C a l l b a c k ,   f a l s e ) ;   / /   W e   c h e c k   f o r   w i n d o w . h a s O w n P r o p e r t y ( ' e v e n t ' )   t o   p r e v e n t   t h e 
                 / /   w i n d o w . e v e n t   a s s i g n m e n t   i n   b o t h   I E   < =   1 0   a s   t h e y   t h r o w   a n   e r r o r 
                 / /   " M e m b e r   n o t   f o u n d "   i n   s t r i c t   m o d e ,   a n d   i n   F i r e f o x   w h i c h   d o e s   n o t 
                 / /   s u p p o r t   w i n d o w . e v e n t . 
 
                 i f   ( t y p e o f   w i n d o w . e v e n t   ! = =   ' u n d e f i n e d '   & &   w i n d o w . h a s O w n P r o p e r t y ( ' e v e n t ' ) )   { 
                     w i n d o w . e v e n t   =   w i n d o w E v e n t ; 
                 } 
             }   / /   C r e a t e   a n   e v e n t   h a n d l e r   f o r   o u r   f a k e   e v e n t .   W e   w i l l   s y n c h r o n o u s l y 
             / /   d i s p a t c h   o u r   f a k e   e v e n t   u s i n g   ` d i s p a t c h E v e n t ` .   I n s i d e   t h e   h a n d l e r ,   w e 
             / /   c a l l   t h e   u s e r - p r o v i d e d   c a l l b a c k . 
 
 
             v a r   f u n c A r g s   =   A r r a y . p r o t o t y p e . s l i c e . c a l l ( a r g u m e n t s ,   3 ) ; 
 
             f u n c t i o n   c a l l C a l l b a c k ( )   { 
                 d i d C a l l   =   t r u e ; 
                 r e s t o r e A f t e r D i s p a t c h ( ) ; 
                 f u n c . a p p l y ( c o n t e x t ,   f u n c A r g s ) ; 
                 d i d E r r o r   =   f a l s e ; 
             }   / /   C r e a t e   a   g l o b a l   e r r o r   e v e n t   h a n d l e r .   W e   u s e   t h i s   t o   c a p t u r e   t h e   v a l u e 
             / /   t h a t   w a s   t h r o w n .   I t ' s   p o s s i b l e   t h a t   t h i s   e r r o r   h a n d l e r   w i l l   f i r e   m o r e 
             / /   t h a n   o n c e ;   f o r   e x a m p l e ,   i f   n o n - R e a c t   c o d e   a l s o   c a l l s   ` d i s p a t c h E v e n t ` 
             / /   a n d   a   h a n d l e r   f o r   t h a t   e v e n t   t h r o w s .   W e   s h o u l d   b e   r e s i l i e n t   t o   m o s t   o f 
             / /   t h o s e   c a s e s .   E v e n   i f   o u r   e r r o r   e v e n t   h a n d l e r   f i r e s   m o r e   t h a n   o n c e ,   t h e 
             / /   l a s t   e r r o r   e v e n t   i s   a l w a y s   u s e d .   I f   t h e   c a l l b a c k   a c t u a l l y   d o e s   e r r o r , 
             / /   w e   k n o w   t h a t   t h e   l a s t   e r r o r   e v e n t   i s   t h e   c o r r e c t   o n e ,   b e c a u s e   i t ' s   n o t 
             / /   p o s s i b l e   f o r   a n y t h i n g   e l s e   t o   h a v e   h a p p e n e d   i n   b e t w e e n   o u r   c a l l b a c k 
             / /   e r r o r i n g   a n d   t h e   c o d e   t h a t   f o l l o w s   t h e   ` d i s p a t c h E v e n t `   c a l l   b e l o w .   I f 
             / /   t h e   c a l l b a c k   d o e s n ' t   e r r o r ,   b u t   t h e   e r r o r   e v e n t   w a s   f i r e d ,   w e   k n o w   t o 
             / /   i g n o r e   i t   b e c a u s e   ` d i d E r r o r `   w i l l   b e   f a l s e ,   a s   d e s c r i b e d   a b o v e . 
 
 
             v a r   e r r o r ;   / /   U s e   t h i s   t o   t r a c k   w h e t h e r   t h e   e r r o r   e v e n t   i s   e v e r   c a l l e d . 
 
             v a r   d i d S e t E r r o r   =   f a l s e ; 
             v a r   i s C r o s s O r i g i n E r r o r   =   f a l s e ; 
 
             f u n c t i o n   h a n d l e W i n d o w E r r o r ( e v e n t )   { 
                 e r r o r   =   e v e n t . e r r o r ; 
                 d i d S e t E r r o r   =   t r u e ; 
 
                 i f   ( e r r o r   = = =   n u l l   & &   e v e n t . c o l n o   = = =   0   & &   e v e n t . l i n e n o   = = =   0 )   { 
                     i s C r o s s O r i g i n E r r o r   =   t r u e ; 
                 } 
 
                 i f   ( e v e n t . d e f a u l t P r e v e n t e d )   { 
                     / /   S o m e   o t h e r   e r r o r   h a n d l e r   h a s   p r e v e n t e d   d e f a u l t . 
                     / /   B r o w s e r s   s i l e n c e   t h e   e r r o r   r e p o r t   i f   t h i s   h a p p e n s . 
                     / /   W e ' l l   r e m e m b e r   t h i s   t o   l a t e r   d e c i d e   w h e t h e r   t o   l o g   i t   o r   n o t . 
                     i f   ( e r r o r   ! =   n u l l   & &   t y p e o f   e r r o r   = = =   ' o b j e c t ' )   { 
                         t r y   { 
                             e r r o r . _ s u p p r e s s L o g g i n g   =   t r u e ; 
                         }   c a t c h   ( i n n e r )   { / /   I g n o r e . 
                         } 
                     } 
                 } 
             }   / /   C r e a t e   a   f a k e   e v e n t   t y p e . 
 
 
             v a r   e v t T y p e   =   " r e a c t - "   +   ( n a m e   ?   n a m e   :   ' i n v o k e g u a r d e d c a l l b a c k ' ) ;   / /   A t t a c h   o u r   e v e n t   h a n d l e r s 
 
             w i n d o w . a d d E v e n t L i s t e n e r ( ' e r r o r ' ,   h a n d l e W i n d o w E r r o r ) ; 
             f a k e N o d e . a d d E v e n t L i s t e n e r ( e v t T y p e ,   c a l l C a l l b a c k ,   f a l s e ) ;   / /   S y n c h r o n o u s l y   d i s p a t c h   o u r   f a k e   e v e n t .   I f   t h e   u s e r - p r o v i d e d   f u n c t i o n 
             / /   e r r o r s ,   i t   w i l l   t r i g g e r   o u r   g l o b a l   e r r o r   h a n d l e r . 
 
             e v t . i n i t E v e n t ( e v t T y p e ,   f a l s e ,   f a l s e ) ; 
             f a k e N o d e . d i s p a t c h E v e n t ( e v t ) ; 
 
             i f   ( w i n d o w E v e n t D e s c r i p t o r )   { 
                 O b j e c t . d e f i n e P r o p e r t y ( w i n d o w ,   ' e v e n t ' ,   w i n d o w E v e n t D e s c r i p t o r ) ; 
             } 
 
             i f   ( d i d C a l l   & &   d i d E r r o r )   { 
                 i f   ( ! d i d S e t E r r o r )   { 
                     / /   T h e   c a l l b a c k   e r r o r e d ,   b u t   t h e   e r r o r   e v e n t   n e v e r   f i r e d . 
                     / /   e s l i n t - d i s a b l e - n e x t - l i n e   r e a c t - i n t e r n a l / p r o d - e r r o r - c o d e s 
                     e r r o r   =   n e w   E r r o r ( ' A n   e r r o r   w a s   t h r o w n   i n s i d e   o n e   o f   y o u r   c o m p o n e n t s ,   b u t   R e a c t   '   +   " d o e s n ' t   k n o w   w h a t   i t   w a s .   T h i s   i s   l i k e l y   d u e   t o   b r o w s e r   "   +   ' f l a k i n e s s .   R e a c t   d o e s   i t s   b e s t   t o   p r e s e r v e   t h e   " P a u s e   o n   '   +   ' e x c e p t i o n s "   b e h a v i o r   o f   t h e   D e v T o o l s ,   w h i c h   r e q u i r e s   s o m e   '   +   " D E V - m o d e   o n l y   t r i c k s .   I t ' s   p o s s i b l e   t h a t   t h e s e   d o n ' t   w o r k   i n   "   +   ' y o u r   b r o w s e r .   T r y   t r i g g e r i n g   t h e   e r r o r   i n   p r o d u c t i o n   m o d e ,   '   +   ' o r   s w i t c h i n g   t o   a   m o d e r n   b r o w s e r .   I f   y o u   s u s p e c t   t h a t   t h i s   i s   '   +   ' a c t u a l l y   a n   i s s u e   w i t h   R e a c t ,   p l e a s e   f i l e   a n   i s s u e . ' ) ; 
                 }   e l s e   i f   ( i s C r o s s O r i g i n E r r o r )   { 
                     / /   e s l i n t - d i s a b l e - n e x t - l i n e   r e a c t - i n t e r n a l / p r o d - e r r o r - c o d e s 
                     e r r o r   =   n e w   E r r o r ( " A   c r o s s - o r i g i n   e r r o r   w a s   t h r o w n .   R e a c t   d o e s n ' t   h a v e   a c c e s s   t o   "   +   ' t h e   a c t u a l   e r r o r   o b j e c t   i n   d e v e l o p m e n t .   '   +   ' S e e   h t t p s : / / r e a c t j s . o r g / l i n k / c r o s s o r i g i n - e r r o r   f o r   m o r e   i n f o r m a t i o n . ' ) ; 
                 } 
 
                 t h i s . o n E r r o r ( e r r o r ) ; 
             }   / /   R e m o v e   o u r   e v e n t   l i s t e n e r s 
 
 
             w i n d o w . r e m o v e E v e n t L i s t e n e r ( ' e r r o r ' ,   h a n d l e W i n d o w E r r o r ) ; 
 
             i f   ( ! d i d C a l l )   { 
                 / /   S o m e t h i n g   w e n t   r e a l l y   w r o n g ,   a n d   o u r   e v e n t   w a s   n o t   d i s p a t c h e d . 
                 / /   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 6 7 3 4 
                 / /   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 6 5 8 5 
                 / /   F a l l   b a c k   t o   t h e   p r o d u c t i o n   i m p l e m e n t a t i o n . 
                 r e s t o r e A f t e r D i s p a t c h ( ) ; 
                 r e t u r n   i n v o k e G u a r d e d C a l l b a c k P r o d . a p p l y ( t h i s ,   a r g u m e n t s ) ; 
             } 
         } ; 
     } 
 } 
 
 v a r   i n v o k e G u a r d e d C a l l b a c k I m p l $ 1   =   i n v o k e G u a r d e d C a l l b a c k I m p l ; 
 
 v a r   h a s E r r o r   =   f a l s e ; 
 v a r   c a u g h t E r r o r   =   n u l l ;   / /   U s e d   b y   e v e n t   s y s t e m   t o   c a p t u r e / r e t h r o w   t h e   f i r s t   e r r o r . 
 
 v a r   h a s R e t h r o w E r r o r   =   f a l s e ; 
 v a r   r e t h r o w E r r o r   =   n u l l ; 
 v a r   r e p o r t e r   =   { 
     o n E r r o r :   f u n c t i o n   ( e r r o r )   { 
         h a s E r r o r   =   t r u e ; 
         c a u g h t E r r o r   =   e r r o r ; 
     } 
 } ; 
 / * * 
   *   C a l l   a   f u n c t i o n   w h i l e   g u a r d i n g   a g a i n s t   e r r o r s   t h a t   h a p p e n s   w i t h i n   i t . 
   *   R e t u r n s   a n   e r r o r   i f   i t   t h r o w s ,   o t h e r w i s e   n u l l . 
   * 
   *   I n   p r o d u c t i o n ,   t h i s   i s   i m p l e m e n t e d   u s i n g   a   t r y - c a t c h .   T h e   r e a s o n   w e   d o n ' t 
   *   u s e   a   t r y - c a t c h   d i r e c t l y   i s   s o   t h a t   w e   c a n   s w a p   o u t   a   d i f f e r e n t 
   *   i m p l e m e n t a t i o n   i n   D E V   m o d e . 
   * 
   *   @ p a r a m   { S t r i n g }   n a m e   o f   t h e   g u a r d   t o   u s e   f o r   l o g g i n g   o r   d e b u g g i n g 
   *   @ p a r a m   { F u n c t i o n }   f u n c   T h e   f u n c t i o n   t o   i n v o k e 
   *   @ p a r a m   { * }   c o n t e x t   T h e   c o n t e x t   t o   u s e   w h e n   c a l l i n g   t h e   f u n c t i o n 
   *   @ p a r a m   { . . . * }   a r g s   A r g u m e n t s   f o r   f u n c t i o n 
   * / 
 
 f u n c t i o n   i n v o k e G u a r d e d C a l l b a c k ( n a m e ,   f u n c ,   c o n t e x t ,   a ,   b ,   c ,   d ,   e ,   f )   { 
     h a s E r r o r   =   f a l s e ; 
     c a u g h t E r r o r   =   n u l l ; 
     i n v o k e G u a r d e d C a l l b a c k I m p l $ 1 . a p p l y ( r e p o r t e r ,   a r g u m e n t s ) ; 
 } 
 / * * 
   *   S a m e   a s   i n v o k e G u a r d e d C a l l b a c k ,   b u t   i n s t e a d   o f   r e t u r n i n g   a n   e r r o r ,   i t   s t o r e s 
   *   i t   i n   a   g l o b a l   s o   i t   c a n   b e   r e t h r o w n   b y   ` r e t h r o w C a u g h t E r r o r `   l a t e r . 
   *   T O D O :   S e e   i f   c a u g h t E r r o r   a n d   r e t h r o w E r r o r   c a n   b e   u n i f i e d . 
   * 
   *   @ p a r a m   { S t r i n g }   n a m e   o f   t h e   g u a r d   t o   u s e   f o r   l o g g i n g   o r   d e b u g g i n g 
   *   @ p a r a m   { F u n c t i o n }   f u n c   T h e   f u n c t i o n   t o   i n v o k e 
   *   @ p a r a m   { * }   c o n t e x t   T h e   c o n t e x t   t o   u s e   w h e n   c a l l i n g   t h e   f u n c t i o n 
   *   @ p a r a m   { . . . * }   a r g s   A r g u m e n t s   f o r   f u n c t i o n 
   * / 
 
 f u n c t i o n   i n v o k e G u a r d e d C a l l b a c k A n d C a t c h F i r s t E r r o r ( n a m e ,   f u n c ,   c o n t e x t ,   a ,   b ,   c ,   d ,   e ,   f )   { 
     i n v o k e G u a r d e d C a l l b a c k . a p p l y ( t h i s ,   a r g u m e n t s ) ; 
 
     i f   ( h a s E r r o r )   { 
         v a r   e r r o r   =   c l e a r C a u g h t E r r o r ( ) ; 
 
         i f   ( ! h a s R e t h r o w E r r o r )   { 
             h a s R e t h r o w E r r o r   =   t r u e ; 
             r e t h r o w E r r o r   =   e r r o r ; 
         } 
     } 
 } 
 / * * 
   *   D u r i n g   e x e c u t i o n   o f   g u a r d e d   f u n c t i o n s   w e   w i l l   c a p t u r e   t h e   f i r s t   e r r o r   w h i c h 
   *   w e   w i l l   r e t h r o w   t o   b e   h a n d l e d   b y   t h e   t o p   l e v e l   e r r o r   h a n d l e r . 
   * / 
 
 f u n c t i o n   r e t h r o w C a u g h t E r r o r ( )   { 
     i f   ( h a s R e t h r o w E r r o r )   { 
         v a r   e r r o r   =   r e t h r o w E r r o r ; 
         h a s R e t h r o w E r r o r   =   f a l s e ; 
         r e t h r o w E r r o r   =   n u l l ; 
         t h r o w   e r r o r ; 
     } 
 } 
 f u n c t i o n   h a s C a u g h t E r r o r ( )   { 
     r e t u r n   h a s E r r o r ; 
 } 
 f u n c t i o n   c l e a r C a u g h t E r r o r ( )   { 
     i f   ( h a s E r r o r )   { 
         v a r   e r r o r   =   c a u g h t E r r o r ; 
         h a s E r r o r   =   f a l s e ; 
         c a u g h t E r r o r   =   n u l l ; 
         r e t u r n   e r r o r ; 
     }   e l s e   { 
         t h r o w   n e w   E r r o r ( ' c l e a r C a u g h t E r r o r   w a s   c a l l e d   b u t   n o   e r r o r   w a s   c a p t u r e d .   T h i s   e r r o r   '   +   ' i s   l i k e l y   c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
     } 
 } 
 
 / * * 
   *   ` R e a c t I n s t a n c e M a p `   m a i n t a i n s   a   m a p p i n g   f r o m   a   p u b l i c   f a c i n g   s t a t e f u l 
   *   i n s t a n c e   ( k e y )   a n d   t h e   i n t e r n a l   r e p r e s e n t a t i o n   ( v a l u e ) .   T h i s   a l l o w s   p u b l i c 
   *   m e t h o d s   t o   a c c e p t   t h e   u s e r   f a c i n g   i n s t a n c e   a s   a n   a r g u m e n t   a n d   m a p   t h e m   b a c k 
   *   t o   i n t e r n a l   m e t h o d s . 
   * 
   *   N o t e   t h a t   t h i s   m o d u l e   i s   c u r r e n t l y   s h a r e d   a n d   a s s u m e d   t o   b e   s t a t e l e s s . 
   *   I f   t h i s   b e c o m e s   a n   a c t u a l   M a p ,   t h a t   w i l l   b r e a k . 
   * / 
 f u n c t i o n   g e t ( k e y )   { 
     r e t u r n   k e y . _ r e a c t I n t e r n a l s ; 
 } 
 f u n c t i o n   h a s ( k e y )   { 
     r e t u r n   k e y . _ r e a c t I n t e r n a l s   ! = =   u n d e f i n e d ; 
 } 
 f u n c t i o n   s e t ( k e y ,   v a l u e )   { 
     k e y . _ r e a c t I n t e r n a l s   =   v a l u e ; 
 } 
 
 / /   D o n ' t   c h a n g e   t h e s e   t w o   v a l u e s .   T h e y ' r e   u s e d   b y   R e a c t   D e v   T o o l s . 
 v a r   N o F l a g s   = 
 / *                                             * / 
 0 ; 
 v a r   P e r f o r m e d W o r k   = 
 / *                                 * / 
 1 ;   / /   Y o u   c a n   c h a n g e   t h e   r e s t   ( a n d   a d d   m o r e ) . 
 
 v a r   P l a c e m e n t   = 
 / *                                         * / 
 2 ; 
 v a r   U p d a t e   = 
 / *                                               * / 
 4 ; 
 v a r   C h i l d D e l e t i o n   = 
 / *                                 * / 
 1 6 ; 
 v a r   C o n t e n t R e s e t   = 
 / *                                   * / 
 3 2 ; 
 v a r   C a l l b a c k   = 
 / *                                           * / 
 6 4 ; 
 v a r   D i d C a p t u r e   = 
 / *                                       * / 
 1 2 8 ; 
 v a r   F o r c e C l i e n t R e n d e r   = 
 / *                         * / 
 2 5 6 ; 
 v a r   R e f   = 
 / *                                                     * / 
 5 1 2 ; 
 v a r   S n a p s h o t   = 
 / *                                           * / 
 1 0 2 4 ; 
 v a r   P a s s i v e   = 
 / *                                             * / 
 2 0 4 8 ; 
 v a r   H y d r a t i n g   = 
 / *                                         * / 
 4 0 9 6 ; 
 v a r   V i s i b i l i t y   = 
 / *                                       * / 
 8 1 9 2 ; 
 v a r   S t o r e C o n s i s t e n c y   = 
 / *                           * / 
 1 6 3 8 4 ; 
 v a r   L i f e c y c l e E f f e c t M a s k   =   P a s s i v e   |   U p d a t e   |   C a l l b a c k   |   R e f   |   S n a p s h o t   |   S t o r e C o n s i s t e n c y ;   / /   U n i o n   o f   a l l   c o m m i t   f l a g s   ( f l a g s   w i t h   t h e   l i f e t i m e   o f   a   p a r t i c u l a r   c o m m i t ) 
 
 v a r   H o s t E f f e c t M a s k   = 
 / *                               * / 
 3 2 7 6 7 ;   / /   T h e s e   a r e   n o t   r e a l l y   s i d e   e f f e c t s ,   b u t   w e   s t i l l   r e u s e   t h i s   f i e l d . 
 
 v a r   I n c o m p l e t e   = 
 / *                                       * / 
 3 2 7 6 8 ; 
 v a r   S h o u l d C a p t u r e   = 
 / *                                 * / 
 6 5 5 3 6 ; 
 v a r   F o r c e U p d a t e F o r L e g a c y S u s p e n s e   = 
 / *   * / 
 1 3 1 0 7 2 ; 
 v a r   F o r k e d   = 
 / *                                               * / 
 1 0 4 8 5 7 6 ;   / /   S t a t i c   t a g s   d e s c r i b e   a s p e c t s   o f   a   f i b e r   t h a t   a r e   n o t   s p e c i f i c   t o   a   r e n d e r , 
 / /   e . g .   a   f i b e r   u s e s   a   p a s s i v e   e f f e c t   ( e v e n   i f   t h e r e   a r e   n o   u p d a t e s   o n   t h i s   p a r t i c u l a r   r e n d e r ) . 
 / /   T h i s   e n a b l e s   u s   t o   d e f e r   m o r e   w o r k   i n   t h e   u n m o u n t   c a s e , 
 / /   s i n c e   w e   c a n   d e f e r   t r a v e r s i n g   t h e   t r e e   d u r i n g   l a y o u t   t o   l o o k   f o r   P a s s i v e   e f f e c t s , 
 / /   a n d   i n s t e a d   r e l y   o n   t h e   s t a t i c   f l a g   a s   a   s i g n a l   t h a t   t h e r e   m a y   b e   c l e a n u p   w o r k . 
 
 v a r   R e f S t a t i c   = 
 / *                                         * / 
 2 0 9 7 1 5 2 ; 
 v a r   L a y o u t S t a t i c   = 
 / *                                   * / 
 4 1 9 4 3 0 4 ; 
 v a r   P a s s i v e S t a t i c   = 
 / *                                 * / 
 8 3 8 8 6 0 8 ;   / /   T h e s e   f l a g s   a l l o w   u s   t o   t r a v e r s e   t o   f i b e r s   t h a t   h a v e   e f f e c t s   o n   m o u n t 
 / /   w i t h o u t   t r a v e r s i n g   t h e   e n t i r e   t r e e   a f t e r   e v e r y   c o m m i t   f o r 
 / /   d o u b l e   i n v o k i n g 
 
 v a r   M o u n t L a y o u t D e v   = 
 / *                               * / 
 1 6 7 7 7 2 1 6 ; 
 v a r   M o u n t P a s s i v e D e v   = 
 / *                             * / 
 3 3 5 5 4 4 3 2 ;   / /   G r o u p s   o f   f l a g s   t h a t   a r e   u s e d   i n   t h e   c o m m i t   p h a s e   t o   s k i p   o v e r   t r e e s   t h a t 
 / /   d o n ' t   c o n t a i n   e f f e c t s ,   b y   c h e c k i n g   s u b t r e e F l a g s . 
 
 v a r   B e f o r e M u t a t i o n M a s k   =   / /   T O D O :   R e m o v e   U p d a t e   f l a g   f r o m   b e f o r e   m u t a t i o n   p h a s e   b y   r e - l a n d i n g   V i s i b i l i t y 
 / /   f l a g   l o g i c   ( s e e   # 2 0 0 4 3 ) 
 U p d a t e   |   S n a p s h o t   |   (   0 ) ; 
 v a r   M u t a t i o n M a s k   =   P l a c e m e n t   |   U p d a t e   |   C h i l d D e l e t i o n   |   C o n t e n t R e s e t   |   R e f   |   H y d r a t i n g   |   V i s i b i l i t y ; 
 v a r   L a y o u t M a s k   =   U p d a t e   |   C a l l b a c k   |   R e f   |   V i s i b i l i t y ;   / /   T O D O :   S p l i t   i n t o   P a s s i v e M o u n t M a s k   a n d   P a s s i v e U n m o u n t M a s k 
 
 v a r   P a s s i v e M a s k   =   P a s s i v e   |   C h i l d D e l e t i o n ;   / /   U n i o n   o f   t a g s   t h a t   d o n ' t   g e t   r e s e t   o n   c l o n e s . 
 / /   T h i s   a l l o w s   c e r t a i n   c o n c e p t s   t o   p e r s i s t   w i t h o u t   r e c a l c u l a t i n g   t h e m , 
 / /   e . g .   w h e t h e r   a   s u b t r e e   c o n t a i n s   p a s s i v e   e f f e c t s   o r   p o r t a l s . 
 
 v a r   S t a t i c M a s k   =   L a y o u t S t a t i c   |   P a s s i v e S t a t i c   |   R e f S t a t i c ; 
 
 v a r   R e a c t C u r r e n t O w n e r   =   R e a c t S h a r e d I n t e r n a l s . R e a c t C u r r e n t O w n e r ; 
 f u n c t i o n   g e t N e a r e s t M o u n t e d F i b e r ( f i b e r )   { 
     v a r   n o d e   =   f i b e r ; 
     v a r   n e a r e s t M o u n t e d   =   f i b e r ; 
 
     i f   ( ! f i b e r . a l t e r n a t e )   { 
         / /   I f   t h e r e   i s   n o   a l t e r n a t e ,   t h i s   m i g h t   b e   a   n e w   t r e e   t h a t   i s n ' t   i n s e r t e d 
         / /   y e t .   I f   i t   i s ,   t h e n   i t   w i l l   h a v e   a   p e n d i n g   i n s e r t i o n   e f f e c t   o n   i t . 
         v a r   n e x t N o d e   =   n o d e ; 
 
         d o   { 
             n o d e   =   n e x t N o d e ; 
 
             i f   ( ( n o d e . f l a g s   &   ( P l a c e m e n t   |   H y d r a t i n g ) )   ! = =   N o F l a g s )   { 
                 / /   T h i s   i s   a n   i n s e r t i o n   o r   i n - p r o g r e s s   h y d r a t i o n .   T h e   n e a r e s t   p o s s i b l e 
                 / /   m o u n t e d   f i b e r   i s   t h e   p a r e n t   b u t   w e   n e e d   t o   c o n t i n u e   t o   f i g u r e   o u t 
                 / /   i f   t h a t   o n e   i s   s t i l l   m o u n t e d . 
                 n e a r e s t M o u n t e d   =   n o d e . r e t u r n ; 
             } 
 
             n e x t N o d e   =   n o d e . r e t u r n ; 
         }   w h i l e   ( n e x t N o d e ) ; 
     }   e l s e   { 
         w h i l e   ( n o d e . r e t u r n )   { 
             n o d e   =   n o d e . r e t u r n ; 
         } 
     } 
 
     i f   ( n o d e . t a g   = = =   H o s t R o o t )   { 
         / /   T O D O :   C h e c k   i f   t h i s   w a s   a   n e s t e d   H o s t R o o t   w h e n   u s e d   w i t h 
         / /   r e n d e r C o n t a i n e r I n t o S u b t r e e . 
         r e t u r n   n e a r e s t M o u n t e d ; 
     }   / /   I f   w e   d i d n ' t   h i t   t h e   r o o t ,   t h a t   m e a n s   t h a t   w e ' r e   i n   a n   d i s c o n n e c t e d   t r e e 
     / /   t h a t   h a s   b e e n   u n m o u n t e d . 
 
 
     r e t u r n   n u l l ; 
 } 
 f u n c t i o n   g e t S u s p e n s e I n s t a n c e F r o m F i b e r ( f i b e r )   { 
     i f   ( f i b e r . t a g   = = =   S u s p e n s e C o m p o n e n t )   { 
         v a r   s u s p e n s e S t a t e   =   f i b e r . m e m o i z e d S t a t e ; 
 
         i f   ( s u s p e n s e S t a t e   = = =   n u l l )   { 
             v a r   c u r r e n t   =   f i b e r . a l t e r n a t e ; 
 
             i f   ( c u r r e n t   ! = =   n u l l )   { 
                 s u s p e n s e S t a t e   =   c u r r e n t . m e m o i z e d S t a t e ; 
             } 
         } 
 
         i f   ( s u s p e n s e S t a t e   ! = =   n u l l )   { 
             r e t u r n   s u s p e n s e S t a t e . d e h y d r a t e d ; 
         } 
     } 
 
     r e t u r n   n u l l ; 
 } 
 f u n c t i o n   g e t C o n t a i n e r F r o m F i b e r ( f i b e r )   { 
     r e t u r n   f i b e r . t a g   = = =   H o s t R o o t   ?   f i b e r . s t a t e N o d e . c o n t a i n e r I n f o   :   n u l l ; 
 } 
 f u n c t i o n   i s F i b e r M o u n t e d ( f i b e r )   { 
     r e t u r n   g e t N e a r e s t M o u n t e d F i b e r ( f i b e r )   = = =   f i b e r ; 
 } 
 f u n c t i o n   i s M o u n t e d ( c o m p o n e n t )   { 
     { 
         v a r   o w n e r   =   R e a c t C u r r e n t O w n e r . c u r r e n t ; 
 
         i f   ( o w n e r   ! = =   n u l l   & &   o w n e r . t a g   = = =   C l a s s C o m p o n e n t )   { 
             v a r   o w n e r F i b e r   =   o w n e r ; 
             v a r   i n s t a n c e   =   o w n e r F i b e r . s t a t e N o d e ; 
 
             i f   ( ! i n s t a n c e . _ w a r n e d A b o u t R e f s I n R e n d e r )   { 
                 e r r o r ( ' % s   i s   a c c e s s i n g   i s M o u n t e d   i n s i d e   i t s   r e n d e r ( )   f u n c t i o n .   '   +   ' r e n d e r ( )   s h o u l d   b e   a   p u r e   f u n c t i o n   o f   p r o p s   a n d   s t a t e .   I t   s h o u l d   '   +   ' n e v e r   a c c e s s   s o m e t h i n g   t h a t   r e q u i r e s   s t a l e   d a t a   f r o m   t h e   p r e v i o u s   '   +   ' r e n d e r ,   s u c h   a s   r e f s .   M o v e   t h i s   l o g i c   t o   c o m p o n e n t D i d M o u n t   a n d   '   +   ' c o m p o n e n t D i d U p d a t e   i n s t e a d . ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( o w n e r F i b e r )   | |   ' A   c o m p o n e n t ' ) ; 
             } 
 
             i n s t a n c e . _ w a r n e d A b o u t R e f s I n R e n d e r   =   t r u e ; 
         } 
     } 
 
     v a r   f i b e r   =   g e t ( c o m p o n e n t ) ; 
 
     i f   ( ! f i b e r )   { 
         r e t u r n   f a l s e ; 
     } 
 
     r e t u r n   g e t N e a r e s t M o u n t e d F i b e r ( f i b e r )   = = =   f i b e r ; 
 } 
 
 f u n c t i o n   a s s e r t I s M o u n t e d ( f i b e r )   { 
     i f   ( g e t N e a r e s t M o u n t e d F i b e r ( f i b e r )   ! = =   f i b e r )   { 
         t h r o w   n e w   E r r o r ( ' U n a b l e   t o   f i n d   n o d e   o n   a n   u n m o u n t e d   c o m p o n e n t . ' ) ; 
     } 
 } 
 
 f u n c t i o n   f i n d C u r r e n t F i b e r U s i n g S l o w P a t h ( f i b e r )   { 
     v a r   a l t e r n a t e   =   f i b e r . a l t e r n a t e ; 
 
     i f   ( ! a l t e r n a t e )   { 
         / /   I f   t h e r e   i s   n o   a l t e r n a t e ,   t h e n   w e   o n l y   n e e d   t o   c h e c k   i f   i t   i s   m o u n t e d . 
         v a r   n e a r e s t M o u n t e d   =   g e t N e a r e s t M o u n t e d F i b e r ( f i b e r ) ; 
 
         i f   ( n e a r e s t M o u n t e d   = = =   n u l l )   { 
             t h r o w   n e w   E r r o r ( ' U n a b l e   t o   f i n d   n o d e   o n   a n   u n m o u n t e d   c o m p o n e n t . ' ) ; 
         } 
 
         i f   ( n e a r e s t M o u n t e d   ! = =   f i b e r )   { 
             r e t u r n   n u l l ; 
         } 
 
         r e t u r n   f i b e r ; 
     }   / /   I f   w e   h a v e   t w o   p o s s i b l e   b r a n c h e s ,   w e ' l l   w a l k   b a c k w a r d s   u p   t o   t h e   r o o t 
     / /   t o   s e e   w h a t   p a t h   t h e   r o o t   p o i n t s   t o .   O n   t h e   w a y   w e   m a y   h i t   o n e   o f   t h e 
     / /   s p e c i a l   c a s e s   a n d   w e ' l l   d e a l   w i t h   t h e m . 
 
 
     v a r   a   =   f i b e r ; 
     v a r   b   =   a l t e r n a t e ; 
 
     w h i l e   ( t r u e )   { 
         v a r   p a r e n t A   =   a . r e t u r n ; 
 
         i f   ( p a r e n t A   = = =   n u l l )   { 
             / /   W e ' r e   a t   t h e   r o o t . 
             b r e a k ; 
         } 
 
         v a r   p a r e n t B   =   p a r e n t A . a l t e r n a t e ; 
 
         i f   ( p a r e n t B   = = =   n u l l )   { 
             / /   T h e r e   i s   n o   a l t e r n a t e .   T h i s   i s   a n   u n u s u a l   c a s e .   C u r r e n t l y ,   i t   o n l y 
             / /   h a p p e n s   w h e n   a   S u s p e n s e   c o m p o n e n t   i s   h i d d e n .   A n   e x t r a   f r a g m e n t   f i b e r 
             / /   i s   i n s e r t e d   i n   b e t w e e n   t h e   S u s p e n s e   f i b e r   a n d   i t s   c h i l d r e n .   S k i p 
             / /   o v e r   t h i s   e x t r a   f r a g m e n t   f i b e r   a n d   p r o c e e d   t o   t h e   n e x t   p a r e n t . 
             v a r   n e x t P a r e n t   =   p a r e n t A . r e t u r n ; 
 
             i f   ( n e x t P a r e n t   ! = =   n u l l )   { 
                 a   =   b   =   n e x t P a r e n t ; 
                 c o n t i n u e ; 
             }   / /   I f   t h e r e ' s   n o   p a r e n t ,   w e ' r e   a t   t h e   r o o t . 
 
 
             b r e a k ; 
         }   / /   I f   b o t h   c o p i e s   o f   t h e   p a r e n t   f i b e r   p o i n t   t o   t h e   s a m e   c h i l d ,   w e   c a n 
         / /   a s s u m e   t h a t   t h e   c h i l d   i s   c u r r e n t .   T h i s   h a p p e n s   w h e n   w e   b a i l o u t   o n   l o w 
         / /   p r i o r i t y :   t h e   b a i l e d   o u t   f i b e r ' s   c h i l d   r e u s e s   t h e   c u r r e n t   c h i l d . 
 
 
         i f   ( p a r e n t A . c h i l d   = = =   p a r e n t B . c h i l d )   { 
             v a r   c h i l d   =   p a r e n t A . c h i l d ; 
 
             w h i l e   ( c h i l d )   { 
                 i f   ( c h i l d   = = =   a )   { 
                     / /   W e ' v e   d e t e r m i n e d   t h a t   A   i s   t h e   c u r r e n t   b r a n c h . 
                     a s s e r t I s M o u n t e d ( p a r e n t A ) ; 
                     r e t u r n   f i b e r ; 
                 } 
 
                 i f   ( c h i l d   = = =   b )   { 
                     / /   W e ' v e   d e t e r m i n e d   t h a t   B   i s   t h e   c u r r e n t   b r a n c h . 
                     a s s e r t I s M o u n t e d ( p a r e n t A ) ; 
                     r e t u r n   a l t e r n a t e ; 
                 } 
 
                 c h i l d   =   c h i l d . s i b l i n g ; 
             }   / /   W e   s h o u l d   n e v e r   h a v e   a n   a l t e r n a t e   f o r   a n y   m o u n t i n g   n o d e .   S o   t h e   o n l y 
             / /   w a y   t h i s   c o u l d   p o s s i b l y   h a p p e n   i s   i f   t h i s   w a s   u n m o u n t e d ,   i f   a t   a l l . 
 
 
             t h r o w   n e w   E r r o r ( ' U n a b l e   t o   f i n d   n o d e   o n   a n   u n m o u n t e d   c o m p o n e n t . ' ) ; 
         } 
 
         i f   ( a . r e t u r n   ! = =   b . r e t u r n )   { 
             / /   T h e   r e t u r n   p o i n t e r   o f   A   a n d   t h e   r e t u r n   p o i n t e r   o f   B   p o i n t   t o   d i f f e r e n t 
             / /   f i b e r s .   W e   a s s u m e   t h a t   r e t u r n   p o i n t e r s   n e v e r   c r i s s - c r o s s ,   s o   A   m u s t 
             / /   b e l o n g   t o   t h e   c h i l d   s e t   o f   A . r e t u r n ,   a n d   B   m u s t   b e l o n g   t o   t h e   c h i l d 
             / /   s e t   o f   B . r e t u r n . 
             a   =   p a r e n t A ; 
             b   =   p a r e n t B ; 
         }   e l s e   { 
             / /   T h e   r e t u r n   p o i n t e r s   p o i n t   t o   t h e   s a m e   f i b e r .   W e ' l l   h a v e   t o   u s e   t h e 
             / /   d e f a u l t ,   s l o w   p a t h :   s c a n   t h e   c h i l d   s e t s   o f   e a c h   p a r e n t   a l t e r n a t e   t o   s e e 
             / /   w h i c h   c h i l d   b e l o n g s   t o   w h i c h   s e t . 
             / / 
             / /   S e a r c h   p a r e n t   A ' s   c h i l d   s e t 
             v a r   d i d F i n d C h i l d   =   f a l s e ; 
             v a r   _ c h i l d   =   p a r e n t A . c h i l d ; 
 
             w h i l e   ( _ c h i l d )   { 
                 i f   ( _ c h i l d   = = =   a )   { 
                     d i d F i n d C h i l d   =   t r u e ; 
                     a   =   p a r e n t A ; 
                     b   =   p a r e n t B ; 
                     b r e a k ; 
                 } 
 
                 i f   ( _ c h i l d   = = =   b )   { 
                     d i d F i n d C h i l d   =   t r u e ; 
                     b   =   p a r e n t A ; 
                     a   =   p a r e n t B ; 
                     b r e a k ; 
                 } 
 
                 _ c h i l d   =   _ c h i l d . s i b l i n g ; 
             } 
 
             i f   ( ! d i d F i n d C h i l d )   { 
                 / /   S e a r c h   p a r e n t   B ' s   c h i l d   s e t 
                 _ c h i l d   =   p a r e n t B . c h i l d ; 
 
                 w h i l e   ( _ c h i l d )   { 
                     i f   ( _ c h i l d   = = =   a )   { 
                         d i d F i n d C h i l d   =   t r u e ; 
                         a   =   p a r e n t B ; 
                         b   =   p a r e n t A ; 
                         b r e a k ; 
                     } 
 
                     i f   ( _ c h i l d   = = =   b )   { 
                         d i d F i n d C h i l d   =   t r u e ; 
                         b   =   p a r e n t B ; 
                         a   =   p a r e n t A ; 
                         b r e a k ; 
                     } 
 
                     _ c h i l d   =   _ c h i l d . s i b l i n g ; 
                 } 
 
                 i f   ( ! d i d F i n d C h i l d )   { 
                     t h r o w   n e w   E r r o r ( ' C h i l d   w a s   n o t   f o u n d   i n   e i t h e r   p a r e n t   s e t .   T h i s   i n d i c a t e s   a   b u g   '   +   ' i n   R e a c t   r e l a t e d   t o   t h e   r e t u r n   p o i n t e r .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
                 } 
             } 
         } 
 
         i f   ( a . a l t e r n a t e   ! = =   b )   { 
             t h r o w   n e w   E r r o r ( " R e t u r n   f i b e r s   s h o u l d   a l w a y s   b e   e a c h   o t h e r s '   a l t e r n a t e s .   "   +   ' T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
         } 
     }   / /   I f   t h e   r o o t   i s   n o t   a   h o s t   c o n t a i n e r ,   w e ' r e   i n   a   d i s c o n n e c t e d   t r e e .   I . e . 
     / /   u n m o u n t e d . 
 
 
     i f   ( a . t a g   ! = =   H o s t R o o t )   { 
         t h r o w   n e w   E r r o r ( ' U n a b l e   t o   f i n d   n o d e   o n   a n   u n m o u n t e d   c o m p o n e n t . ' ) ; 
     } 
 
     i f   ( a . s t a t e N o d e . c u r r e n t   = = =   a )   { 
         / /   W e ' v e   d e t e r m i n e d   t h a t   A   i s   t h e   c u r r e n t   b r a n c h . 
         r e t u r n   f i b e r ; 
     }   / /   O t h e r w i s e   B   h a s   t o   b e   c u r r e n t   b r a n c h . 
 
 
     r e t u r n   a l t e r n a t e ; 
 } 
 f u n c t i o n   f i n d C u r r e n t H o s t F i b e r ( p a r e n t )   { 
     v a r   c u r r e n t P a r e n t   =   f i n d C u r r e n t F i b e r U s i n g S l o w P a t h ( p a r e n t ) ; 
     r e t u r n   c u r r e n t P a r e n t   ! = =   n u l l   ?   f i n d C u r r e n t H o s t F i b e r I m p l ( c u r r e n t P a r e n t )   :   n u l l ; 
 } 
 
 f u n c t i o n   f i n d C u r r e n t H o s t F i b e r I m p l ( n o d e )   { 
     / /   N e x t   w e ' l l   d r i l l   d o w n   t h i s   c o m p o n e n t   t o   f i n d   t h e   f i r s t   H o s t C o m p o n e n t / T e x t . 
     i f   ( n o d e . t a g   = = =   H o s t C o m p o n e n t   | |   n o d e . t a g   = = =   H o s t T e x t )   { 
         r e t u r n   n o d e ; 
     } 
 
     v a r   c h i l d   =   n o d e . c h i l d ; 
 
     w h i l e   ( c h i l d   ! = =   n u l l )   { 
         v a r   m a t c h   =   f i n d C u r r e n t H o s t F i b e r I m p l ( c h i l d ) ; 
 
         i f   ( m a t c h   ! = =   n u l l )   { 
             r e t u r n   m a t c h ; 
         } 
 
         c h i l d   =   c h i l d . s i b l i n g ; 
     } 
 
     r e t u r n   n u l l ; 
 } 
 
 f u n c t i o n   f i n d C u r r e n t H o s t F i b e r W i t h N o P o r t a l s ( p a r e n t )   { 
     v a r   c u r r e n t P a r e n t   =   f i n d C u r r e n t F i b e r U s i n g S l o w P a t h ( p a r e n t ) ; 
     r e t u r n   c u r r e n t P a r e n t   ! = =   n u l l   ?   f i n d C u r r e n t H o s t F i b e r W i t h N o P o r t a l s I m p l ( c u r r e n t P a r e n t )   :   n u l l ; 
 } 
 
 f u n c t i o n   f i n d C u r r e n t H o s t F i b e r W i t h N o P o r t a l s I m p l ( n o d e )   { 
     / /   N e x t   w e ' l l   d r i l l   d o w n   t h i s   c o m p o n e n t   t o   f i n d   t h e   f i r s t   H o s t C o m p o n e n t / T e x t . 
     i f   ( n o d e . t a g   = = =   H o s t C o m p o n e n t   | |   n o d e . t a g   = = =   H o s t T e x t )   { 
         r e t u r n   n o d e ; 
     } 
 
     v a r   c h i l d   =   n o d e . c h i l d ; 
 
     w h i l e   ( c h i l d   ! = =   n u l l )   { 
         i f   ( c h i l d . t a g   ! = =   H o s t P o r t a l )   { 
             v a r   m a t c h   =   f i n d C u r r e n t H o s t F i b e r W i t h N o P o r t a l s I m p l ( c h i l d ) ; 
 
             i f   ( m a t c h   ! = =   n u l l )   { 
                 r e t u r n   m a t c h ; 
             } 
         } 
 
         c h i l d   =   c h i l d . s i b l i n g ; 
     } 
 
     r e t u r n   n u l l ; 
 } 
 
 / /   T h i s   m o d u l e   o n l y   e x i s t s   a s   a n   E S M   w r a p p e r   a r o u n d   t h e   e x t e r n a l   C o m m o n J S 
 v a r   s c h e d u l e C a l l b a c k   =   S c h e d u l e r . u n s t a b l e _ s c h e d u l e C a l l b a c k ; 
 v a r   c a n c e l C a l l b a c k   =   S c h e d u l e r . u n s t a b l e _ c a n c e l C a l l b a c k ; 
 v a r   s h o u l d Y i e l d   =   S c h e d u l e r . u n s t a b l e _ s h o u l d Y i e l d ; 
 v a r   r e q u e s t P a i n t   =   S c h e d u l e r . u n s t a b l e _ r e q u e s t P a i n t ; 
 v a r   n o w   =   S c h e d u l e r . u n s t a b l e _ n o w ; 
 v a r   g e t C u r r e n t P r i o r i t y L e v e l   =   S c h e d u l e r . u n s t a b l e _ g e t C u r r e n t P r i o r i t y L e v e l ; 
 v a r   I m m e d i a t e P r i o r i t y   =   S c h e d u l e r . u n s t a b l e _ I m m e d i a t e P r i o r i t y ; 
 v a r   U s e r B l o c k i n g P r i o r i t y   =   S c h e d u l e r . u n s t a b l e _ U s e r B l o c k i n g P r i o r i t y ; 
 v a r   N o r m a l P r i o r i t y   =   S c h e d u l e r . u n s t a b l e _ N o r m a l P r i o r i t y ; 
 v a r   L o w P r i o r i t y   =   S c h e d u l e r . u n s t a b l e _ L o w P r i o r i t y ; 
 v a r   I d l e P r i o r i t y   =   S c h e d u l e r . u n s t a b l e _ I d l e P r i o r i t y ; 
 / /   t h i s   d o e s n ' t   a c t u a l l y   e x i s t   o n   t h e   s c h e d u l e r ,   b u t   i t   * d o e s * 
 / /   o n   s c h e d u l e r / u n s t a b l e _ m o c k ,   w h i c h   w e ' l l   n e e d   f o r   i n t e r n a l   t e s t i n g 
 v a r   u n s t a b l e _ y i e l d V a l u e   =   S c h e d u l e r . u n s t a b l e _ y i e l d V a l u e ; 
 v a r   u n s t a b l e _ s e t D i s a b l e Y i e l d V a l u e   =   S c h e d u l e r . u n s t a b l e _ s e t D i s a b l e Y i e l d V a l u e ; 
 
 v a r   r e n d e r e r I D   =   n u l l ; 
 v a r   i n j e c t e d H o o k   =   n u l l ; 
 v a r   i n j e c t e d P r o f i l i n g H o o k s   =   n u l l ; 
 v a r   h a s L o g g e d E r r o r   =   f a l s e ; 
 v a r   i s D e v T o o l s P r e s e n t   =   t y p e o f   _ _ R E A C T _ D E V T O O L S _ G L O B A L _ H O O K _ _   ! = =   ' u n d e f i n e d ' ; 
 f u n c t i o n   i n j e c t I n t e r n a l s ( i n t e r n a l s )   { 
     i f   ( t y p e o f   _ _ R E A C T _ D E V T O O L S _ G L O B A L _ H O O K _ _   = = =   ' u n d e f i n e d ' )   { 
         / /   N o   D e v T o o l s 
         r e t u r n   f a l s e ; 
     } 
 
     v a r   h o o k   =   _ _ R E A C T _ D E V T O O L S _ G L O B A L _ H O O K _ _ ; 
 
     i f   ( h o o k . i s D i s a b l e d )   { 
         / /   T h i s   i s n ' t   a   r e a l   p r o p e r t y   o n   t h e   h o o k ,   b u t   i t   c a n   b e   s e t   t o   o p t   o u t 
         / /   o f   D e v T o o l s   i n t e g r a t i o n   a n d   a s s o c i a t e d   w a r n i n g s   a n d   l o g s . 
         / /   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 3 8 7 7 
         r e t u r n   t r u e ; 
     } 
 
     i f   ( ! h o o k . s u p p o r t s F i b e r )   { 
         { 
             e r r o r ( ' T h e   i n s t a l l e d   v e r s i o n   o f   R e a c t   D e v T o o l s   i s   t o o   o l d   a n d   w i l l   n o t   w o r k   '   +   ' w i t h   t h e   c u r r e n t   v e r s i o n   o f   R e a c t .   P l e a s e   u p d a t e   R e a c t   D e v T o o l s .   '   +   ' h t t p s : / / r e a c t j s . o r g / l i n k / r e a c t - d e v t o o l s ' ) ; 
         }   / /   D e v T o o l s   e x i s t s ,   e v e n   t h o u g h   i t   d o e s n ' t   s u p p o r t   F i b e r . 
 
 
         r e t u r n   t r u e ; 
     } 
 
     t r y   { 
         i f   ( e n a b l e S c h e d u l i n g P r o f i l e r )   { 
             / /   C o n d i t i o n a l l y   i n j e c t   t h e s e   h o o k s   o n l y   i f   T i m e l i n e   p r o f i l e r   i s   s u p p o r t e d   b y   t h i s   b u i l d . 
             / /   T h i s   g i v e s   D e v T o o l s   a   w a y   t o   f e a t u r e   d e t e c t   t h a t   i s n ' t   t i e d   t o   v e r s i o n   n u m b e r 
             / /   ( s i n c e   p r o f i l i n g   a n d   t i m e l i n e   a r e   c o n t r o l l e d   b y   d i f f e r e n t   f e a t u r e   f l a g s ) . 
             i n t e r n a l s   =   a s s i g n ( { } ,   i n t e r n a l s ,   { 
                 g e t L a n e L a b e l M a p :   g e t L a n e L a b e l M a p , 
                 i n j e c t P r o f i l i n g H o o k s :   i n j e c t P r o f i l i n g H o o k s 
             } ) ; 
         } 
 
         r e n d e r e r I D   =   h o o k . i n j e c t ( i n t e r n a l s ) ;   / /   W e   h a v e   s u c c e s s f u l l y   i n j e c t e d ,   s o   n o w   i t   i s   s a f e   t o   s e t   u p   h o o k s . 
 
         i n j e c t e d H o o k   =   h o o k ; 
     }   c a t c h   ( e r r )   { 
         / /   C a t c h   a l l   e r r o r s   b e c a u s e   i t   i s   u n s a f e   t o   t h r o w   d u r i n g   i n i t i a l i z a t i o n . 
         { 
             e r r o r ( ' R e a c t   i n s t r u m e n t a t i o n   e n c o u n t e r e d   a n   e r r o r :   % s . ' ,   e r r ) ; 
         } 
     } 
 
     i f   ( h o o k . c h e c k D C E )   { 
         / /   T h i s   i s   t h e   r e a l   D e v T o o l s . 
         r e t u r n   t r u e ; 
     }   e l s e   { 
         / /   T h i s   i s   l i k e l y   a   h o o k   i n s t a l l e d   b y   F a s t   R e f r e s h   r u n t i m e . 
         r e t u r n   f a l s e ; 
     } 
 } 
 f u n c t i o n   o n S c h e d u l e R o o t ( r o o t ,   c h i l d r e n )   { 
     { 
         i f   ( i n j e c t e d H o o k   & &   t y p e o f   i n j e c t e d H o o k . o n S c h e d u l e F i b e r R o o t   = = =   ' f u n c t i o n ' )   { 
             t r y   { 
                 i n j e c t e d H o o k . o n S c h e d u l e F i b e r R o o t ( r e n d e r e r I D ,   r o o t ,   c h i l d r e n ) ; 
             }   c a t c h   ( e r r )   { 
                 i f   (   ! h a s L o g g e d E r r o r )   { 
                     h a s L o g g e d E r r o r   =   t r u e ; 
 
                     e r r o r ( ' R e a c t   i n s t r u m e n t a t i o n   e n c o u n t e r e d   a n   e r r o r :   % s ' ,   e r r ) ; 
                 } 
             } 
         } 
     } 
 } 
 f u n c t i o n   o n C o m m i t R o o t ( r o o t ,   e v e n t P r i o r i t y )   { 
     i f   ( i n j e c t e d H o o k   & &   t y p e o f   i n j e c t e d H o o k . o n C o m m i t F i b e r R o o t   = = =   ' f u n c t i o n ' )   { 
         t r y   { 
             v a r   d i d E r r o r   =   ( r o o t . c u r r e n t . f l a g s   &   D i d C a p t u r e )   = = =   D i d C a p t u r e ; 
 
             i f   ( e n a b l e P r o f i l e r T i m e r )   { 
                 v a r   s c h e d u l e r P r i o r i t y ; 
 
                 s w i t c h   ( e v e n t P r i o r i t y )   { 
                     c a s e   D i s c r e t e E v e n t P r i o r i t y : 
                         s c h e d u l e r P r i o r i t y   =   I m m e d i a t e P r i o r i t y ; 
                         b r e a k ; 
 
                     c a s e   C o n t i n u o u s E v e n t P r i o r i t y : 
                         s c h e d u l e r P r i o r i t y   =   U s e r B l o c k i n g P r i o r i t y ; 
                         b r e a k ; 
 
                     c a s e   D e f a u l t E v e n t P r i o r i t y : 
                         s c h e d u l e r P r i o r i t y   =   N o r m a l P r i o r i t y ; 
                         b r e a k ; 
 
                     c a s e   I d l e E v e n t P r i o r i t y : 
                         s c h e d u l e r P r i o r i t y   =   I d l e P r i o r i t y ; 
                         b r e a k ; 
 
                     d e f a u l t : 
                         s c h e d u l e r P r i o r i t y   =   N o r m a l P r i o r i t y ; 
                         b r e a k ; 
                 } 
 
                 i n j e c t e d H o o k . o n C o m m i t F i b e r R o o t ( r e n d e r e r I D ,   r o o t ,   s c h e d u l e r P r i o r i t y ,   d i d E r r o r ) ; 
             }   e l s e   { 
                 i n j e c t e d H o o k . o n C o m m i t F i b e r R o o t ( r e n d e r e r I D ,   r o o t ,   u n d e f i n e d ,   d i d E r r o r ) ; 
             } 
         }   c a t c h   ( e r r )   { 
             { 
                 i f   ( ! h a s L o g g e d E r r o r )   { 
                     h a s L o g g e d E r r o r   =   t r u e ; 
 
                     e r r o r ( ' R e a c t   i n s t r u m e n t a t i o n   e n c o u n t e r e d   a n   e r r o r :   % s ' ,   e r r ) ; 
                 } 
             } 
         } 
     } 
 } 
 f u n c t i o n   o n P o s t C o m m i t R o o t ( r o o t )   { 
     i f   ( i n j e c t e d H o o k   & &   t y p e o f   i n j e c t e d H o o k . o n P o s t C o m m i t F i b e r R o o t   = = =   ' f u n c t i o n ' )   { 
         t r y   { 
             i n j e c t e d H o o k . o n P o s t C o m m i t F i b e r R o o t ( r e n d e r e r I D ,   r o o t ) ; 
         }   c a t c h   ( e r r )   { 
             { 
                 i f   ( ! h a s L o g g e d E r r o r )   { 
                     h a s L o g g e d E r r o r   =   t r u e ; 
 
                     e r r o r ( ' R e a c t   i n s t r u m e n t a t i o n   e n c o u n t e r e d   a n   e r r o r :   % s ' ,   e r r ) ; 
                 } 
             } 
         } 
     } 
 } 
 f u n c t i o n   o n C o m m i t U n m o u n t ( f i b e r )   { 
     i f   ( i n j e c t e d H o o k   & &   t y p e o f   i n j e c t e d H o o k . o n C o m m i t F i b e r U n m o u n t   = = =   ' f u n c t i o n ' )   { 
         t r y   { 
             i n j e c t e d H o o k . o n C o m m i t F i b e r U n m o u n t ( r e n d e r e r I D ,   f i b e r ) ; 
         }   c a t c h   ( e r r )   { 
             { 
                 i f   ( ! h a s L o g g e d E r r o r )   { 
                     h a s L o g g e d E r r o r   =   t r u e ; 
 
                     e r r o r ( ' R e a c t   i n s t r u m e n t a t i o n   e n c o u n t e r e d   a n   e r r o r :   % s ' ,   e r r ) ; 
                 } 
             } 
         } 
     } 
 } 
 f u n c t i o n   s e t I s S t r i c t M o d e F o r D e v t o o l s ( n e w I s S t r i c t M o d e )   { 
     { 
         i f   ( t y p e o f   u n s t a b l e _ y i e l d V a l u e   = = =   ' f u n c t i o n ' )   { 
             / /   W e ' r e   i n   a   t e s t   b e c a u s e   S c h e d u l e r . u n s t a b l e _ y i e l d V a l u e   o n l y   e x i s t s 
             / /   i n   S c h e d u l e r M o c k .   T o   r e d u c e   t h e   n o i s e   i n   s t r i c t   m o d e   t e s t s , 
             / /   s u p p r e s s   w a r n i n g s   a n d   d i s a b l e   s c h e d u l e r   y i e l d i n g   d u r i n g   t h e   d o u b l e   r e n d e r 
             u n s t a b l e _ s e t D i s a b l e Y i e l d V a l u e ( n e w I s S t r i c t M o d e ) ; 
             s e t S u p p r e s s W a r n i n g ( n e w I s S t r i c t M o d e ) ; 
         } 
 
         i f   ( i n j e c t e d H o o k   & &   t y p e o f   i n j e c t e d H o o k . s e t S t r i c t M o d e   = = =   ' f u n c t i o n ' )   { 
             t r y   { 
                 i n j e c t e d H o o k . s e t S t r i c t M o d e ( r e n d e r e r I D ,   n e w I s S t r i c t M o d e ) ; 
             }   c a t c h   ( e r r )   { 
                 { 
                     i f   ( ! h a s L o g g e d E r r o r )   { 
                         h a s L o g g e d E r r o r   =   t r u e ; 
 
                         e r r o r ( ' R e a c t   i n s t r u m e n t a t i o n   e n c o u n t e r e d   a n   e r r o r :   % s ' ,   e r r ) ; 
                     } 
                 } 
             } 
         } 
     } 
 }   / /   P r o f i l e r   A P I   h o o k s 
 
 f u n c t i o n   i n j e c t P r o f i l i n g H o o k s ( p r o f i l i n g H o o k s )   { 
     i n j e c t e d P r o f i l i n g H o o k s   =   p r o f i l i n g H o o k s ; 
 } 
 
 f u n c t i o n   g e t L a n e L a b e l M a p ( )   { 
     { 
         v a r   m a p   =   n e w   M a p ( ) ; 
         v a r   l a n e   =   1 ; 
 
         f o r   ( v a r   i n d e x   =   0 ;   i n d e x   <   T o t a l L a n e s ;   i n d e x + + )   { 
             v a r   l a b e l   =   g e t L a b e l F o r L a n e ( l a n e ) ; 
             m a p . s e t ( l a n e ,   l a b e l ) ; 
             l a n e   * =   2 ; 
         } 
 
         r e t u r n   m a p ; 
     } 
 } 
 
 f u n c t i o n   m a r k C o m m i t S t a r t e d ( l a n e s )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m m i t S t a r t e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m m i t S t a r t e d ( l a n e s ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k C o m m i t S t o p p e d ( )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m m i t S t o p p e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m m i t S t o p p e d ( ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k C o m p o n e n t R e n d e r S t a r t e d ( f i b e r )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t R e n d e r S t a r t e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t R e n d e r S t a r t e d ( f i b e r ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k C o m p o n e n t R e n d e r S t o p p e d ( )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t R e n d e r S t o p p e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t R e n d e r S t o p p e d ( ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k C o m p o n e n t P a s s i v e E f f e c t M o u n t S t a r t e d ( f i b e r )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t P a s s i v e E f f e c t M o u n t S t a r t e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t P a s s i v e E f f e c t M o u n t S t a r t e d ( f i b e r ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k C o m p o n e n t P a s s i v e E f f e c t M o u n t S t o p p e d ( )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t P a s s i v e E f f e c t M o u n t S t o p p e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t P a s s i v e E f f e c t M o u n t S t o p p e d ( ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k C o m p o n e n t P a s s i v e E f f e c t U n m o u n t S t a r t e d ( f i b e r )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t P a s s i v e E f f e c t U n m o u n t S t a r t e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t P a s s i v e E f f e c t U n m o u n t S t a r t e d ( f i b e r ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k C o m p o n e n t P a s s i v e E f f e c t U n m o u n t S t o p p e d ( )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t P a s s i v e E f f e c t U n m o u n t S t o p p e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t P a s s i v e E f f e c t U n m o u n t S t o p p e d ( ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k C o m p o n e n t L a y o u t E f f e c t M o u n t S t a r t e d ( f i b e r )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t L a y o u t E f f e c t M o u n t S t a r t e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t L a y o u t E f f e c t M o u n t S t a r t e d ( f i b e r ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k C o m p o n e n t L a y o u t E f f e c t M o u n t S t o p p e d ( )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t L a y o u t E f f e c t M o u n t S t o p p e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t L a y o u t E f f e c t M o u n t S t o p p e d ( ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k C o m p o n e n t L a y o u t E f f e c t U n m o u n t S t a r t e d ( f i b e r )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t L a y o u t E f f e c t U n m o u n t S t a r t e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t L a y o u t E f f e c t U n m o u n t S t a r t e d ( f i b e r ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k C o m p o n e n t L a y o u t E f f e c t U n m o u n t S t o p p e d ( )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t L a y o u t E f f e c t U n m o u n t S t o p p e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t L a y o u t E f f e c t U n m o u n t S t o p p e d ( ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k C o m p o n e n t E r r o r e d ( f i b e r ,   t h r o w n V a l u e ,   l a n e s )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t E r r o r e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t E r r o r e d ( f i b e r ,   t h r o w n V a l u e ,   l a n e s ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k C o m p o n e n t S u s p e n d e d ( f i b e r ,   w a k e a b l e ,   l a n e s )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t S u s p e n d e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k C o m p o n e n t S u s p e n d e d ( f i b e r ,   w a k e a b l e ,   l a n e s ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k L a y o u t E f f e c t s S t a r t e d ( l a n e s )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k L a y o u t E f f e c t s S t a r t e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k L a y o u t E f f e c t s S t a r t e d ( l a n e s ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k L a y o u t E f f e c t s S t o p p e d ( )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k L a y o u t E f f e c t s S t o p p e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k L a y o u t E f f e c t s S t o p p e d ( ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k P a s s i v e E f f e c t s S t a r t e d ( l a n e s )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k P a s s i v e E f f e c t s S t a r t e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k P a s s i v e E f f e c t s S t a r t e d ( l a n e s ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k P a s s i v e E f f e c t s S t o p p e d ( )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k P a s s i v e E f f e c t s S t o p p e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k P a s s i v e E f f e c t s S t o p p e d ( ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k R e n d e r S t a r t e d ( l a n e s )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k R e n d e r S t a r t e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k R e n d e r S t a r t e d ( l a n e s ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k R e n d e r Y i e l d e d ( )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k R e n d e r Y i e l d e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k R e n d e r Y i e l d e d ( ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k R e n d e r S t o p p e d ( )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k R e n d e r S t o p p e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k R e n d e r S t o p p e d ( ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k R e n d e r S c h e d u l e d ( l a n e )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k R e n d e r S c h e d u l e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k R e n d e r S c h e d u l e d ( l a n e ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k F o r c e U p d a t e S c h e d u l e d ( f i b e r ,   l a n e )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k F o r c e U p d a t e S c h e d u l e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k F o r c e U p d a t e S c h e d u l e d ( f i b e r ,   l a n e ) ; 
         } 
     } 
 } 
 f u n c t i o n   m a r k S t a t e U p d a t e S c h e d u l e d ( f i b e r ,   l a n e )   { 
     { 
         i f   ( i n j e c t e d P r o f i l i n g H o o k s   ! = =   n u l l   & &   t y p e o f   i n j e c t e d P r o f i l i n g H o o k s . m a r k S t a t e U p d a t e S c h e d u l e d   = = =   ' f u n c t i o n ' )   { 
             i n j e c t e d P r o f i l i n g H o o k s . m a r k S t a t e U p d a t e S c h e d u l e d ( f i b e r ,   l a n e ) ; 
         } 
     } 
 } 
 
 v a r   N o M o d e   = 
 / *                                                   * / 
 0 ;   / /   T O D O :   R e m o v e   C o n c u r r e n t M o d e   b y   r e a d i n g   f r o m   t h e   r o o t   t a g   i n s t e a d 
 
 v a r   C o n c u r r e n t M o d e   = 
 / *                                   * / 
 1 ; 
 v a r   P r o f i l e M o d e   = 
 / *                                         * / 
 2 ; 
 v a r   S t r i c t L e g a c y M o d e   = 
 / *                               * / 
 8 ; 
 v a r   S t r i c t E f f e c t s M o d e   = 
 / *                             * / 
 1 6 ; 
 
 / /   T O D O :   T h i s   i s   p r e t t y   w e l l   s u p p o r t e d   b y   b r o w s e r s .   M a y b e   w e   c a n   d r o p   i t . 
 v a r   c l z 3 2   =   M a t h . c l z 3 2   ?   M a t h . c l z 3 2   :   c l z 3 2 F a l l b a c k ;   / /   C o u n t   l e a d i n g   z e r o s . 
 / /   B a s e d   o n : 
 / /   h t t p s : / / d e v e l o p e r . m o z i l l a . o r g / e n - U S / d o c s / W e b / J a v a S c r i p t / R e f e r e n c e / G l o b a l _ O b j e c t s / M a t h / c l z 3 2 
 
 v a r   l o g   =   M a t h . l o g ; 
 v a r   L N 2   =   M a t h . L N 2 ; 
 
 f u n c t i o n   c l z 3 2 F a l l b a c k ( x )   { 
     v a r   a s U i n t   =   x   > > >   0 ; 
 
     i f   ( a s U i n t   = = =   0 )   { 
         r e t u r n   3 2 ; 
     } 
 
     r e t u r n   3 1   -   ( l o g ( a s U i n t )   /   L N 2   |   0 )   |   0 ; 
 } 
 
 / /   I f   t h o s e   v a l u e s   a r e   c h a n g e d   t h a t   p a c k a g e   s h o u l d   b e   r e b u i l t   a n d   r e d e p l o y e d . 
 
 v a r   T o t a l L a n e s   =   3 1 ; 
 v a r   N o L a n e s   = 
 / *                                                 * / 
 0 ; 
 v a r   N o L a n e   = 
 / *                                                     * / 
 0 ; 
 v a r   S y n c L a n e   = 
 / *                                                 * / 
 1 ; 
 v a r   I n p u t C o n t i n u o u s H y d r a t i o n L a n e   = 
 / *         * / 
 2 ; 
 v a r   I n p u t C o n t i n u o u s L a n e   = 
 / *                           * / 
 4 ; 
 v a r   D e f a u l t H y d r a t i o n L a n e   = 
 / *                         * / 
 8 ; 
 v a r   D e f a u l t L a n e   = 
 / *                                           * / 
 1 6 ; 
 v a r   T r a n s i t i o n H y d r a t i o n L a n e   = 
 / *                                 * / 
 3 2 ; 
 v a r   T r a n s i t i o n L a n e s   = 
 / *                                               * / 
 4 1 9 4 2 4 0 ; 
 v a r   T r a n s i t i o n L a n e 1   = 
 / *                                                 * / 
 6 4 ; 
 v a r   T r a n s i t i o n L a n e 2   = 
 / *                                                 * / 
 1 2 8 ; 
 v a r   T r a n s i t i o n L a n e 3   = 
 / *                                                 * / 
 2 5 6 ; 
 v a r   T r a n s i t i o n L a n e 4   = 
 / *                                                 * / 
 5 1 2 ; 
 v a r   T r a n s i t i o n L a n e 5   = 
 / *                                                 * / 
 1 0 2 4 ; 
 v a r   T r a n s i t i o n L a n e 6   = 
 / *                                                 * / 
 2 0 4 8 ; 
 v a r   T r a n s i t i o n L a n e 7   = 
 / *                                                 * / 
 4 0 9 6 ; 
 v a r   T r a n s i t i o n L a n e 8   = 
 / *                                                 * / 
 8 1 9 2 ; 
 v a r   T r a n s i t i o n L a n e 9   = 
 / *                                                 * / 
 1 6 3 8 4 ; 
 v a r   T r a n s i t i o n L a n e 1 0   = 
 / *                                               * / 
 3 2 7 6 8 ; 
 v a r   T r a n s i t i o n L a n e 1 1   = 
 / *                                               * / 
 6 5 5 3 6 ; 
 v a r   T r a n s i t i o n L a n e 1 2   = 
 / *                                               * / 
 1 3 1 0 7 2 ; 
 v a r   T r a n s i t i o n L a n e 1 3   = 
 / *                                               * / 
 2 6 2 1 4 4 ; 
 v a r   T r a n s i t i o n L a n e 1 4   = 
 / *                                               * / 
 5 2 4 2 8 8 ; 
 v a r   T r a n s i t i o n L a n e 1 5   = 
 / *                                               * / 
 1 0 4 8 5 7 6 ; 
 v a r   T r a n s i t i o n L a n e 1 6   = 
 / *                                               * / 
 2 0 9 7 1 5 2 ; 
 v a r   R e t r y L a n e s   = 
 / *                                                         * / 
 1 3 0 0 2 3 4 2 4 ; 
 v a r   R e t r y L a n e 1   = 
 / *                                                           * / 
 4 1 9 4 3 0 4 ; 
 v a r   R e t r y L a n e 2   = 
 / *                                                           * / 
 8 3 8 8 6 0 8 ; 
 v a r   R e t r y L a n e 3   = 
 / *                                                           * / 
 1 6 7 7 7 2 1 6 ; 
 v a r   R e t r y L a n e 4   = 
 / *                                                           * / 
 3 3 5 5 4 4 3 2 ; 
 v a r   R e t r y L a n e 5   = 
 / *                                                           * / 
 6 7 1 0 8 8 6 4 ; 
 v a r   S o m e R e t r y L a n e   =   R e t r y L a n e 1 ; 
 v a r   S e l e c t i v e H y d r a t i o n L a n e   = 
 / *                     * / 
 1 3 4 2 1 7 7 2 8 ; 
 v a r   N o n I d l e L a n e s   = 
 / *                                                     * / 
 2 6 8 4 3 5 4 5 5 ; 
 v a r   I d l e H y d r a t i o n L a n e   = 
 / *                               * / 
 2 6 8 4 3 5 4 5 6 ; 
 v a r   I d l e L a n e   = 
 / *                                                 * / 
 5 3 6 8 7 0 9 1 2 ; 
 v a r   O f f s c r e e n L a n e   = 
 / *                                       * / 
 1 0 7 3 7 4 1 8 2 4 ;   / /   T h i s   f u n c t i o n   i s   u s e d   f o r   t h e   e x p e r i m e n t a l   t i m e l i n e   ( r e a c t - d e v t o o l s - t i m e l i n e ) 
 / /   I t   s h o u l d   b e   k e p t   i n   s y n c   w i t h   t h e   L a n e s   v a l u e s   a b o v e . 
 
 f u n c t i o n   g e t L a b e l F o r L a n e ( l a n e )   { 
     { 
         i f   ( l a n e   &   S y n c L a n e )   { 
             r e t u r n   ' S y n c ' ; 
         } 
 
         i f   ( l a n e   &   I n p u t C o n t i n u o u s H y d r a t i o n L a n e )   { 
             r e t u r n   ' I n p u t C o n t i n u o u s H y d r a t i o n ' ; 
         } 
 
         i f   ( l a n e   &   I n p u t C o n t i n u o u s L a n e )   { 
             r e t u r n   ' I n p u t C o n t i n u o u s ' ; 
         } 
 
         i f   ( l a n e   &   D e f a u l t H y d r a t i o n L a n e )   { 
             r e t u r n   ' D e f a u l t H y d r a t i o n ' ; 
         } 
 
         i f   ( l a n e   &   D e f a u l t L a n e )   { 
             r e t u r n   ' D e f a u l t ' ; 
         } 
 
         i f   ( l a n e   &   T r a n s i t i o n H y d r a t i o n L a n e )   { 
             r e t u r n   ' T r a n s i t i o n H y d r a t i o n ' ; 
         } 
 
         i f   ( l a n e   &   T r a n s i t i o n L a n e s )   { 
             r e t u r n   ' T r a n s i t i o n ' ; 
         } 
 
         i f   ( l a n e   &   R e t r y L a n e s )   { 
             r e t u r n   ' R e t r y ' ; 
         } 
 
         i f   ( l a n e   &   S e l e c t i v e H y d r a t i o n L a n e )   { 
             r e t u r n   ' S e l e c t i v e H y d r a t i o n ' ; 
         } 
 
         i f   ( l a n e   &   I d l e H y d r a t i o n L a n e )   { 
             r e t u r n   ' I d l e H y d r a t i o n ' ; 
         } 
 
         i f   ( l a n e   &   I d l e L a n e )   { 
             r e t u r n   ' I d l e ' ; 
         } 
 
         i f   ( l a n e   &   O f f s c r e e n L a n e )   { 
             r e t u r n   ' O f f s c r e e n ' ; 
         } 
     } 
 } 
 v a r   N o T i m e s t a m p   =   - 1 ; 
 v a r   n e x t T r a n s i t i o n L a n e   =   T r a n s i t i o n L a n e 1 ; 
 v a r   n e x t R e t r y L a n e   =   R e t r y L a n e 1 ; 
 
 f u n c t i o n   g e t H i g h e s t P r i o r i t y L a n e s ( l a n e s )   { 
     s w i t c h   ( g e t H i g h e s t P r i o r i t y L a n e ( l a n e s ) )   { 
         c a s e   S y n c L a n e : 
             r e t u r n   S y n c L a n e ; 
 
         c a s e   I n p u t C o n t i n u o u s H y d r a t i o n L a n e : 
             r e t u r n   I n p u t C o n t i n u o u s H y d r a t i o n L a n e ; 
 
         c a s e   I n p u t C o n t i n u o u s L a n e : 
             r e t u r n   I n p u t C o n t i n u o u s L a n e ; 
 
         c a s e   D e f a u l t H y d r a t i o n L a n e : 
             r e t u r n   D e f a u l t H y d r a t i o n L a n e ; 
 
         c a s e   D e f a u l t L a n e : 
             r e t u r n   D e f a u l t L a n e ; 
 
         c a s e   T r a n s i t i o n H y d r a t i o n L a n e : 
             r e t u r n   T r a n s i t i o n H y d r a t i o n L a n e ; 
 
         c a s e   T r a n s i t i o n L a n e 1 : 
         c a s e   T r a n s i t i o n L a n e 2 : 
         c a s e   T r a n s i t i o n L a n e 3 : 
         c a s e   T r a n s i t i o n L a n e 4 : 
         c a s e   T r a n s i t i o n L a n e 5 : 
         c a s e   T r a n s i t i o n L a n e 6 : 
         c a s e   T r a n s i t i o n L a n e 7 : 
         c a s e   T r a n s i t i o n L a n e 8 : 
         c a s e   T r a n s i t i o n L a n e 9 : 
         c a s e   T r a n s i t i o n L a n e 1 0 : 
         c a s e   T r a n s i t i o n L a n e 1 1 : 
         c a s e   T r a n s i t i o n L a n e 1 2 : 
         c a s e   T r a n s i t i o n L a n e 1 3 : 
         c a s e   T r a n s i t i o n L a n e 1 4 : 
         c a s e   T r a n s i t i o n L a n e 1 5 : 
         c a s e   T r a n s i t i o n L a n e 1 6 : 
             r e t u r n   l a n e s   &   T r a n s i t i o n L a n e s ; 
 
         c a s e   R e t r y L a n e 1 : 
         c a s e   R e t r y L a n e 2 : 
         c a s e   R e t r y L a n e 3 : 
         c a s e   R e t r y L a n e 4 : 
         c a s e   R e t r y L a n e 5 : 
             r e t u r n   l a n e s   &   R e t r y L a n e s ; 
 
         c a s e   S e l e c t i v e H y d r a t i o n L a n e : 
             r e t u r n   S e l e c t i v e H y d r a t i o n L a n e ; 
 
         c a s e   I d l e H y d r a t i o n L a n e : 
             r e t u r n   I d l e H y d r a t i o n L a n e ; 
 
         c a s e   I d l e L a n e : 
             r e t u r n   I d l e L a n e ; 
 
         c a s e   O f f s c r e e n L a n e : 
             r e t u r n   O f f s c r e e n L a n e ; 
 
         d e f a u l t : 
             { 
                 e r r o r ( ' S h o u l d   h a v e   f o u n d   m a t c h i n g   l a n e s .   T h i s   i s   a   b u g   i n   R e a c t . ' ) ; 
             }   / /   T h i s   s h o u l d n ' t   b e   r e a c h a b l e ,   b u t   a s   a   f a l l b a c k ,   r e t u r n   t h e   e n t i r e   b i t m a s k . 
 
 
             r e t u r n   l a n e s ; 
     } 
 } 
 
 f u n c t i o n   g e t N e x t L a n e s ( r o o t ,   w i p L a n e s )   { 
     / /   E a r l y   b a i l o u t   i f   t h e r e ' s   n o   p e n d i n g   w o r k   l e f t . 
     v a r   p e n d i n g L a n e s   =   r o o t . p e n d i n g L a n e s ; 
 
     i f   ( p e n d i n g L a n e s   = = =   N o L a n e s )   { 
         r e t u r n   N o L a n e s ; 
     } 
 
     v a r   n e x t L a n e s   =   N o L a n e s ; 
     v a r   s u s p e n d e d L a n e s   =   r o o t . s u s p e n d e d L a n e s ; 
     v a r   p i n g e d L a n e s   =   r o o t . p i n g e d L a n e s ;   / /   D o   n o t   w o r k   o n   a n y   i d l e   w o r k   u n t i l   a l l   t h e   n o n - i d l e   w o r k   h a s   f i n i s h e d , 
     / /   e v e n   i f   t h e   w o r k   i s   s u s p e n d e d . 
 
     v a r   n o n I d l e P e n d i n g L a n e s   =   p e n d i n g L a n e s   &   N o n I d l e L a n e s ; 
 
     i f   ( n o n I d l e P e n d i n g L a n e s   ! = =   N o L a n e s )   { 
         v a r   n o n I d l e U n b l o c k e d L a n e s   =   n o n I d l e P e n d i n g L a n e s   &   ~ s u s p e n d e d L a n e s ; 
 
         i f   ( n o n I d l e U n b l o c k e d L a n e s   ! = =   N o L a n e s )   { 
             n e x t L a n e s   =   g e t H i g h e s t P r i o r i t y L a n e s ( n o n I d l e U n b l o c k e d L a n e s ) ; 
         }   e l s e   { 
             v a r   n o n I d l e P i n g e d L a n e s   =   n o n I d l e P e n d i n g L a n e s   &   p i n g e d L a n e s ; 
 
             i f   ( n o n I d l e P i n g e d L a n e s   ! = =   N o L a n e s )   { 
                 n e x t L a n e s   =   g e t H i g h e s t P r i o r i t y L a n e s ( n o n I d l e P i n g e d L a n e s ) ; 
             } 
         } 
     }   e l s e   { 
         / /   T h e   o n l y   r e m a i n i n g   w o r k   i s   I d l e . 
         v a r   u n b l o c k e d L a n e s   =   p e n d i n g L a n e s   &   ~ s u s p e n d e d L a n e s ; 
 
         i f   ( u n b l o c k e d L a n e s   ! = =   N o L a n e s )   { 
             n e x t L a n e s   =   g e t H i g h e s t P r i o r i t y L a n e s ( u n b l o c k e d L a n e s ) ; 
         }   e l s e   { 
             i f   ( p i n g e d L a n e s   ! = =   N o L a n e s )   { 
                 n e x t L a n e s   =   g e t H i g h e s t P r i o r i t y L a n e s ( p i n g e d L a n e s ) ; 
             } 
         } 
     } 
 
     i f   ( n e x t L a n e s   = = =   N o L a n e s )   { 
         / /   T h i s   s h o u l d   o n l y   b e   r e a c h a b l e   i f   w e ' r e   s u s p e n d e d 
         / /   T O D O :   C o n s i d e r   w a r n i n g   i n   t h i s   p a t h   i f   a   f a l l b a c k   t i m e r   i s   n o t   s c h e d u l e d . 
         r e t u r n   N o L a n e s ; 
     }   / /   I f   w e ' r e   a l r e a d y   i n   t h e   m i d d l e   o f   a   r e n d e r ,   s w i t c h i n g   l a n e s   w i l l   i n t e r r u p t 
     / /   i t   a n d   w e ' l l   l o s e   o u r   p r o g r e s s .   W e   s h o u l d   o n l y   d o   t h i s   i f   t h e   n e w   l a n e s   a r e 
     / /   h i g h e r   p r i o r i t y . 
 
 
     i f   ( w i p L a n e s   ! = =   N o L a n e s   & &   w i p L a n e s   ! = =   n e x t L a n e s   & &   / /   I f   w e   a l r e a d y   s u s p e n d e d   w i t h   a   d e l a y ,   t h e n   i n t e r r u p t i n g   i s   f i n e .   D o n ' t 
     / /   b o t h e r   w a i t i n g   u n t i l   t h e   r o o t   i s   c o m p l e t e . 
     ( w i p L a n e s   &   s u s p e n d e d L a n e s )   = = =   N o L a n e s )   { 
         v a r   n e x t L a n e   =   g e t H i g h e s t P r i o r i t y L a n e ( n e x t L a n e s ) ; 
         v a r   w i p L a n e   =   g e t H i g h e s t P r i o r i t y L a n e ( w i p L a n e s ) ; 
 
         i f   (   / /   T e s t s   w h e t h e r   t h e   n e x t   l a n e   i s   e q u a l   o r   l o w e r   p r i o r i t y   t h a n   t h e   w i p 
         / /   o n e .   T h i s   w o r k s   b e c a u s e   t h e   b i t s   d e c r e a s e   i n   p r i o r i t y   a s   y o u   g o   l e f t . 
         n e x t L a n e   > =   w i p L a n e   | |   / /   D e f a u l t   p r i o r i t y   u p d a t e s   s h o u l d   n o t   i n t e r r u p t   t r a n s i t i o n   u p d a t e s .   T h e 
         / /   o n l y   d i f f e r e n c e   b e t w e e n   d e f a u l t   u p d a t e s   a n d   t r a n s i t i o n   u p d a t e s   i s   t h a t 
         / /   d e f a u l t   u p d a t e s   d o   n o t   s u p p o r t   r e f r e s h   t r a n s i t i o n s . 
         n e x t L a n e   = = =   D e f a u l t L a n e   & &   ( w i p L a n e   &   T r a n s i t i o n L a n e s )   ! = =   N o L a n e s )   { 
             / /   K e e p   w o r k i n g   o n   t h e   e x i s t i n g   i n - p r o g r e s s   t r e e .   D o   n o t   i n t e r r u p t . 
             r e t u r n   w i p L a n e s ; 
         } 
     } 
 
     i f   ( ( n e x t L a n e s   &   I n p u t C o n t i n u o u s L a n e )   ! = =   N o L a n e s )   { 
         / /   W h e n   u p d a t e s   a r e   s y n c   b y   d e f a u l t ,   w e   e n t a n g l e   c o n t i n u o u s   p r i o r i t y   u p d a t e s 
         / /   a n d   d e f a u l t   u p d a t e s ,   s o   t h e y   r e n d e r   i n   t h e   s a m e   b a t c h .   T h e   o n l y   r e a s o n 
         / /   t h e y   u s e   s e p a r a t e   l a n e s   i s   b e c a u s e   c o n t i n u o u s   u p d a t e s   s h o u l d   i n t e r r u p t 
         / /   t r a n s i t i o n s ,   b u t   d e f a u l t   u p d a t e s   s h o u l d   n o t . 
         n e x t L a n e s   | =   p e n d i n g L a n e s   &   D e f a u l t L a n e ; 
     }   / /   C h e c k   f o r   e n t a n g l e d   l a n e s   a n d   a d d   t h e m   t o   t h e   b a t c h . 
     / / 
     / /   A   l a n e   i s   s a i d   t o   b e   e n t a n g l e d   w i t h   a n o t h e r   w h e n   i t ' s   n o t   a l l o w e d   t o   r e n d e r 
     / /   i n   a   b a t c h   t h a t   d o e s   n o t   a l s o   i n c l u d e   t h e   o t h e r   l a n e .   T y p i c a l l y   w e   d o   t h i s 
     / /   w h e n   m u l t i p l e   u p d a t e s   h a v e   t h e   s a m e   s o u r c e ,   a n d   w e   o n l y   w a n t   t o   r e s p o n d   t o 
     / /   t h e   m o s t   r e c e n t   e v e n t   f r o m   t h a t   s o u r c e . 
     / / 
     / /   N o t e   t h a t   w e   a p p l y   e n t a n g l e m e n t s   * a f t e r *   c h e c k i n g   f o r   p a r t i a l   w o r k   a b o v e . 
     / /   T h i s   m e a n s   t h a t   i f   a   l a n e   i s   e n t a n g l e d   d u r i n g   a n   i n t e r l e a v e d   e v e n t   w h i l e 
     / /   i t ' s   a l r e a d y   r e n d e r i n g ,   w e   w o n ' t   i n t e r r u p t   i t .   T h i s   i s   i n t e n t i o n a l ,   s i n c e 
     / /   e n t a n g l e m e n t   i s   u s u a l l y   " b e s t   e f f o r t " :   w e ' l l   t r y   o u r   b e s t   t o   r e n d e r   t h e 
     / /   l a n e s   i n   t h e   s a m e   b a t c h ,   b u t   i t ' s   n o t   w o r t h   t h r o w i n g   o u t   p a r t i a l l y 
     / /   c o m p l e t e d   w o r k   i n   o r d e r   t o   d o   i t . 
     / /   T O D O :   R e c o n s i d e r   t h i s .   T h e   c o u n t e r - a r g u m e n t   i s   t h a t   t h e   p a r t i a l   w o r k 
     / /   r e p r e s e n t s   a n   i n t e r m e d i a t e   s t a t e ,   w h i c h   w e   d o n ' t   w a n t   t o   s h o w   t o   t h e   u s e r . 
     / /   A n d   b y   s p e n d i n g   e x t r a   t i m e   f i n i s h i n g   i t ,   w e ' r e   i n c r e a s i n g   t h e   a m o u n t   o f 
     / /   t i m e   i t   t a k e s   t o   s h o w   t h e   f i n a l   s t a t e ,   w h i c h   i s   w h a t   t h e y   a r e   a c t u a l l y 
     / /   w a i t i n g   f o r . 
     / / 
     / /   F o r   t h o s e   e x c e p t i o n s   w h e r e   e n t a n g l e m e n t   i s   s e m a n t i c a l l y   i m p o r t a n t ,   l i k e 
     / /   u s e M u t a b l e S o u r c e ,   w e   s h o u l d   e n s u r e   t h a t   t h e r e   i s   n o   p a r t i a l   w o r k   a t   t h e 
     / /   t i m e   w e   a p p l y   t h e   e n t a n g l e m e n t . 
 
 
     v a r   e n t a n g l e d L a n e s   =   r o o t . e n t a n g l e d L a n e s ; 
 
     i f   ( e n t a n g l e d L a n e s   ! = =   N o L a n e s )   { 
         v a r   e n t a n g l e m e n t s   =   r o o t . e n t a n g l e m e n t s ; 
         v a r   l a n e s   =   n e x t L a n e s   &   e n t a n g l e d L a n e s ; 
 
         w h i l e   ( l a n e s   >   0 )   { 
             v a r   i n d e x   =   p i c k A r b i t r a r y L a n e I n d e x ( l a n e s ) ; 
             v a r   l a n e   =   1   < <   i n d e x ; 
             n e x t L a n e s   | =   e n t a n g l e m e n t s [ i n d e x ] ; 
             l a n e s   & =   ~ l a n e ; 
         } 
     } 
 
     r e t u r n   n e x t L a n e s ; 
 } 
 f u n c t i o n   g e t M o s t R e c e n t E v e n t T i m e ( r o o t ,   l a n e s )   { 
     v a r   e v e n t T i m e s   =   r o o t . e v e n t T i m e s ; 
     v a r   m o s t R e c e n t E v e n t T i m e   =   N o T i m e s t a m p ; 
 
     w h i l e   ( l a n e s   >   0 )   { 
         v a r   i n d e x   =   p i c k A r b i t r a r y L a n e I n d e x ( l a n e s ) ; 
         v a r   l a n e   =   1   < <   i n d e x ; 
         v a r   e v e n t T i m e   =   e v e n t T i m e s [ i n d e x ] ; 
 
         i f   ( e v e n t T i m e   >   m o s t R e c e n t E v e n t T i m e )   { 
             m o s t R e c e n t E v e n t T i m e   =   e v e n t T i m e ; 
         } 
 
         l a n e s   & =   ~ l a n e ; 
     } 
 
     r e t u r n   m o s t R e c e n t E v e n t T i m e ; 
 } 
 
 f u n c t i o n   c o m p u t e E x p i r a t i o n T i m e ( l a n e ,   c u r r e n t T i m e )   { 
     s w i t c h   ( l a n e )   { 
         c a s e   S y n c L a n e : 
         c a s e   I n p u t C o n t i n u o u s H y d r a t i o n L a n e : 
         c a s e   I n p u t C o n t i n u o u s L a n e : 
             / /   U s e r   i n t e r a c t i o n s   s h o u l d   e x p i r e   s l i g h t l y   m o r e   q u i c k l y . 
             / / 
             / /   N O T E :   T h i s   i s   s e t   t o   t h e   c o r r e s p o n d i n g   c o n s t a n t   a s   i n   S c h e d u l e r . j s . 
             / /   W h e n   w e   m a d e   i t   l a r g e r ,   a   p r o d u c t   m e t r i c   i n   w w w   r e g r e s s e d ,   s u g g e s t i n g 
             / /   t h e r e ' s   a   u s e r   i n t e r a c t i o n   t h a t ' s   b e i n g   s t a r v e d   b y   a   s e r i e s   o f 
             / /   s y n c h r o n o u s   u p d a t e s .   I f   t h a t   t h e o r y   i s   c o r r e c t ,   t h e   p r o p e r   s o l u t i o n   i s 
             / /   t o   f i x   t h e   s t a r v a t i o n .   H o w e v e r ,   t h i s   s c e n a r i o   s u p p o r t s   t h e   i d e a   t h a t 
             / /   e x p i r a t i o n   t i m e s   a r e   a n   i m p o r t a n t   s a f e g u a r d   w h e n   s t a r v a t i o n 
             / /   d o e s   h a p p e n . 
             r e t u r n   c u r r e n t T i m e   +   2 5 0 ; 
 
         c a s e   D e f a u l t H y d r a t i o n L a n e : 
         c a s e   D e f a u l t L a n e : 
         c a s e   T r a n s i t i o n H y d r a t i o n L a n e : 
         c a s e   T r a n s i t i o n L a n e 1 : 
         c a s e   T r a n s i t i o n L a n e 2 : 
         c a s e   T r a n s i t i o n L a n e 3 : 
         c a s e   T r a n s i t i o n L a n e 4 : 
         c a s e   T r a n s i t i o n L a n e 5 : 
         c a s e   T r a n s i t i o n L a n e 6 : 
         c a s e   T r a n s i t i o n L a n e 7 : 
         c a s e   T r a n s i t i o n L a n e 8 : 
         c a s e   T r a n s i t i o n L a n e 9 : 
         c a s e   T r a n s i t i o n L a n e 1 0 : 
         c a s e   T r a n s i t i o n L a n e 1 1 : 
         c a s e   T r a n s i t i o n L a n e 1 2 : 
         c a s e   T r a n s i t i o n L a n e 1 3 : 
         c a s e   T r a n s i t i o n L a n e 1 4 : 
         c a s e   T r a n s i t i o n L a n e 1 5 : 
         c a s e   T r a n s i t i o n L a n e 1 6 : 
             r e t u r n   c u r r e n t T i m e   +   5 0 0 0 ; 
 
         c a s e   R e t r y L a n e 1 : 
         c a s e   R e t r y L a n e 2 : 
         c a s e   R e t r y L a n e 3 : 
         c a s e   R e t r y L a n e 4 : 
         c a s e   R e t r y L a n e 5 : 
             / /   T O D O :   R e t r i e s   s h o u l d   b e   a l l o w e d   t o   e x p i r e   i f   t h e y   a r e   C P U   b o u n d   f o r 
             / /   t o o   l o n g ,   b u t   w h e n   I   m a d e   t h i s   c h a n g e   i t   c a u s e d   a   s p i k e   i n   b r o w s e r 
             / /   c r a s h e s .   T h e r e   m u s t   b e   s o m e   o t h e r   u n d e r l y i n g   b u g ;   n o t   s u p e r   u r g e n t   b u t 
             / /   i d e a l l y   s h o u l d   f i g u r e   o u t   w h y   a n d   f i x   i t .   U n f o r t u n a t e l y   w e   d o n ' t   h a v e 
             / /   a   r e p r o   f o r   t h e   c r a s h e s ,   o n l y   d e t e c t e d   v i a   p r o d u c t i o n   m e t r i c s . 
             r e t u r n   N o T i m e s t a m p ; 
 
         c a s e   S e l e c t i v e H y d r a t i o n L a n e : 
         c a s e   I d l e H y d r a t i o n L a n e : 
         c a s e   I d l e L a n e : 
         c a s e   O f f s c r e e n L a n e : 
             / /   A n y t h i n g   i d l e   p r i o r i t y   o r   l o w e r   s h o u l d   n e v e r   e x p i r e . 
             r e t u r n   N o T i m e s t a m p ; 
 
         d e f a u l t : 
             { 
                 e r r o r ( ' S h o u l d   h a v e   f o u n d   m a t c h i n g   l a n e s .   T h i s   i s   a   b u g   i n   R e a c t . ' ) ; 
             } 
 
             r e t u r n   N o T i m e s t a m p ; 
     } 
 } 
 
 f u n c t i o n   m a r k S t a r v e d L a n e s A s E x p i r e d ( r o o t ,   c u r r e n t T i m e )   { 
     / /   T O D O :   T h i s   g e t s   c a l l e d   e v e r y   t i m e   w e   y i e l d .   W e   c a n   o p t i m i z e   b y   s t o r i n g 
     / /   t h e   e a r l i e s t   e x p i r a t i o n   t i m e   o n   t h e   r o o t .   T h e n   u s e   t h a t   t o   q u i c k l y   b a i l   o u t 
     / /   o f   t h i s   f u n c t i o n . 
     v a r   p e n d i n g L a n e s   =   r o o t . p e n d i n g L a n e s ; 
     v a r   s u s p e n d e d L a n e s   =   r o o t . s u s p e n d e d L a n e s ; 
     v a r   p i n g e d L a n e s   =   r o o t . p i n g e d L a n e s ; 
     v a r   e x p i r a t i o n T i m e s   =   r o o t . e x p i r a t i o n T i m e s ;   / /   I t e r a t e   t h r o u g h   t h e   p e n d i n g   l a n e s   a n d   c h e c k   i f   w e ' v e   r e a c h e d   t h e i r 
     / /   e x p i r a t i o n   t i m e .   I f   s o ,   w e ' l l   a s s u m e   t h e   u p d a t e   i s   b e i n g   s t a r v e d   a n d   m a r k 
     / /   i t   a s   e x p i r e d   t o   f o r c e   i t   t o   f i n i s h . 
 
     v a r   l a n e s   =   p e n d i n g L a n e s ; 
 
     w h i l e   ( l a n e s   >   0 )   { 
         v a r   i n d e x   =   p i c k A r b i t r a r y L a n e I n d e x ( l a n e s ) ; 
         v a r   l a n e   =   1   < <   i n d e x ; 
         v a r   e x p i r a t i o n T i m e   =   e x p i r a t i o n T i m e s [ i n d e x ] ; 
 
         i f   ( e x p i r a t i o n T i m e   = = =   N o T i m e s t a m p )   { 
             / /   F o u n d   a   p e n d i n g   l a n e   w i t h   n o   e x p i r a t i o n   t i m e .   I f   i t ' s   n o t   s u s p e n d e d ,   o r 
             / /   i f   i t ' s   p i n g e d ,   a s s u m e   i t ' s   C P U - b o u n d .   C o m p u t e   a   n e w   e x p i r a t i o n   t i m e 
             / /   u s i n g   t h e   c u r r e n t   t i m e . 
             i f   ( ( l a n e   &   s u s p e n d e d L a n e s )   = = =   N o L a n e s   | |   ( l a n e   &   p i n g e d L a n e s )   ! = =   N o L a n e s )   { 
                 / /   A s s u m e s   t i m e s t a m p s   a r e   m o n o t o n i c a l l y   i n c r e a s i n g . 
                 e x p i r a t i o n T i m e s [ i n d e x ]   =   c o m p u t e E x p i r a t i o n T i m e ( l a n e ,   c u r r e n t T i m e ) ; 
             } 
         }   e l s e   i f   ( e x p i r a t i o n T i m e   < =   c u r r e n t T i m e )   { 
             / /   T h i s   l a n e   e x p i r e d 
             r o o t . e x p i r e d L a n e s   | =   l a n e ; 
         } 
 
         l a n e s   & =   ~ l a n e ; 
     } 
 }   / /   T h i s   r e t u r n s   t h e   h i g h e s t   p r i o r i t y   p e n d i n g   l a n e s   r e g a r d l e s s   o f   w h e t h e r   t h e y 
 / /   a r e   s u s p e n d e d . 
 
 f u n c t i o n   g e t H i g h e s t P r i o r i t y P e n d i n g L a n e s ( r o o t )   { 
     r e t u r n   g e t H i g h e s t P r i o r i t y L a n e s ( r o o t . p e n d i n g L a n e s ) ; 
 } 
 f u n c t i o n   g e t L a n e s T o R e t r y S y n c h r o n o u s l y O n E r r o r ( r o o t )   { 
     v a r   e v e r y t h i n g B u t O f f s c r e e n   =   r o o t . p e n d i n g L a n e s   &   ~ O f f s c r e e n L a n e ; 
 
     i f   ( e v e r y t h i n g B u t O f f s c r e e n   ! = =   N o L a n e s )   { 
         r e t u r n   e v e r y t h i n g B u t O f f s c r e e n ; 
     } 
 
     i f   ( e v e r y t h i n g B u t O f f s c r e e n   &   O f f s c r e e n L a n e )   { 
         r e t u r n   O f f s c r e e n L a n e ; 
     } 
 
     r e t u r n   N o L a n e s ; 
 } 
 f u n c t i o n   i n c l u d e s S y n c L a n e ( l a n e s )   { 
     r e t u r n   ( l a n e s   &   S y n c L a n e )   ! = =   N o L a n e s ; 
 } 
 f u n c t i o n   i n c l u d e s N o n I d l e W o r k ( l a n e s )   { 
     r e t u r n   ( l a n e s   &   N o n I d l e L a n e s )   ! = =   N o L a n e s ; 
 } 
 f u n c t i o n   i n c l u d e s O n l y R e t r i e s ( l a n e s )   { 
     r e t u r n   ( l a n e s   &   R e t r y L a n e s )   = = =   l a n e s ; 
 } 
 f u n c t i o n   i n c l u d e s O n l y N o n U r g e n t L a n e s ( l a n e s )   { 
     v a r   U r g e n t L a n e s   =   S y n c L a n e   |   I n p u t C o n t i n u o u s L a n e   |   D e f a u l t L a n e ; 
     r e t u r n   ( l a n e s   &   U r g e n t L a n e s )   = = =   N o L a n e s ; 
 } 
 f u n c t i o n   i n c l u d e s O n l y T r a n s i t i o n s ( l a n e s )   { 
     r e t u r n   ( l a n e s   &   T r a n s i t i o n L a n e s )   = = =   l a n e s ; 
 } 
 f u n c t i o n   i n c l u d e s B l o c k i n g L a n e ( r o o t ,   l a n e s )   { 
 
     v a r   S y n c D e f a u l t L a n e s   =   I n p u t C o n t i n u o u s H y d r a t i o n L a n e   |   I n p u t C o n t i n u o u s L a n e   |   D e f a u l t H y d r a t i o n L a n e   |   D e f a u l t L a n e ; 
     r e t u r n   ( l a n e s   &   S y n c D e f a u l t L a n e s )   ! = =   N o L a n e s ; 
 } 
 f u n c t i o n   i n c l u d e s E x p i r e d L a n e ( r o o t ,   l a n e s )   { 
     / /   T h i s   i s   a   s e p a r a t e   c h e c k   f r o m   i n c l u d e s B l o c k i n g L a n e   b e c a u s e   a   l a n e   c a n 
     / /   e x p i r e   a f t e r   a   r e n d e r   h a s   a l r e a d y   s t a r t e d . 
     r e t u r n   ( l a n e s   &   r o o t . e x p i r e d L a n e s )   ! = =   N o L a n e s ; 
 } 
 f u n c t i o n   i s T r a n s i t i o n L a n e ( l a n e )   { 
     r e t u r n   ( l a n e   &   T r a n s i t i o n L a n e s )   ! = =   N o L a n e s ; 
 } 
 f u n c t i o n   c l a i m N e x t T r a n s i t i o n L a n e ( )   { 
     / /   C y c l e   t h r o u g h   t h e   l a n e s ,   a s s i g n i n g   e a c h   n e w   t r a n s i t i o n   t o   t h e   n e x t   l a n e . 
     / /   I n   m o s t   c a s e s ,   t h i s   m e a n s   e v e r y   t r a n s i t i o n   g e t s   i t s   o w n   l a n e ,   u n t i l   w e 
     / /   r u n   o u t   o f   l a n e s   a n d   c y c l e   b a c k   t o   t h e   b e g i n n i n g . 
     v a r   l a n e   =   n e x t T r a n s i t i o n L a n e ; 
     n e x t T r a n s i t i o n L a n e   < < =   1 ; 
 
     i f   ( ( n e x t T r a n s i t i o n L a n e   &   T r a n s i t i o n L a n e s )   = = =   N o L a n e s )   { 
         n e x t T r a n s i t i o n L a n e   =   T r a n s i t i o n L a n e 1 ; 
     } 
 
     r e t u r n   l a n e ; 
 } 
 f u n c t i o n   c l a i m N e x t R e t r y L a n e ( )   { 
     v a r   l a n e   =   n e x t R e t r y L a n e ; 
     n e x t R e t r y L a n e   < < =   1 ; 
 
     i f   ( ( n e x t R e t r y L a n e   &   R e t r y L a n e s )   = = =   N o L a n e s )   { 
         n e x t R e t r y L a n e   =   R e t r y L a n e 1 ; 
     } 
 
     r e t u r n   l a n e ; 
 } 
 f u n c t i o n   g e t H i g h e s t P r i o r i t y L a n e ( l a n e s )   { 
     r e t u r n   l a n e s   &   - l a n e s ; 
 } 
 f u n c t i o n   p i c k A r b i t r a r y L a n e ( l a n e s )   { 
     / /   T h i s   w r a p p e r   f u n c t i o n   g e t s   i n l i n e d .   O n l y   e x i s t s   s o   t o   c o m m u n i c a t e   t h a t   i t 
     / /   d o e s n ' t   m a t t e r   w h i c h   b i t   i s   s e l e c t e d ;   y o u   c a n   p i c k   a n y   b i t   w i t h o u t 
     / /   a f f e c t i n g   t h e   a l g o r i t h m s   w h e r e   i t s   u s e d .   H e r e   I ' m   u s i n g 
     / /   g e t H i g h e s t P r i o r i t y L a n e   b e c a u s e   i t   r e q u i r e s   t h e   f e w e s t   o p e r a t i o n s . 
     r e t u r n   g e t H i g h e s t P r i o r i t y L a n e ( l a n e s ) ; 
 } 
 
 f u n c t i o n   p i c k A r b i t r a r y L a n e I n d e x ( l a n e s )   { 
     r e t u r n   3 1   -   c l z 3 2 ( l a n e s ) ; 
 } 
 
 f u n c t i o n   l a n e T o I n d e x ( l a n e )   { 
     r e t u r n   p i c k A r b i t r a r y L a n e I n d e x ( l a n e ) ; 
 } 
 
 f u n c t i o n   i n c l u d e s S o m e L a n e ( a ,   b )   { 
     r e t u r n   ( a   &   b )   ! = =   N o L a n e s ; 
 } 
 f u n c t i o n   i s S u b s e t O f L a n e s ( s e t ,   s u b s e t )   { 
     r e t u r n   ( s e t   &   s u b s e t )   = = =   s u b s e t ; 
 } 
 f u n c t i o n   m e r g e L a n e s ( a ,   b )   { 
     r e t u r n   a   |   b ; 
 } 
 f u n c t i o n   r e m o v e L a n e s ( s e t ,   s u b s e t )   { 
     r e t u r n   s e t   &   ~ s u b s e t ; 
 } 
 f u n c t i o n   i n t e r s e c t L a n e s ( a ,   b )   { 
     r e t u r n   a   &   b ; 
 }   / /   S e e m s   r e d u n d a n t ,   b u t   i t   c h a n g e s   t h e   t y p e   f r o m   a   s i n g l e   l a n e   ( u s e d   f o r 
 / /   u p d a t e s )   t o   a   g r o u p   o f   l a n e s   ( u s e d   f o r   f l u s h i n g   w o r k ) . 
 
 f u n c t i o n   l a n e T o L a n e s ( l a n e )   { 
     r e t u r n   l a n e ; 
 } 
 f u n c t i o n   h i g h e r P r i o r i t y L a n e ( a ,   b )   { 
     / /   T h i s   w o r k s   b e c a u s e   t h e   b i t   r a n g e s   d e c r e a s e   i n   p r i o r i t y   a s   y o u   g o   l e f t . 
     r e t u r n   a   ! = =   N o L a n e   & &   a   <   b   ?   a   :   b ; 
 } 
 f u n c t i o n   c r e a t e L a n e M a p ( i n i t i a l )   { 
     / /   I n t e n t i o n a l l y   p u s h i n g   o n e   b y   o n e . 
     / /   h t t p s : / / v 8 . d e v / b l o g / e l e m e n t s - k i n d s # a v o i d - c r e a t i n g - h o l e s 
     v a r   l a n e M a p   =   [ ] ; 
 
     f o r   ( v a r   i   =   0 ;   i   <   T o t a l L a n e s ;   i + + )   { 
         l a n e M a p . p u s h ( i n i t i a l ) ; 
     } 
 
     r e t u r n   l a n e M a p ; 
 } 
 f u n c t i o n   m a r k R o o t U p d a t e d ( r o o t ,   u p d a t e L a n e ,   e v e n t T i m e )   { 
     r o o t . p e n d i n g L a n e s   | =   u p d a t e L a n e ;   / /   I f   t h e r e   a r e   a n y   s u s p e n d e d   t r a n s i t i o n s ,   i t ' s   p o s s i b l e   t h i s   n e w   u p d a t e 
     / /   c o u l d   u n b l o c k   t h e m .   C l e a r   t h e   s u s p e n d e d   l a n e s   s o   t h a t   w e   c a n   t r y   r e n d e r i n g 
     / /   t h e m   a g a i n . 
     / / 
     / /   T O D O :   W e   r e a l l y   o n l y   n e e d   t o   u n s u s p e n d   o n l y   l a n e s   t h a t   a r e   i n   t h e 
     / /   ` s u b t r e e L a n e s `   o f   t h e   u p d a t e d   f i b e r ,   o r   t h e   u p d a t e   l a n e s   o f   t h e   r e t u r n 
     / /   p a t h .   T h i s   w o u l d   e x c l u d e   s u s p e n d e d   u p d a t e s   i n   a n   u n r e l a t e d   s i b l i n g   t r e e , 
     / /   s i n c e   t h e r e ' s   n o   w a y   f o r   t h i s   u p d a t e   t o   u n b l o c k   i t . 
     / / 
     / /   W e   d o n ' t   d o   t h i s   i f   t h e   i n c o m i n g   u p d a t e   i s   i d l e ,   b e c a u s e   w e   n e v e r   p r o c e s s 
     / /   i d l e   u p d a t e s   u n t i l   a f t e r   a l l   t h e   r e g u l a r   u p d a t e s   h a v e   f i n i s h e d ;   t h e r e ' s   n o 
     / /   w a y   i t   c o u l d   u n b l o c k   a   t r a n s i t i o n . 
 
     i f   ( u p d a t e L a n e   ! = =   I d l e L a n e )   { 
         r o o t . s u s p e n d e d L a n e s   =   N o L a n e s ; 
         r o o t . p i n g e d L a n e s   =   N o L a n e s ; 
     } 
 
     v a r   e v e n t T i m e s   =   r o o t . e v e n t T i m e s ; 
     v a r   i n d e x   =   l a n e T o I n d e x ( u p d a t e L a n e ) ;   / /   W e   c a n   a l w a y s   o v e r w r i t e   a n   e x i s t i n g   t i m e s t a m p   b e c a u s e   w e   p r e f e r   t h e   m o s t 
     / /   r e c e n t   e v e n t ,   a n d   w e   a s s u m e   t i m e   i s   m o n o t o n i c a l l y   i n c r e a s i n g . 
 
     e v e n t T i m e s [ i n d e x ]   =   e v e n t T i m e ; 
 } 
 f u n c t i o n   m a r k R o o t S u s p e n d e d ( r o o t ,   s u s p e n d e d L a n e s )   { 
     r o o t . s u s p e n d e d L a n e s   | =   s u s p e n d e d L a n e s ; 
     r o o t . p i n g e d L a n e s   & =   ~ s u s p e n d e d L a n e s ;   / /   T h e   s u s p e n d e d   l a n e s   a r e   n o   l o n g e r   C P U - b o u n d .   C l e a r   t h e i r   e x p i r a t i o n   t i m e s . 
 
     v a r   e x p i r a t i o n T i m e s   =   r o o t . e x p i r a t i o n T i m e s ; 
     v a r   l a n e s   =   s u s p e n d e d L a n e s ; 
 
     w h i l e   ( l a n e s   >   0 )   { 
         v a r   i n d e x   =   p i c k A r b i t r a r y L a n e I n d e x ( l a n e s ) ; 
         v a r   l a n e   =   1   < <   i n d e x ; 
         e x p i r a t i o n T i m e s [ i n d e x ]   =   N o T i m e s t a m p ; 
         l a n e s   & =   ~ l a n e ; 
     } 
 } 
 f u n c t i o n   m a r k R o o t P i n g e d ( r o o t ,   p i n g e d L a n e s ,   e v e n t T i m e )   { 
     r o o t . p i n g e d L a n e s   | =   r o o t . s u s p e n d e d L a n e s   &   p i n g e d L a n e s ; 
 } 
 f u n c t i o n   m a r k R o o t F i n i s h e d ( r o o t ,   r e m a i n i n g L a n e s )   { 
     v a r   n o L o n g e r P e n d i n g L a n e s   =   r o o t . p e n d i n g L a n e s   &   ~ r e m a i n i n g L a n e s ; 
     r o o t . p e n d i n g L a n e s   =   r e m a i n i n g L a n e s ;   / /   L e t ' s   t r y   e v e r y t h i n g   a g a i n 
 
     r o o t . s u s p e n d e d L a n e s   =   N o L a n e s ; 
     r o o t . p i n g e d L a n e s   =   N o L a n e s ; 
     r o o t . e x p i r e d L a n e s   & =   r e m a i n i n g L a n e s ; 
     r o o t . m u t a b l e R e a d L a n e s   & =   r e m a i n i n g L a n e s ; 
     r o o t . e n t a n g l e d L a n e s   & =   r e m a i n i n g L a n e s ; 
     v a r   e n t a n g l e m e n t s   =   r o o t . e n t a n g l e m e n t s ; 
     v a r   e v e n t T i m e s   =   r o o t . e v e n t T i m e s ; 
     v a r   e x p i r a t i o n T i m e s   =   r o o t . e x p i r a t i o n T i m e s ;   / /   C l e a r   t h e   l a n e s   t h a t   n o   l o n g e r   h a v e   p e n d i n g   w o r k 
 
     v a r   l a n e s   =   n o L o n g e r P e n d i n g L a n e s ; 
 
     w h i l e   ( l a n e s   >   0 )   { 
         v a r   i n d e x   =   p i c k A r b i t r a r y L a n e I n d e x ( l a n e s ) ; 
         v a r   l a n e   =   1   < <   i n d e x ; 
         e n t a n g l e m e n t s [ i n d e x ]   =   N o L a n e s ; 
         e v e n t T i m e s [ i n d e x ]   =   N o T i m e s t a m p ; 
         e x p i r a t i o n T i m e s [ i n d e x ]   =   N o T i m e s t a m p ; 
         l a n e s   & =   ~ l a n e ; 
     } 
 } 
 f u n c t i o n   m a r k R o o t E n t a n g l e d ( r o o t ,   e n t a n g l e d L a n e s )   { 
     / /   I n   a d d i t i o n   t o   e n t a n g l i n g   e a c h   o f   t h e   g i v e n   l a n e s   w i t h   e a c h   o t h e r ,   w e   a l s o 
     / /   h a v e   t o   c o n s i d e r   _ t r a n s i t i v e _   e n t a n g l e m e n t s .   F o r   e a c h   l a n e   t h a t   i s   a l r e a d y 
     / /   e n t a n g l e d   w i t h   * a n y *   o f   t h e   g i v e n   l a n e s ,   t h a t   l a n e   i s   n o w   t r a n s i t i v e l y 
     / /   e n t a n g l e d   w i t h   * a l l *   t h e   g i v e n   l a n e s . 
     / / 
     / /   T r a n s l a t e d :   I f   C   i s   e n t a n g l e d   w i t h   A ,   t h e n   e n t a n g l i n g   A   w i t h   B   a l s o 
     / /   e n t a n g l e s   C   w i t h   B . 
     / / 
     / /   I f   t h i s   i s   h a r d   t o   g r a s p ,   i t   m i g h t   h e l p   t o   i n t e n t i o n a l l y   b r e a k   t h i s 
     / /   f u n c t i o n   a n d   l o o k   a t   t h e   t e s t s   t h a t   f a i l   i n   R e a c t T r a n s i t i o n - t e s t . j s .   T r y 
     / /   c o m m e n t i n g   o u t   o n e   o f   t h e   c o n d i t i o n s   b e l o w . 
     v a r   r o o t E n t a n g l e d L a n e s   =   r o o t . e n t a n g l e d L a n e s   | =   e n t a n g l e d L a n e s ; 
     v a r   e n t a n g l e m e n t s   =   r o o t . e n t a n g l e m e n t s ; 
     v a r   l a n e s   =   r o o t E n t a n g l e d L a n e s ; 
 
     w h i l e   ( l a n e s )   { 
         v a r   i n d e x   =   p i c k A r b i t r a r y L a n e I n d e x ( l a n e s ) ; 
         v a r   l a n e   =   1   < <   i n d e x ; 
 
         i f   (   / /   I s   t h i s   o n e   o f   t h e   n e w l y   e n t a n g l e d   l a n e s ? 
         l a n e   &   e n t a n g l e d L a n e s   |   / /   I s   t h i s   l a n e   t r a n s i t i v e l y   e n t a n g l e d   w i t h   t h e   n e w l y   e n t a n g l e d   l a n e s ? 
         e n t a n g l e m e n t s [ i n d e x ]   &   e n t a n g l e d L a n e s )   { 
             e n t a n g l e m e n t s [ i n d e x ]   | =   e n t a n g l e d L a n e s ; 
         } 
 
         l a n e s   & =   ~ l a n e ; 
     } 
 } 
 f u n c t i o n   g e t B u m p e d L a n e F o r H y d r a t i o n ( r o o t ,   r e n d e r L a n e s )   { 
     v a r   r e n d e r L a n e   =   g e t H i g h e s t P r i o r i t y L a n e ( r e n d e r L a n e s ) ; 
     v a r   l a n e ; 
 
     s w i t c h   ( r e n d e r L a n e )   { 
         c a s e   I n p u t C o n t i n u o u s L a n e : 
             l a n e   =   I n p u t C o n t i n u o u s H y d r a t i o n L a n e ; 
             b r e a k ; 
 
         c a s e   D e f a u l t L a n e : 
             l a n e   =   D e f a u l t H y d r a t i o n L a n e ; 
             b r e a k ; 
 
         c a s e   T r a n s i t i o n L a n e 1 : 
         c a s e   T r a n s i t i o n L a n e 2 : 
         c a s e   T r a n s i t i o n L a n e 3 : 
         c a s e   T r a n s i t i o n L a n e 4 : 
         c a s e   T r a n s i t i o n L a n e 5 : 
         c a s e   T r a n s i t i o n L a n e 6 : 
         c a s e   T r a n s i t i o n L a n e 7 : 
         c a s e   T r a n s i t i o n L a n e 8 : 
         c a s e   T r a n s i t i o n L a n e 9 : 
         c a s e   T r a n s i t i o n L a n e 1 0 : 
         c a s e   T r a n s i t i o n L a n e 1 1 : 
         c a s e   T r a n s i t i o n L a n e 1 2 : 
         c a s e   T r a n s i t i o n L a n e 1 3 : 
         c a s e   T r a n s i t i o n L a n e 1 4 : 
         c a s e   T r a n s i t i o n L a n e 1 5 : 
         c a s e   T r a n s i t i o n L a n e 1 6 : 
         c a s e   R e t r y L a n e 1 : 
         c a s e   R e t r y L a n e 2 : 
         c a s e   R e t r y L a n e 3 : 
         c a s e   R e t r y L a n e 4 : 
         c a s e   R e t r y L a n e 5 : 
             l a n e   =   T r a n s i t i o n H y d r a t i o n L a n e ; 
             b r e a k ; 
 
         c a s e   I d l e L a n e : 
             l a n e   =   I d l e H y d r a t i o n L a n e ; 
             b r e a k ; 
 
         d e f a u l t : 
             / /   E v e r y t h i n g   e l s e   i s   a l r e a d y   e i t h e r   a   h y d r a t i o n   l a n e ,   o r   s h o u l d n ' t 
             / /   b e   r e t r i e d   a t   a   h y d r a t i o n   l a n e . 
             l a n e   =   N o L a n e ; 
             b r e a k ; 
     }   / /   C h e c k   i f   t h e   l a n e   w e   c h o s e   i s   s u s p e n d e d .   I f   s o ,   t h a t   i n d i c a t e s   t h a t   w e 
     / /   a l r e a d y   a t t e m p t e d   a n d   f a i l e d   t o   h y d r a t e   a t   t h a t   l e v e l .   A l s o   c h e c k   i f   w e ' r e 
     / /   a l r e a d y   r e n d e r i n g   t h a t   l a n e ,   w h i c h   i s   r a r e   b u t   c o u l d   h a p p e n . 
 
 
     i f   ( ( l a n e   &   ( r o o t . s u s p e n d e d L a n e s   |   r e n d e r L a n e s ) )   ! = =   N o L a n e )   { 
         / /   G i v e   u p   t r y i n g   t o   h y d r a t e   a n d   f a l l   b a c k   t o   c l i e n t   r e n d e r . 
         r e t u r n   N o L a n e ; 
     } 
 
     r e t u r n   l a n e ; 
 } 
 f u n c t i o n   a d d F i b e r T o L a n e s M a p ( r o o t ,   f i b e r ,   l a n e s )   { 
 
     i f   ( ! i s D e v T o o l s P r e s e n t )   { 
         r e t u r n ; 
     } 
 
     v a r   p e n d i n g U p d a t e r s L a n e M a p   =   r o o t . p e n d i n g U p d a t e r s L a n e M a p ; 
 
     w h i l e   ( l a n e s   >   0 )   { 
         v a r   i n d e x   =   l a n e T o I n d e x ( l a n e s ) ; 
         v a r   l a n e   =   1   < <   i n d e x ; 
         v a r   u p d a t e r s   =   p e n d i n g U p d a t e r s L a n e M a p [ i n d e x ] ; 
         u p d a t e r s . a d d ( f i b e r ) ; 
         l a n e s   & =   ~ l a n e ; 
     } 
 } 
 f u n c t i o n   m o v e P e n d i n g F i b e r s T o M e m o i z e d ( r o o t ,   l a n e s )   { 
 
     i f   ( ! i s D e v T o o l s P r e s e n t )   { 
         r e t u r n ; 
     } 
 
     v a r   p e n d i n g U p d a t e r s L a n e M a p   =   r o o t . p e n d i n g U p d a t e r s L a n e M a p ; 
     v a r   m e m o i z e d U p d a t e r s   =   r o o t . m e m o i z e d U p d a t e r s ; 
 
     w h i l e   ( l a n e s   >   0 )   { 
         v a r   i n d e x   =   l a n e T o I n d e x ( l a n e s ) ; 
         v a r   l a n e   =   1   < <   i n d e x ; 
         v a r   u p d a t e r s   =   p e n d i n g U p d a t e r s L a n e M a p [ i n d e x ] ; 
 
         i f   ( u p d a t e r s . s i z e   >   0 )   { 
             u p d a t e r s . f o r E a c h ( f u n c t i o n   ( f i b e r )   { 
                 v a r   a l t e r n a t e   =   f i b e r . a l t e r n a t e ; 
 
                 i f   ( a l t e r n a t e   = = =   n u l l   | |   ! m e m o i z e d U p d a t e r s . h a s ( a l t e r n a t e ) )   { 
                     m e m o i z e d U p d a t e r s . a d d ( f i b e r ) ; 
                 } 
             } ) ; 
             u p d a t e r s . c l e a r ( ) ; 
         } 
 
         l a n e s   & =   ~ l a n e ; 
     } 
 } 
 f u n c t i o n   g e t T r a n s i t i o n s F o r L a n e s ( r o o t ,   l a n e s )   { 
     { 
         r e t u r n   n u l l ; 
     } 
 } 
 
 v a r   D i s c r e t e E v e n t P r i o r i t y   =   S y n c L a n e ; 
 v a r   C o n t i n u o u s E v e n t P r i o r i t y   =   I n p u t C o n t i n u o u s L a n e ; 
 v a r   D e f a u l t E v e n t P r i o r i t y   =   D e f a u l t L a n e ; 
 v a r   I d l e E v e n t P r i o r i t y   =   I d l e L a n e ; 
 v a r   c u r r e n t U p d a t e P r i o r i t y   =   N o L a n e ; 
 f u n c t i o n   g e t C u r r e n t U p d a t e P r i o r i t y ( )   { 
     r e t u r n   c u r r e n t U p d a t e P r i o r i t y ; 
 } 
 f u n c t i o n   s e t C u r r e n t U p d a t e P r i o r i t y ( n e w P r i o r i t y )   { 
     c u r r e n t U p d a t e P r i o r i t y   =   n e w P r i o r i t y ; 
 } 
 f u n c t i o n   r u n W i t h P r i o r i t y ( p r i o r i t y ,   f n )   { 
     v a r   p r e v i o u s P r i o r i t y   =   c u r r e n t U p d a t e P r i o r i t y ; 
 
     t r y   { 
         c u r r e n t U p d a t e P r i o r i t y   =   p r i o r i t y ; 
         r e t u r n   f n ( ) ; 
     }   f i n a l l y   { 
         c u r r e n t U p d a t e P r i o r i t y   =   p r e v i o u s P r i o r i t y ; 
     } 
 } 
 f u n c t i o n   h i g h e r E v e n t P r i o r i t y ( a ,   b )   { 
     r e t u r n   a   ! = =   0   & &   a   <   b   ?   a   :   b ; 
 } 
 f u n c t i o n   l o w e r E v e n t P r i o r i t y ( a ,   b )   { 
     r e t u r n   a   = = =   0   | |   a   >   b   ?   a   :   b ; 
 } 
 f u n c t i o n   i s H i g h e r E v e n t P r i o r i t y ( a ,   b )   { 
     r e t u r n   a   ! = =   0   & &   a   <   b ; 
 } 
 f u n c t i o n   l a n e s T o E v e n t P r i o r i t y ( l a n e s )   { 
     v a r   l a n e   =   g e t H i g h e s t P r i o r i t y L a n e ( l a n e s ) ; 
 
     i f   ( ! i s H i g h e r E v e n t P r i o r i t y ( D i s c r e t e E v e n t P r i o r i t y ,   l a n e ) )   { 
         r e t u r n   D i s c r e t e E v e n t P r i o r i t y ; 
     } 
 
     i f   ( ! i s H i g h e r E v e n t P r i o r i t y ( C o n t i n u o u s E v e n t P r i o r i t y ,   l a n e ) )   { 
         r e t u r n   C o n t i n u o u s E v e n t P r i o r i t y ; 
     } 
 
     i f   ( i n c l u d e s N o n I d l e W o r k ( l a n e ) )   { 
         r e t u r n   D e f a u l t E v e n t P r i o r i t y ; 
     } 
 
     r e t u r n   I d l e E v e n t P r i o r i t y ; 
 } 
 
 / /   T h i s   i s   i m p o r t e d   b y   t h e   e v e n t   r e p l a y i n g   i m p l e m e n t a t i o n   i n   R e a c t   D O M .   I t ' s 
 / /   i n   a   s e p a r a t e   f i l e   t o   b r e a k   a   c i r c u l a r   d e p e n d e n c y   b e t w e e n   t h e   r e n d e r e r   a n d 
 / /   t h e   r e c o n c i l e r . 
 f u n c t i o n   i s R o o t D e h y d r a t e d ( r o o t )   { 
     v a r   c u r r e n t S t a t e   =   r o o t . c u r r e n t . m e m o i z e d S t a t e ; 
     r e t u r n   c u r r e n t S t a t e . i s D e h y d r a t e d ; 
 } 
 
 v a r   _ a t t e m p t S y n c h r o n o u s H y d r a t i o n ; 
 
 f u n c t i o n   s e t A t t e m p t S y n c h r o n o u s H y d r a t i o n ( f n )   { 
     _ a t t e m p t S y n c h r o n o u s H y d r a t i o n   =   f n ; 
 } 
 f u n c t i o n   a t t e m p t S y n c h r o n o u s H y d r a t i o n ( f i b e r )   { 
     _ a t t e m p t S y n c h r o n o u s H y d r a t i o n ( f i b e r ) ; 
 } 
 v a r   a t t e m p t C o n t i n u o u s H y d r a t i o n ; 
 f u n c t i o n   s e t A t t e m p t C o n t i n u o u s H y d r a t i o n ( f n )   { 
     a t t e m p t C o n t i n u o u s H y d r a t i o n   =   f n ; 
 } 
 v a r   a t t e m p t H y d r a t i o n A t C u r r e n t P r i o r i t y ; 
 f u n c t i o n   s e t A t t e m p t H y d r a t i o n A t C u r r e n t P r i o r i t y ( f n )   { 
     a t t e m p t H y d r a t i o n A t C u r r e n t P r i o r i t y   =   f n ; 
 } 
 v a r   g e t C u r r e n t U p d a t e P r i o r i t y $ 1 ; 
 f u n c t i o n   s e t G e t C u r r e n t U p d a t e P r i o r i t y ( f n )   { 
     g e t C u r r e n t U p d a t e P r i o r i t y $ 1   =   f n ; 
 } 
 v a r   a t t e m p t H y d r a t i o n A t P r i o r i t y ; 
 f u n c t i o n   s e t A t t e m p t H y d r a t i o n A t P r i o r i t y ( f n )   { 
     a t t e m p t H y d r a t i o n A t P r i o r i t y   =   f n ; 
 }   / /   T O D O :   U p g r a d e   t h i s   d e f i n i t i o n   o n c e   w e ' r e   o n   a   n e w e r   v e r s i o n   o f   F l o w   t h a t 
 / /   h a s   t h i s   d e f i n i t i o n   b u i l t - i n . 
 
 v a r   h a s S c h e d u l e d R e p l a y A t t e m p t   =   f a l s e ;   / /   T h e   q u e u e   o f   d i s c r e t e   e v e n t s   t o   b e   r e p l a y e d . 
 
 v a r   q u e u e d D i s c r e t e E v e n t s   =   [ ] ;   / /   I n d i c a t e s   i f   a n y   c o n t i n u o u s   e v e n t   t a r g e t s   a r e   n o n - n u l l   f o r   e a r l y   b a i l o u t . 
 / /   i f   t h e   l a s t   t a r g e t   w a s   d e h y d r a t e d . 
 
 v a r   q u e u e d F o c u s   =   n u l l ; 
 v a r   q u e u e d D r a g   =   n u l l ; 
 v a r   q u e u e d M o u s e   =   n u l l ;   / /   F o r   p o i n t e r   e v e n t s   t h e r e   c a n   b e   o n e   l a t e s t   e v e n t   p e r   p o i n t e r I d . 
 
 v a r   q u e u e d P o i n t e r s   =   n e w   M a p ( ) ; 
 v a r   q u e u e d P o i n t e r C a p t u r e s   =   n e w   M a p ( ) ;   / /   W e   c o u l d   c o n s i d e r   r e p l a y i n g   s e l e c t i o n c h a n g e   a n d   t o u c h m o v e s   t o o . 
 
 v a r   q u e u e d E x p l i c i t H y d r a t i o n T a r g e t s   =   [ ] ; 
 v a r   d i s c r e t e R e p l a y a b l e E v e n t s   =   [ ' m o u s e d o w n ' ,   ' m o u s e u p ' ,   ' t o u c h c a n c e l ' ,   ' t o u c h e n d ' ,   ' t o u c h s t a r t ' ,   ' a u x c l i c k ' ,   ' d b l c l i c k ' ,   ' p o i n t e r c a n c e l ' ,   ' p o i n t e r d o w n ' ,   ' p o i n t e r u p ' ,   ' d r a g e n d ' ,   ' d r a g s t a r t ' ,   ' d r o p ' ,   ' c o m p o s i t i o n e n d ' ,   ' c o m p o s i t i o n s t a r t ' ,   ' k e y d o w n ' ,   ' k e y p r e s s ' ,   ' k e y u p ' ,   ' i n p u t ' ,   ' t e x t I n p u t ' ,   / /   I n t e n t i o n a l l y   c a m e l C a s e 
 ' c o p y ' ,   ' c u t ' ,   ' p a s t e ' ,   ' c l i c k ' ,   ' c h a n g e ' ,   ' c o n t e x t m e n u ' ,   ' r e s e t ' ,   ' s u b m i t ' ] ; 
 f u n c t i o n   i s D i s c r e t e E v e n t T h a t R e q u i r e s H y d r a t i o n ( e v e n t T y p e )   { 
     r e t u r n   d i s c r e t e R e p l a y a b l e E v e n t s . i n d e x O f ( e v e n t T y p e )   >   - 1 ; 
 } 
 
 f u n c t i o n   c r e a t e Q u e u e d R e p l a y a b l e E v e n t ( b l o c k e d O n ,   d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ,   n a t i v e E v e n t )   { 
     r e t u r n   { 
         b l o c k e d O n :   b l o c k e d O n , 
         d o m E v e n t N a m e :   d o m E v e n t N a m e , 
         e v e n t S y s t e m F l a g s :   e v e n t S y s t e m F l a g s , 
         n a t i v e E v e n t :   n a t i v e E v e n t , 
         t a r g e t C o n t a i n e r s :   [ t a r g e t C o n t a i n e r ] 
     } ; 
 } 
 
 f u n c t i o n   c l e a r I f C o n t i n u o u s E v e n t ( d o m E v e n t N a m e ,   n a t i v e E v e n t )   { 
     s w i t c h   ( d o m E v e n t N a m e )   { 
         c a s e   ' f o c u s i n ' : 
         c a s e   ' f o c u s o u t ' : 
             q u e u e d F o c u s   =   n u l l ; 
             b r e a k ; 
 
         c a s e   ' d r a g e n t e r ' : 
         c a s e   ' d r a g l e a v e ' : 
             q u e u e d D r a g   =   n u l l ; 
             b r e a k ; 
 
         c a s e   ' m o u s e o v e r ' : 
         c a s e   ' m o u s e o u t ' : 
             q u e u e d M o u s e   =   n u l l ; 
             b r e a k ; 
 
         c a s e   ' p o i n t e r o v e r ' : 
         c a s e   ' p o i n t e r o u t ' : 
             { 
                 v a r   p o i n t e r I d   =   n a t i v e E v e n t . p o i n t e r I d ; 
                 q u e u e d P o i n t e r s . d e l e t e ( p o i n t e r I d ) ; 
                 b r e a k ; 
             } 
 
         c a s e   ' g o t p o i n t e r c a p t u r e ' : 
         c a s e   ' l o s t p o i n t e r c a p t u r e ' : 
             { 
                 v a r   _ p o i n t e r I d   =   n a t i v e E v e n t . p o i n t e r I d ; 
                 q u e u e d P o i n t e r C a p t u r e s . d e l e t e ( _ p o i n t e r I d ) ; 
                 b r e a k ; 
             } 
     } 
 } 
 
 f u n c t i o n   a c c u m u l a t e O r C r e a t e C o n t i n u o u s Q u e u e d R e p l a y a b l e E v e n t ( e x i s t i n g Q u e u e d E v e n t ,   b l o c k e d O n ,   d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ,   n a t i v e E v e n t )   { 
     i f   ( e x i s t i n g Q u e u e d E v e n t   = = =   n u l l   | |   e x i s t i n g Q u e u e d E v e n t . n a t i v e E v e n t   ! = =   n a t i v e E v e n t )   { 
         v a r   q u e u e d E v e n t   =   c r e a t e Q u e u e d R e p l a y a b l e E v e n t ( b l o c k e d O n ,   d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ,   n a t i v e E v e n t ) ; 
 
         i f   ( b l o c k e d O n   ! = =   n u l l )   { 
             v a r   _ f i b e r 2   =   g e t I n s t a n c e F r o m N o d e ( b l o c k e d O n ) ; 
 
             i f   ( _ f i b e r 2   ! = =   n u l l )   { 
                 / /   A t t e m p t   t o   i n c r e a s e   t h e   p r i o r i t y   o f   t h i s   t a r g e t . 
                 a t t e m p t C o n t i n u o u s H y d r a t i o n ( _ f i b e r 2 ) ; 
             } 
         } 
 
         r e t u r n   q u e u e d E v e n t ; 
     }   / /   I f   w e   h a v e   a l r e a d y   q u e u e d   t h i s   e x a c t   e v e n t ,   t h e n   i t ' s   b e c a u s e 
     / /   t h e   d i f f e r e n t   e v e n t   s y s t e m s   h a v e   d i f f e r e n t   D O M   e v e n t   l i s t e n e r s . 
     / /   W e   c a n   a c c u m u l a t e   t h e   f l a g s ,   a n d   t h e   t a r g e t C o n t a i n e r s ,   a n d 
     / /   s t o r e   a   s i n g l e   e v e n t   t o   b e   r e p l a y e d . 
 
 
     e x i s t i n g Q u e u e d E v e n t . e v e n t S y s t e m F l a g s   | =   e v e n t S y s t e m F l a g s ; 
     v a r   t a r g e t C o n t a i n e r s   =   e x i s t i n g Q u e u e d E v e n t . t a r g e t C o n t a i n e r s ; 
 
     i f   ( t a r g e t C o n t a i n e r   ! = =   n u l l   & &   t a r g e t C o n t a i n e r s . i n d e x O f ( t a r g e t C o n t a i n e r )   = = =   - 1 )   { 
         t a r g e t C o n t a i n e r s . p u s h ( t a r g e t C o n t a i n e r ) ; 
     } 
 
     r e t u r n   e x i s t i n g Q u e u e d E v e n t ; 
 } 
 
 f u n c t i o n   q u e u e I f C o n t i n u o u s E v e n t ( b l o c k e d O n ,   d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ,   n a t i v e E v e n t )   { 
     / /   T h e s e   s e t   r e l a t e d T a r g e t   t o   n u l l   b e c a u s e   t h e   r e p l a y e d   e v e n t   w i l l   b e   t r e a t e d   a s   i f   w e 
     / /   m o v e d   f r o m   o u t s i d e   t h e   w i n d o w   ( n o   t a r g e t )   o n t o   t h e   t a r g e t   o n c e   i t   h y d r a t e s . 
     / /   I n s t e a d   o f   m u t a t i n g   w e   c o u l d   c l o n e   t h e   e v e n t . 
     s w i t c h   ( d o m E v e n t N a m e )   { 
         c a s e   ' f o c u s i n ' : 
             { 
                 v a r   f o c u s E v e n t   =   n a t i v e E v e n t ; 
                 q u e u e d F o c u s   =   a c c u m u l a t e O r C r e a t e C o n t i n u o u s Q u e u e d R e p l a y a b l e E v e n t ( q u e u e d F o c u s ,   b l o c k e d O n ,   d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ,   f o c u s E v e n t ) ; 
                 r e t u r n   t r u e ; 
             } 
 
         c a s e   ' d r a g e n t e r ' : 
             { 
                 v a r   d r a g E v e n t   =   n a t i v e E v e n t ; 
                 q u e u e d D r a g   =   a c c u m u l a t e O r C r e a t e C o n t i n u o u s Q u e u e d R e p l a y a b l e E v e n t ( q u e u e d D r a g ,   b l o c k e d O n ,   d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ,   d r a g E v e n t ) ; 
                 r e t u r n   t r u e ; 
             } 
 
         c a s e   ' m o u s e o v e r ' : 
             { 
                 v a r   m o u s e E v e n t   =   n a t i v e E v e n t ; 
                 q u e u e d M o u s e   =   a c c u m u l a t e O r C r e a t e C o n t i n u o u s Q u e u e d R e p l a y a b l e E v e n t ( q u e u e d M o u s e ,   b l o c k e d O n ,   d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ,   m o u s e E v e n t ) ; 
                 r e t u r n   t r u e ; 
             } 
 
         c a s e   ' p o i n t e r o v e r ' : 
             { 
                 v a r   p o i n t e r E v e n t   =   n a t i v e E v e n t ; 
                 v a r   p o i n t e r I d   =   p o i n t e r E v e n t . p o i n t e r I d ; 
                 q u e u e d P o i n t e r s . s e t ( p o i n t e r I d ,   a c c u m u l a t e O r C r e a t e C o n t i n u o u s Q u e u e d R e p l a y a b l e E v e n t ( q u e u e d P o i n t e r s . g e t ( p o i n t e r I d )   | |   n u l l ,   b l o c k e d O n ,   d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ,   p o i n t e r E v e n t ) ) ; 
                 r e t u r n   t r u e ; 
             } 
 
         c a s e   ' g o t p o i n t e r c a p t u r e ' : 
             { 
                 v a r   _ p o i n t e r E v e n t   =   n a t i v e E v e n t ; 
                 v a r   _ p o i n t e r I d 2   =   _ p o i n t e r E v e n t . p o i n t e r I d ; 
                 q u e u e d P o i n t e r C a p t u r e s . s e t ( _ p o i n t e r I d 2 ,   a c c u m u l a t e O r C r e a t e C o n t i n u o u s Q u e u e d R e p l a y a b l e E v e n t ( q u e u e d P o i n t e r C a p t u r e s . g e t ( _ p o i n t e r I d 2 )   | |   n u l l ,   b l o c k e d O n ,   d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ,   _ p o i n t e r E v e n t ) ) ; 
                 r e t u r n   t r u e ; 
             } 
     } 
 
     r e t u r n   f a l s e ; 
 }   / /   C h e c k   i f   t h i s   t a r g e t   i s   u n b l o c k e d .   R e t u r n s   t r u e   i f   i t ' s   u n b l o c k e d . 
 
 f u n c t i o n   a t t e m p t E x p l i c i t H y d r a t i o n T a r g e t ( q u e u e d T a r g e t )   { 
     / /   T O D O :   T h i s   f u n c t i o n   s h a r e s   a   l o t   o f   l o g i c   w i t h   f i n d I n s t a n c e B l o c k i n g E v e n t . 
     / /   T r y   t o   u n i f y   t h e m .   I t ' s   a   b i t   t r i c k y   s i n c e   i t   w o u l d   r e q u i r e   t w o   r e t u r n 
     / /   v a l u e s . 
     v a r   t a r g e t I n s t   =   g e t C l o s e s t I n s t a n c e F r o m N o d e ( q u e u e d T a r g e t . t a r g e t ) ; 
 
     i f   ( t a r g e t I n s t   ! = =   n u l l )   { 
         v a r   n e a r e s t M o u n t e d   =   g e t N e a r e s t M o u n t e d F i b e r ( t a r g e t I n s t ) ; 
 
         i f   ( n e a r e s t M o u n t e d   ! = =   n u l l )   { 
             v a r   t a g   =   n e a r e s t M o u n t e d . t a g ; 
 
             i f   ( t a g   = = =   S u s p e n s e C o m p o n e n t )   { 
                 v a r   i n s t a n c e   =   g e t S u s p e n s e I n s t a n c e F r o m F i b e r ( n e a r e s t M o u n t e d ) ; 
 
                 i f   ( i n s t a n c e   ! = =   n u l l )   { 
                     / /   W e ' r e   b l o c k e d   o n   h y d r a t i n g   t h i s   b o u n d a r y . 
                     / /   I n c r e a s e   i t s   p r i o r i t y . 
                     q u e u e d T a r g e t . b l o c k e d O n   =   i n s t a n c e ; 
                     a t t e m p t H y d r a t i o n A t P r i o r i t y ( q u e u e d T a r g e t . p r i o r i t y ,   f u n c t i o n   ( )   { 
                         a t t e m p t H y d r a t i o n A t C u r r e n t P r i o r i t y ( n e a r e s t M o u n t e d ) ; 
                     } ) ; 
                     r e t u r n ; 
                 } 
             }   e l s e   i f   ( t a g   = = =   H o s t R o o t )   { 
                 v a r   r o o t   =   n e a r e s t M o u n t e d . s t a t e N o d e ; 
 
                 i f   ( i s R o o t D e h y d r a t e d ( r o o t ) )   { 
                     q u e u e d T a r g e t . b l o c k e d O n   =   g e t C o n t a i n e r F r o m F i b e r ( n e a r e s t M o u n t e d ) ;   / /   W e   d o n ' t   c u r r e n t l y   h a v e   a   w a y   t o   i n c r e a s e   t h e   p r i o r i t y   o f 
                     / /   a   r o o t   o t h e r   t h a n   s y n c . 
 
                     r e t u r n ; 
                 } 
             } 
         } 
     } 
 
     q u e u e d T a r g e t . b l o c k e d O n   =   n u l l ; 
 } 
 
 f u n c t i o n   q u e u e E x p l i c i t H y d r a t i o n T a r g e t ( t a r g e t )   { 
     / /   T O D O :   T h i s   w i l l   r e a d   t h e   p r i o r i t y   i f   i t ' s   d i s p a t c h e d   b y   t h e   R e a c t 
     / /   e v e n t   s y s t e m   b u t   n o t   n a t i v e   e v e n t s .   S h o u l d   r e a d   w i n d o w . e v e n t . t y p e ,   l i k e 
     / /   w e   d o   f o r   u p d a t e s   ( g e t C u r r e n t E v e n t P r i o r i t y ) . 
     v a r   u p d a t e P r i o r i t y   =   g e t C u r r e n t U p d a t e P r i o r i t y $ 1 ( ) ; 
     v a r   q u e u e d T a r g e t   =   { 
         b l o c k e d O n :   n u l l , 
         t a r g e t :   t a r g e t , 
         p r i o r i t y :   u p d a t e P r i o r i t y 
     } ; 
     v a r   i   =   0 ; 
 
     f o r   ( ;   i   <   q u e u e d E x p l i c i t H y d r a t i o n T a r g e t s . l e n g t h ;   i + + )   { 
         / /   S t o p   o n c e   w e   h i t   t h e   f i r s t   t a r g e t   w i t h   l o w e r   p r i o r i t y   t h a n 
         i f   ( ! i s H i g h e r E v e n t P r i o r i t y ( u p d a t e P r i o r i t y ,   q u e u e d E x p l i c i t H y d r a t i o n T a r g e t s [ i ] . p r i o r i t y ) )   { 
             b r e a k ; 
         } 
     } 
 
     q u e u e d E x p l i c i t H y d r a t i o n T a r g e t s . s p l i c e ( i ,   0 ,   q u e u e d T a r g e t ) ; 
 
     i f   ( i   = = =   0 )   { 
         a t t e m p t E x p l i c i t H y d r a t i o n T a r g e t ( q u e u e d T a r g e t ) ; 
     } 
 } 
 
 f u n c t i o n   a t t e m p t R e p l a y C o n t i n u o u s Q u e u e d E v e n t ( q u e u e d E v e n t )   { 
     i f   ( q u e u e d E v e n t . b l o c k e d O n   ! = =   n u l l )   { 
         r e t u r n   f a l s e ; 
     } 
 
     v a r   t a r g e t C o n t a i n e r s   =   q u e u e d E v e n t . t a r g e t C o n t a i n e r s ; 
 
     w h i l e   ( t a r g e t C o n t a i n e r s . l e n g t h   >   0 )   { 
         v a r   t a r g e t C o n t a i n e r   =   t a r g e t C o n t a i n e r s [ 0 ] ; 
         v a r   n e x t B l o c k e d O n   =   f i n d I n s t a n c e B l o c k i n g E v e n t ( q u e u e d E v e n t . d o m E v e n t N a m e ,   q u e u e d E v e n t . e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ,   q u e u e d E v e n t . n a t i v e E v e n t ) ; 
 
         i f   ( n e x t B l o c k e d O n   = = =   n u l l )   { 
             { 
                 v a r   n a t i v e E v e n t   =   q u e u e d E v e n t . n a t i v e E v e n t ; 
                 v a r   n a t i v e E v e n t C l o n e   =   n e w   n a t i v e E v e n t . c o n s t r u c t o r ( n a t i v e E v e n t . t y p e ,   n a t i v e E v e n t ) ; 
                 s e t R e p l a y i n g E v e n t ( n a t i v e E v e n t C l o n e ) ; 
                 n a t i v e E v e n t . t a r g e t . d i s p a t c h E v e n t ( n a t i v e E v e n t C l o n e ) ; 
                 r e s e t R e p l a y i n g E v e n t ( ) ; 
             } 
         }   e l s e   { 
             / /   W e ' r e   s t i l l   b l o c k e d .   T r y   a g a i n   l a t e r . 
             v a r   _ f i b e r 3   =   g e t I n s t a n c e F r o m N o d e ( n e x t B l o c k e d O n ) ; 
 
             i f   ( _ f i b e r 3   ! = =   n u l l )   { 
                 a t t e m p t C o n t i n u o u s H y d r a t i o n ( _ f i b e r 3 ) ; 
             } 
 
             q u e u e d E v e n t . b l o c k e d O n   =   n e x t B l o c k e d O n ; 
             r e t u r n   f a l s e ; 
         }   / /   T h i s   t a r g e t   c o n t a i n e r   w a s   s u c c e s s f u l l y   d i s p a t c h e d .   T r y   t h e   n e x t . 
 
 
         t a r g e t C o n t a i n e r s . s h i f t ( ) ; 
     } 
 
     r e t u r n   t r u e ; 
 } 
 
 f u n c t i o n   a t t e m p t R e p l a y C o n t i n u o u s Q u e u e d E v e n t I n M a p ( q u e u e d E v e n t ,   k e y ,   m a p )   { 
     i f   ( a t t e m p t R e p l a y C o n t i n u o u s Q u e u e d E v e n t ( q u e u e d E v e n t ) )   { 
         m a p . d e l e t e ( k e y ) ; 
     } 
 } 
 
 f u n c t i o n   r e p l a y U n b l o c k e d E v e n t s ( )   { 
     h a s S c h e d u l e d R e p l a y A t t e m p t   =   f a l s e ; 
 
 
     i f   ( q u e u e d F o c u s   ! = =   n u l l   & &   a t t e m p t R e p l a y C o n t i n u o u s Q u e u e d E v e n t ( q u e u e d F o c u s ) )   { 
         q u e u e d F o c u s   =   n u l l ; 
     } 
 
     i f   ( q u e u e d D r a g   ! = =   n u l l   & &   a t t e m p t R e p l a y C o n t i n u o u s Q u e u e d E v e n t ( q u e u e d D r a g ) )   { 
         q u e u e d D r a g   =   n u l l ; 
     } 
 
     i f   ( q u e u e d M o u s e   ! = =   n u l l   & &   a t t e m p t R e p l a y C o n t i n u o u s Q u e u e d E v e n t ( q u e u e d M o u s e ) )   { 
         q u e u e d M o u s e   =   n u l l ; 
     } 
 
     q u e u e d P o i n t e r s . f o r E a c h ( a t t e m p t R e p l a y C o n t i n u o u s Q u e u e d E v e n t I n M a p ) ; 
     q u e u e d P o i n t e r C a p t u r e s . f o r E a c h ( a t t e m p t R e p l a y C o n t i n u o u s Q u e u e d E v e n t I n M a p ) ; 
 } 
 
 f u n c t i o n   s c h e d u l e C a l l b a c k I f U n b l o c k e d ( q u e u e d E v e n t ,   u n b l o c k e d )   { 
     i f   ( q u e u e d E v e n t . b l o c k e d O n   = = =   u n b l o c k e d )   { 
         q u e u e d E v e n t . b l o c k e d O n   =   n u l l ; 
 
         i f   ( ! h a s S c h e d u l e d R e p l a y A t t e m p t )   { 
             h a s S c h e d u l e d R e p l a y A t t e m p t   =   t r u e ;   / /   S c h e d u l e   a   c a l l b a c k   t o   a t t e m p t   r e p l a y i n g   a s   m a n y   e v e n t s   a s   a r e 
             / /   n o w   u n b l o c k e d .   T h i s   f i r s t   m i g h t   n o t   a c t u a l l y   b e   u n b l o c k e d   y e t . 
             / /   W e   c o u l d   c h e c k   i t   e a r l y   t o   a v o i d   s c h e d u l i n g   a n   u n n e c e s s a r y   c a l l b a c k . 
 
             S c h e d u l e r . u n s t a b l e _ s c h e d u l e C a l l b a c k ( S c h e d u l e r . u n s t a b l e _ N o r m a l P r i o r i t y ,   r e p l a y U n b l o c k e d E v e n t s ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   r e t r y I f B l o c k e d O n ( u n b l o c k e d )   { 
     / /   M a r k   a n y t h i n g   t h a t   w a s   b l o c k e d   o n   t h i s   a s   n o   l o n g e r   b l o c k e d 
     / /   a n d   e l i g i b l e   f o r   a   r e p l a y . 
     i f   ( q u e u e d D i s c r e t e E v e n t s . l e n g t h   >   0 )   { 
         s c h e d u l e C a l l b a c k I f U n b l o c k e d ( q u e u e d D i s c r e t e E v e n t s [ 0 ] ,   u n b l o c k e d ) ;   / /   T h i s   i s   a   e x p o n e n t i a l   s e a r c h   f o r   e a c h   b o u n d a r y   t h a t   c o m m i t s .   I   t h i n k   i t ' s 
         / /   w o r t h   i t   b e c a u s e   w e   e x p e c t   v e r y   f e w   d i s c r e t e   e v e n t s   t o   q u e u e   u p   a n d   o n c e 
         / /   w e   a r e   a c t u a l l y   f u l l y   u n b l o c k e d   i t   w i l l   b e   f a s t   t o   r e p l a y   t h e m . 
 
         f o r   ( v a r   i   =   1 ;   i   <   q u e u e d D i s c r e t e E v e n t s . l e n g t h ;   i + + )   { 
             v a r   q u e u e d E v e n t   =   q u e u e d D i s c r e t e E v e n t s [ i ] ; 
 
             i f   ( q u e u e d E v e n t . b l o c k e d O n   = = =   u n b l o c k e d )   { 
                 q u e u e d E v e n t . b l o c k e d O n   =   n u l l ; 
             } 
         } 
     } 
 
     i f   ( q u e u e d F o c u s   ! = =   n u l l )   { 
         s c h e d u l e C a l l b a c k I f U n b l o c k e d ( q u e u e d F o c u s ,   u n b l o c k e d ) ; 
     } 
 
     i f   ( q u e u e d D r a g   ! = =   n u l l )   { 
         s c h e d u l e C a l l b a c k I f U n b l o c k e d ( q u e u e d D r a g ,   u n b l o c k e d ) ; 
     } 
 
     i f   ( q u e u e d M o u s e   ! = =   n u l l )   { 
         s c h e d u l e C a l l b a c k I f U n b l o c k e d ( q u e u e d M o u s e ,   u n b l o c k e d ) ; 
     } 
 
     v a r   u n b l o c k   =   f u n c t i o n   ( q u e u e d E v e n t )   { 
         r e t u r n   s c h e d u l e C a l l b a c k I f U n b l o c k e d ( q u e u e d E v e n t ,   u n b l o c k e d ) ; 
     } ; 
 
     q u e u e d P o i n t e r s . f o r E a c h ( u n b l o c k ) ; 
     q u e u e d P o i n t e r C a p t u r e s . f o r E a c h ( u n b l o c k ) ; 
 
     f o r   ( v a r   _ i   =   0 ;   _ i   <   q u e u e d E x p l i c i t H y d r a t i o n T a r g e t s . l e n g t h ;   _ i + + )   { 
         v a r   q u e u e d T a r g e t   =   q u e u e d E x p l i c i t H y d r a t i o n T a r g e t s [ _ i ] ; 
 
         i f   ( q u e u e d T a r g e t . b l o c k e d O n   = = =   u n b l o c k e d )   { 
             q u e u e d T a r g e t . b l o c k e d O n   =   n u l l ; 
         } 
     } 
 
     w h i l e   ( q u e u e d E x p l i c i t H y d r a t i o n T a r g e t s . l e n g t h   >   0 )   { 
         v a r   n e x t E x p l i c i t T a r g e t   =   q u e u e d E x p l i c i t H y d r a t i o n T a r g e t s [ 0 ] ; 
 
         i f   ( n e x t E x p l i c i t T a r g e t . b l o c k e d O n   ! = =   n u l l )   { 
             / /   W e ' r e   s t i l l   b l o c k e d . 
             b r e a k ; 
         }   e l s e   { 
             a t t e m p t E x p l i c i t H y d r a t i o n T a r g e t ( n e x t E x p l i c i t T a r g e t ) ; 
 
             i f   ( n e x t E x p l i c i t T a r g e t . b l o c k e d O n   = = =   n u l l )   { 
                 / /   W e ' r e   u n b l o c k e d . 
                 q u e u e d E x p l i c i t H y d r a t i o n T a r g e t s . s h i f t ( ) ; 
             } 
         } 
     } 
 } 
 
 v a r   R e a c t C u r r e n t B a t c h C o n f i g   =   R e a c t S h a r e d I n t e r n a l s . R e a c t C u r r e n t B a t c h C o n f i g ;   / /   T O D O :   c a n   w e   s t o p   e x p o r t i n g   t h e s e ? 
 
 v a r   _ e n a b l e d   =   t r u e ;   / /   T h i s   i s   e x p o r t e d   i n   F B   b u i l d s   f o r   u s e   b y   l e g a c y   F B   l a y e r   i n f r a . 
 / /   W e ' d   l i k e   t o   r e m o v e   t h i s   b u t   i t ' s   n o t   c l e a r   i f   t h i s   i s   s a f e . 
 
 f u n c t i o n   s e t E n a b l e d ( e n a b l e d )   { 
     _ e n a b l e d   =   ! ! e n a b l e d ; 
 } 
 f u n c t i o n   i s E n a b l e d ( )   { 
     r e t u r n   _ e n a b l e d ; 
 } 
 f u n c t i o n   c r e a t e E v e n t L i s t e n e r W r a p p e r W i t h P r i o r i t y ( t a r g e t C o n t a i n e r ,   d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s )   { 
     v a r   e v e n t P r i o r i t y   =   g e t E v e n t P r i o r i t y ( d o m E v e n t N a m e ) ; 
     v a r   l i s t e n e r W r a p p e r ; 
 
     s w i t c h   ( e v e n t P r i o r i t y )   { 
         c a s e   D i s c r e t e E v e n t P r i o r i t y : 
             l i s t e n e r W r a p p e r   =   d i s p a t c h D i s c r e t e E v e n t ; 
             b r e a k ; 
 
         c a s e   C o n t i n u o u s E v e n t P r i o r i t y : 
             l i s t e n e r W r a p p e r   =   d i s p a t c h C o n t i n u o u s E v e n t ; 
             b r e a k ; 
 
         c a s e   D e f a u l t E v e n t P r i o r i t y : 
         d e f a u l t : 
             l i s t e n e r W r a p p e r   =   d i s p a t c h E v e n t ; 
             b r e a k ; 
     } 
 
     r e t u r n   l i s t e n e r W r a p p e r . b i n d ( n u l l ,   d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ) ; 
 } 
 
 f u n c t i o n   d i s p a t c h D i s c r e t e E v e n t ( d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   c o n t a i n e r ,   n a t i v e E v e n t )   { 
     v a r   p r e v i o u s P r i o r i t y   =   g e t C u r r e n t U p d a t e P r i o r i t y ( ) ; 
     v a r   p r e v T r a n s i t i o n   =   R e a c t C u r r e n t B a t c h C o n f i g . t r a n s i t i o n ; 
     R e a c t C u r r e n t B a t c h C o n f i g . t r a n s i t i o n   =   n u l l ; 
 
     t r y   { 
         s e t C u r r e n t U p d a t e P r i o r i t y ( D i s c r e t e E v e n t P r i o r i t y ) ; 
         d i s p a t c h E v e n t ( d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   c o n t a i n e r ,   n a t i v e E v e n t ) ; 
     }   f i n a l l y   { 
         s e t C u r r e n t U p d a t e P r i o r i t y ( p r e v i o u s P r i o r i t y ) ; 
         R e a c t C u r r e n t B a t c h C o n f i g . t r a n s i t i o n   =   p r e v T r a n s i t i o n ; 
     } 
 } 
 
 f u n c t i o n   d i s p a t c h C o n t i n u o u s E v e n t ( d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   c o n t a i n e r ,   n a t i v e E v e n t )   { 
     v a r   p r e v i o u s P r i o r i t y   =   g e t C u r r e n t U p d a t e P r i o r i t y ( ) ; 
     v a r   p r e v T r a n s i t i o n   =   R e a c t C u r r e n t B a t c h C o n f i g . t r a n s i t i o n ; 
     R e a c t C u r r e n t B a t c h C o n f i g . t r a n s i t i o n   =   n u l l ; 
 
     t r y   { 
         s e t C u r r e n t U p d a t e P r i o r i t y ( C o n t i n u o u s E v e n t P r i o r i t y ) ; 
         d i s p a t c h E v e n t ( d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   c o n t a i n e r ,   n a t i v e E v e n t ) ; 
     }   f i n a l l y   { 
         s e t C u r r e n t U p d a t e P r i o r i t y ( p r e v i o u s P r i o r i t y ) ; 
         R e a c t C u r r e n t B a t c h C o n f i g . t r a n s i t i o n   =   p r e v T r a n s i t i o n ; 
     } 
 } 
 
 f u n c t i o n   d i s p a t c h E v e n t ( d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ,   n a t i v e E v e n t )   { 
     i f   ( ! _ e n a b l e d )   { 
         r e t u r n ; 
     } 
 
     { 
         d i s p a t c h E v e n t W i t h E n a b l e C a p t u r e P h a s e S e l e c t i v e H y d r a t i o n W i t h o u t D i s c r e t e E v e n t R e p l a y ( d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ,   n a t i v e E v e n t ) ; 
     } 
 } 
 
 f u n c t i o n   d i s p a t c h E v e n t W i t h E n a b l e C a p t u r e P h a s e S e l e c t i v e H y d r a t i o n W i t h o u t D i s c r e t e E v e n t R e p l a y ( d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ,   n a t i v e E v e n t )   { 
     v a r   b l o c k e d O n   =   f i n d I n s t a n c e B l o c k i n g E v e n t ( d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ,   n a t i v e E v e n t ) ; 
 
     i f   ( b l o c k e d O n   = = =   n u l l )   { 
         d i s p a t c h E v e n t F o r P l u g i n E v e n t S y s t e m ( d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   n a t i v e E v e n t ,   r e t u r n _ t a r g e t I n s t ,   t a r g e t C o n t a i n e r ) ; 
         c l e a r I f C o n t i n u o u s E v e n t ( d o m E v e n t N a m e ,   n a t i v e E v e n t ) ; 
         r e t u r n ; 
     } 
 
     i f   ( q u e u e I f C o n t i n u o u s E v e n t ( b l o c k e d O n ,   d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ,   n a t i v e E v e n t ) )   { 
         n a t i v e E v e n t . s t o p P r o p a g a t i o n ( ) ; 
         r e t u r n ; 
     }   / /   W e   n e e d   t o   c l e a r   o n l y   i f   w e   d i d n ' t   q u e u e   b e c a u s e 
     / /   q u e u e i n g   i s   a c c u m u l a t i v e . 
 
 
     c l e a r I f C o n t i n u o u s E v e n t ( d o m E v e n t N a m e ,   n a t i v e E v e n t ) ; 
 
     i f   ( e v e n t S y s t e m F l a g s   &   I S _ C A P T U R E _ P H A S E   & &   i s D i s c r e t e E v e n t T h a t R e q u i r e s H y d r a t i o n ( d o m E v e n t N a m e ) )   { 
         w h i l e   ( b l o c k e d O n   ! = =   n u l l )   { 
             v a r   f i b e r   =   g e t I n s t a n c e F r o m N o d e ( b l o c k e d O n ) ; 
 
             i f   ( f i b e r   ! = =   n u l l )   { 
                 a t t e m p t S y n c h r o n o u s H y d r a t i o n ( f i b e r ) ; 
             } 
 
             v a r   n e x t B l o c k e d O n   =   f i n d I n s t a n c e B l o c k i n g E v e n t ( d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ,   n a t i v e E v e n t ) ; 
 
             i f   ( n e x t B l o c k e d O n   = = =   n u l l )   { 
                 d i s p a t c h E v e n t F o r P l u g i n E v e n t S y s t e m ( d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   n a t i v e E v e n t ,   r e t u r n _ t a r g e t I n s t ,   t a r g e t C o n t a i n e r ) ; 
             } 
 
             i f   ( n e x t B l o c k e d O n   = = =   b l o c k e d O n )   { 
                 b r e a k ; 
             } 
 
             b l o c k e d O n   =   n e x t B l o c k e d O n ; 
         } 
 
         i f   ( b l o c k e d O n   ! = =   n u l l )   { 
             n a t i v e E v e n t . s t o p P r o p a g a t i o n ( ) ; 
         } 
 
         r e t u r n ; 
     }   / /   T h i s   i s   n o t   r e p l a y a b l e   s o   w e ' l l   i n v o k e   i t   b u t   w i t h o u t   a   t a r g e t , 
     / /   i n   c a s e   t h e   e v e n t   s y s t e m   n e e d s   t o   t r a c e   i t . 
 
 
     d i s p a t c h E v e n t F o r P l u g i n E v e n t S y s t e m ( d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   n a t i v e E v e n t ,   n u l l ,   t a r g e t C o n t a i n e r ) ; 
 } 
 
 v a r   r e t u r n _ t a r g e t I n s t   =   n u l l ;   / /   R e t u r n s   a   S u s p e n s e I n s t a n c e   o r   C o n t a i n e r   i f   i t ' s   b l o c k e d . 
 / /   T h e   r e t u r n _ t a r g e t I n s t   f i e l d   a b o v e   i s   c o n c e p t u a l l y   p a r t   o f   t h e   r e t u r n   v a l u e . 
 
 f u n c t i o n   f i n d I n s t a n c e B l o c k i n g E v e n t ( d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r ,   n a t i v e E v e n t )   { 
     / /   T O D O :   W a r n   i f   _ e n a b l e d   i s   f a l s e . 
     r e t u r n _ t a r g e t I n s t   =   n u l l ; 
     v a r   n a t i v e E v e n t T a r g e t   =   g e t E v e n t T a r g e t ( n a t i v e E v e n t ) ; 
     v a r   t a r g e t I n s t   =   g e t C l o s e s t I n s t a n c e F r o m N o d e ( n a t i v e E v e n t T a r g e t ) ; 
 
     i f   ( t a r g e t I n s t   ! = =   n u l l )   { 
         v a r   n e a r e s t M o u n t e d   =   g e t N e a r e s t M o u n t e d F i b e r ( t a r g e t I n s t ) ; 
 
         i f   ( n e a r e s t M o u n t e d   = = =   n u l l )   { 
             / /   T h i s   t r e e   h a s   b e e n   u n m o u n t e d   a l r e a d y .   D i s p a t c h   w i t h o u t   a   t a r g e t . 
             t a r g e t I n s t   =   n u l l ; 
         }   e l s e   { 
             v a r   t a g   =   n e a r e s t M o u n t e d . t a g ; 
 
             i f   ( t a g   = = =   S u s p e n s e C o m p o n e n t )   { 
                 v a r   i n s t a n c e   =   g e t S u s p e n s e I n s t a n c e F r o m F i b e r ( n e a r e s t M o u n t e d ) ; 
 
                 i f   ( i n s t a n c e   ! = =   n u l l )   { 
                     / /   Q u e u e   t h e   e v e n t   t o   b e   r e p l a y e d   l a t e r .   A b o r t   d i s p a t c h i n g   s i n c e   w e 
                     / /   d o n ' t   w a n t   t h i s   e v e n t   d i s p a t c h e d   t w i c e   t h r o u g h   t h e   e v e n t   s y s t e m . 
                     / /   T O D O :   I f   t h i s   i s   t h e   f i r s t   d i s c r e t e   e v e n t   i n   t h e   q u e u e .   S c h e d u l e   a n   i n c r e a s e d 
                     / /   p r i o r i t y   f o r   t h i s   b o u n d a r y . 
                     r e t u r n   i n s t a n c e ; 
                 }   / /   T h i s   s h o u l d n ' t   h a p p e n ,   s o m e t h i n g   w e n t   w r o n g   b u t   t o   a v o i d   b l o c k i n g 
                 / /   t h e   w h o l e   s y s t e m ,   d i s p a t c h   t h e   e v e n t   w i t h o u t   a   t a r g e t . 
                 / /   T O D O :   W a r n . 
 
 
                 t a r g e t I n s t   =   n u l l ; 
             }   e l s e   i f   ( t a g   = = =   H o s t R o o t )   { 
                 v a r   r o o t   =   n e a r e s t M o u n t e d . s t a t e N o d e ; 
 
                 i f   ( i s R o o t D e h y d r a t e d ( r o o t ) )   { 
                     / /   I f   t h i s   h a p p e n s   d u r i n g   a   r e p l a y   s o m e t h i n g   w e n t   w r o n g   a n d   i t   m i g h t   b l o c k 
                     / /   t h e   w h o l e   s y s t e m . 
                     r e t u r n   g e t C o n t a i n e r F r o m F i b e r ( n e a r e s t M o u n t e d ) ; 
                 } 
 
                 t a r g e t I n s t   =   n u l l ; 
             }   e l s e   i f   ( n e a r e s t M o u n t e d   ! = =   t a r g e t I n s t )   { 
                 / /   I f   w e   g e t   a n   e v e n t   ( e x :   i m g   o n l o a d )   b e f o r e   c o m m i t t i n g   t h a t 
                 / /   c o m p o n e n t ' s   m o u n t ,   i g n o r e   i t   f o r   n o w   ( t h a t   i s ,   t r e a t   i t   a s   i f   i t   w a s   a n 
                 / /   e v e n t   o n   a   n o n - R e a c t   t r e e ) .   W e   m i g h t   a l s o   c o n s i d e r   q u e u e i n g   e v e n t s   a n d 
                 / /   d i s p a t c h i n g   t h e m   a f t e r   t h e   m o u n t . 
                 t a r g e t I n s t   =   n u l l ; 
             } 
         } 
     } 
 
     r e t u r n _ t a r g e t I n s t   =   t a r g e t I n s t ;   / /   W e ' r e   n o t   b l o c k e d   o n   a n y t h i n g . 
 
     r e t u r n   n u l l ; 
 } 
 f u n c t i o n   g e t E v e n t P r i o r i t y ( d o m E v e n t N a m e )   { 
     s w i t c h   ( d o m E v e n t N a m e )   { 
         / /   U s e d   b y   S i m p l e E v e n t P l u g i n : 
         c a s e   ' c a n c e l ' : 
         c a s e   ' c l i c k ' : 
         c a s e   ' c l o s e ' : 
         c a s e   ' c o n t e x t m e n u ' : 
         c a s e   ' c o p y ' : 
         c a s e   ' c u t ' : 
         c a s e   ' a u x c l i c k ' : 
         c a s e   ' d b l c l i c k ' : 
         c a s e   ' d r a g e n d ' : 
         c a s e   ' d r a g s t a r t ' : 
         c a s e   ' d r o p ' : 
         c a s e   ' f o c u s i n ' : 
         c a s e   ' f o c u s o u t ' : 
         c a s e   ' i n p u t ' : 
         c a s e   ' i n v a l i d ' : 
         c a s e   ' k e y d o w n ' : 
         c a s e   ' k e y p r e s s ' : 
         c a s e   ' k e y u p ' : 
         c a s e   ' m o u s e d o w n ' : 
         c a s e   ' m o u s e u p ' : 
         c a s e   ' p a s t e ' : 
         c a s e   ' p a u s e ' : 
         c a s e   ' p l a y ' : 
         c a s e   ' p o i n t e r c a n c e l ' : 
         c a s e   ' p o i n t e r d o w n ' : 
         c a s e   ' p o i n t e r u p ' : 
         c a s e   ' r a t e c h a n g e ' : 
         c a s e   ' r e s e t ' : 
         c a s e   ' r e s i z e ' : 
         c a s e   ' s e e k e d ' : 
         c a s e   ' s u b m i t ' : 
         c a s e   ' t o u c h c a n c e l ' : 
         c a s e   ' t o u c h e n d ' : 
         c a s e   ' t o u c h s t a r t ' : 
         c a s e   ' v o l u m e c h a n g e ' :   / /   U s e d   b y   p o l y f i l l s : 
         / /   e s l i n t - d i s a b l e - n e x t - l i n e   n o - f a l l t h r o u g h 
 
         c a s e   ' c h a n g e ' : 
         c a s e   ' s e l e c t i o n c h a n g e ' : 
         c a s e   ' t e x t I n p u t ' : 
         c a s e   ' c o m p o s i t i o n s t a r t ' : 
         c a s e   ' c o m p o s i t i o n e n d ' : 
         c a s e   ' c o m p o s i t i o n u p d a t e ' :   / /   O n l y   e n a b l e C r e a t e E v e n t H a n d l e A P I : 
         / /   e s l i n t - d i s a b l e - n e x t - l i n e   n o - f a l l t h r o u g h 
 
         c a s e   ' b e f o r e b l u r ' : 
         c a s e   ' a f t e r b l u r ' :   / /   N o t   u s e d   b y   R e a c t   b u t   c o u l d   b e   b y   u s e r   c o d e : 
         / /   e s l i n t - d i s a b l e - n e x t - l i n e   n o - f a l l t h r o u g h 
 
         c a s e   ' b e f o r e i n p u t ' : 
         c a s e   ' b l u r ' : 
         c a s e   ' f u l l s c r e e n c h a n g e ' : 
         c a s e   ' f o c u s ' : 
         c a s e   ' h a s h c h a n g e ' : 
         c a s e   ' p o p s t a t e ' : 
         c a s e   ' s e l e c t ' : 
         c a s e   ' s e l e c t s t a r t ' : 
             r e t u r n   D i s c r e t e E v e n t P r i o r i t y ; 
 
         c a s e   ' d r a g ' : 
         c a s e   ' d r a g e n t e r ' : 
         c a s e   ' d r a g e x i t ' : 
         c a s e   ' d r a g l e a v e ' : 
         c a s e   ' d r a g o v e r ' : 
         c a s e   ' m o u s e m o v e ' : 
         c a s e   ' m o u s e o u t ' : 
         c a s e   ' m o u s e o v e r ' : 
         c a s e   ' p o i n t e r m o v e ' : 
         c a s e   ' p o i n t e r o u t ' : 
         c a s e   ' p o i n t e r o v e r ' : 
         c a s e   ' s c r o l l ' : 
         c a s e   ' t o g g l e ' : 
         c a s e   ' t o u c h m o v e ' : 
         c a s e   ' w h e e l ' :   / /   N o t   u s e d   b y   R e a c t   b u t   c o u l d   b e   b y   u s e r   c o d e : 
         / /   e s l i n t - d i s a b l e - n e x t - l i n e   n o - f a l l t h r o u g h 
 
         c a s e   ' m o u s e e n t e r ' : 
         c a s e   ' m o u s e l e a v e ' : 
         c a s e   ' p o i n t e r e n t e r ' : 
         c a s e   ' p o i n t e r l e a v e ' : 
             r e t u r n   C o n t i n u o u s E v e n t P r i o r i t y ; 
 
         c a s e   ' m e s s a g e ' : 
             { 
                 / /   W e   m i g h t   b e   i n   t h e   S c h e d u l e r   c a l l b a c k . 
                 / /   E v e n t u a l l y   t h i s   m e c h a n i s m   w i l l   b e   r e p l a c e d   b y   a   c h e c k 
                 / /   o f   t h e   c u r r e n t   p r i o r i t y   o n   t h e   n a t i v e   s c h e d u l e r . 
                 v a r   s c h e d u l e r P r i o r i t y   =   g e t C u r r e n t P r i o r i t y L e v e l ( ) ; 
 
                 s w i t c h   ( s c h e d u l e r P r i o r i t y )   { 
                     c a s e   I m m e d i a t e P r i o r i t y : 
                         r e t u r n   D i s c r e t e E v e n t P r i o r i t y ; 
 
                     c a s e   U s e r B l o c k i n g P r i o r i t y : 
                         r e t u r n   C o n t i n u o u s E v e n t P r i o r i t y ; 
 
                     c a s e   N o r m a l P r i o r i t y : 
                     c a s e   L o w P r i o r i t y : 
                         / /   T O D O :   H a n d l e   L o w S c h e d u l e r P r i o r i t y ,   s o m e h o w .   M a y b e   t h e   s a m e   l a n e   a s   h y d r a t i o n . 
                         r e t u r n   D e f a u l t E v e n t P r i o r i t y ; 
 
                     c a s e   I d l e P r i o r i t y : 
                         r e t u r n   I d l e E v e n t P r i o r i t y ; 
 
                     d e f a u l t : 
                         r e t u r n   D e f a u l t E v e n t P r i o r i t y ; 
                 } 
             } 
 
         d e f a u l t : 
             r e t u r n   D e f a u l t E v e n t P r i o r i t y ; 
     } 
 } 
 
 f u n c t i o n   a d d E v e n t B u b b l e L i s t e n e r ( t a r g e t ,   e v e n t T y p e ,   l i s t e n e r )   { 
     t a r g e t . a d d E v e n t L i s t e n e r ( e v e n t T y p e ,   l i s t e n e r ,   f a l s e ) ; 
     r e t u r n   l i s t e n e r ; 
 } 
 f u n c t i o n   a d d E v e n t C a p t u r e L i s t e n e r ( t a r g e t ,   e v e n t T y p e ,   l i s t e n e r )   { 
     t a r g e t . a d d E v e n t L i s t e n e r ( e v e n t T y p e ,   l i s t e n e r ,   t r u e ) ; 
     r e t u r n   l i s t e n e r ; 
 } 
 f u n c t i o n   a d d E v e n t C a p t u r e L i s t e n e r W i t h P a s s i v e F l a g ( t a r g e t ,   e v e n t T y p e ,   l i s t e n e r ,   p a s s i v e )   { 
     t a r g e t . a d d E v e n t L i s t e n e r ( e v e n t T y p e ,   l i s t e n e r ,   { 
         c a p t u r e :   t r u e , 
         p a s s i v e :   p a s s i v e 
     } ) ; 
     r e t u r n   l i s t e n e r ; 
 } 
 f u n c t i o n   a d d E v e n t B u b b l e L i s t e n e r W i t h P a s s i v e F l a g ( t a r g e t ,   e v e n t T y p e ,   l i s t e n e r ,   p a s s i v e )   { 
     t a r g e t . a d d E v e n t L i s t e n e r ( e v e n t T y p e ,   l i s t e n e r ,   { 
         p a s s i v e :   p a s s i v e 
     } ) ; 
     r e t u r n   l i s t e n e r ; 
 } 
 
 / * * 
   *   T h e s e   v a r i a b l e s   s t o r e   i n f o r m a t i o n   a b o u t   t e x t   c o n t e n t   o f   a   t a r g e t   n o d e , 
   *   a l l o w i n g   c o m p a r i s o n   o f   c o n t e n t   b e f o r e   a n d   a f t e r   a   g i v e n   e v e n t . 
   * 
   *   I d e n t i f y   t h e   n o d e   w h e r e   s e l e c t i o n   c u r r e n t l y   b e g i n s ,   t h e n   o b s e r v e 
   *   b o t h   i t s   t e x t   c o n t e n t   a n d   i t s   c u r r e n t   p o s i t i o n   i n   t h e   D O M .   S i n c e   t h e 
   *   b r o w s e r   m a y   n a t i v e l y   r e p l a c e   t h e   t a r g e t   n o d e   d u r i n g   c o m p o s i t i o n ,   w e   c a n 
   *   u s e   i t s   p o s i t i o n   t o   f i n d   i t s   r e p l a c e m e n t . 
   * 
   * 
   * / 
 v a r   r o o t   =   n u l l ; 
 v a r   s t a r t T e x t   =   n u l l ; 
 v a r   f a l l b a c k T e x t   =   n u l l ; 
 f u n c t i o n   i n i t i a l i z e ( n a t i v e E v e n t T a r g e t )   { 
     r o o t   =   n a t i v e E v e n t T a r g e t ; 
     s t a r t T e x t   =   g e t T e x t ( ) ; 
     r e t u r n   t r u e ; 
 } 
 f u n c t i o n   r e s e t ( )   { 
     r o o t   =   n u l l ; 
     s t a r t T e x t   =   n u l l ; 
     f a l l b a c k T e x t   =   n u l l ; 
 } 
 f u n c t i o n   g e t D a t a ( )   { 
     i f   ( f a l l b a c k T e x t )   { 
         r e t u r n   f a l l b a c k T e x t ; 
     } 
 
     v a r   s t a r t ; 
     v a r   s t a r t V a l u e   =   s t a r t T e x t ; 
     v a r   s t a r t L e n g t h   =   s t a r t V a l u e . l e n g t h ; 
     v a r   e n d ; 
     v a r   e n d V a l u e   =   g e t T e x t ( ) ; 
     v a r   e n d L e n g t h   =   e n d V a l u e . l e n g t h ; 
 
     f o r   ( s t a r t   =   0 ;   s t a r t   <   s t a r t L e n g t h ;   s t a r t + + )   { 
         i f   ( s t a r t V a l u e [ s t a r t ]   ! = =   e n d V a l u e [ s t a r t ] )   { 
             b r e a k ; 
         } 
     } 
 
     v a r   m i n E n d   =   s t a r t L e n g t h   -   s t a r t ; 
 
     f o r   ( e n d   =   1 ;   e n d   < =   m i n E n d ;   e n d + + )   { 
         i f   ( s t a r t V a l u e [ s t a r t L e n g t h   -   e n d ]   ! = =   e n d V a l u e [ e n d L e n g t h   -   e n d ] )   { 
             b r e a k ; 
         } 
     } 
 
     v a r   s l i c e T a i l   =   e n d   >   1   ?   1   -   e n d   :   u n d e f i n e d ; 
     f a l l b a c k T e x t   =   e n d V a l u e . s l i c e ( s t a r t ,   s l i c e T a i l ) ; 
     r e t u r n   f a l l b a c k T e x t ; 
 } 
 f u n c t i o n   g e t T e x t ( )   { 
     i f   ( ' v a l u e '   i n   r o o t )   { 
         r e t u r n   r o o t . v a l u e ; 
     } 
 
     r e t u r n   r o o t . t e x t C o n t e n t ; 
 } 
 
 / * * 
   *   ` c h a r C o d e `   r e p r e s e n t s   t h e   a c t u a l   " c h a r a c t e r   c o d e "   a n d   i s   s a f e   t o   u s e   w i t h 
   *   ` S t r i n g . f r o m C h a r C o d e ` .   A s   s u c h ,   o n l y   k e y s   t h a t   c o r r e s p o n d   t o   p r i n t a b l e 
   *   c h a r a c t e r s   p r o d u c e   a   v a l i d   ` c h a r C o d e ` ,   t h e   o n l y   e x c e p t i o n   t o   t h i s   i s   E n t e r . 
   *   T h e   T a b - k e y   i s   c o n s i d e r e d   n o n - p r i n t a b l e   a n d   d o e s   n o t   h a v e   a   ` c h a r C o d e ` , 
   *   p r e s u m a b l y   b e c a u s e   i t   d o e s   n o t   p r o d u c e   a   t a b - c h a r a c t e r   i n   b r o w s e r s . 
   * 
   *   @ p a r a m   { o b j e c t }   n a t i v e E v e n t   N a t i v e   b r o w s e r   e v e n t . 
   *   @ r e t u r n   { n u m b e r }   N o r m a l i z e d   ` c h a r C o d e `   p r o p e r t y . 
   * / 
 f u n c t i o n   g e t E v e n t C h a r C o d e ( n a t i v e E v e n t )   { 
     v a r   c h a r C o d e ; 
     v a r   k e y C o d e   =   n a t i v e E v e n t . k e y C o d e ; 
 
     i f   ( ' c h a r C o d e '   i n   n a t i v e E v e n t )   { 
         c h a r C o d e   =   n a t i v e E v e n t . c h a r C o d e ;   / /   F F   d o e s   n o t   s e t   ` c h a r C o d e `   f o r   t h e   E n t e r - k e y ,   c h e c k   a g a i n s t   ` k e y C o d e ` . 
 
         i f   ( c h a r C o d e   = = =   0   & &   k e y C o d e   = = =   1 3 )   { 
             c h a r C o d e   =   1 3 ; 
         } 
     }   e l s e   { 
         / /   I E 8   d o e s   n o t   i m p l e m e n t   ` c h a r C o d e ` ,   b u t   ` k e y C o d e `   h a s   t h e   c o r r e c t   v a l u e . 
         c h a r C o d e   =   k e y C o d e ; 
     }   / /   I E   a n d   E d g e   ( o n   W i n d o w s )   a n d   C h r o m e   /   S a f a r i   ( o n   W i n d o w s   a n d   L i n u x ) 
     / /   r e p o r t   E n t e r   a s   c h a r C o d e   1 0   w h e n   c t r l   i s   p r e s s e d . 
 
 
     i f   ( c h a r C o d e   = = =   1 0 )   { 
         c h a r C o d e   =   1 3 ; 
     }   / /   S o m e   n o n - p r i n t a b l e   k e y s   a r e   r e p o r t e d   i n   ` c h a r C o d e ` / ` k e y C o d e ` ,   d i s c a r d   t h e m . 
     / /   M u s t   n o t   d i s c a r d   t h e   ( n o n - ) p r i n t a b l e   E n t e r - k e y . 
 
 
     i f   ( c h a r C o d e   > =   3 2   | |   c h a r C o d e   = = =   1 3 )   { 
         r e t u r n   c h a r C o d e ; 
     } 
 
     r e t u r n   0 ; 
 } 
 
 f u n c t i o n   f u n c t i o n T h a t R e t u r n s T r u e ( )   { 
     r e t u r n   t r u e ; 
 } 
 
 f u n c t i o n   f u n c t i o n T h a t R e t u r n s F a l s e ( )   { 
     r e t u r n   f a l s e ; 
 }   / /   T h i s   i s   i n t e n t i o n a l l y   a   f a c t o r y   s o   t h a t   w e   h a v e   d i f f e r e n t   r e t u r n e d   c o n s t r u c t o r s . 
 / /   I f   w e   h a d   a   s i n g l e   c o n s t r u c t o r ,   i t   w o u l d   b e   m e g a m o r p h i c   a n d   e n g i n e s   w o u l d   d e o p t . 
 
 
 f u n c t i o n   c r e a t e S y n t h e t i c E v e n t ( I n t e r f a c e )   { 
     / * * 
       *   S y n t h e t i c   e v e n t s   a r e   d i s p a t c h e d   b y   e v e n t   p l u g i n s ,   t y p i c a l l y   i n   r e s p o n s e   t o   a 
       *   t o p - l e v e l   e v e n t   d e l e g a t i o n   h a n d l e r . 
       * 
       *   T h e s e   s y s t e m s   s h o u l d   g e n e r a l l y   u s e   p o o l i n g   t o   r e d u c e   t h e   f r e q u e n c y   o f   g a r b a g e 
       *   c o l l e c t i o n .   T h e   s y s t e m   s h o u l d   c h e c k   ` i s P e r s i s t e n t `   t o   d e t e r m i n e   w h e t h e r   t h e 
       *   e v e n t   s h o u l d   b e   r e l e a s e d   i n t o   t h e   p o o l   a f t e r   b e i n g   d i s p a t c h e d .   U s e r s   t h a t 
       *   n e e d   a   p e r s i s t e d   e v e n t   s h o u l d   i n v o k e   ` p e r s i s t ` . 
       * 
       *   S y n t h e t i c   e v e n t s   ( a n d   s u b c l a s s e s )   i m p l e m e n t   t h e   D O M   L e v e l   3   E v e n t s   A P I   b y 
       *   n o r m a l i z i n g   b r o w s e r   q u i r k s .   S u b c l a s s e s   d o   n o t   n e c e s s a r i l y   h a v e   t o   i m p l e m e n t   a 
       *   D O M   i n t e r f a c e ;   c u s t o m   a p p l i c a t i o n - s p e c i f i c   e v e n t s   c a n   a l s o   s u b c l a s s   t h i s . 
       * / 
     f u n c t i o n   S y n t h e t i c B a s e E v e n t ( r e a c t N a m e ,   r e a c t E v e n t T y p e ,   t a r g e t I n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t )   { 
         t h i s . _ r e a c t N a m e   =   r e a c t N a m e ; 
         t h i s . _ t a r g e t I n s t   =   t a r g e t I n s t ; 
         t h i s . t y p e   =   r e a c t E v e n t T y p e ; 
         t h i s . n a t i v e E v e n t   =   n a t i v e E v e n t ; 
         t h i s . t a r g e t   =   n a t i v e E v e n t T a r g e t ; 
         t h i s . c u r r e n t T a r g e t   =   n u l l ; 
 
         f o r   ( v a r   _ p r o p N a m e   i n   I n t e r f a c e )   { 
             i f   ( ! I n t e r f a c e . h a s O w n P r o p e r t y ( _ p r o p N a m e ) )   { 
                 c o n t i n u e ; 
             } 
 
             v a r   n o r m a l i z e   =   I n t e r f a c e [ _ p r o p N a m e ] ; 
 
             i f   ( n o r m a l i z e )   { 
                 t h i s [ _ p r o p N a m e ]   =   n o r m a l i z e ( n a t i v e E v e n t ) ; 
             }   e l s e   { 
                 t h i s [ _ p r o p N a m e ]   =   n a t i v e E v e n t [ _ p r o p N a m e ] ; 
             } 
         } 
 
         v a r   d e f a u l t P r e v e n t e d   =   n a t i v e E v e n t . d e f a u l t P r e v e n t e d   ! =   n u l l   ?   n a t i v e E v e n t . d e f a u l t P r e v e n t e d   :   n a t i v e E v e n t . r e t u r n V a l u e   = = =   f a l s e ; 
 
         i f   ( d e f a u l t P r e v e n t e d )   { 
             t h i s . i s D e f a u l t P r e v e n t e d   =   f u n c t i o n T h a t R e t u r n s T r u e ; 
         }   e l s e   { 
             t h i s . i s D e f a u l t P r e v e n t e d   =   f u n c t i o n T h a t R e t u r n s F a l s e ; 
         } 
 
         t h i s . i s P r o p a g a t i o n S t o p p e d   =   f u n c t i o n T h a t R e t u r n s F a l s e ; 
         r e t u r n   t h i s ; 
     } 
 
     a s s i g n ( S y n t h e t i c B a s e E v e n t . p r o t o t y p e ,   { 
         p r e v e n t D e f a u l t :   f u n c t i o n   ( )   { 
             t h i s . d e f a u l t P r e v e n t e d   =   t r u e ; 
             v a r   e v e n t   =   t h i s . n a t i v e E v e n t ; 
 
             i f   ( ! e v e n t )   { 
                 r e t u r n ; 
             } 
 
             i f   ( e v e n t . p r e v e n t D e f a u l t )   { 
                 e v e n t . p r e v e n t D e f a u l t ( ) ;   / /   $ F l o w F i x M e   -   f l o w   i s   n o t   a w a r e   o f   ` u n k n o w n `   i n   I E 
             }   e l s e   i f   ( t y p e o f   e v e n t . r e t u r n V a l u e   ! = =   ' u n k n o w n ' )   { 
                 e v e n t . r e t u r n V a l u e   =   f a l s e ; 
             } 
 
             t h i s . i s D e f a u l t P r e v e n t e d   =   f u n c t i o n T h a t R e t u r n s T r u e ; 
         } , 
         s t o p P r o p a g a t i o n :   f u n c t i o n   ( )   { 
             v a r   e v e n t   =   t h i s . n a t i v e E v e n t ; 
 
             i f   ( ! e v e n t )   { 
                 r e t u r n ; 
             } 
 
             i f   ( e v e n t . s t o p P r o p a g a t i o n )   { 
                 e v e n t . s t o p P r o p a g a t i o n ( ) ;   / /   $ F l o w F i x M e   -   f l o w   i s   n o t   a w a r e   o f   ` u n k n o w n `   i n   I E 
             }   e l s e   i f   ( t y p e o f   e v e n t . c a n c e l B u b b l e   ! = =   ' u n k n o w n ' )   { 
                 / /   T h e   C h a n g e E v e n t P l u g i n   r e g i s t e r s   a   " p r o p e r t y c h a n g e "   e v e n t   f o r 
                 / /   I E .   T h i s   e v e n t   d o e s   n o t   s u p p o r t   b u b b l i n g   o r   c a n c e l l i n g ,   a n d 
                 / /   a n y   r e f e r e n c e s   t o   c a n c e l B u b b l e   t h r o w   " M e m b e r   n o t   f o u n d " .     A 
                 / /   t y p e o f   c h e c k   o f   " u n k n o w n "   c i r c u m v e n t s   t h i s   i s s u e   ( a n d   i s   a l s o 
                 / /   I E   s p e c i f i c ) . 
                 e v e n t . c a n c e l B u b b l e   =   t r u e ; 
             } 
 
             t h i s . i s P r o p a g a t i o n S t o p p e d   =   f u n c t i o n T h a t R e t u r n s T r u e ; 
         } , 
 
         / * * 
           *   W e   r e l e a s e   a l l   d i s p a t c h e d   ` S y n t h e t i c E v e n t ` s   a f t e r   e a c h   e v e n t   l o o p ,   a d d i n g 
           *   t h e m   b a c k   i n t o   t h e   p o o l .   T h i s   a l l o w s   a   w a y   t o   h o l d   o n t o   a   r e f e r e n c e   t h a t 
           *   w o n ' t   b e   a d d e d   b a c k   i n t o   t h e   p o o l . 
           * / 
         p e r s i s t :   f u n c t i o n   ( )   { / /   M o d e r n   e v e n t   s y s t e m   d o e s n ' t   u s e   p o o l i n g . 
         } , 
 
         / * * 
           *   C h e c k s   i f   t h i s   e v e n t   s h o u l d   b e   r e l e a s e d   b a c k   i n t o   t h e   p o o l . 
           * 
           *   @ r e t u r n   { b o o l e a n }   T r u e   i f   t h i s   s h o u l d   n o t   b e   r e l e a s e d ,   f a l s e   o t h e r w i s e . 
           * / 
         i s P e r s i s t e n t :   f u n c t i o n T h a t R e t u r n s T r u e 
     } ) ; 
     r e t u r n   S y n t h e t i c B a s e E v e n t ; 
 } 
 / * * 
   *   @ i n t e r f a c e   E v e n t 
   *   @ s e e   h t t p : / / w w w . w 3 . o r g / T R / D O M - L e v e l - 3 - E v e n t s / 
   * / 
 
 
 v a r   E v e n t I n t e r f a c e   =   { 
     e v e n t P h a s e :   0 , 
     b u b b l e s :   0 , 
     c a n c e l a b l e :   0 , 
     t i m e S t a m p :   f u n c t i o n   ( e v e n t )   { 
         r e t u r n   e v e n t . t i m e S t a m p   | |   D a t e . n o w ( ) ; 
     } , 
     d e f a u l t P r e v e n t e d :   0 , 
     i s T r u s t e d :   0 
 } ; 
 v a r   S y n t h e t i c E v e n t   =   c r e a t e S y n t h e t i c E v e n t ( E v e n t I n t e r f a c e ) ; 
 
 v a r   U I E v e n t I n t e r f a c e   =   a s s i g n ( { } ,   E v e n t I n t e r f a c e ,   { 
     v i e w :   0 , 
     d e t a i l :   0 
 } ) ; 
 
 v a r   S y n t h e t i c U I E v e n t   =   c r e a t e S y n t h e t i c E v e n t ( U I E v e n t I n t e r f a c e ) ; 
 v a r   l a s t M o v e m e n t X ; 
 v a r   l a s t M o v e m e n t Y ; 
 v a r   l a s t M o u s e E v e n t ; 
 
 f u n c t i o n   u p d a t e M o u s e M o v e m e n t P o l y f i l l S t a t e ( e v e n t )   { 
     i f   ( e v e n t   ! = =   l a s t M o u s e E v e n t )   { 
         i f   ( l a s t M o u s e E v e n t   & &   e v e n t . t y p e   = = =   ' m o u s e m o v e ' )   { 
             l a s t M o v e m e n t X   =   e v e n t . s c r e e n X   -   l a s t M o u s e E v e n t . s c r e e n X ; 
             l a s t M o v e m e n t Y   =   e v e n t . s c r e e n Y   -   l a s t M o u s e E v e n t . s c r e e n Y ; 
         }   e l s e   { 
             l a s t M o v e m e n t X   =   0 ; 
             l a s t M o v e m e n t Y   =   0 ; 
         } 
 
         l a s t M o u s e E v e n t   =   e v e n t ; 
     } 
 } 
 / * * 
   *   @ i n t e r f a c e   M o u s e E v e n t 
   *   @ s e e   h t t p : / / w w w . w 3 . o r g / T R / D O M - L e v e l - 3 - E v e n t s / 
   * / 
 
 
 v a r   M o u s e E v e n t I n t e r f a c e   =   a s s i g n ( { } ,   U I E v e n t I n t e r f a c e ,   { 
     s c r e e n X :   0 , 
     s c r e e n Y :   0 , 
     c l i e n t X :   0 , 
     c l i e n t Y :   0 , 
     p a g e X :   0 , 
     p a g e Y :   0 , 
     c t r l K e y :   0 , 
     s h i f t K e y :   0 , 
     a l t K e y :   0 , 
     m e t a K e y :   0 , 
     g e t M o d i f i e r S t a t e :   g e t E v e n t M o d i f i e r S t a t e , 
     b u t t o n :   0 , 
     b u t t o n s :   0 , 
     r e l a t e d T a r g e t :   f u n c t i o n   ( e v e n t )   { 
         i f   ( e v e n t . r e l a t e d T a r g e t   = = =   u n d e f i n e d )   r e t u r n   e v e n t . f r o m E l e m e n t   = = =   e v e n t . s r c E l e m e n t   ?   e v e n t . t o E l e m e n t   :   e v e n t . f r o m E l e m e n t ; 
         r e t u r n   e v e n t . r e l a t e d T a r g e t ; 
     } , 
     m o v e m e n t X :   f u n c t i o n   ( e v e n t )   { 
         i f   ( ' m o v e m e n t X '   i n   e v e n t )   { 
             r e t u r n   e v e n t . m o v e m e n t X ; 
         } 
 
         u p d a t e M o u s e M o v e m e n t P o l y f i l l S t a t e ( e v e n t ) ; 
         r e t u r n   l a s t M o v e m e n t X ; 
     } , 
     m o v e m e n t Y :   f u n c t i o n   ( e v e n t )   { 
         i f   ( ' m o v e m e n t Y '   i n   e v e n t )   { 
             r e t u r n   e v e n t . m o v e m e n t Y ; 
         }   / /   D o n ' t   n e e d   t o   c a l l   u p d a t e M o u s e M o v e m e n t P o l y f i l l S t a t e ( )   h e r e 
         / /   b e c a u s e   i t ' s   g u a r a n t e e d   t o   h a v e   a l r e a d y   r u n   w h e n   m o v e m e n t X 
         / /   w a s   c o p i e d . 
 
 
         r e t u r n   l a s t M o v e m e n t Y ; 
     } 
 } ) ; 
 
 v a r   S y n t h e t i c M o u s e E v e n t   =   c r e a t e S y n t h e t i c E v e n t ( M o u s e E v e n t I n t e r f a c e ) ; 
 / * * 
   *   @ i n t e r f a c e   D r a g E v e n t 
   *   @ s e e   h t t p : / / w w w . w 3 . o r g / T R / D O M - L e v e l - 3 - E v e n t s / 
   * / 
 
 v a r   D r a g E v e n t I n t e r f a c e   =   a s s i g n ( { } ,   M o u s e E v e n t I n t e r f a c e ,   { 
     d a t a T r a n s f e r :   0 
 } ) ; 
 
 v a r   S y n t h e t i c D r a g E v e n t   =   c r e a t e S y n t h e t i c E v e n t ( D r a g E v e n t I n t e r f a c e ) ; 
 / * * 
   *   @ i n t e r f a c e   F o c u s E v e n t 
   *   @ s e e   h t t p : / / w w w . w 3 . o r g / T R / D O M - L e v e l - 3 - E v e n t s / 
   * / 
 
 v a r   F o c u s E v e n t I n t e r f a c e   =   a s s i g n ( { } ,   U I E v e n t I n t e r f a c e ,   { 
     r e l a t e d T a r g e t :   0 
 } ) ; 
 
 v a r   S y n t h e t i c F o c u s E v e n t   =   c r e a t e S y n t h e t i c E v e n t ( F o c u s E v e n t I n t e r f a c e ) ; 
 / * * 
   *   @ i n t e r f a c e   E v e n t 
   *   @ s e e   h t t p : / / w w w . w 3 . o r g / T R / c s s 3 - a n i m a t i o n s / # A n i m a t i o n E v e n t - i n t e r f a c e 
   *   @ s e e   h t t p s : / / d e v e l o p e r . m o z i l l a . o r g / e n - U S / d o c s / W e b / A P I / A n i m a t i o n E v e n t 
   * / 
 
 v a r   A n i m a t i o n E v e n t I n t e r f a c e   =   a s s i g n ( { } ,   E v e n t I n t e r f a c e ,   { 
     a n i m a t i o n N a m e :   0 , 
     e l a p s e d T i m e :   0 , 
     p s e u d o E l e m e n t :   0 
 } ) ; 
 
 v a r   S y n t h e t i c A n i m a t i o n E v e n t   =   c r e a t e S y n t h e t i c E v e n t ( A n i m a t i o n E v e n t I n t e r f a c e ) ; 
 / * * 
   *   @ i n t e r f a c e   E v e n t 
   *   @ s e e   h t t p : / / w w w . w 3 . o r g / T R / c l i p b o a r d - a p i s / 
   * / 
 
 v a r   C l i p b o a r d E v e n t I n t e r f a c e   =   a s s i g n ( { } ,   E v e n t I n t e r f a c e ,   { 
     c l i p b o a r d D a t a :   f u n c t i o n   ( e v e n t )   { 
         r e t u r n   ' c l i p b o a r d D a t a '   i n   e v e n t   ?   e v e n t . c l i p b o a r d D a t a   :   w i n d o w . c l i p b o a r d D a t a ; 
     } 
 } ) ; 
 
 v a r   S y n t h e t i c C l i p b o a r d E v e n t   =   c r e a t e S y n t h e t i c E v e n t ( C l i p b o a r d E v e n t I n t e r f a c e ) ; 
 / * * 
   *   @ i n t e r f a c e   E v e n t 
   *   @ s e e   h t t p : / / w w w . w 3 . o r g / T R / D O M - L e v e l - 3 - E v e n t s / # e v e n t s - c o m p o s i t i o n e v e n t s 
   * / 
 
 v a r   C o m p o s i t i o n E v e n t I n t e r f a c e   =   a s s i g n ( { } ,   E v e n t I n t e r f a c e ,   { 
     d a t a :   0 
 } ) ; 
 
 v a r   S y n t h e t i c C o m p o s i t i o n E v e n t   =   c r e a t e S y n t h e t i c E v e n t ( C o m p o s i t i o n E v e n t I n t e r f a c e ) ; 
 / * * 
   *   @ i n t e r f a c e   E v e n t 
   *   @ s e e   h t t p : / / w w w . w 3 . o r g / T R / 2 0 1 3 / W D - D O M - L e v e l - 3 - E v e n t s - 2 0 1 3 1 1 0 5 
   *             / # e v e n t s - i n p u t e v e n t s 
   * / 
 / /   H a p p e n s   t o   s h a r e   t h e   s a m e   l i s t   f o r   n o w . 
 
 v a r   S y n t h e t i c I n p u t E v e n t   =   S y n t h e t i c C o m p o s i t i o n E v e n t ; 
 / * * 
   *   N o r m a l i z a t i o n   o f   d e p r e c a t e d   H T M L 5   ` k e y `   v a l u e s 
   *   @ s e e   h t t p s : / / d e v e l o p e r . m o z i l l a . o r g / e n - U S / d o c s / W e b / A P I / K e y b o a r d E v e n t # K e y _ n a m e s 
   * / 
 
 v a r   n o r m a l i z e K e y   =   { 
     E s c :   ' E s c a p e ' , 
     S p a c e b a r :   '   ' , 
     L e f t :   ' A r r o w L e f t ' , 
     U p :   ' A r r o w U p ' , 
     R i g h t :   ' A r r o w R i g h t ' , 
     D o w n :   ' A r r o w D o w n ' , 
     D e l :   ' D e l e t e ' , 
     W i n :   ' O S ' , 
     M e n u :   ' C o n t e x t M e n u ' , 
     A p p s :   ' C o n t e x t M e n u ' , 
     S c r o l l :   ' S c r o l l L o c k ' , 
     M o z P r i n t a b l e K e y :   ' U n i d e n t i f i e d ' 
 } ; 
 / * * 
   *   T r a n s l a t i o n   f r o m   l e g a c y   ` k e y C o d e `   t o   H T M L 5   ` k e y ` 
   *   O n l y   s p e c i a l   k e y s   s u p p o r t e d ,   a l l   o t h e r s   d e p e n d   o n   k e y b o a r d   l a y o u t   o r   b r o w s e r 
   *   @ s e e   h t t p s : / / d e v e l o p e r . m o z i l l a . o r g / e n - U S / d o c s / W e b / A P I / K e y b o a r d E v e n t # K e y _ n a m e s 
   * / 
 
 v a r   t r a n s l a t e T o K e y   =   { 
     ' 8 ' :   ' B a c k s p a c e ' , 
     ' 9 ' :   ' T a b ' , 
     ' 1 2 ' :   ' C l e a r ' , 
     ' 1 3 ' :   ' E n t e r ' , 
     ' 1 6 ' :   ' S h i f t ' , 
     ' 1 7 ' :   ' C o n t r o l ' , 
     ' 1 8 ' :   ' A l t ' , 
     ' 1 9 ' :   ' P a u s e ' , 
     ' 2 0 ' :   ' C a p s L o c k ' , 
     ' 2 7 ' :   ' E s c a p e ' , 
     ' 3 2 ' :   '   ' , 
     ' 3 3 ' :   ' P a g e U p ' , 
     ' 3 4 ' :   ' P a g e D o w n ' , 
     ' 3 5 ' :   ' E n d ' , 
     ' 3 6 ' :   ' H o m e ' , 
     ' 3 7 ' :   ' A r r o w L e f t ' , 
     ' 3 8 ' :   ' A r r o w U p ' , 
     ' 3 9 ' :   ' A r r o w R i g h t ' , 
     ' 4 0 ' :   ' A r r o w D o w n ' , 
     ' 4 5 ' :   ' I n s e r t ' , 
     ' 4 6 ' :   ' D e l e t e ' , 
     ' 1 1 2 ' :   ' F 1 ' , 
     ' 1 1 3 ' :   ' F 2 ' , 
     ' 1 1 4 ' :   ' F 3 ' , 
     ' 1 1 5 ' :   ' F 4 ' , 
     ' 1 1 6 ' :   ' F 5 ' , 
     ' 1 1 7 ' :   ' F 6 ' , 
     ' 1 1 8 ' :   ' F 7 ' , 
     ' 1 1 9 ' :   ' F 8 ' , 
     ' 1 2 0 ' :   ' F 9 ' , 
     ' 1 2 1 ' :   ' F 1 0 ' , 
     ' 1 2 2 ' :   ' F 1 1 ' , 
     ' 1 2 3 ' :   ' F 1 2 ' , 
     ' 1 4 4 ' :   ' N u m L o c k ' , 
     ' 1 4 5 ' :   ' S c r o l l L o c k ' , 
     ' 2 2 4 ' :   ' M e t a ' 
 } ; 
 / * * 
   *   @ p a r a m   { o b j e c t }   n a t i v e E v e n t   N a t i v e   b r o w s e r   e v e n t . 
   *   @ r e t u r n   { s t r i n g }   N o r m a l i z e d   ` k e y `   p r o p e r t y . 
   * / 
 
 f u n c t i o n   g e t E v e n t K e y ( n a t i v e E v e n t )   { 
     i f   ( n a t i v e E v e n t . k e y )   { 
         / /   N o r m a l i z e   i n c o n s i s t e n t   v a l u e s   r e p o r t e d   b y   b r o w s e r s   d u e   t o 
         / /   i m p l e m e n t a t i o n s   o f   a   w o r k i n g   d r a f t   s p e c i f i c a t i o n . 
         / /   F i r e F o x   i m p l e m e n t s   ` k e y `   b u t   r e t u r n s   ` M o z P r i n t a b l e K e y `   f o r   a l l 
         / /   p r i n t a b l e   c h a r a c t e r s   ( n o r m a l i z e d   t o   ` U n i d e n t i f i e d ` ) ,   i g n o r e   i t . 
         v a r   k e y   =   n o r m a l i z e K e y [ n a t i v e E v e n t . k e y ]   | |   n a t i v e E v e n t . k e y ; 
 
         i f   ( k e y   ! = =   ' U n i d e n t i f i e d ' )   { 
             r e t u r n   k e y ; 
         } 
     }   / /   B r o w s e r   d o e s   n o t   i m p l e m e n t   ` k e y ` ,   p o l y f i l l   a s   m u c h   o f   i t   a s   w e   c a n . 
 
 
     i f   ( n a t i v e E v e n t . t y p e   = = =   ' k e y p r e s s ' )   { 
         v a r   c h a r C o d e   =   g e t E v e n t C h a r C o d e ( n a t i v e E v e n t ) ;   / /   T h e   e n t e r - k e y   i s   t e c h n i c a l l y   b o t h   p r i n t a b l e   a n d   n o n - p r i n t a b l e   a n d   c a n 
         / /   t h u s   b e   c a p t u r e d   b y   ` k e y p r e s s ` ,   n o   o t h e r   n o n - p r i n t a b l e   k e y   s h o u l d . 
 
         r e t u r n   c h a r C o d e   = = =   1 3   ?   ' E n t e r '   :   S t r i n g . f r o m C h a r C o d e ( c h a r C o d e ) ; 
     } 
 
     i f   ( n a t i v e E v e n t . t y p e   = = =   ' k e y d o w n '   | |   n a t i v e E v e n t . t y p e   = = =   ' k e y u p ' )   { 
         / /   W h i l e   u s e r   k e y b o a r d   l a y o u t   d e t e r m i n e s   t h e   a c t u a l   m e a n i n g   o f   e a c h 
         / /   ` k e y C o d e `   v a l u e ,   a l m o s t   a l l   f u n c t i o n   k e y s   h a v e   a   u n i v e r s a l   v a l u e . 
         r e t u r n   t r a n s l a t e T o K e y [ n a t i v e E v e n t . k e y C o d e ]   | |   ' U n i d e n t i f i e d ' ; 
     } 
 
     r e t u r n   ' ' ; 
 } 
 / * * 
   *   T r a n s l a t i o n   f r o m   m o d i f i e r   k e y   t o   t h e   a s s o c i a t e d   p r o p e r t y   i n   t h e   e v e n t . 
   *   @ s e e   h t t p : / / w w w . w 3 . o r g / T R / D O M - L e v e l - 3 - E v e n t s / # k e y s - M o d i f i e r s 
   * / 
 
 
 v a r   m o d i f i e r K e y T o P r o p   =   { 
     A l t :   ' a l t K e y ' , 
     C o n t r o l :   ' c t r l K e y ' , 
     M e t a :   ' m e t a K e y ' , 
     S h i f t :   ' s h i f t K e y ' 
 } ;   / /   O l d e r   b r o w s e r s   ( S a f a r i   < =   1 0 ,   i O S   S a f a r i   < =   1 0 . 2 )   d o   n o t   s u p p o r t 
 / /   g e t M o d i f i e r S t a t e .   I f   g e t M o d i f i e r S t a t e   i s   n o t   s u p p o r t e d ,   w e   m a p   i t   t o   a   s e t   o f 
 / /   m o d i f i e r   k e y s   e x p o s e d   b y   t h e   e v e n t .   I n   t h i s   c a s e ,   L o c k - k e y s   a r e   n o t   s u p p o r t e d . 
 
 f u n c t i o n   m o d i f i e r S t a t e G e t t e r ( k e y A r g )   { 
     v a r   s y n t h e t i c E v e n t   =   t h i s ; 
     v a r   n a t i v e E v e n t   =   s y n t h e t i c E v e n t . n a t i v e E v e n t ; 
 
     i f   ( n a t i v e E v e n t . g e t M o d i f i e r S t a t e )   { 
         r e t u r n   n a t i v e E v e n t . g e t M o d i f i e r S t a t e ( k e y A r g ) ; 
     } 
 
     v a r   k e y P r o p   =   m o d i f i e r K e y T o P r o p [ k e y A r g ] ; 
     r e t u r n   k e y P r o p   ?   ! ! n a t i v e E v e n t [ k e y P r o p ]   :   f a l s e ; 
 } 
 
 f u n c t i o n   g e t E v e n t M o d i f i e r S t a t e ( n a t i v e E v e n t )   { 
     r e t u r n   m o d i f i e r S t a t e G e t t e r ; 
 } 
 / * * 
   *   @ i n t e r f a c e   K e y b o a r d E v e n t 
   *   @ s e e   h t t p : / / w w w . w 3 . o r g / T R / D O M - L e v e l - 3 - E v e n t s / 
   * / 
 
 
 v a r   K e y b o a r d E v e n t I n t e r f a c e   =   a s s i g n ( { } ,   U I E v e n t I n t e r f a c e ,   { 
     k e y :   g e t E v e n t K e y , 
     c o d e :   0 , 
     l o c a t i o n :   0 , 
     c t r l K e y :   0 , 
     s h i f t K e y :   0 , 
     a l t K e y :   0 , 
     m e t a K e y :   0 , 
     r e p e a t :   0 , 
     l o c a l e :   0 , 
     g e t M o d i f i e r S t a t e :   g e t E v e n t M o d i f i e r S t a t e , 
     / /   L e g a c y   I n t e r f a c e 
     c h a r C o d e :   f u n c t i o n   ( e v e n t )   { 
         / /   ` c h a r C o d e `   i s   t h e   r e s u l t   o f   a   K e y P r e s s   e v e n t   a n d   r e p r e s e n t s   t h e   v a l u e   o f 
         / /   t h e   a c t u a l   p r i n t a b l e   c h a r a c t e r . 
         / /   K e y P r e s s   i s   d e p r e c a t e d ,   b u t   i t s   r e p l a c e m e n t   i s   n o t   y e t   f i n a l   a n d   n o t 
         / /   i m p l e m e n t e d   i n   a n y   m a j o r   b r o w s e r .   O n l y   K e y P r e s s   h a s   c h a r C o d e . 
         i f   ( e v e n t . t y p e   = = =   ' k e y p r e s s ' )   { 
             r e t u r n   g e t E v e n t C h a r C o d e ( e v e n t ) ; 
         } 
 
         r e t u r n   0 ; 
     } , 
     k e y C o d e :   f u n c t i o n   ( e v e n t )   { 
         / /   ` k e y C o d e `   i s   t h e   r e s u l t   o f   a   K e y D o w n / U p   e v e n t   a n d   r e p r e s e n t s   t h e   v a l u e   o f 
         / /   p h y s i c a l   k e y b o a r d   k e y . 
         / /   T h e   a c t u a l   m e a n i n g   o f   t h e   v a l u e   d e p e n d s   o n   t h e   u s e r s '   k e y b o a r d   l a y o u t 
         / /   w h i c h   c a n n o t   b e   d e t e c t e d .   A s s u m i n g   t h a t   i t   i s   a   U S   k e y b o a r d   l a y o u t 
         / /   p r o v i d e s   a   s u r p r i s i n g l y   a c c u r a t e   m a p p i n g   f o r   U S   a n d   E u r o p e a n   u s e r s . 
         / /   D u e   t o   t h i s ,   i t   i s   l e f t   t o   t h e   u s e r   t o   i m p l e m e n t   a t   t h i s   t i m e . 
         i f   ( e v e n t . t y p e   = = =   ' k e y d o w n '   | |   e v e n t . t y p e   = = =   ' k e y u p ' )   { 
             r e t u r n   e v e n t . k e y C o d e ; 
         } 
 
         r e t u r n   0 ; 
     } , 
     w h i c h :   f u n c t i o n   ( e v e n t )   { 
         / /   ` w h i c h `   i s   a n   a l i a s   f o r   e i t h e r   ` k e y C o d e `   o r   ` c h a r C o d e `   d e p e n d i n g   o n   t h e 
         / /   t y p e   o f   t h e   e v e n t . 
         i f   ( e v e n t . t y p e   = = =   ' k e y p r e s s ' )   { 
             r e t u r n   g e t E v e n t C h a r C o d e ( e v e n t ) ; 
         } 
 
         i f   ( e v e n t . t y p e   = = =   ' k e y d o w n '   | |   e v e n t . t y p e   = = =   ' k e y u p ' )   { 
             r e t u r n   e v e n t . k e y C o d e ; 
         } 
 
         r e t u r n   0 ; 
     } 
 } ) ; 
 
 v a r   S y n t h e t i c K e y b o a r d E v e n t   =   c r e a t e S y n t h e t i c E v e n t ( K e y b o a r d E v e n t I n t e r f a c e ) ; 
 / * * 
   *   @ i n t e r f a c e   P o i n t e r E v e n t 
   *   @ s e e   h t t p : / / w w w . w 3 . o r g / T R / p o i n t e r e v e n t s / 
   * / 
 
 v a r   P o i n t e r E v e n t I n t e r f a c e   =   a s s i g n ( { } ,   M o u s e E v e n t I n t e r f a c e ,   { 
     p o i n t e r I d :   0 , 
     w i d t h :   0 , 
     h e i g h t :   0 , 
     p r e s s u r e :   0 , 
     t a n g e n t i a l P r e s s u r e :   0 , 
     t i l t X :   0 , 
     t i l t Y :   0 , 
     t w i s t :   0 , 
     p o i n t e r T y p e :   0 , 
     i s P r i m a r y :   0 
 } ) ; 
 
 v a r   S y n t h e t i c P o i n t e r E v e n t   =   c r e a t e S y n t h e t i c E v e n t ( P o i n t e r E v e n t I n t e r f a c e ) ; 
 / * * 
   *   @ i n t e r f a c e   T o u c h E v e n t 
   *   @ s e e   h t t p : / / w w w . w 3 . o r g / T R / t o u c h - e v e n t s / 
   * / 
 
 v a r   T o u c h E v e n t I n t e r f a c e   =   a s s i g n ( { } ,   U I E v e n t I n t e r f a c e ,   { 
     t o u c h e s :   0 , 
     t a r g e t T o u c h e s :   0 , 
     c h a n g e d T o u c h e s :   0 , 
     a l t K e y :   0 , 
     m e t a K e y :   0 , 
     c t r l K e y :   0 , 
     s h i f t K e y :   0 , 
     g e t M o d i f i e r S t a t e :   g e t E v e n t M o d i f i e r S t a t e 
 } ) ; 
 
 v a r   S y n t h e t i c T o u c h E v e n t   =   c r e a t e S y n t h e t i c E v e n t ( T o u c h E v e n t I n t e r f a c e ) ; 
 / * * 
   *   @ i n t e r f a c e   E v e n t 
   *   @ s e e   h t t p : / / w w w . w 3 . o r g / T R / 2 0 0 9 / W D - c s s 3 - t r a n s i t i o n s - 2 0 0 9 0 3 2 0 / # t r a n s i t i o n - e v e n t s - 
   *   @ s e e   h t t p s : / / d e v e l o p e r . m o z i l l a . o r g / e n - U S / d o c s / W e b / A P I / T r a n s i t i o n E v e n t 
   * / 
 
 v a r   T r a n s i t i o n E v e n t I n t e r f a c e   =   a s s i g n ( { } ,   E v e n t I n t e r f a c e ,   { 
     p r o p e r t y N a m e :   0 , 
     e l a p s e d T i m e :   0 , 
     p s e u d o E l e m e n t :   0 
 } ) ; 
 
 v a r   S y n t h e t i c T r a n s i t i o n E v e n t   =   c r e a t e S y n t h e t i c E v e n t ( T r a n s i t i o n E v e n t I n t e r f a c e ) ; 
 / * * 
   *   @ i n t e r f a c e   W h e e l E v e n t 
   *   @ s e e   h t t p : / / w w w . w 3 . o r g / T R / D O M - L e v e l - 3 - E v e n t s / 
   * / 
 
 v a r   W h e e l E v e n t I n t e r f a c e   =   a s s i g n ( { } ,   M o u s e E v e n t I n t e r f a c e ,   { 
     d e l t a X :   f u n c t i o n   ( e v e n t )   { 
         r e t u r n   ' d e l t a X '   i n   e v e n t   ?   e v e n t . d e l t a X   :   / /   F a l l b a c k   t o   ` w h e e l D e l t a X `   f o r   W e b k i t   a n d   n o r m a l i z e   ( r i g h t   i s   p o s i t i v e ) . 
         ' w h e e l D e l t a X '   i n   e v e n t   ?   - e v e n t . w h e e l D e l t a X   :   0 ; 
     } , 
     d e l t a Y :   f u n c t i o n   ( e v e n t )   { 
         r e t u r n   ' d e l t a Y '   i n   e v e n t   ?   e v e n t . d e l t a Y   :   / /   F a l l b a c k   t o   ` w h e e l D e l t a Y `   f o r   W e b k i t   a n d   n o r m a l i z e   ( d o w n   i s   p o s i t i v e ) . 
         ' w h e e l D e l t a Y '   i n   e v e n t   ?   - e v e n t . w h e e l D e l t a Y   :   / /   F a l l b a c k   t o   ` w h e e l D e l t a `   f o r   I E < 9   a n d   n o r m a l i z e   ( d o w n   i s   p o s i t i v e ) . 
         ' w h e e l D e l t a '   i n   e v e n t   ?   - e v e n t . w h e e l D e l t a   :   0 ; 
     } , 
     d e l t a Z :   0 , 
     / /   B r o w s e r s   w i t h o u t   " d e l t a M o d e "   i s   r e p o r t i n g   i n   r a w   w h e e l   d e l t a   w h e r e   o n e 
     / /   n o t c h   o n   t h e   s c r o l l   i s   a l w a y s   + / -   1 2 0 ,   r o u g h l y   e q u i v a l e n t   t o   p i x e l s . 
     / /   A   g o o d   a p p r o x i m a t i o n   o f   D O M _ D E L T A _ L I N E   ( 1 )   i s   5 %   o f   v i e w p o r t   s i z e   o r 
     / /   ~ 4 0   p i x e l s ,   f o r   D O M _ D E L T A _ S C R E E N   ( 2 )   i t   i s   8 7 . 5 %   o f   v i e w p o r t   s i z e . 
     d e l t a M o d e :   0 
 } ) ; 
 
 v a r   S y n t h e t i c W h e e l E v e n t   =   c r e a t e S y n t h e t i c E v e n t ( W h e e l E v e n t I n t e r f a c e ) ; 
 
 v a r   E N D _ K E Y C O D E S   =   [ 9 ,   1 3 ,   2 7 ,   3 2 ] ;   / /   T a b ,   R e t u r n ,   E s c ,   S p a c e 
 
 v a r   S T A R T _ K E Y C O D E   =   2 2 9 ; 
 v a r   c a n U s e C o m p o s i t i o n E v e n t   =   c a n U s e D O M   & &   ' C o m p o s i t i o n E v e n t '   i n   w i n d o w ; 
 v a r   d o c u m e n t M o d e   =   n u l l ; 
 
 i f   ( c a n U s e D O M   & &   ' d o c u m e n t M o d e '   i n   d o c u m e n t )   { 
     d o c u m e n t M o d e   =   d o c u m e n t . d o c u m e n t M o d e ; 
 }   / /   W e b k i t   o f f e r s   a   v e r y   u s e f u l   ` t e x t I n p u t `   e v e n t   t h a t   c a n   b e   u s e d   t o 
 / /   d i r e c t l y   r e p r e s e n t   ` b e f o r e I n p u t ` .   T h e   I E   ` t e x t i n p u t `   e v e n t   i s   n o t   a s 
 / /   u s e f u l ,   s o   w e   d o n ' t   u s e   i t . 
 
 
 v a r   c a n U s e T e x t I n p u t E v e n t   =   c a n U s e D O M   & &   ' T e x t E v e n t '   i n   w i n d o w   & &   ! d o c u m e n t M o d e ;   / /   I n   I E 9 + ,   w e   h a v e   a c c e s s   t o   c o m p o s i t i o n   e v e n t s ,   b u t   t h e   d a t a   s u p p l i e d 
 / /   b y   t h e   n a t i v e   c o m p o s i t i o n e n d   e v e n t   m a y   b e   i n c o r r e c t .   J a p a n e s e   i d e o g r a p h i c 
 / /   s p a c e s ,   f o r   i n s t a n c e   ( \ u 3 0 0 0 )   a r e   n o t   r e c o r d e d   c o r r e c t l y . 
 
 v a r   u s e F a l l b a c k C o m p o s i t i o n D a t a   =   c a n U s e D O M   & &   ( ! c a n U s e C o m p o s i t i o n E v e n t   | |   d o c u m e n t M o d e   & &   d o c u m e n t M o d e   >   8   & &   d o c u m e n t M o d e   < =   1 1 ) ; 
 v a r   S P A C E B A R _ C O D E   =   3 2 ; 
 v a r   S P A C E B A R _ C H A R   =   S t r i n g . f r o m C h a r C o d e ( S P A C E B A R _ C O D E ) ; 
 
 f u n c t i o n   r e g i s t e r E v e n t s ( )   { 
     r e g i s t e r T w o P h a s e E v e n t ( ' o n B e f o r e I n p u t ' ,   [ ' c o m p o s i t i o n e n d ' ,   ' k e y p r e s s ' ,   ' t e x t I n p u t ' ,   ' p a s t e ' ] ) ; 
     r e g i s t e r T w o P h a s e E v e n t ( ' o n C o m p o s i t i o n E n d ' ,   [ ' c o m p o s i t i o n e n d ' ,   ' f o c u s o u t ' ,   ' k e y d o w n ' ,   ' k e y p r e s s ' ,   ' k e y u p ' ,   ' m o u s e d o w n ' ] ) ; 
     r e g i s t e r T w o P h a s e E v e n t ( ' o n C o m p o s i t i o n S t a r t ' ,   [ ' c o m p o s i t i o n s t a r t ' ,   ' f o c u s o u t ' ,   ' k e y d o w n ' ,   ' k e y p r e s s ' ,   ' k e y u p ' ,   ' m o u s e d o w n ' ] ) ; 
     r e g i s t e r T w o P h a s e E v e n t ( ' o n C o m p o s i t i o n U p d a t e ' ,   [ ' c o m p o s i t i o n u p d a t e ' ,   ' f o c u s o u t ' ,   ' k e y d o w n ' ,   ' k e y p r e s s ' ,   ' k e y u p ' ,   ' m o u s e d o w n ' ] ) ; 
 }   / /   T r a c k   w h e t h e r   w e ' v e   e v e r   h a n d l e d   a   k e y p r e s s   o n   t h e   s p a c e   k e y . 
 
 
 v a r   h a s S p a c e K e y p r e s s   =   f a l s e ; 
 / * * 
   *   R e t u r n   w h e t h e r   a   n a t i v e   k e y p r e s s   e v e n t   i s   a s s u m e d   t o   b e   a   c o m m a n d . 
   *   T h i s   i s   r e q u i r e d   b e c a u s e   F i r e f o x   f i r e s   ` k e y p r e s s `   e v e n t s   f o r   k e y   c o m m a n d s 
   *   ( c u t ,   c o p y ,   s e l e c t - a l l ,   e t c . )   e v e n   t h o u g h   n o   c h a r a c t e r   i s   i n s e r t e d . 
   * / 
 
 f u n c t i o n   i s K e y p r e s s C o m m a n d ( n a t i v e E v e n t )   { 
     r e t u r n   ( n a t i v e E v e n t . c t r l K e y   | |   n a t i v e E v e n t . a l t K e y   | |   n a t i v e E v e n t . m e t a K e y )   & &   / /   c t r l K e y   & &   a l t K e y   i s   e q u i v a l e n t   t o   A l t G r ,   a n d   i s   n o t   a   c o m m a n d . 
     ! ( n a t i v e E v e n t . c t r l K e y   & &   n a t i v e E v e n t . a l t K e y ) ; 
 } 
 / * * 
   *   T r a n s l a t e   n a t i v e   t o p   l e v e l   e v e n t s   i n t o   e v e n t   t y p e s . 
   * / 
 
 
 f u n c t i o n   g e t C o m p o s i t i o n E v e n t T y p e ( d o m E v e n t N a m e )   { 
     s w i t c h   ( d o m E v e n t N a m e )   { 
         c a s e   ' c o m p o s i t i o n s t a r t ' : 
             r e t u r n   ' o n C o m p o s i t i o n S t a r t ' ; 
 
         c a s e   ' c o m p o s i t i o n e n d ' : 
             r e t u r n   ' o n C o m p o s i t i o n E n d ' ; 
 
         c a s e   ' c o m p o s i t i o n u p d a t e ' : 
             r e t u r n   ' o n C o m p o s i t i o n U p d a t e ' ; 
     } 
 } 
 / * * 
   *   D o e s   o u r   f a l l b a c k   b e s t - g u e s s   m o d e l   t h i n k   t h i s   e v e n t   s i g n i f i e s   t h a t 
   *   c o m p o s i t i o n   h a s   b e g u n ? 
   * / 
 
 
 f u n c t i o n   i s F a l l b a c k C o m p o s i t i o n S t a r t ( d o m E v e n t N a m e ,   n a t i v e E v e n t )   { 
     r e t u r n   d o m E v e n t N a m e   = = =   ' k e y d o w n '   & &   n a t i v e E v e n t . k e y C o d e   = = =   S T A R T _ K E Y C O D E ; 
 } 
 / * * 
   *   D o e s   o u r   f a l l b a c k   m o d e   t h i n k   t h a t   t h i s   e v e n t   i s   t h e   e n d   o f   c o m p o s i t i o n ? 
   * / 
 
 
 f u n c t i o n   i s F a l l b a c k C o m p o s i t i o n E n d ( d o m E v e n t N a m e ,   n a t i v e E v e n t )   { 
     s w i t c h   ( d o m E v e n t N a m e )   { 
         c a s e   ' k e y u p ' : 
             / /   C o m m a n d   k e y s   i n s e r t   o r   c l e a r   I M E   i n p u t . 
             r e t u r n   E N D _ K E Y C O D E S . i n d e x O f ( n a t i v e E v e n t . k e y C o d e )   ! = =   - 1 ; 
 
         c a s e   ' k e y d o w n ' : 
             / /   E x p e c t   I M E   k e y C o d e   o n   e a c h   k e y d o w n .   I f   w e   g e t   a n y   o t h e r 
             / /   c o d e   w e   m u s t   h a v e   e x i t e d   e a r l i e r . 
             r e t u r n   n a t i v e E v e n t . k e y C o d e   ! = =   S T A R T _ K E Y C O D E ; 
 
         c a s e   ' k e y p r e s s ' : 
         c a s e   ' m o u s e d o w n ' : 
         c a s e   ' f o c u s o u t ' : 
             / /   E v e n t s   a r e   n o t   p o s s i b l e   w i t h o u t   c a n c e l l i n g   I M E . 
             r e t u r n   t r u e ; 
 
         d e f a u l t : 
             r e t u r n   f a l s e ; 
     } 
 } 
 / * * 
   *   G o o g l e   I n p u t   T o o l s   p r o v i d e s   c o m p o s i t i o n   d a t a   v i a   a   C u s t o m E v e n t , 
   *   w i t h   t h e   ` d a t a `   p r o p e r t y   p o p u l a t e d   i n   t h e   ` d e t a i l `   o b j e c t .   I f   t h i s 
   *   i s   a v a i l a b l e   o n   t h e   e v e n t   o b j e c t ,   u s e   i t .   I f   n o t ,   t h i s   i s   a   p l a i n 
   *   c o m p o s i t i o n   e v e n t   a n d   w e   h a v e   n o t h i n g   s p e c i a l   t o   e x t r a c t . 
   * 
   *   @ p a r a m   { o b j e c t }   n a t i v e E v e n t 
   *   @ r e t u r n   { ? s t r i n g } 
   * / 
 
 
 f u n c t i o n   g e t D a t a F r o m C u s t o m E v e n t ( n a t i v e E v e n t )   { 
     v a r   d e t a i l   =   n a t i v e E v e n t . d e t a i l ; 
 
     i f   ( t y p e o f   d e t a i l   = = =   ' o b j e c t '   & &   ' d a t a '   i n   d e t a i l )   { 
         r e t u r n   d e t a i l . d a t a ; 
     } 
 
     r e t u r n   n u l l ; 
 } 
 / * * 
   *   C h e c k   i f   a   c o m p o s i t i o n   e v e n t   w a s   t r i g g e r e d   b y   K o r e a n   I M E . 
   *   O u r   f a l l b a c k   m o d e   d o e s   n o t   w o r k   w e l l   w i t h   I E ' s   K o r e a n   I M E , 
   *   s o   j u s t   u s e   n a t i v e   c o m p o s i t i o n   e v e n t s   w h e n   K o r e a n   I M E   i s   u s e d . 
   *   A l t h o u g h   C o m p o s i t i o n E v e n t . l o c a l e   p r o p e r t y   i s   d e p r e c a t e d , 
   *   i t   i s   a v a i l a b l e   i n   I E ,   w h e r e   o u r   f a l l b a c k   m o d e   i s   e n a b l e d . 
   * 
   *   @ p a r a m   { o b j e c t }   n a t i v e E v e n t 
   *   @ r e t u r n   { b o o l e a n } 
   * / 
 
 
 f u n c t i o n   i s U s i n g K o r e a n I M E ( n a t i v e E v e n t )   { 
     r e t u r n   n a t i v e E v e n t . l o c a l e   = = =   ' k o ' ; 
 }   / /   T r a c k   t h e   c u r r e n t   I M E   c o m p o s i t i o n   s t a t u s ,   i f   a n y . 
 
 
 v a r   i s C o m p o s i n g   =   f a l s e ; 
 / * * 
   *   @ r e t u r n   { ? o b j e c t }   A   S y n t h e t i c C o m p o s i t i o n E v e n t . 
   * / 
 
 f u n c t i o n   e x t r a c t C o m p o s i t i o n E v e n t ( d i s p a t c h Q u e u e ,   d o m E v e n t N a m e ,   t a r g e t I n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t )   { 
     v a r   e v e n t T y p e ; 
     v a r   f a l l b a c k D a t a ; 
 
     i f   ( c a n U s e C o m p o s i t i o n E v e n t )   { 
         e v e n t T y p e   =   g e t C o m p o s i t i o n E v e n t T y p e ( d o m E v e n t N a m e ) ; 
     }   e l s e   i f   ( ! i s C o m p o s i n g )   { 
         i f   ( i s F a l l b a c k C o m p o s i t i o n S t a r t ( d o m E v e n t N a m e ,   n a t i v e E v e n t ) )   { 
             e v e n t T y p e   =   ' o n C o m p o s i t i o n S t a r t ' ; 
         } 
     }   e l s e   i f   ( i s F a l l b a c k C o m p o s i t i o n E n d ( d o m E v e n t N a m e ,   n a t i v e E v e n t ) )   { 
         e v e n t T y p e   =   ' o n C o m p o s i t i o n E n d ' ; 
     } 
 
     i f   ( ! e v e n t T y p e )   { 
         r e t u r n   n u l l ; 
     } 
 
     i f   ( u s e F a l l b a c k C o m p o s i t i o n D a t a   & &   ! i s U s i n g K o r e a n I M E ( n a t i v e E v e n t ) )   { 
         / /   T h e   c u r r e n t   c o m p o s i t i o n   i s   s t o r e d   s t a t i c a l l y   a n d   m u s t   n o t   b e 
         / /   o v e r w r i t t e n   w h i l e   c o m p o s i t i o n   c o n t i n u e s . 
         i f   ( ! i s C o m p o s i n g   & &   e v e n t T y p e   = = =   ' o n C o m p o s i t i o n S t a r t ' )   { 
             i s C o m p o s i n g   =   i n i t i a l i z e ( n a t i v e E v e n t T a r g e t ) ; 
         }   e l s e   i f   ( e v e n t T y p e   = = =   ' o n C o m p o s i t i o n E n d ' )   { 
             i f   ( i s C o m p o s i n g )   { 
                 f a l l b a c k D a t a   =   g e t D a t a ( ) ; 
             } 
         } 
     } 
 
     v a r   l i s t e n e r s   =   a c c u m u l a t e T w o P h a s e L i s t e n e r s ( t a r g e t I n s t ,   e v e n t T y p e ) ; 
 
     i f   ( l i s t e n e r s . l e n g t h   >   0 )   { 
         v a r   e v e n t   =   n e w   S y n t h e t i c C o m p o s i t i o n E v e n t ( e v e n t T y p e ,   d o m E v e n t N a m e ,   n u l l ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ) ; 
         d i s p a t c h Q u e u e . p u s h ( { 
             e v e n t :   e v e n t , 
             l i s t e n e r s :   l i s t e n e r s 
         } ) ; 
 
         i f   ( f a l l b a c k D a t a )   { 
             / /   I n j e c t   d a t a   g e n e r a t e d   f r o m   f a l l b a c k   p a t h   i n t o   t h e   s y n t h e t i c   e v e n t . 
             / /   T h i s   m a t c h e s   t h e   p r o p e r t y   o f   n a t i v e   C o m p o s i t i o n E v e n t I n t e r f a c e . 
             e v e n t . d a t a   =   f a l l b a c k D a t a ; 
         }   e l s e   { 
             v a r   c u s t o m D a t a   =   g e t D a t a F r o m C u s t o m E v e n t ( n a t i v e E v e n t ) ; 
 
             i f   ( c u s t o m D a t a   ! = =   n u l l )   { 
                 e v e n t . d a t a   =   c u s t o m D a t a ; 
             } 
         } 
     } 
 } 
 
 f u n c t i o n   g e t N a t i v e B e f o r e I n p u t C h a r s ( d o m E v e n t N a m e ,   n a t i v e E v e n t )   { 
     s w i t c h   ( d o m E v e n t N a m e )   { 
         c a s e   ' c o m p o s i t i o n e n d ' : 
             r e t u r n   g e t D a t a F r o m C u s t o m E v e n t ( n a t i v e E v e n t ) ; 
 
         c a s e   ' k e y p r e s s ' : 
             / * * 
               *   I f   n a t i v e   ` t e x t I n p u t `   e v e n t s   a r e   a v a i l a b l e ,   o u r   g o a l   i s   t o   m a k e 
               *   u s e   o f   t h e m .   H o w e v e r ,   t h e r e   i s   a   s p e c i a l   c a s e :   t h e   s p a c e b a r   k e y . 
               *   I n   W e b k i t ,   p r e v e n t i n g   d e f a u l t   o n   a   s p a c e b a r   ` t e x t I n p u t `   e v e n t 
               *   c a n c e l s   c h a r a c t e r   i n s e r t i o n ,   b u t   i t   * a l s o *   c a u s e s   t h e   b r o w s e r 
               *   t o   f a l l   b a c k   t o   i t s   d e f a u l t   s p a c e b a r   b e h a v i o r   o f   s c r o l l i n g   t h e 
               *   p a g e . 
               * 
               *   T r a c k i n g   a t : 
               *   h t t p s : / / c o d e . g o o g l e . c o m / p / c h r o m i u m / i s s u e s / d e t a i l ? i d = 3 5 5 1 0 3 
               * 
               *   T o   a v o i d   t h i s   i s s u e ,   u s e   t h e   k e y p r e s s   e v e n t   a s   i f   n o   ` t e x t I n p u t ` 
               *   e v e n t   i s   a v a i l a b l e . 
               * / 
             v a r   w h i c h   =   n a t i v e E v e n t . w h i c h ; 
 
             i f   ( w h i c h   ! = =   S P A C E B A R _ C O D E )   { 
                 r e t u r n   n u l l ; 
             } 
 
             h a s S p a c e K e y p r e s s   =   t r u e ; 
             r e t u r n   S P A C E B A R _ C H A R ; 
 
         c a s e   ' t e x t I n p u t ' : 
             / /   R e c o r d   t h e   c h a r a c t e r s   t o   b e   a d d e d   t o   t h e   D O M . 
             v a r   c h a r s   =   n a t i v e E v e n t . d a t a ;   / /   I f   i t ' s   a   s p a c e b a r   c h a r a c t e r ,   a s s u m e   t h a t   w e   h a v e   a l r e a d y   h a n d l e d 
             / /   i t   a t   t h e   k e y p r e s s   l e v e l   a n d   b a i l   i m m e d i a t e l y .   A n d r o i d   C h r o m e 
             / /   d o e s n ' t   g i v e   u s   k e y c o d e s ,   s o   w e   n e e d   t o   i g n o r e   i t . 
 
             i f   ( c h a r s   = = =   S P A C E B A R _ C H A R   & &   h a s S p a c e K e y p r e s s )   { 
                 r e t u r n   n u l l ; 
             } 
 
             r e t u r n   c h a r s ; 
 
         d e f a u l t : 
             / /   F o r   o t h e r   n a t i v e   e v e n t   t y p e s ,   d o   n o t h i n g . 
             r e t u r n   n u l l ; 
     } 
 } 
 / * * 
   *   F o r   b r o w s e r s   t h a t   d o   n o t   p r o v i d e   t h e   ` t e x t I n p u t `   e v e n t ,   e x t r a c t   t h e 
   *   a p p r o p r i a t e   s t r i n g   t o   u s e   f o r   S y n t h e t i c I n p u t E v e n t . 
   * / 
 
 
 f u n c t i o n   g e t F a l l b a c k B e f o r e I n p u t C h a r s ( d o m E v e n t N a m e ,   n a t i v e E v e n t )   { 
     / /   I f   w e   a r e   c u r r e n t l y   c o m p o s i n g   ( I M E )   a n d   u s i n g   a   f a l l b a c k   t o   d o   s o , 
     / /   t r y   t o   e x t r a c t   t h e   c o m p o s e d   c h a r a c t e r s   f r o m   t h e   f a l l b a c k   o b j e c t . 
     / /   I f   c o m p o s i t i o n   e v e n t   i s   a v a i l a b l e ,   w e   e x t r a c t   a   s t r i n g   o n l y   a t 
     / /   c o m p o s i t i o n e v e n t ,   o t h e r w i s e   e x t r a c t   i t   a t   f a l l b a c k   e v e n t s . 
     i f   ( i s C o m p o s i n g )   { 
         i f   ( d o m E v e n t N a m e   = = =   ' c o m p o s i t i o n e n d '   | |   ! c a n U s e C o m p o s i t i o n E v e n t   & &   i s F a l l b a c k C o m p o s i t i o n E n d ( d o m E v e n t N a m e ,   n a t i v e E v e n t ) )   { 
             v a r   c h a r s   =   g e t D a t a ( ) ; 
             r e s e t ( ) ; 
             i s C o m p o s i n g   =   f a l s e ; 
             r e t u r n   c h a r s ; 
         } 
 
         r e t u r n   n u l l ; 
     } 
 
     s w i t c h   ( d o m E v e n t N a m e )   { 
         c a s e   ' p a s t e ' : 
             / /   I f   a   p a s t e   e v e n t   o c c u r s   a f t e r   a   k e y p r e s s ,   t h r o w   o u t   t h e   i n p u t 
             / /   c h a r s .   P a s t e   e v e n t s   s h o u l d   n o t   l e a d   t o   B e f o r e I n p u t   e v e n t s . 
             r e t u r n   n u l l ; 
 
         c a s e   ' k e y p r e s s ' : 
             / * * 
               *   A s   o f   v 2 7 ,   F i r e f o x   m a y   f i r e   k e y p r e s s   e v e n t s   e v e n   w h e n   n o   c h a r a c t e r 
               *   w i l l   b e   i n s e r t e d .   A   f e w   p o s s i b i l i t i e s : 
               * 
               *   -   ` w h i c h `   i s   ` 0 ` .   A r r o w   k e y s ,   E s c   k e y ,   e t c . 
               * 
               *   -   ` w h i c h `   i s   t h e   p r e s s e d   k e y   c o d e ,   b u t   n o   c h a r   i s   a v a i l a b l e . 
               *       E x :   ' A l t G r   +   d `   i n   P o l i s h .   T h e r e   i s   n o   m o d i f i e d   c h a r a c t e r   f o r 
               *       t h i s   k e y   c o m b i n a t i o n   a n d   n o   c h a r a c t e r   i s   i n s e r t e d   i n t o   t h e 
               *       d o c u m e n t ,   b u t   F F   f i r e s   t h e   k e y p r e s s   f o r   c h a r   c o d e   ` 1 0 0 `   a n y w a y . 
               *       N o   ` i n p u t `   e v e n t   w i l l   o c c u r . 
               * 
               *   -   ` w h i c h `   i s   t h e   p r e s s e d   k e y   c o d e ,   b u t   a   c o m m a n d   c o m b i n a t i o n   i s 
               *       b e i n g   u s e d .   E x :   ` C m d + C ` .   N o   c h a r a c t e r   i s   i n s e r t e d ,   a n d   n o 
               *       ` i n p u t `   e v e n t   w i l l   o c c u r . 
               * / 
             i f   ( ! i s K e y p r e s s C o m m a n d ( n a t i v e E v e n t ) )   { 
                 / /   I E   f i r e s   t h e   ` k e y p r e s s `   e v e n t   w h e n   a   u s e r   t y p e s   a n   e m o j i   v i a 
                 / /   T o u c h   k e y b o a r d   o f   W i n d o w s .     I n   s u c h   a   c a s e ,   t h e   ` c h a r `   p r o p e r t y 
                 / /   h o l d s   a n   e m o j i   c h a r a c t e r   l i k e   ` \ u D 8 3 D \ u D E 0 A ` .     B e c a u s e   i t s   l e n g t h 
                 / /   i s   2 ,   t h e   p r o p e r t y   ` w h i c h `   d o e s   n o t   r e p r e s e n t   a n   e m o j i   c o r r e c t l y . 
                 / /   I n   s u c h   a   c a s e ,   w e   d i r e c t l y   r e t u r n   t h e   ` c h a r `   p r o p e r t y   i n s t e a d   o f 
                 / /   u s i n g   ` w h i c h ` . 
                 i f   ( n a t i v e E v e n t . c h a r   & &   n a t i v e E v e n t . c h a r . l e n g t h   >   1 )   { 
                     r e t u r n   n a t i v e E v e n t . c h a r ; 
                 }   e l s e   i f   ( n a t i v e E v e n t . w h i c h )   { 
                     r e t u r n   S t r i n g . f r o m C h a r C o d e ( n a t i v e E v e n t . w h i c h ) ; 
                 } 
             } 
 
             r e t u r n   n u l l ; 
 
         c a s e   ' c o m p o s i t i o n e n d ' : 
             r e t u r n   u s e F a l l b a c k C o m p o s i t i o n D a t a   & &   ! i s U s i n g K o r e a n I M E ( n a t i v e E v e n t )   ?   n u l l   :   n a t i v e E v e n t . d a t a ; 
 
         d e f a u l t : 
             r e t u r n   n u l l ; 
     } 
 } 
 / * * 
   *   E x t r a c t   a   S y n t h e t i c I n p u t E v e n t   f o r   ` b e f o r e I n p u t ` ,   b a s e d   o n   e i t h e r   n a t i v e 
   *   ` t e x t I n p u t `   o r   f a l l b a c k   b e h a v i o r . 
   * 
   *   @ r e t u r n   { ? o b j e c t }   A   S y n t h e t i c I n p u t E v e n t . 
   * / 
 
 
 f u n c t i o n   e x t r a c t B e f o r e I n p u t E v e n t ( d i s p a t c h Q u e u e ,   d o m E v e n t N a m e ,   t a r g e t I n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t )   { 
     v a r   c h a r s ; 
 
     i f   ( c a n U s e T e x t I n p u t E v e n t )   { 
         c h a r s   =   g e t N a t i v e B e f o r e I n p u t C h a r s ( d o m E v e n t N a m e ,   n a t i v e E v e n t ) ; 
     }   e l s e   { 
         c h a r s   =   g e t F a l l b a c k B e f o r e I n p u t C h a r s ( d o m E v e n t N a m e ,   n a t i v e E v e n t ) ; 
     }   / /   I f   n o   c h a r a c t e r s   a r e   b e i n g   i n s e r t e d ,   n o   B e f o r e I n p u t   e v e n t   s h o u l d 
     / /   b e   f i r e d . 
 
 
     i f   ( ! c h a r s )   { 
         r e t u r n   n u l l ; 
     } 
 
     v a r   l i s t e n e r s   =   a c c u m u l a t e T w o P h a s e L i s t e n e r s ( t a r g e t I n s t ,   ' o n B e f o r e I n p u t ' ) ; 
 
     i f   ( l i s t e n e r s . l e n g t h   >   0 )   { 
         v a r   e v e n t   =   n e w   S y n t h e t i c I n p u t E v e n t ( ' o n B e f o r e I n p u t ' ,   ' b e f o r e i n p u t ' ,   n u l l ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ) ; 
         d i s p a t c h Q u e u e . p u s h ( { 
             e v e n t :   e v e n t , 
             l i s t e n e r s :   l i s t e n e r s 
         } ) ; 
         e v e n t . d a t a   =   c h a r s ; 
     } 
 } 
 / * * 
   *   C r e a t e   a n   ` o n B e f o r e I n p u t `   e v e n t   t o   m a t c h 
   *   h t t p : / / w w w . w 3 . o r g / T R / 2 0 1 3 / W D - D O M - L e v e l - 3 - E v e n t s - 2 0 1 3 1 1 0 5 / # e v e n t s - i n p u t e v e n t s . 
   * 
   *   T h i s   e v e n t   p l u g i n   i s   b a s e d   o n   t h e   n a t i v e   ` t e x t I n p u t `   e v e n t 
   *   a v a i l a b l e   i n   C h r o m e ,   S a f a r i ,   O p e r a ,   a n d   I E .   T h i s   e v e n t   f i r e s   a f t e r 
   *   ` o n K e y P r e s s `   a n d   ` o n C o m p o s i t i o n E n d ` ,   b u t   b e f o r e   ` o n I n p u t ` . 
   * 
   *   ` b e f o r e I n p u t `   i s   s p e c ' d   b u t   n o t   i m p l e m e n t e d   i n   a n y   b r o w s e r s ,   a n d 
   *   t h e   ` i n p u t `   e v e n t   d o e s   n o t   p r o v i d e   a n y   u s e f u l   i n f o r m a t i o n   a b o u t   w h a t   h a s 
   *   a c t u a l l y   b e e n   a d d e d ,   c o n t r a r y   t o   t h e   s p e c .   T h u s ,   ` t e x t I n p u t `   i s   t h e   b e s t 
   *   a v a i l a b l e   e v e n t   t o   i d e n t i f y   t h e   c h a r a c t e r s   t h a t   h a v e   a c t u a l l y   b e e n   i n s e r t e d 
   *   i n t o   t h e   t a r g e t   n o d e . 
   * 
   *   T h i s   p l u g i n   i s   a l s o   r e s p o n s i b l e   f o r   e m i t t i n g   ` c o m p o s i t i o n `   e v e n t s ,   t h u s 
   *   a l l o w i n g   u s   t o   s h a r e   c o m p o s i t i o n   f a l l b a c k   c o d e   f o r   b o t h   ` b e f o r e I n p u t `   a n d 
   *   ` c o m p o s i t i o n `   e v e n t   t y p e s . 
   * / 
 
 
 f u n c t i o n   e x t r a c t E v e n t s ( d i s p a t c h Q u e u e ,   d o m E v e n t N a m e ,   t a r g e t I n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r )   { 
     e x t r a c t C o m p o s i t i o n E v e n t ( d i s p a t c h Q u e u e ,   d o m E v e n t N a m e ,   t a r g e t I n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ) ; 
     e x t r a c t B e f o r e I n p u t E v e n t ( d i s p a t c h Q u e u e ,   d o m E v e n t N a m e ,   t a r g e t I n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ) ; 
 } 
 
 / * * 
   *   @ s e e   h t t p : / / w w w . w h a t w g . o r g / s p e c s / w e b - a p p s / c u r r e n t - w o r k / m u l t i p a g e / t h e - i n p u t - e l e m e n t . h t m l # i n p u t - t y p e - a t t r - s u m m a r y 
   * / 
 v a r   s u p p o r t e d I n p u t T y p e s   =   { 
     c o l o r :   t r u e , 
     d a t e :   t r u e , 
     d a t e t i m e :   t r u e , 
     ' d a t e t i m e - l o c a l ' :   t r u e , 
     e m a i l :   t r u e , 
     m o n t h :   t r u e , 
     n u m b e r :   t r u e , 
     p a s s w o r d :   t r u e , 
     r a n g e :   t r u e , 
     s e a r c h :   t r u e , 
     t e l :   t r u e , 
     t e x t :   t r u e , 
     t i m e :   t r u e , 
     u r l :   t r u e , 
     w e e k :   t r u e 
 } ; 
 
 f u n c t i o n   i s T e x t I n p u t E l e m e n t ( e l e m )   { 
     v a r   n o d e N a m e   =   e l e m   & &   e l e m . n o d e N a m e   & &   e l e m . n o d e N a m e . t o L o w e r C a s e ( ) ; 
 
     i f   ( n o d e N a m e   = = =   ' i n p u t ' )   { 
         r e t u r n   ! ! s u p p o r t e d I n p u t T y p e s [ e l e m . t y p e ] ; 
     } 
 
     i f   ( n o d e N a m e   = = =   ' t e x t a r e a ' )   { 
         r e t u r n   t r u e ; 
     } 
 
     r e t u r n   f a l s e ; 
 } 
 
 / * * 
   *   C h e c k s   i f   a n   e v e n t   i s   s u p p o r t e d   i n   t h e   c u r r e n t   e x e c u t i o n   e n v i r o n m e n t . 
   * 
   *   N O T E :   T h i s   w i l l   n o t   w o r k   c o r r e c t l y   f o r   n o n - g e n e r i c   e v e n t s   s u c h   a s   ` c h a n g e ` , 
   *   ` r e s e t ` ,   ` l o a d ` ,   ` e r r o r ` ,   a n d   ` s e l e c t ` . 
   * 
   *   B o r r o w s   f r o m   M o d e r n i z r . 
   * 
   *   @ p a r a m   { s t r i n g }   e v e n t N a m e S u f f i x   E v e n t   n a m e ,   e . g .   " c l i c k " . 
   *   @ r e t u r n   { b o o l e a n }   T r u e   i f   t h e   e v e n t   i s   s u p p o r t e d . 
   *   @ i n t e r n a l 
   *   @ l i c e n s e   M o d e r n i z r   3 . 0 . 0 p r e   ( C u s t o m   B u i l d )   |   M I T 
   * / 
 
 f u n c t i o n   i s E v e n t S u p p o r t e d ( e v e n t N a m e S u f f i x )   { 
     i f   ( ! c a n U s e D O M )   { 
         r e t u r n   f a l s e ; 
     } 
 
     v a r   e v e n t N a m e   =   ' o n '   +   e v e n t N a m e S u f f i x ; 
     v a r   i s S u p p o r t e d   =   ( e v e n t N a m e   i n   d o c u m e n t ) ; 
 
     i f   ( ! i s S u p p o r t e d )   { 
         v a r   e l e m e n t   =   d o c u m e n t . c r e a t e E l e m e n t ( ' d i v ' ) ; 
         e l e m e n t . s e t A t t r i b u t e ( e v e n t N a m e ,   ' r e t u r n ; ' ) ; 
         i s S u p p o r t e d   =   t y p e o f   e l e m e n t [ e v e n t N a m e ]   = = =   ' f u n c t i o n ' ; 
     } 
 
     r e t u r n   i s S u p p o r t e d ; 
 } 
 
 f u n c t i o n   r e g i s t e r E v e n t s $ 1 ( )   { 
     r e g i s t e r T w o P h a s e E v e n t ( ' o n C h a n g e ' ,   [ ' c h a n g e ' ,   ' c l i c k ' ,   ' f o c u s i n ' ,   ' f o c u s o u t ' ,   ' i n p u t ' ,   ' k e y d o w n ' ,   ' k e y u p ' ,   ' s e l e c t i o n c h a n g e ' ] ) ; 
 } 
 
 f u n c t i o n   c r e a t e A n d A c c u m u l a t e C h a n g e E v e n t ( d i s p a t c h Q u e u e ,   i n s t ,   n a t i v e E v e n t ,   t a r g e t )   { 
     / /   F l a g   t h i s   e v e n t   l o o p   a s   n e e d i n g   s t a t e   r e s t o r e . 
     e n q u e u e S t a t e R e s t o r e ( t a r g e t ) ; 
     v a r   l i s t e n e r s   =   a c c u m u l a t e T w o P h a s e L i s t e n e r s ( i n s t ,   ' o n C h a n g e ' ) ; 
 
     i f   ( l i s t e n e r s . l e n g t h   >   0 )   { 
         v a r   e v e n t   =   n e w   S y n t h e t i c E v e n t ( ' o n C h a n g e ' ,   ' c h a n g e ' ,   n u l l ,   n a t i v e E v e n t ,   t a r g e t ) ; 
         d i s p a t c h Q u e u e . p u s h ( { 
             e v e n t :   e v e n t , 
             l i s t e n e r s :   l i s t e n e r s 
         } ) ; 
     } 
 } 
 / * * 
   *   F o r   I E   s h i m s 
   * / 
 
 
 v a r   a c t i v e E l e m e n t   =   n u l l ; 
 v a r   a c t i v e E l e m e n t I n s t   =   n u l l ; 
 / * * 
   *   S E C T I O N :   h a n d l e   ` c h a n g e `   e v e n t 
   * / 
 
 f u n c t i o n   s h o u l d U s e C h a n g e E v e n t ( e l e m )   { 
     v a r   n o d e N a m e   =   e l e m . n o d e N a m e   & &   e l e m . n o d e N a m e . t o L o w e r C a s e ( ) ; 
     r e t u r n   n o d e N a m e   = = =   ' s e l e c t '   | |   n o d e N a m e   = = =   ' i n p u t '   & &   e l e m . t y p e   = = =   ' f i l e ' ; 
 } 
 
 f u n c t i o n   m a n u a l D i s p a t c h C h a n g e E v e n t ( n a t i v e E v e n t )   { 
     v a r   d i s p a t c h Q u e u e   =   [ ] ; 
     c r e a t e A n d A c c u m u l a t e C h a n g e E v e n t ( d i s p a t c h Q u e u e ,   a c t i v e E l e m e n t I n s t ,   n a t i v e E v e n t ,   g e t E v e n t T a r g e t ( n a t i v e E v e n t ) ) ;   / /   I f   c h a n g e   a n d   p r o p e r t y c h a n g e   b u b b l e d ,   w e ' d   j u s t   b i n d   t o   i t   l i k e   a l l   t h e 
     / /   o t h e r   e v e n t s   a n d   h a v e   i t   g o   t h r o u g h   R e a c t B r o w s e r E v e n t E m i t t e r .   S i n c e   i t 
     / /   d o e s n ' t ,   w e   m a n u a l l y   l i s t e n   f o r   t h e   e v e n t s   a n d   s o   w e   h a v e   t o   e n q u e u e   a n d 
     / /   p r o c e s s   t h e   a b s t r a c t   e v e n t   m a n u a l l y . 
     / / 
     / /   B a t c h i n g   i s   n e c e s s a r y   h e r e   i n   o r d e r   t o   e n s u r e   t h a t   a l l   e v e n t   h a n d l e r s   r u n 
     / /   b e f o r e   t h e   n e x t   r e r e n d e r   ( i n c l u d i n g   e v e n t   h a n d l e r s   a t t a c h e d   t o   a n c e s t o r 
     / /   e l e m e n t s   i n s t e a d   o f   d i r e c t l y   o n   t h e   i n p u t ) .   W i t h o u t   t h i s ,   c o n t r o l l e d 
     / /   c o m p o n e n t s   d o n ' t   w o r k   p r o p e r l y   i n   c o n j u n c t i o n   w i t h   e v e n t   b u b b l i n g   b e c a u s e 
     / /   t h e   c o m p o n e n t   i s   r e r e n d e r e d   a n d   t h e   v a l u e   r e v e r t e d   b e f o r e   a l l   t h e   e v e n t 
     / /   h a n d l e r s   c a n   r u n .   S e e   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 7 0 8 . 
 
     b a t c h e d U p d a t e s ( r u n E v e n t I n B a t c h ,   d i s p a t c h Q u e u e ) ; 
 } 
 
 f u n c t i o n   r u n E v e n t I n B a t c h ( d i s p a t c h Q u e u e )   { 
     p r o c e s s D i s p a t c h Q u e u e ( d i s p a t c h Q u e u e ,   0 ) ; 
 } 
 
 f u n c t i o n   g e t I n s t I f V a l u e C h a n g e d ( t a r g e t I n s t )   { 
     v a r   t a r g e t N o d e   =   g e t N o d e F r o m I n s t a n c e ( t a r g e t I n s t ) ; 
 
     i f   ( u p d a t e V a l u e I f C h a n g e d ( t a r g e t N o d e ) )   { 
         r e t u r n   t a r g e t I n s t ; 
     } 
 } 
 
 f u n c t i o n   g e t T a r g e t I n s t F o r C h a n g e E v e n t ( d o m E v e n t N a m e ,   t a r g e t I n s t )   { 
     i f   ( d o m E v e n t N a m e   = = =   ' c h a n g e ' )   { 
         r e t u r n   t a r g e t I n s t ; 
     } 
 } 
 / * * 
   *   S E C T I O N :   h a n d l e   ` i n p u t `   e v e n t 
   * / 
 
 
 v a r   i s I n p u t E v e n t S u p p o r t e d   =   f a l s e ; 
 
 i f   ( c a n U s e D O M )   { 
     / /   I E 9   c l a i m s   t o   s u p p o r t   t h e   i n p u t   e v e n t   b u t   f a i l s   t o   t r i g g e r   i t   w h e n 
     / /   d e l e t i n g   t e x t ,   s o   w e   i g n o r e   i t s   i n p u t   e v e n t s . 
     i s I n p u t E v e n t S u p p o r t e d   =   i s E v e n t S u p p o r t e d ( ' i n p u t ' )   & &   ( ! d o c u m e n t . d o c u m e n t M o d e   | |   d o c u m e n t . d o c u m e n t M o d e   >   9 ) ; 
 } 
 / * * 
   *   ( F o r   I E   < = 9 )   S t a r t s   t r a c k i n g   p r o p e r t y c h a n g e   e v e n t s   o n   t h e   p a s s e d - i n   e l e m e n t 
   *   a n d   o v e r r i d e   t h e   v a l u e   p r o p e r t y   s o   t h a t   w e   c a n   d i s t i n g u i s h   u s e r   e v e n t s   f r o m 
   *   v a l u e   c h a n g e s   i n   J S . 
   * / 
 
 
 f u n c t i o n   s t a r t W a t c h i n g F o r V a l u e C h a n g e ( t a r g e t ,   t a r g e t I n s t )   { 
     a c t i v e E l e m e n t   =   t a r g e t ; 
     a c t i v e E l e m e n t I n s t   =   t a r g e t I n s t ; 
     a c t i v e E l e m e n t . a t t a c h E v e n t ( ' o n p r o p e r t y c h a n g e ' ,   h a n d l e P r o p e r t y C h a n g e ) ; 
 } 
 / * * 
   *   ( F o r   I E   < = 9 )   R e m o v e s   t h e   e v e n t   l i s t e n e r s   f r o m   t h e   c u r r e n t l y - t r a c k e d   e l e m e n t , 
   *   i f   a n y   e x i s t s . 
   * / 
 
 
 f u n c t i o n   s t o p W a t c h i n g F o r V a l u e C h a n g e ( )   { 
     i f   ( ! a c t i v e E l e m e n t )   { 
         r e t u r n ; 
     } 
 
     a c t i v e E l e m e n t . d e t a c h E v e n t ( ' o n p r o p e r t y c h a n g e ' ,   h a n d l e P r o p e r t y C h a n g e ) ; 
     a c t i v e E l e m e n t   =   n u l l ; 
     a c t i v e E l e m e n t I n s t   =   n u l l ; 
 } 
 / * * 
   *   ( F o r   I E   < = 9 )   H a n d l e s   a   p r o p e r t y c h a n g e   e v e n t ,   s e n d i n g   a   ` c h a n g e `   e v e n t   i f 
   *   t h e   v a l u e   o f   t h e   a c t i v e   e l e m e n t   h a s   c h a n g e d . 
   * / 
 
 
 f u n c t i o n   h a n d l e P r o p e r t y C h a n g e ( n a t i v e E v e n t )   { 
     i f   ( n a t i v e E v e n t . p r o p e r t y N a m e   ! = =   ' v a l u e ' )   { 
         r e t u r n ; 
     } 
 
     i f   ( g e t I n s t I f V a l u e C h a n g e d ( a c t i v e E l e m e n t I n s t ) )   { 
         m a n u a l D i s p a t c h C h a n g e E v e n t ( n a t i v e E v e n t ) ; 
     } 
 } 
 
 f u n c t i o n   h a n d l e E v e n t s F o r I n p u t E v e n t P o l y f i l l ( d o m E v e n t N a m e ,   t a r g e t ,   t a r g e t I n s t )   { 
     i f   ( d o m E v e n t N a m e   = = =   ' f o c u s i n ' )   { 
         / /   I n   I E 9 ,   p r o p e r t y c h a n g e   f i r e s   f o r   m o s t   i n p u t   e v e n t s   b u t   i s   b u g g y   a n d 
         / /   d o e s n ' t   f i r e   w h e n   t e x t   i s   d e l e t e d ,   b u t   c o n v e n i e n t l y ,   s e l e c t i o n c h a n g e 
         / /   a p p e a r s   t o   f i r e   i n   a l l   o f   t h e   r e m a i n i n g   c a s e s   s o   w e   c a t c h   t h o s e   a n d 
         / /   f o r w a r d   t h e   e v e n t   i f   t h e   v a l u e   h a s   c h a n g e d 
         / /   I n   e i t h e r   c a s e ,   w e   d o n ' t   w a n t   t o   c a l l   t h e   e v e n t   h a n d l e r   i f   t h e   v a l u e 
         / /   i s   c h a n g e d   f r o m   J S   s o   w e   r e d e f i n e   a   s e t t e r   f o r   ` . v a l u e `   t h a t   u p d a t e s 
         / /   o u r   a c t i v e E l e m e n t V a l u e   v a r i a b l e ,   a l l o w i n g   u s   t o   i g n o r e   t h o s e   c h a n g e s 
         / / 
         / /   s t o p W a t c h i n g ( )   s h o u l d   b e   a   n o o p   h e r e   b u t   w e   c a l l   i t   j u s t   i n   c a s e   w e 
         / /   m i s s e d   a   b l u r   e v e n t   s o m e h o w . 
         s t o p W a t c h i n g F o r V a l u e C h a n g e ( ) ; 
         s t a r t W a t c h i n g F o r V a l u e C h a n g e ( t a r g e t ,   t a r g e t I n s t ) ; 
     }   e l s e   i f   ( d o m E v e n t N a m e   = = =   ' f o c u s o u t ' )   { 
         s t o p W a t c h i n g F o r V a l u e C h a n g e ( ) ; 
     } 
 }   / /   F o r   I E 8   a n d   I E 9 . 
 
 
 f u n c t i o n   g e t T a r g e t I n s t F o r I n p u t E v e n t P o l y f i l l ( d o m E v e n t N a m e ,   t a r g e t I n s t )   { 
     i f   ( d o m E v e n t N a m e   = = =   ' s e l e c t i o n c h a n g e '   | |   d o m E v e n t N a m e   = = =   ' k e y u p '   | |   d o m E v e n t N a m e   = = =   ' k e y d o w n ' )   { 
         / /   O n   t h e   s e l e c t i o n c h a n g e   e v e n t ,   t h e   t a r g e t   i s   j u s t   d o c u m e n t   w h i c h   i s n ' t 
         / /   h e l p f u l   f o r   u s   s o   j u s t   c h e c k   a c t i v e E l e m e n t   i n s t e a d . 
         / / 
         / /   9 9 %   o f   t h e   t i m e ,   k e y d o w n   a n d   k e y u p   a r e n ' t   n e c e s s a r y .   I E 8   f a i l s   t o   f i r e 
         / /   p r o p e r t y c h a n g e   o n   t h e   f i r s t   i n p u t   e v e n t   a f t e r   s e t t i n g   ` v a l u e `   f r o m   a 
         / /   s c r i p t   a n d   f i r e s   o n l y   k e y d o w n ,   k e y p r e s s ,   k e y u p .   C a t c h i n g   k e y u p   u s u a l l y 
         / /   g e t s   i t   a n d   c a t c h i n g   k e y d o w n   l e t s   u s   f i r e   a n   e v e n t   f o r   t h e   f i r s t 
         / /   k e y s t r o k e   i f   u s e r   d o e s   a   k e y   r e p e a t   ( i t ' l l   b e   a   l i t t l e   d e l a y e d :   r i g h t 
         / /   b e f o r e   t h e   s e c o n d   k e y s t r o k e ) .   O t h e r   i n p u t   m e t h o d s   ( e . g . ,   p a s t e )   s e e m   t o 
         / /   f i r e   s e l e c t i o n c h a n g e   n o r m a l l y . 
         r e t u r n   g e t I n s t I f V a l u e C h a n g e d ( a c t i v e E l e m e n t I n s t ) ; 
     } 
 } 
 / * * 
   *   S E C T I O N :   h a n d l e   ` c l i c k `   e v e n t 
   * / 
 
 
 f u n c t i o n   s h o u l d U s e C l i c k E v e n t ( e l e m )   { 
     / /   U s e   t h e   ` c l i c k `   e v e n t   t o   d e t e c t   c h a n g e s   t o   c h e c k b o x   a n d   r a d i o   i n p u t s . 
     / /   T h i s   a p p r o a c h   w o r k s   a c r o s s   a l l   b r o w s e r s ,   w h e r e a s   ` c h a n g e `   d o e s   n o t   f i r e 
     / /   u n t i l   ` b l u r `   i n   I E 8 . 
     v a r   n o d e N a m e   =   e l e m . n o d e N a m e ; 
     r e t u r n   n o d e N a m e   & &   n o d e N a m e . t o L o w e r C a s e ( )   = = =   ' i n p u t '   & &   ( e l e m . t y p e   = = =   ' c h e c k b o x '   | |   e l e m . t y p e   = = =   ' r a d i o ' ) ; 
 } 
 
 f u n c t i o n   g e t T a r g e t I n s t F o r C l i c k E v e n t ( d o m E v e n t N a m e ,   t a r g e t I n s t )   { 
     i f   ( d o m E v e n t N a m e   = = =   ' c l i c k ' )   { 
         r e t u r n   g e t I n s t I f V a l u e C h a n g e d ( t a r g e t I n s t ) ; 
     } 
 } 
 
 f u n c t i o n   g e t T a r g e t I n s t F o r I n p u t O r C h a n g e E v e n t ( d o m E v e n t N a m e ,   t a r g e t I n s t )   { 
     i f   ( d o m E v e n t N a m e   = = =   ' i n p u t '   | |   d o m E v e n t N a m e   = = =   ' c h a n g e ' )   { 
         r e t u r n   g e t I n s t I f V a l u e C h a n g e d ( t a r g e t I n s t ) ; 
     } 
 } 
 
 f u n c t i o n   h a n d l e C o n t r o l l e d I n p u t B l u r ( n o d e )   { 
     v a r   s t a t e   =   n o d e . _ w r a p p e r S t a t e ; 
 
     i f   ( ! s t a t e   | |   ! s t a t e . c o n t r o l l e d   | |   n o d e . t y p e   ! = =   ' n u m b e r ' )   { 
         r e t u r n ; 
     } 
 
     { 
         / /   I f   c o n t r o l l e d ,   a s s i g n   t h e   v a l u e   a t t r i b u t e   t o   t h e   c u r r e n t   v a l u e   o n   b l u r 
         s e t D e f a u l t V a l u e ( n o d e ,   ' n u m b e r ' ,   n o d e . v a l u e ) ; 
     } 
 } 
 / * * 
   *   T h i s   p l u g i n   c r e a t e s   a n   ` o n C h a n g e `   e v e n t   t h a t   n o r m a l i z e s   c h a n g e   e v e n t s 
   *   a c r o s s   f o r m   e l e m e n t s .   T h i s   e v e n t   f i r e s   a t   a   t i m e   w h e n   i t ' s   p o s s i b l e   t o 
   *   c h a n g e   t h e   e l e m e n t ' s   v a l u e   w i t h o u t   s e e i n g   a   f l i c k e r . 
   * 
   *   S u p p o r t e d   e l e m e n t s   a r e : 
   *   -   i n p u t   ( s e e   ` i s T e x t I n p u t E l e m e n t ` ) 
   *   -   t e x t a r e a 
   *   -   s e l e c t 
   * / 
 
 
 f u n c t i o n   e x t r a c t E v e n t s $ 1 ( d i s p a t c h Q u e u e ,   d o m E v e n t N a m e ,   t a r g e t I n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r )   { 
     v a r   t a r g e t N o d e   =   t a r g e t I n s t   ?   g e t N o d e F r o m I n s t a n c e ( t a r g e t I n s t )   :   w i n d o w ; 
     v a r   g e t T a r g e t I n s t F u n c ,   h a n d l e E v e n t F u n c ; 
 
     i f   ( s h o u l d U s e C h a n g e E v e n t ( t a r g e t N o d e ) )   { 
         g e t T a r g e t I n s t F u n c   =   g e t T a r g e t I n s t F o r C h a n g e E v e n t ; 
     }   e l s e   i f   ( i s T e x t I n p u t E l e m e n t ( t a r g e t N o d e ) )   { 
         i f   ( i s I n p u t E v e n t S u p p o r t e d )   { 
             g e t T a r g e t I n s t F u n c   =   g e t T a r g e t I n s t F o r I n p u t O r C h a n g e E v e n t ; 
         }   e l s e   { 
             g e t T a r g e t I n s t F u n c   =   g e t T a r g e t I n s t F o r I n p u t E v e n t P o l y f i l l ; 
             h a n d l e E v e n t F u n c   =   h a n d l e E v e n t s F o r I n p u t E v e n t P o l y f i l l ; 
         } 
     }   e l s e   i f   ( s h o u l d U s e C l i c k E v e n t ( t a r g e t N o d e ) )   { 
         g e t T a r g e t I n s t F u n c   =   g e t T a r g e t I n s t F o r C l i c k E v e n t ; 
     } 
 
     i f   ( g e t T a r g e t I n s t F u n c )   { 
         v a r   i n s t   =   g e t T a r g e t I n s t F u n c ( d o m E v e n t N a m e ,   t a r g e t I n s t ) ; 
 
         i f   ( i n s t )   { 
             c r e a t e A n d A c c u m u l a t e C h a n g e E v e n t ( d i s p a t c h Q u e u e ,   i n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ) ; 
             r e t u r n ; 
         } 
     } 
 
     i f   ( h a n d l e E v e n t F u n c )   { 
         h a n d l e E v e n t F u n c ( d o m E v e n t N a m e ,   t a r g e t N o d e ,   t a r g e t I n s t ) ; 
     }   / /   W h e n   b l u r r i n g ,   s e t   t h e   v a l u e   a t t r i b u t e   f o r   n u m b e r   i n p u t s 
 
 
     i f   ( d o m E v e n t N a m e   = = =   ' f o c u s o u t ' )   { 
         h a n d l e C o n t r o l l e d I n p u t B l u r ( t a r g e t N o d e ) ; 
     } 
 } 
 
 f u n c t i o n   r e g i s t e r E v e n t s $ 2 ( )   { 
     r e g i s t e r D i r e c t E v e n t ( ' o n M o u s e E n t e r ' ,   [ ' m o u s e o u t ' ,   ' m o u s e o v e r ' ] ) ; 
     r e g i s t e r D i r e c t E v e n t ( ' o n M o u s e L e a v e ' ,   [ ' m o u s e o u t ' ,   ' m o u s e o v e r ' ] ) ; 
     r e g i s t e r D i r e c t E v e n t ( ' o n P o i n t e r E n t e r ' ,   [ ' p o i n t e r o u t ' ,   ' p o i n t e r o v e r ' ] ) ; 
     r e g i s t e r D i r e c t E v e n t ( ' o n P o i n t e r L e a v e ' ,   [ ' p o i n t e r o u t ' ,   ' p o i n t e r o v e r ' ] ) ; 
 } 
 / * * 
   *   F o r   a l m o s t   e v e r y   i n t e r a c t i o n   w e   c a r e   a b o u t ,   t h e r e   w i l l   b e   b o t h   a   t o p - l e v e l 
   *   ` m o u s e o v e r `   a n d   ` m o u s e o u t `   e v e n t   t h a t   o c c u r s .   O n l y   u s e   ` m o u s e o u t `   s o   t h a t 
   *   w e   d o   n o t   e x t r a c t   d u p l i c a t e   e v e n t s .   H o w e v e r ,   m o v i n g   t h e   m o u s e   i n t o   t h e 
   *   b r o w s e r   f r o m   o u t s i d e   w i l l   n o t   f i r e   a   ` m o u s e o u t `   e v e n t .   I n   t h i s   c a s e ,   w e   u s e 
   *   t h e   ` m o u s e o v e r `   t o p - l e v e l   e v e n t . 
   * / 
 
 
 f u n c t i o n   e x t r a c t E v e n t s $ 2 ( d i s p a t c h Q u e u e ,   d o m E v e n t N a m e ,   t a r g e t I n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r )   { 
     v a r   i s O v e r E v e n t   =   d o m E v e n t N a m e   = = =   ' m o u s e o v e r '   | |   d o m E v e n t N a m e   = = =   ' p o i n t e r o v e r ' ; 
     v a r   i s O u t E v e n t   =   d o m E v e n t N a m e   = = =   ' m o u s e o u t '   | |   d o m E v e n t N a m e   = = =   ' p o i n t e r o u t ' ; 
 
     i f   ( i s O v e r E v e n t   & &   ! i s R e p l a y i n g E v e n t ( n a t i v e E v e n t ) )   { 
         / /   I f   t h i s   i s   a n   o v e r   e v e n t   w i t h   a   t a r g e t ,   w e   m i g h t   h a v e   a l r e a d y   d i s p a t c h e d 
         / /   t h e   e v e n t   i n   t h e   o u t   e v e n t   o f   t h e   o t h e r   t a r g e t .   I f   t h i s   i s   r e p l a y e d , 
         / /   t h e n   i t ' s   b e c a u s e   w e   c o u l d n ' t   d i s p a t c h   a g a i n s t   t h i s   t a r g e t   p r e v i o u s l y 
         / /   s o   w e   h a v e   t o   d o   i t   n o w   i n s t e a d . 
         v a r   r e l a t e d   =   n a t i v e E v e n t . r e l a t e d T a r g e t   | |   n a t i v e E v e n t . f r o m E l e m e n t ; 
 
         i f   ( r e l a t e d )   { 
             / /   I f   t h e   r e l a t e d   n o d e   i s   m a n a g e d   b y   R e a c t ,   w e   c a n   a s s u m e   t h a t   w e   h a v e 
             / /   a l r e a d y   d i s p a t c h e d   t h e   c o r r e s p o n d i n g   e v e n t s   d u r i n g   i t s   m o u s e o u t . 
             i f   ( g e t C l o s e s t I n s t a n c e F r o m N o d e ( r e l a t e d )   | |   i s C o n t a i n e r M a r k e d A s R o o t ( r e l a t e d ) )   { 
                 r e t u r n ; 
             } 
         } 
     } 
 
     i f   ( ! i s O u t E v e n t   & &   ! i s O v e r E v e n t )   { 
         / /   M u s t   n o t   b e   a   m o u s e   o r   p o i n t e r   i n   o r   o u t   -   i g n o r i n g . 
         r e t u r n ; 
     } 
 
     v a r   w i n ;   / /   T O D O :   w h y   i s   t h i s   n u l l a b l e   i n   t h e   t y p e s   b u t   w e   r e a d   f r o m   i t ? 
 
     i f   ( n a t i v e E v e n t T a r g e t . w i n d o w   = = =   n a t i v e E v e n t T a r g e t )   { 
         / /   ` n a t i v e E v e n t T a r g e t `   i s   p r o b a b l y   a   w i n d o w   o b j e c t . 
         w i n   =   n a t i v e E v e n t T a r g e t ; 
     }   e l s e   { 
         / /   T O D O :   F i g u r e   o u t   w h y   ` o w n e r D o c u m e n t `   i s   s o m e t i m e s   u n d e f i n e d   i n   I E 8 . 
         v a r   d o c   =   n a t i v e E v e n t T a r g e t . o w n e r D o c u m e n t ; 
 
         i f   ( d o c )   { 
             w i n   =   d o c . d e f a u l t V i e w   | |   d o c . p a r e n t W i n d o w ; 
         }   e l s e   { 
             w i n   =   w i n d o w ; 
         } 
     } 
 
     v a r   f r o m ; 
     v a r   t o ; 
 
     i f   ( i s O u t E v e n t )   { 
         v a r   _ r e l a t e d   =   n a t i v e E v e n t . r e l a t e d T a r g e t   | |   n a t i v e E v e n t . t o E l e m e n t ; 
 
         f r o m   =   t a r g e t I n s t ; 
         t o   =   _ r e l a t e d   ?   g e t C l o s e s t I n s t a n c e F r o m N o d e ( _ r e l a t e d )   :   n u l l ; 
 
         i f   ( t o   ! = =   n u l l )   { 
             v a r   n e a r e s t M o u n t e d   =   g e t N e a r e s t M o u n t e d F i b e r ( t o ) ; 
 
             i f   ( t o   ! = =   n e a r e s t M o u n t e d   | |   t o . t a g   ! = =   H o s t C o m p o n e n t   & &   t o . t a g   ! = =   H o s t T e x t )   { 
                 t o   =   n u l l ; 
             } 
         } 
     }   e l s e   { 
         / /   M o v i n g   t o   a   n o d e   f r o m   o u t s i d e   t h e   w i n d o w . 
         f r o m   =   n u l l ; 
         t o   =   t a r g e t I n s t ; 
     } 
 
     i f   ( f r o m   = = =   t o )   { 
         / /   N o t h i n g   p e r t a i n s   t o   o u r   m a n a g e d   c o m p o n e n t s . 
         r e t u r n ; 
     } 
 
     v a r   S y n t h e t i c E v e n t C t o r   =   S y n t h e t i c M o u s e E v e n t ; 
     v a r   l e a v e E v e n t T y p e   =   ' o n M o u s e L e a v e ' ; 
     v a r   e n t e r E v e n t T y p e   =   ' o n M o u s e E n t e r ' ; 
     v a r   e v e n t T y p e P r e f i x   =   ' m o u s e ' ; 
 
     i f   ( d o m E v e n t N a m e   = = =   ' p o i n t e r o u t '   | |   d o m E v e n t N a m e   = = =   ' p o i n t e r o v e r ' )   { 
         S y n t h e t i c E v e n t C t o r   =   S y n t h e t i c P o i n t e r E v e n t ; 
         l e a v e E v e n t T y p e   =   ' o n P o i n t e r L e a v e ' ; 
         e n t e r E v e n t T y p e   =   ' o n P o i n t e r E n t e r ' ; 
         e v e n t T y p e P r e f i x   =   ' p o i n t e r ' ; 
     } 
 
     v a r   f r o m N o d e   =   f r o m   = =   n u l l   ?   w i n   :   g e t N o d e F r o m I n s t a n c e ( f r o m ) ; 
     v a r   t o N o d e   =   t o   = =   n u l l   ?   w i n   :   g e t N o d e F r o m I n s t a n c e ( t o ) ; 
     v a r   l e a v e   =   n e w   S y n t h e t i c E v e n t C t o r ( l e a v e E v e n t T y p e ,   e v e n t T y p e P r e f i x   +   ' l e a v e ' ,   f r o m ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ) ; 
     l e a v e . t a r g e t   =   f r o m N o d e ; 
     l e a v e . r e l a t e d T a r g e t   =   t o N o d e ; 
     v a r   e n t e r   =   n u l l ;   / /   W e   s h o u l d   o n l y   p r o c e s s   t h i s   n a t i v e E v e n t   i f   w e   a r e   p r o c e s s i n g 
     / /   t h e   f i r s t   a n c e s t o r .   N e x t   t i m e ,   w e   w i l l   i g n o r e   t h e   e v e n t . 
 
     v a r   n a t i v e T a r g e t I n s t   =   g e t C l o s e s t I n s t a n c e F r o m N o d e ( n a t i v e E v e n t T a r g e t ) ; 
 
     i f   ( n a t i v e T a r g e t I n s t   = = =   t a r g e t I n s t )   { 
         v a r   e n t e r E v e n t   =   n e w   S y n t h e t i c E v e n t C t o r ( e n t e r E v e n t T y p e ,   e v e n t T y p e P r e f i x   +   ' e n t e r ' ,   t o ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ) ; 
         e n t e r E v e n t . t a r g e t   =   t o N o d e ; 
         e n t e r E v e n t . r e l a t e d T a r g e t   =   f r o m N o d e ; 
         e n t e r   =   e n t e r E v e n t ; 
     } 
 
     a c c u m u l a t e E n t e r L e a v e T w o P h a s e L i s t e n e r s ( d i s p a t c h Q u e u e ,   l e a v e ,   e n t e r ,   f r o m ,   t o ) ; 
 } 
 
 / * * 
   *   i n l i n e d   O b j e c t . i s   p o l y f i l l   t o   a v o i d   r e q u i r i n g   c o n s u m e r s   s h i p   t h e i r   o w n 
   *   h t t p s : / / d e v e l o p e r . m o z i l l a . o r g / e n - U S / d o c s / W e b / J a v a S c r i p t / R e f e r e n c e / G l o b a l _ O b j e c t s / O b j e c t / i s 
   * / 
 f u n c t i o n   i s ( x ,   y )   { 
     r e t u r n   x   = = =   y   & &   ( x   ! = =   0   | |   1   /   x   = = =   1   /   y )   | |   x   ! = =   x   & &   y   ! = =   y   / /   e s l i n t - d i s a b l e - l i n e   n o - s e l f - c o m p a r e 
     ; 
 } 
 
 v a r   o b j e c t I s   =   t y p e o f   O b j e c t . i s   = = =   ' f u n c t i o n '   ?   O b j e c t . i s   :   i s ; 
 
 / * * 
   *   P e r f o r m s   e q u a l i t y   b y   i t e r a t i n g   t h r o u g h   k e y s   o n   a n   o b j e c t   a n d   r e t u r n i n g   f a l s e 
   *   w h e n   a n y   k e y   h a s   v a l u e s   w h i c h   a r e   n o t   s t r i c t l y   e q u a l   b e t w e e n   t h e   a r g u m e n t s . 
   *   R e t u r n s   t r u e   w h e n   t h e   v a l u e s   o f   a l l   k e y s   a r e   s t r i c t l y   e q u a l . 
   * / 
 
 f u n c t i o n   s h a l l o w E q u a l ( o b j A ,   o b j B )   { 
     i f   ( o b j e c t I s ( o b j A ,   o b j B ) )   { 
         r e t u r n   t r u e ; 
     } 
 
     i f   ( t y p e o f   o b j A   ! = =   ' o b j e c t '   | |   o b j A   = = =   n u l l   | |   t y p e o f   o b j B   ! = =   ' o b j e c t '   | |   o b j B   = = =   n u l l )   { 
         r e t u r n   f a l s e ; 
     } 
 
     v a r   k e y s A   =   O b j e c t . k e y s ( o b j A ) ; 
     v a r   k e y s B   =   O b j e c t . k e y s ( o b j B ) ; 
 
     i f   ( k e y s A . l e n g t h   ! = =   k e y s B . l e n g t h )   { 
         r e t u r n   f a l s e ; 
     }   / /   T e s t   f o r   A ' s   k e y s   d i f f e r e n t   f r o m   B . 
 
 
     f o r   ( v a r   i   =   0 ;   i   <   k e y s A . l e n g t h ;   i + + )   { 
         v a r   c u r r e n t K e y   =   k e y s A [ i ] ; 
 
         i f   ( ! h a s O w n P r o p e r t y . c a l l ( o b j B ,   c u r r e n t K e y )   | |   ! o b j e c t I s ( o b j A [ c u r r e n t K e y ] ,   o b j B [ c u r r e n t K e y ] ) )   { 
             r e t u r n   f a l s e ; 
         } 
     } 
 
     r e t u r n   t r u e ; 
 } 
 
 / * * 
   *   G i v e n   a n y   n o d e   r e t u r n   t h e   f i r s t   l e a f   n o d e   w i t h o u t   c h i l d r e n . 
   * 
   *   @ p a r a m   { D O M E l e m e n t | D O M T e x t N o d e }   n o d e 
   *   @ r e t u r n   { D O M E l e m e n t | D O M T e x t N o d e } 
   * / 
 
 f u n c t i o n   g e t L e a f N o d e ( n o d e )   { 
     w h i l e   ( n o d e   & &   n o d e . f i r s t C h i l d )   { 
         n o d e   =   n o d e . f i r s t C h i l d ; 
     } 
 
     r e t u r n   n o d e ; 
 } 
 / * * 
   *   G e t   t h e   n e x t   s i b l i n g   w i t h i n   a   c o n t a i n e r .   T h i s   w i l l   w a l k   u p   t h e 
   *   D O M   i f   a   n o d e ' s   s i b l i n g s   h a v e   b e e n   e x h a u s t e d . 
   * 
   *   @ p a r a m   { D O M E l e m e n t | D O M T e x t N o d e }   n o d e 
   *   @ r e t u r n   { ? D O M E l e m e n t | D O M T e x t N o d e } 
   * / 
 
 
 f u n c t i o n   g e t S i b l i n g N o d e ( n o d e )   { 
     w h i l e   ( n o d e )   { 
         i f   ( n o d e . n e x t S i b l i n g )   { 
             r e t u r n   n o d e . n e x t S i b l i n g ; 
         } 
 
         n o d e   =   n o d e . p a r e n t N o d e ; 
     } 
 } 
 / * * 
   *   G e t   o b j e c t   d e s c r i b i n g   t h e   n o d e s   w h i c h   c o n t a i n   c h a r a c t e r s   a t   o f f s e t . 
   * 
   *   @ p a r a m   { D O M E l e m e n t | D O M T e x t N o d e }   r o o t 
   *   @ p a r a m   { n u m b e r }   o f f s e t 
   *   @ r e t u r n   { ? o b j e c t } 
   * / 
 
 
 f u n c t i o n   g e t N o d e F o r C h a r a c t e r O f f s e t ( r o o t ,   o f f s e t )   { 
     v a r   n o d e   =   g e t L e a f N o d e ( r o o t ) ; 
     v a r   n o d e S t a r t   =   0 ; 
     v a r   n o d e E n d   =   0 ; 
 
     w h i l e   ( n o d e )   { 
         i f   ( n o d e . n o d e T y p e   = = =   T E X T _ N O D E )   { 
             n o d e E n d   =   n o d e S t a r t   +   n o d e . t e x t C o n t e n t . l e n g t h ; 
 
             i f   ( n o d e S t a r t   < =   o f f s e t   & &   n o d e E n d   > =   o f f s e t )   { 
                 r e t u r n   { 
                     n o d e :   n o d e , 
                     o f f s e t :   o f f s e t   -   n o d e S t a r t 
                 } ; 
             } 
 
             n o d e S t a r t   =   n o d e E n d ; 
         } 
 
         n o d e   =   g e t L e a f N o d e ( g e t S i b l i n g N o d e ( n o d e ) ) ; 
     } 
 } 
 
 / * * 
   *   @ p a r a m   { D O M E l e m e n t }   o u t e r N o d e 
   *   @ r e t u r n   { ? o b j e c t } 
   * / 
 
 f u n c t i o n   g e t O f f s e t s ( o u t e r N o d e )   { 
     v a r   o w n e r D o c u m e n t   =   o u t e r N o d e . o w n e r D o c u m e n t ; 
     v a r   w i n   =   o w n e r D o c u m e n t   & &   o w n e r D o c u m e n t . d e f a u l t V i e w   | |   w i n d o w ; 
     v a r   s e l e c t i o n   =   w i n . g e t S e l e c t i o n   & &   w i n . g e t S e l e c t i o n ( ) ; 
 
     i f   ( ! s e l e c t i o n   | |   s e l e c t i o n . r a n g e C o u n t   = = =   0 )   { 
         r e t u r n   n u l l ; 
     } 
 
     v a r   a n c h o r N o d e   =   s e l e c t i o n . a n c h o r N o d e , 
             a n c h o r O f f s e t   =   s e l e c t i o n . a n c h o r O f f s e t , 
             f o c u s N o d e   =   s e l e c t i o n . f o c u s N o d e , 
             f o c u s O f f s e t   =   s e l e c t i o n . f o c u s O f f s e t ;   / /   I n   F i r e f o x ,   a n c h o r N o d e   a n d   f o c u s N o d e   c a n   b e   " a n o n y m o u s   d i v s " ,   e . g .   t h e 
     / /   u p / d o w n   b u t t o n s   o n   a n   < i n p u t   t y p e = " n u m b e r " > .   A n o n y m o u s   d i v s   d o   n o t   s e e m   t o 
     / /   e x p o s e   p r o p e r t i e s ,   t r i g g e r i n g   a   " P e r m i s s i o n   d e n i e d   e r r o r "   i f   a n y   o f   i t s 
     / /   p r o p e r t i e s   a r e   a c c e s s e d .   T h e   o n l y   s e e m i n g l y   p o s s i b l e   w a y   t o   a v o i d   e r r o r i n g 
     / /   i s   t o   a c c e s s   a   p r o p e r t y   t h a t   t y p i c a l l y   w o r k s   f o r   n o n - a n o n y m o u s   d i v s   a n d 
     / /   c a t c h   a n y   e r r o r   t h a t   m a y   o t h e r w i s e   a r i s e .   S e e 
     / /   h t t p s : / / b u g z i l l a . m o z i l l a . o r g / s h o w _ b u g . c g i ? i d = 2 0 8 4 2 7 
 
     t r y   { 
         / *   e s l i n t - d i s a b l e   n o - u n u s e d - e x p r e s s i o n s   * / 
         a n c h o r N o d e . n o d e T y p e ; 
         f o c u s N o d e . n o d e T y p e ; 
         / *   e s l i n t - e n a b l e   n o - u n u s e d - e x p r e s s i o n s   * / 
     }   c a t c h   ( e )   { 
         r e t u r n   n u l l ; 
     } 
 
     r e t u r n   g e t M o d e r n O f f s e t s F r o m P o i n t s ( o u t e r N o d e ,   a n c h o r N o d e ,   a n c h o r O f f s e t ,   f o c u s N o d e ,   f o c u s O f f s e t ) ; 
 } 
 / * * 
   *   R e t u r n s   { s t a r t ,   e n d }   w h e r e   ` s t a r t `   i s   t h e   c h a r a c t e r / c o d e p o i n t   i n d e x   o f 
   *   ( a n c h o r N o d e ,   a n c h o r O f f s e t )   w i t h i n   t h e   t e x t C o n t e n t   o f   ` o u t e r N o d e ` ,   a n d 
   *   ` e n d `   i s   t h e   i n d e x   o f   ( f o c u s N o d e ,   f o c u s O f f s e t ) . 
   * 
   *   R e t u r n s   n u l l   i f   y o u   p a s s   i n   g a r b a g e   i n p u t   b u t   w e   s h o u l d   p r o b a b l y   j u s t   c r a s h . 
   * 
   *   E x p o r t e d   o n l y   f o r   t e s t i n g . 
   * / 
 
 f u n c t i o n   g e t M o d e r n O f f s e t s F r o m P o i n t s ( o u t e r N o d e ,   a n c h o r N o d e ,   a n c h o r O f f s e t ,   f o c u s N o d e ,   f o c u s O f f s e t )   { 
     v a r   l e n g t h   =   0 ; 
     v a r   s t a r t   =   - 1 ; 
     v a r   e n d   =   - 1 ; 
     v a r   i n d e x W i t h i n A n c h o r   =   0 ; 
     v a r   i n d e x W i t h i n F o c u s   =   0 ; 
     v a r   n o d e   =   o u t e r N o d e ; 
     v a r   p a r e n t N o d e   =   n u l l ; 
 
     o u t e r :   w h i l e   ( t r u e )   { 
         v a r   n e x t   =   n u l l ; 
 
         w h i l e   ( t r u e )   { 
             i f   ( n o d e   = = =   a n c h o r N o d e   & &   ( a n c h o r O f f s e t   = = =   0   | |   n o d e . n o d e T y p e   = = =   T E X T _ N O D E ) )   { 
                 s t a r t   =   l e n g t h   +   a n c h o r O f f s e t ; 
             } 
 
             i f   ( n o d e   = = =   f o c u s N o d e   & &   ( f o c u s O f f s e t   = = =   0   | |   n o d e . n o d e T y p e   = = =   T E X T _ N O D E ) )   { 
                 e n d   =   l e n g t h   +   f o c u s O f f s e t ; 
             } 
 
             i f   ( n o d e . n o d e T y p e   = = =   T E X T _ N O D E )   { 
                 l e n g t h   + =   n o d e . n o d e V a l u e . l e n g t h ; 
             } 
 
             i f   ( ( n e x t   =   n o d e . f i r s t C h i l d )   = = =   n u l l )   { 
                 b r e a k ; 
             }   / /   M o v i n g   f r o m   ` n o d e `   t o   i t s   f i r s t   c h i l d   ` n e x t ` . 
 
 
             p a r e n t N o d e   =   n o d e ; 
             n o d e   =   n e x t ; 
         } 
 
         w h i l e   ( t r u e )   { 
             i f   ( n o d e   = = =   o u t e r N o d e )   { 
                 / /   I f   ` o u t e r N o d e `   h a s   c h i l d r e n ,   t h i s   i s   a l w a y s   t h e   s e c o n d   t i m e   v i s i t i n g 
                 / /   i t .   I f   i t   h a s   n o   c h i l d r e n ,   t h i s   i s   s t i l l   t h e   f i r s t   l o o p ,   a n d   t h e   o n l y 
                 / /   v a l i d   s e l e c t i o n   i s   a n c h o r N o d e   a n d   f o c u s N o d e   b o t h   e q u a l   t o   t h i s   n o d e 
                 / /   a n d   b o t h   o f f s e t s   0 ,   i n   w h i c h   c a s e   w e   w i l l   h a v e   h a n d l e d   a b o v e . 
                 b r e a k   o u t e r ; 
             } 
 
             i f   ( p a r e n t N o d e   = = =   a n c h o r N o d e   & &   + + i n d e x W i t h i n A n c h o r   = = =   a n c h o r O f f s e t )   { 
                 s t a r t   =   l e n g t h ; 
             } 
 
             i f   ( p a r e n t N o d e   = = =   f o c u s N o d e   & &   + + i n d e x W i t h i n F o c u s   = = =   f o c u s O f f s e t )   { 
                 e n d   =   l e n g t h ; 
             } 
 
             i f   ( ( n e x t   =   n o d e . n e x t S i b l i n g )   ! = =   n u l l )   { 
                 b r e a k ; 
             } 
 
             n o d e   =   p a r e n t N o d e ; 
             p a r e n t N o d e   =   n o d e . p a r e n t N o d e ; 
         }   / /   M o v i n g   f r o m   ` n o d e `   t o   i t s   n e x t   s i b l i n g   ` n e x t ` . 
 
 
         n o d e   =   n e x t ; 
     } 
 
     i f   ( s t a r t   = = =   - 1   | |   e n d   = = =   - 1 )   { 
         / /   T h i s   s h o u l d   n e v e r   h a p p e n .   ( W o u l d   h a p p e n   i f   t h e   a n c h o r / f o c u s   n o d e s   a r e n ' t 
         / /   a c t u a l l y   i n s i d e   t h e   p a s s e d - i n   n o d e . ) 
         r e t u r n   n u l l ; 
     } 
 
     r e t u r n   { 
         s t a r t :   s t a r t , 
         e n d :   e n d 
     } ; 
 } 
 / * * 
   *   I n   m o d e r n   n o n - I E   b r o w s e r s ,   w e   c a n   s u p p o r t   b o t h   f o r w a r d   a n d   b a c k w a r d 
   *   s e l e c t i o n s . 
   * 
   *   N o t e :   I E 1 0 +   s u p p o r t s   t h e   S e l e c t i o n   o b j e c t ,   b u t   i t   d o e s   n o t   s u p p o r t 
   *   t h e   ` e x t e n d `   m e t h o d ,   w h i c h   m e a n s   t h a t   e v e n   i n   m o d e r n   I E ,   i t ' s   n o t   p o s s i b l e 
   *   t o   p r o g r a m m a t i c a l l y   c r e a t e   a   b a c k w a r d   s e l e c t i o n .   T h u s ,   f o r   a l l   I E 
   *   v e r s i o n s ,   w e   u s e   t h e   o l d   I E   A P I   t o   c r e a t e   o u r   s e l e c t i o n s . 
   * 
   *   @ p a r a m   { D O M E l e m e n t | D O M T e x t N o d e }   n o d e 
   *   @ p a r a m   { o b j e c t }   o f f s e t s 
   * / 
 
 f u n c t i o n   s e t O f f s e t s ( n o d e ,   o f f s e t s )   { 
     v a r   d o c   =   n o d e . o w n e r D o c u m e n t   | |   d o c u m e n t ; 
     v a r   w i n   =   d o c   & &   d o c . d e f a u l t V i e w   | |   w i n d o w ;   / /   E d g e   f a i l s   w i t h   " O b j e c t   e x p e c t e d "   i n   s o m e   s c e n a r i o s . 
     / /   ( F o r   i n s t a n c e :   T i n y M C E   e d i t o r   u s e d   i n   a   l i s t   c o m p o n e n t   t h a t   s u p p o r t s   p a s t i n g   t o   a d d   m o r e , 
     / /   f a i l s   w h e n   p a s t i n g   1 0 0 +   i t e m s ) 
 
     i f   ( ! w i n . g e t S e l e c t i o n )   { 
         r e t u r n ; 
     } 
 
     v a r   s e l e c t i o n   =   w i n . g e t S e l e c t i o n ( ) ; 
     v a r   l e n g t h   =   n o d e . t e x t C o n t e n t . l e n g t h ; 
     v a r   s t a r t   =   M a t h . m i n ( o f f s e t s . s t a r t ,   l e n g t h ) ; 
     v a r   e n d   =   o f f s e t s . e n d   = = =   u n d e f i n e d   ?   s t a r t   :   M a t h . m i n ( o f f s e t s . e n d ,   l e n g t h ) ;   / /   I E   1 1   u s e s   m o d e r n   s e l e c t i o n ,   b u t   d o e s n ' t   s u p p o r t   t h e   e x t e n d   m e t h o d . 
     / /   F l i p   b a c k w a r d   s e l e c t i o n s ,   s o   w e   c a n   s e t   w i t h   a   s i n g l e   r a n g e . 
 
     i f   ( ! s e l e c t i o n . e x t e n d   & &   s t a r t   >   e n d )   { 
         v a r   t e m p   =   e n d ; 
         e n d   =   s t a r t ; 
         s t a r t   =   t e m p ; 
     } 
 
     v a r   s t a r t M a r k e r   =   g e t N o d e F o r C h a r a c t e r O f f s e t ( n o d e ,   s t a r t ) ; 
     v a r   e n d M a r k e r   =   g e t N o d e F o r C h a r a c t e r O f f s e t ( n o d e ,   e n d ) ; 
 
     i f   ( s t a r t M a r k e r   & &   e n d M a r k e r )   { 
         i f   ( s e l e c t i o n . r a n g e C o u n t   = = =   1   & &   s e l e c t i o n . a n c h o r N o d e   = = =   s t a r t M a r k e r . n o d e   & &   s e l e c t i o n . a n c h o r O f f s e t   = = =   s t a r t M a r k e r . o f f s e t   & &   s e l e c t i o n . f o c u s N o d e   = = =   e n d M a r k e r . n o d e   & &   s e l e c t i o n . f o c u s O f f s e t   = = =   e n d M a r k e r . o f f s e t )   { 
             r e t u r n ; 
         } 
 
         v a r   r a n g e   =   d o c . c r e a t e R a n g e ( ) ; 
         r a n g e . s e t S t a r t ( s t a r t M a r k e r . n o d e ,   s t a r t M a r k e r . o f f s e t ) ; 
         s e l e c t i o n . r e m o v e A l l R a n g e s ( ) ; 
 
         i f   ( s t a r t   >   e n d )   { 
             s e l e c t i o n . a d d R a n g e ( r a n g e ) ; 
             s e l e c t i o n . e x t e n d ( e n d M a r k e r . n o d e ,   e n d M a r k e r . o f f s e t ) ; 
         }   e l s e   { 
             r a n g e . s e t E n d ( e n d M a r k e r . n o d e ,   e n d M a r k e r . o f f s e t ) ; 
             s e l e c t i o n . a d d R a n g e ( r a n g e ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   i s T e x t N o d e ( n o d e )   { 
     r e t u r n   n o d e   & &   n o d e . n o d e T y p e   = = =   T E X T _ N O D E ; 
 } 
 
 f u n c t i o n   c o n t a i n s N o d e ( o u t e r N o d e ,   i n n e r N o d e )   { 
     i f   ( ! o u t e r N o d e   | |   ! i n n e r N o d e )   { 
         r e t u r n   f a l s e ; 
     }   e l s e   i f   ( o u t e r N o d e   = = =   i n n e r N o d e )   { 
         r e t u r n   t r u e ; 
     }   e l s e   i f   ( i s T e x t N o d e ( o u t e r N o d e ) )   { 
         r e t u r n   f a l s e ; 
     }   e l s e   i f   ( i s T e x t N o d e ( i n n e r N o d e ) )   { 
         r e t u r n   c o n t a i n s N o d e ( o u t e r N o d e ,   i n n e r N o d e . p a r e n t N o d e ) ; 
     }   e l s e   i f   ( ' c o n t a i n s '   i n   o u t e r N o d e )   { 
         r e t u r n   o u t e r N o d e . c o n t a i n s ( i n n e r N o d e ) ; 
     }   e l s e   i f   ( o u t e r N o d e . c o m p a r e D o c u m e n t P o s i t i o n )   { 
         r e t u r n   ! ! ( o u t e r N o d e . c o m p a r e D o c u m e n t P o s i t i o n ( i n n e r N o d e )   &   1 6 ) ; 
     }   e l s e   { 
         r e t u r n   f a l s e ; 
     } 
 } 
 
 f u n c t i o n   i s I n D o c u m e n t ( n o d e )   { 
     r e t u r n   n o d e   & &   n o d e . o w n e r D o c u m e n t   & &   c o n t a i n s N o d e ( n o d e . o w n e r D o c u m e n t . d o c u m e n t E l e m e n t ,   n o d e ) ; 
 } 
 
 f u n c t i o n   i s S a m e O r i g i n F r a m e ( i f r a m e )   { 
     t r y   { 
         / /   A c c e s s i n g   t h e   c o n t e n t D o c u m e n t   o f   a   H T M L I f r a m e E l e m e n t   c a n   c a u s e   t h e   b r o w s e r 
         / /   t o   t h r o w ,   e . g .   i f   i t   h a s   a   c r o s s - o r i g i n   s r c   a t t r i b u t e . 
         / /   S a f a r i   w i l l   s h o w   a n   e r r o r   i n   t h e   c o n s o l e   w h e n   t h e   a c c e s s   r e s u l t s   i n   " B l o c k e d   a   f r a m e   w i t h   o r i g i n " .   e . g : 
         / /   i f r a m e . c o n t e n t D o c u m e n t . d e f a u l t V i e w ; 
         / /   A   s a f e t y   w a y   i s   t o   a c c e s s   o n e   o f   t h e   c r o s s   o r i g i n   p r o p e r t i e s :   W i n d o w   o r   L o c a t i o n 
         / /   W h i c h   m i g h t   r e s u l t   i n   " S e c u r i t y E r r o r "   D O M   E x c e p t i o n   a n d   i t   i s   c o m p a t i b l e   t o   S a f a r i . 
         / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / b r o w s e r s . h t m l # i n t e g r a t i o n - w i t h - i d l 
         r e t u r n   t y p e o f   i f r a m e . c o n t e n t W i n d o w . l o c a t i o n . h r e f   = = =   ' s t r i n g ' ; 
     }   c a t c h   ( e r r )   { 
         r e t u r n   f a l s e ; 
     } 
 } 
 
 f u n c t i o n   g e t A c t i v e E l e m e n t D e e p ( )   { 
     v a r   w i n   =   w i n d o w ; 
     v a r   e l e m e n t   =   g e t A c t i v e E l e m e n t ( ) ; 
 
     w h i l e   ( e l e m e n t   i n s t a n c e o f   w i n . H T M L I F r a m e E l e m e n t )   { 
         i f   ( i s S a m e O r i g i n F r a m e ( e l e m e n t ) )   { 
             w i n   =   e l e m e n t . c o n t e n t W i n d o w ; 
         }   e l s e   { 
             r e t u r n   e l e m e n t ; 
         } 
 
         e l e m e n t   =   g e t A c t i v e E l e m e n t ( w i n . d o c u m e n t ) ; 
     } 
 
     r e t u r n   e l e m e n t ; 
 } 
 / * * 
   *   @ R e a c t I n p u t S e l e c t i o n :   R e a c t   i n p u t   s e l e c t i o n   m o d u l e .   B a s e d   o n   S e l e c t i o n . j s , 
   *   b u t   m o d i f i e d   t o   b e   s u i t a b l e   f o r   r e a c t   a n d   h a s   a   c o u p l e   o f   b u g   f i x e s   ( d o e s n ' t 
   *   a s s u m e   b u t t o n s   h a v e   r a n g e   s e l e c t i o n s   a l l o w e d ) . 
   *   I n p u t   s e l e c t i o n   m o d u l e   f o r   R e a c t . 
   * / 
 
 / * * 
   *   @ h a s S e l e c t i o n C a p a b i l i t i e s :   w e   g e t   t h e   e l e m e n t   t y p e s   t h a t   s u p p o r t   s e l e c t i o n 
   *   f r o m   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / # d o - n o t - a p p l y ,   l o o k i n g   a t   ` s e l e c t i o n S t a r t ` 
   *   a n d   ` s e l e c t i o n E n d `   r o w s . 
   * / 
 
 
 f u n c t i o n   h a s S e l e c t i o n C a p a b i l i t i e s ( e l e m )   { 
     v a r   n o d e N a m e   =   e l e m   & &   e l e m . n o d e N a m e   & &   e l e m . n o d e N a m e . t o L o w e r C a s e ( ) ; 
     r e t u r n   n o d e N a m e   & &   ( n o d e N a m e   = = =   ' i n p u t '   & &   ( e l e m . t y p e   = = =   ' t e x t '   | |   e l e m . t y p e   = = =   ' s e a r c h '   | |   e l e m . t y p e   = = =   ' t e l '   | |   e l e m . t y p e   = = =   ' u r l '   | |   e l e m . t y p e   = = =   ' p a s s w o r d ' )   | |   n o d e N a m e   = = =   ' t e x t a r e a '   | |   e l e m . c o n t e n t E d i t a b l e   = = =   ' t r u e ' ) ; 
 } 
 f u n c t i o n   g e t S e l e c t i o n I n f o r m a t i o n ( )   { 
     v a r   f o c u s e d E l e m   =   g e t A c t i v e E l e m e n t D e e p ( ) ; 
     r e t u r n   { 
         f o c u s e d E l e m :   f o c u s e d E l e m , 
         s e l e c t i o n R a n g e :   h a s S e l e c t i o n C a p a b i l i t i e s ( f o c u s e d E l e m )   ?   g e t S e l e c t i o n ( f o c u s e d E l e m )   :   n u l l 
     } ; 
 } 
 / * * 
   *   @ r e s t o r e S e l e c t i o n :   I f   a n y   s e l e c t i o n   i n f o r m a t i o n   w a s   p o t e n t i a l l y   l o s t , 
   *   r e s t o r e   i t .   T h i s   i s   u s e f u l   w h e n   p e r f o r m i n g   o p e r a t i o n s   t h a t   c o u l d   r e m o v e   d o m 
   *   n o d e s   a n d   p l a c e   t h e m   b a c k   i n ,   r e s u l t i n g   i n   f o c u s   b e i n g   l o s t . 
   * / 
 
 f u n c t i o n   r e s t o r e S e l e c t i o n ( p r i o r S e l e c t i o n I n f o r m a t i o n )   { 
     v a r   c u r F o c u s e d E l e m   =   g e t A c t i v e E l e m e n t D e e p ( ) ; 
     v a r   p r i o r F o c u s e d E l e m   =   p r i o r S e l e c t i o n I n f o r m a t i o n . f o c u s e d E l e m ; 
     v a r   p r i o r S e l e c t i o n R a n g e   =   p r i o r S e l e c t i o n I n f o r m a t i o n . s e l e c t i o n R a n g e ; 
 
     i f   ( c u r F o c u s e d E l e m   ! = =   p r i o r F o c u s e d E l e m   & &   i s I n D o c u m e n t ( p r i o r F o c u s e d E l e m ) )   { 
         i f   ( p r i o r S e l e c t i o n R a n g e   ! = =   n u l l   & &   h a s S e l e c t i o n C a p a b i l i t i e s ( p r i o r F o c u s e d E l e m ) )   { 
             s e t S e l e c t i o n ( p r i o r F o c u s e d E l e m ,   p r i o r S e l e c t i o n R a n g e ) ; 
         }   / /   F o c u s i n g   a   n o d e   c a n   c h a n g e   t h e   s c r o l l   p o s i t i o n ,   w h i c h   i s   u n d e s i r a b l e 
 
 
         v a r   a n c e s t o r s   =   [ ] ; 
         v a r   a n c e s t o r   =   p r i o r F o c u s e d E l e m ; 
 
         w h i l e   ( a n c e s t o r   =   a n c e s t o r . p a r e n t N o d e )   { 
             i f   ( a n c e s t o r . n o d e T y p e   = = =   E L E M E N T _ N O D E )   { 
                 a n c e s t o r s . p u s h ( { 
                     e l e m e n t :   a n c e s t o r , 
                     l e f t :   a n c e s t o r . s c r o l l L e f t , 
                     t o p :   a n c e s t o r . s c r o l l T o p 
                 } ) ; 
             } 
         } 
 
         i f   ( t y p e o f   p r i o r F o c u s e d E l e m . f o c u s   = = =   ' f u n c t i o n ' )   { 
             p r i o r F o c u s e d E l e m . f o c u s ( ) ; 
         } 
 
         f o r   ( v a r   i   =   0 ;   i   <   a n c e s t o r s . l e n g t h ;   i + + )   { 
             v a r   i n f o   =   a n c e s t o r s [ i ] ; 
             i n f o . e l e m e n t . s c r o l l L e f t   =   i n f o . l e f t ; 
             i n f o . e l e m e n t . s c r o l l T o p   =   i n f o . t o p ; 
         } 
     } 
 } 
 / * * 
   *   @ g e t S e l e c t i o n :   G e t s   t h e   s e l e c t i o n   b o u n d s   o f   a   f o c u s e d   t e x t a r e a ,   i n p u t   o r 
   *   c o n t e n t E d i t a b l e   n o d e . 
   *   - @ i n p u t :   L o o k   u p   s e l e c t i o n   b o u n d s   o f   t h i s   i n p u t 
   *   - @ r e t u r n   { s t a r t :   s e l e c t i o n S t a r t ,   e n d :   s e l e c t i o n E n d } 
   * / 
 
 f u n c t i o n   g e t S e l e c t i o n ( i n p u t )   { 
     v a r   s e l e c t i o n ; 
 
     i f   ( ' s e l e c t i o n S t a r t '   i n   i n p u t )   { 
         / /   M o d e r n   b r o w s e r   w i t h   i n p u t   o r   t e x t a r e a . 
         s e l e c t i o n   =   { 
             s t a r t :   i n p u t . s e l e c t i o n S t a r t , 
             e n d :   i n p u t . s e l e c t i o n E n d 
         } ; 
     }   e l s e   { 
         / /   C o n t e n t   e d i t a b l e   o r   o l d   I E   t e x t a r e a . 
         s e l e c t i o n   =   g e t O f f s e t s ( i n p u t ) ; 
     } 
 
     r e t u r n   s e l e c t i o n   | |   { 
         s t a r t :   0 , 
         e n d :   0 
     } ; 
 } 
 / * * 
   *   @ s e t S e l e c t i o n :   S e t s   t h e   s e l e c t i o n   b o u n d s   o f   a   t e x t a r e a   o r   i n p u t   a n d   f o c u s e s 
   *   t h e   i n p u t . 
   *   - @ i n p u t           S e t   s e l e c t i o n   b o u n d s   o f   t h i s   i n p u t   o r   t e x t a r e a 
   *   - @ o f f s e t s       O b j e c t   o f   s a m e   f o r m   t h a t   i s   r e t u r n e d   f r o m   g e t * 
   * / 
 
 f u n c t i o n   s e t S e l e c t i o n ( i n p u t ,   o f f s e t s )   { 
     v a r   s t a r t   =   o f f s e t s . s t a r t ; 
     v a r   e n d   =   o f f s e t s . e n d ; 
 
     i f   ( e n d   = = =   u n d e f i n e d )   { 
         e n d   =   s t a r t ; 
     } 
 
     i f   ( ' s e l e c t i o n S t a r t '   i n   i n p u t )   { 
         i n p u t . s e l e c t i o n S t a r t   =   s t a r t ; 
         i n p u t . s e l e c t i o n E n d   =   M a t h . m i n ( e n d ,   i n p u t . v a l u e . l e n g t h ) ; 
     }   e l s e   { 
         s e t O f f s e t s ( i n p u t ,   o f f s e t s ) ; 
     } 
 } 
 
 v a r   s k i p S e l e c t i o n C h a n g e E v e n t   =   c a n U s e D O M   & &   ' d o c u m e n t M o d e '   i n   d o c u m e n t   & &   d o c u m e n t . d o c u m e n t M o d e   < =   1 1 ; 
 
 f u n c t i o n   r e g i s t e r E v e n t s $ 3 ( )   { 
     r e g i s t e r T w o P h a s e E v e n t ( ' o n S e l e c t ' ,   [ ' f o c u s o u t ' ,   ' c o n t e x t m e n u ' ,   ' d r a g e n d ' ,   ' f o c u s i n ' ,   ' k e y d o w n ' ,   ' k e y u p ' ,   ' m o u s e d o w n ' ,   ' m o u s e u p ' ,   ' s e l e c t i o n c h a n g e ' ] ) ; 
 } 
 
 v a r   a c t i v e E l e m e n t $ 1   =   n u l l ; 
 v a r   a c t i v e E l e m e n t I n s t $ 1   =   n u l l ; 
 v a r   l a s t S e l e c t i o n   =   n u l l ; 
 v a r   m o u s e D o w n   =   f a l s e ; 
 / * * 
   *   G e t   a n   o b j e c t   w h i c h   i s   a   u n i q u e   r e p r e s e n t a t i o n   o f   t h e   c u r r e n t   s e l e c t i o n . 
   * 
   *   T h e   r e t u r n   v a l u e   w i l l   n o t   b e   c o n s i s t e n t   a c r o s s   n o d e s   o r   b r o w s e r s ,   b u t 
   *   t w o   i d e n t i c a l   s e l e c t i o n s   o n   t h e   s a m e   n o d e   w i l l   r e t u r n   i d e n t i c a l   o b j e c t s . 
   * / 
 
 f u n c t i o n   g e t S e l e c t i o n $ 1 ( n o d e )   { 
     i f   ( ' s e l e c t i o n S t a r t '   i n   n o d e   & &   h a s S e l e c t i o n C a p a b i l i t i e s ( n o d e ) )   { 
         r e t u r n   { 
             s t a r t :   n o d e . s e l e c t i o n S t a r t , 
             e n d :   n o d e . s e l e c t i o n E n d 
         } ; 
     }   e l s e   { 
         v a r   w i n   =   n o d e . o w n e r D o c u m e n t   & &   n o d e . o w n e r D o c u m e n t . d e f a u l t V i e w   | |   w i n d o w ; 
         v a r   s e l e c t i o n   =   w i n . g e t S e l e c t i o n ( ) ; 
         r e t u r n   { 
             a n c h o r N o d e :   s e l e c t i o n . a n c h o r N o d e , 
             a n c h o r O f f s e t :   s e l e c t i o n . a n c h o r O f f s e t , 
             f o c u s N o d e :   s e l e c t i o n . f o c u s N o d e , 
             f o c u s O f f s e t :   s e l e c t i o n . f o c u s O f f s e t 
         } ; 
     } 
 } 
 / * * 
   *   G e t   d o c u m e n t   a s s o c i a t e d   w i t h   t h e   e v e n t   t a r g e t . 
   * / 
 
 
 f u n c t i o n   g e t E v e n t T a r g e t D o c u m e n t ( e v e n t T a r g e t )   { 
     r e t u r n   e v e n t T a r g e t . w i n d o w   = = =   e v e n t T a r g e t   ?   e v e n t T a r g e t . d o c u m e n t   :   e v e n t T a r g e t . n o d e T y p e   = = =   D O C U M E N T _ N O D E   ?   e v e n t T a r g e t   :   e v e n t T a r g e t . o w n e r D o c u m e n t ; 
 } 
 / * * 
   *   P o l l   s e l e c t i o n   t o   s e e   w h e t h e r   i t ' s   c h a n g e d . 
   * 
   *   @ p a r a m   { o b j e c t }   n a t i v e E v e n t 
   *   @ p a r a m   { o b j e c t }   n a t i v e E v e n t T a r g e t 
   *   @ r e t u r n   { ? S y n t h e t i c E v e n t } 
   * / 
 
 
 f u n c t i o n   c o n s t r u c t S e l e c t E v e n t ( d i s p a t c h Q u e u e ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t )   { 
     / /   E n s u r e   w e   h a v e   t h e   r i g h t   e l e m e n t ,   a n d   t h a t   t h e   u s e r   i s   n o t   d r a g g i n g   a 
     / /   s e l e c t i o n   ( t h i s   m a t c h e s   n a t i v e   ` s e l e c t `   e v e n t   b e h a v i o r ) .   I n   H T M L 5 ,   s e l e c t 
     / /   f i r e s   o n l y   o n   i n p u t   a n d   t e x t a r e a   t h u s   i f   t h e r e ' s   n o   f o c u s e d   e l e m e n t   w e 
     / /   w o n ' t   d i s p a t c h . 
     v a r   d o c   =   g e t E v e n t T a r g e t D o c u m e n t ( n a t i v e E v e n t T a r g e t ) ; 
 
     i f   ( m o u s e D o w n   | |   a c t i v e E l e m e n t $ 1   = =   n u l l   | |   a c t i v e E l e m e n t $ 1   ! = =   g e t A c t i v e E l e m e n t ( d o c ) )   { 
         r e t u r n ; 
     }   / /   O n l y   f i r e   w h e n   s e l e c t i o n   h a s   a c t u a l l y   c h a n g e d . 
 
 
     v a r   c u r r e n t S e l e c t i o n   =   g e t S e l e c t i o n $ 1 ( a c t i v e E l e m e n t $ 1 ) ; 
 
     i f   ( ! l a s t S e l e c t i o n   | |   ! s h a l l o w E q u a l ( l a s t S e l e c t i o n ,   c u r r e n t S e l e c t i o n ) )   { 
         l a s t S e l e c t i o n   =   c u r r e n t S e l e c t i o n ; 
         v a r   l i s t e n e r s   =   a c c u m u l a t e T w o P h a s e L i s t e n e r s ( a c t i v e E l e m e n t I n s t $ 1 ,   ' o n S e l e c t ' ) ; 
 
         i f   ( l i s t e n e r s . l e n g t h   >   0 )   { 
             v a r   e v e n t   =   n e w   S y n t h e t i c E v e n t ( ' o n S e l e c t ' ,   ' s e l e c t ' ,   n u l l ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ) ; 
             d i s p a t c h Q u e u e . p u s h ( { 
                 e v e n t :   e v e n t , 
                 l i s t e n e r s :   l i s t e n e r s 
             } ) ; 
             e v e n t . t a r g e t   =   a c t i v e E l e m e n t $ 1 ; 
         } 
     } 
 } 
 / * * 
   *   T h i s   p l u g i n   c r e a t e s   a n   ` o n S e l e c t `   e v e n t   t h a t   n o r m a l i z e s   s e l e c t   e v e n t s 
   *   a c r o s s   f o r m   e l e m e n t s . 
   * 
   *   S u p p o r t e d   e l e m e n t s   a r e : 
   *   -   i n p u t   ( s e e   ` i s T e x t I n p u t E l e m e n t ` ) 
   *   -   t e x t a r e a 
   *   -   c o n t e n t E d i t a b l e 
   * 
   *   T h i s   d i f f e r s   f r o m   n a t i v e   b r o w s e r   i m p l e m e n t a t i o n s   i n   t h e   f o l l o w i n g   w a y s : 
   *   -   F i r e s   o n   c o n t e n t E d i t a b l e   f i e l d s   a s   w e l l   a s   i n p u t s . 
   *   -   F i r e s   f o r   c o l l a p s e d   s e l e c t i o n . 
   *   -   F i r e s   a f t e r   u s e r   i n p u t . 
   * / 
 
 
 f u n c t i o n   e x t r a c t E v e n t s $ 3 ( d i s p a t c h Q u e u e ,   d o m E v e n t N a m e ,   t a r g e t I n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r )   { 
     v a r   t a r g e t N o d e   =   t a r g e t I n s t   ?   g e t N o d e F r o m I n s t a n c e ( t a r g e t I n s t )   :   w i n d o w ; 
 
     s w i t c h   ( d o m E v e n t N a m e )   { 
         / /   T r a c k   t h e   i n p u t   n o d e   t h a t   h a s   f o c u s . 
         c a s e   ' f o c u s i n ' : 
             i f   ( i s T e x t I n p u t E l e m e n t ( t a r g e t N o d e )   | |   t a r g e t N o d e . c o n t e n t E d i t a b l e   = = =   ' t r u e ' )   { 
                 a c t i v e E l e m e n t $ 1   =   t a r g e t N o d e ; 
                 a c t i v e E l e m e n t I n s t $ 1   =   t a r g e t I n s t ; 
                 l a s t S e l e c t i o n   =   n u l l ; 
             } 
 
             b r e a k ; 
 
         c a s e   ' f o c u s o u t ' : 
             a c t i v e E l e m e n t $ 1   =   n u l l ; 
             a c t i v e E l e m e n t I n s t $ 1   =   n u l l ; 
             l a s t S e l e c t i o n   =   n u l l ; 
             b r e a k ; 
         / /   D o n ' t   f i r e   t h e   e v e n t   w h i l e   t h e   u s e r   i s   d r a g g i n g .   T h i s   m a t c h e s   t h e 
         / /   s e m a n t i c s   o f   t h e   n a t i v e   s e l e c t   e v e n t . 
 
         c a s e   ' m o u s e d o w n ' : 
             m o u s e D o w n   =   t r u e ; 
             b r e a k ; 
 
         c a s e   ' c o n t e x t m e n u ' : 
         c a s e   ' m o u s e u p ' : 
         c a s e   ' d r a g e n d ' : 
             m o u s e D o w n   =   f a l s e ; 
             c o n s t r u c t S e l e c t E v e n t ( d i s p a t c h Q u e u e ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ) ; 
             b r e a k ; 
         / /   C h r o m e   a n d   I E   f i r e   n o n - s t a n d a r d   e v e n t   w h e n   s e l e c t i o n   i s   c h a n g e d   ( a n d 
         / /   s o m e t i m e s   w h e n   i t   h a s n ' t ) .   I E ' s   e v e n t   f i r e s   o u t   o f   o r d e r   w i t h   r e s p e c t 
         / /   t o   k e y   a n d   i n p u t   e v e n t s   o n   d e l e t i o n ,   s o   w e   d i s c a r d   i t . 
         / / 
         / /   F i r e f o x   d o e s n ' t   s u p p o r t   s e l e c t i o n c h a n g e ,   s o   c h e c k   s e l e c t i o n   s t a t u s 
         / /   a f t e r   e a c h   k e y   e n t r y .   T h e   s e l e c t i o n   c h a n g e s   a f t e r   k e y d o w n   a n d   b e f o r e 
         / /   k e y u p ,   b u t   w e   c h e c k   o n   k e y d o w n   a s   w e l l   i n   t h e   c a s e   o f   h o l d i n g   d o w n   a 
         / /   k e y ,   w h e n   m u l t i p l e   k e y d o w n   e v e n t s   a r e   f i r e d   b u t   o n l y   o n e   k e y u p   i s . 
         / /   T h i s   i s   a l s o   o u r   a p p r o a c h   f o r   I E   h a n d l i n g ,   f o r   t h e   r e a s o n   a b o v e . 
 
         c a s e   ' s e l e c t i o n c h a n g e ' : 
             i f   ( s k i p S e l e c t i o n C h a n g e E v e n t )   { 
                 b r e a k ; 
             } 
 
         / /   f a l l s   t h r o u g h 
 
         c a s e   ' k e y d o w n ' : 
         c a s e   ' k e y u p ' : 
             c o n s t r u c t S e l e c t E v e n t ( d i s p a t c h Q u e u e ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ) ; 
     } 
 } 
 
 / * * 
   *   G e n e r a t e   a   m a p p i n g   o f   s t a n d a r d   v e n d o r   p r e f i x e s   u s i n g   t h e   d e f i n e d   s t y l e   p r o p e r t y   a n d   e v e n t   n a m e . 
   * 
   *   @ p a r a m   { s t r i n g }   s t y l e P r o p 
   *   @ p a r a m   { s t r i n g }   e v e n t N a m e 
   *   @ r e t u r n s   { o b j e c t } 
   * / 
 
 f u n c t i o n   m a k e P r e f i x M a p ( s t y l e P r o p ,   e v e n t N a m e )   { 
     v a r   p r e f i x e s   =   { } ; 
     p r e f i x e s [ s t y l e P r o p . t o L o w e r C a s e ( ) ]   =   e v e n t N a m e . t o L o w e r C a s e ( ) ; 
     p r e f i x e s [ ' W e b k i t '   +   s t y l e P r o p ]   =   ' w e b k i t '   +   e v e n t N a m e ; 
     p r e f i x e s [ ' M o z '   +   s t y l e P r o p ]   =   ' m o z '   +   e v e n t N a m e ; 
     r e t u r n   p r e f i x e s ; 
 } 
 / * * 
   *   A   l i s t   o f   e v e n t   n a m e s   t o   a   c o n f i g u r a b l e   l i s t   o f   v e n d o r   p r e f i x e s . 
   * / 
 
 
 v a r   v e n d o r P r e f i x e s   =   { 
     a n i m a t i o n e n d :   m a k e P r e f i x M a p ( ' A n i m a t i o n ' ,   ' A n i m a t i o n E n d ' ) , 
     a n i m a t i o n i t e r a t i o n :   m a k e P r e f i x M a p ( ' A n i m a t i o n ' ,   ' A n i m a t i o n I t e r a t i o n ' ) , 
     a n i m a t i o n s t a r t :   m a k e P r e f i x M a p ( ' A n i m a t i o n ' ,   ' A n i m a t i o n S t a r t ' ) , 
     t r a n s i t i o n e n d :   m a k e P r e f i x M a p ( ' T r a n s i t i o n ' ,   ' T r a n s i t i o n E n d ' ) 
 } ; 
 / * * 
   *   E v e n t   n a m e s   t h a t   h a v e   a l r e a d y   b e e n   d e t e c t e d   a n d   p r e f i x e d   ( i f   a p p l i c a b l e ) . 
   * / 
 
 v a r   p r e f i x e d E v e n t N a m e s   =   { } ; 
 / * * 
   *   E l e m e n t   t o   c h e c k   f o r   p r e f i x e s   o n . 
   * / 
 
 v a r   s t y l e   =   { } ; 
 / * * 
   *   B o o t s t r a p   i f   a   D O M   e x i s t s . 
   * / 
 
 i f   ( c a n U s e D O M )   { 
     s t y l e   =   d o c u m e n t . c r e a t e E l e m e n t ( ' d i v ' ) . s t y l e ;   / /   O n   s o m e   p l a t f o r m s ,   i n   p a r t i c u l a r   s o m e   r e l e a s e s   o f   A n d r o i d   4 . x , 
     / /   t h e   u n - p r e f i x e d   " a n i m a t i o n "   a n d   " t r a n s i t i o n "   p r o p e r t i e s   a r e   d e f i n e d   o n   t h e 
     / /   s t y l e   o b j e c t   b u t   t h e   e v e n t s   t h a t   f i r e   w i l l   s t i l l   b e   p r e f i x e d ,   s o   w e   n e e d 
     / /   t o   c h e c k   i f   t h e   u n - p r e f i x e d   e v e n t s   a r e   u s a b l e ,   a n d   i f   n o t   r e m o v e   t h e m   f r o m   t h e   m a p . 
 
     i f   ( ! ( ' A n i m a t i o n E v e n t '   i n   w i n d o w ) )   { 
         d e l e t e   v e n d o r P r e f i x e s . a n i m a t i o n e n d . a n i m a t i o n ; 
         d e l e t e   v e n d o r P r e f i x e s . a n i m a t i o n i t e r a t i o n . a n i m a t i o n ; 
         d e l e t e   v e n d o r P r e f i x e s . a n i m a t i o n s t a r t . a n i m a t i o n ; 
     }   / /   S a m e   a s   a b o v e 
 
 
     i f   ( ! ( ' T r a n s i t i o n E v e n t '   i n   w i n d o w ) )   { 
         d e l e t e   v e n d o r P r e f i x e s . t r a n s i t i o n e n d . t r a n s i t i o n ; 
     } 
 } 
 / * * 
   *   A t t e m p t s   t o   d e t e r m i n e   t h e   c o r r e c t   v e n d o r   p r e f i x e d   e v e n t   n a m e . 
   * 
   *   @ p a r a m   { s t r i n g }   e v e n t N a m e 
   *   @ r e t u r n s   { s t r i n g } 
   * / 
 
 
 f u n c t i o n   g e t V e n d o r P r e f i x e d E v e n t N a m e ( e v e n t N a m e )   { 
     i f   ( p r e f i x e d E v e n t N a m e s [ e v e n t N a m e ] )   { 
         r e t u r n   p r e f i x e d E v e n t N a m e s [ e v e n t N a m e ] ; 
     }   e l s e   i f   ( ! v e n d o r P r e f i x e s [ e v e n t N a m e ] )   { 
         r e t u r n   e v e n t N a m e ; 
     } 
 
     v a r   p r e f i x M a p   =   v e n d o r P r e f i x e s [ e v e n t N a m e ] ; 
 
     f o r   ( v a r   s t y l e P r o p   i n   p r e f i x M a p )   { 
         i f   ( p r e f i x M a p . h a s O w n P r o p e r t y ( s t y l e P r o p )   & &   s t y l e P r o p   i n   s t y l e )   { 
             r e t u r n   p r e f i x e d E v e n t N a m e s [ e v e n t N a m e ]   =   p r e f i x M a p [ s t y l e P r o p ] ; 
         } 
     } 
 
     r e t u r n   e v e n t N a m e ; 
 } 
 
 v a r   A N I M A T I O N _ E N D   =   g e t V e n d o r P r e f i x e d E v e n t N a m e ( ' a n i m a t i o n e n d ' ) ; 
 v a r   A N I M A T I O N _ I T E R A T I O N   =   g e t V e n d o r P r e f i x e d E v e n t N a m e ( ' a n i m a t i o n i t e r a t i o n ' ) ; 
 v a r   A N I M A T I O N _ S T A R T   =   g e t V e n d o r P r e f i x e d E v e n t N a m e ( ' a n i m a t i o n s t a r t ' ) ; 
 v a r   T R A N S I T I O N _ E N D   =   g e t V e n d o r P r e f i x e d E v e n t N a m e ( ' t r a n s i t i o n e n d ' ) ; 
 
 v a r   t o p L e v e l E v e n t s T o R e a c t N a m e s   =   n e w   M a p ( ) ;   / /   N O T E :   C a p i t a l i z a t i o n   i s   i m p o r t a n t   i n   t h i s   l i s t ! 
 / / 
 / /   E . g .   i t   n e e d s   " p o i n t e r D o w n " ,   n o t   " p o i n t e r d o w n " . 
 / /   T h i s   i s   b e c a u s e   w e   d e r i v e   b o t h   R e a c t   n a m e   ( " o n P o i n t e r D o w n " ) 
 / /   a n d   D O M   n a m e   ( " p o i n t e r d o w n " )   f r o m   t h e   s a m e   l i s t . 
 / / 
 / /   E x c e p t i o n s   t h a t   d o n ' t   m a t c h   t h i s   c o n v e n t i o n   a r e   l i s t e d   s e p a r a t e l y . 
 / / 
 / /   p r e t t i e r - i g n o r e 
 
 v a r   s i m p l e E v e n t P l u g i n E v e n t s   =   [ ' a b o r t ' ,   ' a u x C l i c k ' ,   ' c a n c e l ' ,   ' c a n P l a y ' ,   ' c a n P l a y T h r o u g h ' ,   ' c l i c k ' ,   ' c l o s e ' ,   ' c o n t e x t M e n u ' ,   ' c o p y ' ,   ' c u t ' ,   ' d r a g ' ,   ' d r a g E n d ' ,   ' d r a g E n t e r ' ,   ' d r a g E x i t ' ,   ' d r a g L e a v e ' ,   ' d r a g O v e r ' ,   ' d r a g S t a r t ' ,   ' d r o p ' ,   ' d u r a t i o n C h a n g e ' ,   ' e m p t i e d ' ,   ' e n c r y p t e d ' ,   ' e n d e d ' ,   ' e r r o r ' ,   ' g o t P o i n t e r C a p t u r e ' ,   ' i n p u t ' ,   ' i n v a l i d ' ,   ' k e y D o w n ' ,   ' k e y P r e s s ' ,   ' k e y U p ' ,   ' l o a d ' ,   ' l o a d e d D a t a ' ,   ' l o a d e d M e t a d a t a ' ,   ' l o a d S t a r t ' ,   ' l o s t P o i n t e r C a p t u r e ' ,   ' m o u s e D o w n ' ,   ' m o u s e M o v e ' ,   ' m o u s e O u t ' ,   ' m o u s e O v e r ' ,   ' m o u s e U p ' ,   ' p a s t e ' ,   ' p a u s e ' ,   ' p l a y ' ,   ' p l a y i n g ' ,   ' p o i n t e r C a n c e l ' ,   ' p o i n t e r D o w n ' ,   ' p o i n t e r M o v e ' ,   ' p o i n t e r O u t ' ,   ' p o i n t e r O v e r ' ,   ' p o i n t e r U p ' ,   ' p r o g r e s s ' ,   ' r a t e C h a n g e ' ,   ' r e s e t ' ,   ' r e s i z e ' ,   ' s e e k e d ' ,   ' s e e k i n g ' ,   ' s t a l l e d ' ,   ' s u b m i t ' ,   ' s u s p e n d ' ,   ' t i m e U p d a t e ' ,   ' t o u c h C a n c e l ' ,   ' t o u c h E n d ' ,   ' t o u c h S t a r t ' ,   ' v o l u m e C h a n g e ' ,   ' s c r o l l ' ,   ' t o g g l e ' ,   ' t o u c h M o v e ' ,   ' w a i t i n g ' ,   ' w h e e l ' ] ; 
 
 f u n c t i o n   r e g i s t e r S i m p l e E v e n t ( d o m E v e n t N a m e ,   r e a c t N a m e )   { 
     t o p L e v e l E v e n t s T o R e a c t N a m e s . s e t ( d o m E v e n t N a m e ,   r e a c t N a m e ) ; 
     r e g i s t e r T w o P h a s e E v e n t ( r e a c t N a m e ,   [ d o m E v e n t N a m e ] ) ; 
 } 
 
 f u n c t i o n   r e g i s t e r S i m p l e E v e n t s ( )   { 
     f o r   ( v a r   i   =   0 ;   i   <   s i m p l e E v e n t P l u g i n E v e n t s . l e n g t h ;   i + + )   { 
         v a r   e v e n t N a m e   =   s i m p l e E v e n t P l u g i n E v e n t s [ i ] ; 
         v a r   d o m E v e n t N a m e   =   e v e n t N a m e . t o L o w e r C a s e ( ) ; 
         v a r   c a p i t a l i z e d E v e n t   =   e v e n t N a m e [ 0 ] . t o U p p e r C a s e ( )   +   e v e n t N a m e . s l i c e ( 1 ) ; 
         r e g i s t e r S i m p l e E v e n t ( d o m E v e n t N a m e ,   ' o n '   +   c a p i t a l i z e d E v e n t ) ; 
     }   / /   S p e c i a l   c a s e s   w h e r e   e v e n t   n a m e s   d o n ' t   m a t c h . 
 
 
     r e g i s t e r S i m p l e E v e n t ( A N I M A T I O N _ E N D ,   ' o n A n i m a t i o n E n d ' ) ; 
     r e g i s t e r S i m p l e E v e n t ( A N I M A T I O N _ I T E R A T I O N ,   ' o n A n i m a t i o n I t e r a t i o n ' ) ; 
     r e g i s t e r S i m p l e E v e n t ( A N I M A T I O N _ S T A R T ,   ' o n A n i m a t i o n S t a r t ' ) ; 
     r e g i s t e r S i m p l e E v e n t ( ' d b l c l i c k ' ,   ' o n D o u b l e C l i c k ' ) ; 
     r e g i s t e r S i m p l e E v e n t ( ' f o c u s i n ' ,   ' o n F o c u s ' ) ; 
     r e g i s t e r S i m p l e E v e n t ( ' f o c u s o u t ' ,   ' o n B l u r ' ) ; 
     r e g i s t e r S i m p l e E v e n t ( T R A N S I T I O N _ E N D ,   ' o n T r a n s i t i o n E n d ' ) ; 
 } 
 
 f u n c t i o n   e x t r a c t E v e n t s $ 4 ( d i s p a t c h Q u e u e ,   d o m E v e n t N a m e ,   t a r g e t I n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r )   { 
     v a r   r e a c t N a m e   =   t o p L e v e l E v e n t s T o R e a c t N a m e s . g e t ( d o m E v e n t N a m e ) ; 
 
     i f   ( r e a c t N a m e   = = =   u n d e f i n e d )   { 
         r e t u r n ; 
     } 
 
     v a r   S y n t h e t i c E v e n t C t o r   =   S y n t h e t i c E v e n t ; 
     v a r   r e a c t E v e n t T y p e   =   d o m E v e n t N a m e ; 
 
     s w i t c h   ( d o m E v e n t N a m e )   { 
         c a s e   ' k e y p r e s s ' : 
             / /   F i r e f o x   c r e a t e s   a   k e y p r e s s   e v e n t   f o r   f u n c t i o n   k e y s   t o o .   T h i s   r e m o v e s 
             / /   t h e   u n w a n t e d   k e y p r e s s   e v e n t s .   E n t e r   i s   h o w e v e r   b o t h   p r i n t a b l e   a n d 
             / /   n o n - p r i n t a b l e .   O n e   w o u l d   e x p e c t   T a b   t o   b e   a s   w e l l   ( b u t   i t   i s n ' t ) . 
             i f   ( g e t E v e n t C h a r C o d e ( n a t i v e E v e n t )   = = =   0 )   { 
                 r e t u r n ; 
             } 
 
         / *   f a l l s   t h r o u g h   * / 
 
         c a s e   ' k e y d o w n ' : 
         c a s e   ' k e y u p ' : 
             S y n t h e t i c E v e n t C t o r   =   S y n t h e t i c K e y b o a r d E v e n t ; 
             b r e a k ; 
 
         c a s e   ' f o c u s i n ' : 
             r e a c t E v e n t T y p e   =   ' f o c u s ' ; 
             S y n t h e t i c E v e n t C t o r   =   S y n t h e t i c F o c u s E v e n t ; 
             b r e a k ; 
 
         c a s e   ' f o c u s o u t ' : 
             r e a c t E v e n t T y p e   =   ' b l u r ' ; 
             S y n t h e t i c E v e n t C t o r   =   S y n t h e t i c F o c u s E v e n t ; 
             b r e a k ; 
 
         c a s e   ' b e f o r e b l u r ' : 
         c a s e   ' a f t e r b l u r ' : 
             S y n t h e t i c E v e n t C t o r   =   S y n t h e t i c F o c u s E v e n t ; 
             b r e a k ; 
 
         c a s e   ' c l i c k ' : 
             / /   F i r e f o x   c r e a t e s   a   c l i c k   e v e n t   o n   r i g h t   m o u s e   c l i c k s .   T h i s   r e m o v e s   t h e 
             / /   u n w a n t e d   c l i c k   e v e n t s . 
             i f   ( n a t i v e E v e n t . b u t t o n   = = =   2 )   { 
                 r e t u r n ; 
             } 
 
         / *   f a l l s   t h r o u g h   * / 
 
         c a s e   ' a u x c l i c k ' : 
         c a s e   ' d b l c l i c k ' : 
         c a s e   ' m o u s e d o w n ' : 
         c a s e   ' m o u s e m o v e ' : 
         c a s e   ' m o u s e u p ' :   / /   T O D O :   D i s a b l e d   e l e m e n t s   s h o u l d   n o t   r e s p o n d   t o   m o u s e   e v e n t s 
 
         / *   f a l l s   t h r o u g h   * / 
 
         c a s e   ' m o u s e o u t ' : 
         c a s e   ' m o u s e o v e r ' : 
         c a s e   ' c o n t e x t m e n u ' : 
             S y n t h e t i c E v e n t C t o r   =   S y n t h e t i c M o u s e E v e n t ; 
             b r e a k ; 
 
         c a s e   ' d r a g ' : 
         c a s e   ' d r a g e n d ' : 
         c a s e   ' d r a g e n t e r ' : 
         c a s e   ' d r a g e x i t ' : 
         c a s e   ' d r a g l e a v e ' : 
         c a s e   ' d r a g o v e r ' : 
         c a s e   ' d r a g s t a r t ' : 
         c a s e   ' d r o p ' : 
             S y n t h e t i c E v e n t C t o r   =   S y n t h e t i c D r a g E v e n t ; 
             b r e a k ; 
 
         c a s e   ' t o u c h c a n c e l ' : 
         c a s e   ' t o u c h e n d ' : 
         c a s e   ' t o u c h m o v e ' : 
         c a s e   ' t o u c h s t a r t ' : 
             S y n t h e t i c E v e n t C t o r   =   S y n t h e t i c T o u c h E v e n t ; 
             b r e a k ; 
 
         c a s e   A N I M A T I O N _ E N D : 
         c a s e   A N I M A T I O N _ I T E R A T I O N : 
         c a s e   A N I M A T I O N _ S T A R T : 
             S y n t h e t i c E v e n t C t o r   =   S y n t h e t i c A n i m a t i o n E v e n t ; 
             b r e a k ; 
 
         c a s e   T R A N S I T I O N _ E N D : 
             S y n t h e t i c E v e n t C t o r   =   S y n t h e t i c T r a n s i t i o n E v e n t ; 
             b r e a k ; 
 
         c a s e   ' s c r o l l ' : 
             S y n t h e t i c E v e n t C t o r   =   S y n t h e t i c U I E v e n t ; 
             b r e a k ; 
 
         c a s e   ' w h e e l ' : 
             S y n t h e t i c E v e n t C t o r   =   S y n t h e t i c W h e e l E v e n t ; 
             b r e a k ; 
 
         c a s e   ' c o p y ' : 
         c a s e   ' c u t ' : 
         c a s e   ' p a s t e ' : 
             S y n t h e t i c E v e n t C t o r   =   S y n t h e t i c C l i p b o a r d E v e n t ; 
             b r e a k ; 
 
         c a s e   ' g o t p o i n t e r c a p t u r e ' : 
         c a s e   ' l o s t p o i n t e r c a p t u r e ' : 
         c a s e   ' p o i n t e r c a n c e l ' : 
         c a s e   ' p o i n t e r d o w n ' : 
         c a s e   ' p o i n t e r m o v e ' : 
         c a s e   ' p o i n t e r o u t ' : 
         c a s e   ' p o i n t e r o v e r ' : 
         c a s e   ' p o i n t e r u p ' : 
             S y n t h e t i c E v e n t C t o r   =   S y n t h e t i c P o i n t e r E v e n t ; 
             b r e a k ; 
     } 
 
     v a r   i n C a p t u r e P h a s e   =   ( e v e n t S y s t e m F l a g s   &   I S _ C A P T U R E _ P H A S E )   ! = =   0 ; 
 
     { 
         / /   S o m e   e v e n t s   d o n ' t   b u b b l e   i n   t h e   b r o w s e r . 
         / /   I n   t h e   p a s t ,   R e a c t   h a s   a l w a y s   b u b b l e d   t h e m ,   b u t   t h i s   c a n   b e   s u r p r i s i n g . 
         / /   W e ' r e   g o i n g   t o   t r y   a l i g n i n g   c l o s e r   t o   t h e   b r o w s e r   b e h a v i o r   b y   n o t   b u b b l i n g 
         / /   t h e m   i n   R e a c t   e i t h e r .   W e ' l l   s t a r t   b y   n o t   b u b b l i n g   o n S c r o l l ,   a n d   t h e n   e x p a n d . 
         v a r   a c c u m u l a t e T a r g e t O n l y   =   ! i n C a p t u r e P h a s e   & &   / /   T O D O :   i d e a l l y ,   w e ' d   e v e n t u a l l y   a d d   a l l   e v e n t s   f r o m 
         / /   n o n D e l e g a t e d E v e n t s   l i s t   i n   D O M P l u g i n E v e n t S y s t e m . 
         / /   T h e n   w e   c a n   r e m o v e   t h i s   s p e c i a l   l i s t . 
         / /   T h i s   i s   a   b r e a k i n g   c h a n g e   t h a t   c a n   w a i t   u n t i l   R e a c t   1 8 . 
         d o m E v e n t N a m e   = = =   ' s c r o l l ' ; 
 
         v a r   _ l i s t e n e r s   =   a c c u m u l a t e S i n g l e P h a s e L i s t e n e r s ( t a r g e t I n s t ,   r e a c t N a m e ,   n a t i v e E v e n t . t y p e ,   i n C a p t u r e P h a s e ,   a c c u m u l a t e T a r g e t O n l y ) ; 
 
         i f   ( _ l i s t e n e r s . l e n g t h   >   0 )   { 
             / /   I n t e n t i o n a l l y   c r e a t e   e v e n t   l a z i l y . 
             v a r   _ e v e n t   =   n e w   S y n t h e t i c E v e n t C t o r ( r e a c t N a m e ,   r e a c t E v e n t T y p e ,   n u l l ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ) ; 
 
             d i s p a t c h Q u e u e . p u s h ( { 
                 e v e n t :   _ e v e n t , 
                 l i s t e n e r s :   _ l i s t e n e r s 
             } ) ; 
         } 
     } 
 } 
 
 / /   T O D O :   r e m o v e   t o p - l e v e l   s i d e   e f f e c t . 
 r e g i s t e r S i m p l e E v e n t s ( ) ; 
 r e g i s t e r E v e n t s $ 2 ( ) ; 
 r e g i s t e r E v e n t s $ 1 ( ) ; 
 r e g i s t e r E v e n t s $ 3 ( ) ; 
 r e g i s t e r E v e n t s ( ) ; 
 
 f u n c t i o n   e x t r a c t E v e n t s $ 5 ( d i s p a t c h Q u e u e ,   d o m E v e n t N a m e ,   t a r g e t I n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ,   e v e n t S y s t e m F l a g s ,   t a r g e t C o n t a i n e r )   { 
     / /   T O D O :   w e   s h o u l d   r e m o v e   t h e   c o n c e p t   o f   a   " S i m p l e E v e n t P l u g i n " . 
     / /   T h i s   i s   t h e   b a s i c   f u n c t i o n a l i t y   o f   t h e   e v e n t   s y s t e m .   A l l 
     / /   t h e   o t h e r   p l u g i n s   a r e   e s s e n t i a l l y   p o l y f i l l s .   S o   t h e   p l u g i n 
     / /   s h o u l d   p r o b a b l y   b e   i n l i n e d   s o m e w h e r e   a n d   h a v e   i t s   l o g i c 
     / /   b e   c o r e   t h e   t o   e v e n t   s y s t e m .   T h i s   w o u l d   p o t e n t i a l l y   a l l o w 
     / /   u s   t o   s h i p   b u i l d s   o f   R e a c t   w i t h o u t   t h e   p o l y f i l l e d   p l u g i n s   b e l o w . 
     e x t r a c t E v e n t s $ 4 ( d i s p a t c h Q u e u e ,   d o m E v e n t N a m e ,   t a r g e t I n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ,   e v e n t S y s t e m F l a g s ) ; 
     v a r   s h o u l d P r o c e s s P o l y f i l l P l u g i n s   =   ( e v e n t S y s t e m F l a g s   &   S H O U L D _ N O T _ P R O C E S S _ P O L Y F I L L _ E V E N T _ P L U G I N S )   = = =   0 ;   / /   W e   d o n ' t   p r o c e s s   t h e s e   e v e n t s   u n l e s s   w e   a r e   i n   t h e 
     / /   e v e n t ' s   n a t i v e   " b u b b l e "   p h a s e ,   w h i c h   m e a n s   t h a t   w e ' r e 
     / /   n o t   i n   t h e   c a p t u r e   p h a s e .   T h a t ' s   b e c a u s e   w e   e m u l a t e 
     / /   t h e   c a p t u r e   p h a s e   h e r e   s t i l l .   T h i s   i s   a   t r a d e - o f f , 
     / /   b e c a u s e   i n   a n   i d e a l   w o r l d   w e   w o u l d   n o t   e m u l a t e   a n d   u s e 
     / /   t h e   p h a s e s   p r o p e r l y ,   l i k e   w e   d o   w i t h   t h e   S i m p l e E v e n t 
     / /   p l u g i n .   H o w e v e r ,   t h e   p l u g i n s   b e l o w   e i t h e r   e x p e c t 
     / /   e m u l a t i o n   ( E n t e r L e a v e )   o r   u s e   s t a t e   l o c a l i z e d   t o   t h a t 
     / /   p l u g i n   ( B e f o r e I n p u t ,   C h a n g e ,   S e l e c t ) .   T h e   s t a t e   i n 
     / /   t h e s e   m o d u l e s   c o m p l i c a t e s   t h i n g s ,   a s   y o u ' l l   e s s e n t i a l l y 
     / /   g e t   t h e   c a s e   w h e r e   t h e   c a p t u r e   p h a s e   e v e n t   m i g h t   c h a n g e 
     / /   s t a t e ,   o n l y   f o r   t h e   f o l l o w i n g   b u b b l e   e v e n t   t o   c o m e   i n 
     / /   l a t e r   a n d   n o t   t r i g g e r   a n y t h i n g   a s   t h e   s t a t e   n o w 
     / /   i n v a l i d a t e s   t h e   h e u r i s t i c s   o f   t h e   e v e n t   p l u g i n .   W e 
     / /   c o u l d   a l t e r   a l l   t h e s e   p l u g i n s   t o   w o r k   i n   s u c h   w a y s ,   b u t 
     / /   t h a t   m i g h t   c a u s e   o t h e r   u n k n o w n   s i d e - e f f e c t s   t h a t   w e 
     / /   c a n ' t   f o r e s e e   r i g h t   n o w . 
 
     i f   ( s h o u l d P r o c e s s P o l y f i l l P l u g i n s )   { 
         e x t r a c t E v e n t s $ 2 ( d i s p a t c h Q u e u e ,   d o m E v e n t N a m e ,   t a r g e t I n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ) ; 
         e x t r a c t E v e n t s $ 1 ( d i s p a t c h Q u e u e ,   d o m E v e n t N a m e ,   t a r g e t I n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ) ; 
         e x t r a c t E v e n t s $ 3 ( d i s p a t c h Q u e u e ,   d o m E v e n t N a m e ,   t a r g e t I n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ) ; 
         e x t r a c t E v e n t s ( d i s p a t c h Q u e u e ,   d o m E v e n t N a m e ,   t a r g e t I n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ) ; 
     } 
 }   / /   L i s t   o f   e v e n t s   t h a t   n e e d   t o   b e   i n d i v i d u a l l y   a t t a c h e d   t o   m e d i a   e l e m e n t s . 
 
 
 v a r   m e d i a E v e n t T y p e s   =   [ ' a b o r t ' ,   ' c a n p l a y ' ,   ' c a n p l a y t h r o u g h ' ,   ' d u r a t i o n c h a n g e ' ,   ' e m p t i e d ' ,   ' e n c r y p t e d ' ,   ' e n d e d ' ,   ' e r r o r ' ,   ' l o a d e d d a t a ' ,   ' l o a d e d m e t a d a t a ' ,   ' l o a d s t a r t ' ,   ' p a u s e ' ,   ' p l a y ' ,   ' p l a y i n g ' ,   ' p r o g r e s s ' ,   ' r a t e c h a n g e ' ,   ' r e s i z e ' ,   ' s e e k e d ' ,   ' s e e k i n g ' ,   ' s t a l l e d ' ,   ' s u s p e n d ' ,   ' t i m e u p d a t e ' ,   ' v o l u m e c h a n g e ' ,   ' w a i t i n g ' ] ;   / /   W e   s h o u l d   n o t   d e l e g a t e   t h e s e   e v e n t s   t o   t h e   c o n t a i n e r ,   b u t   r a t h e r 
 / /   s e t   t h e m   o n   t h e   a c t u a l   t a r g e t   e l e m e n t   i t s e l f .   T h i s   i s   p r i m a r i l y 
 / /   b e c a u s e   t h e s e   e v e n t s   d o   n o t   c o n s i s t e n t l y   b u b b l e   i n   t h e   D O M . 
 
 v a r   n o n D e l e g a t e d E v e n t s   =   n e w   S e t ( [ ' c a n c e l ' ,   ' c l o s e ' ,   ' i n v a l i d ' ,   ' l o a d ' ,   ' s c r o l l ' ,   ' t o g g l e ' ] . c o n c a t ( m e d i a E v e n t T y p e s ) ) ; 
 
 f u n c t i o n   e x e c u t e D i s p a t c h ( e v e n t ,   l i s t e n e r ,   c u r r e n t T a r g e t )   { 
     v a r   t y p e   =   e v e n t . t y p e   | |   ' u n k n o w n - e v e n t ' ; 
     e v e n t . c u r r e n t T a r g e t   =   c u r r e n t T a r g e t ; 
     i n v o k e G u a r d e d C a l l b a c k A n d C a t c h F i r s t E r r o r ( t y p e ,   l i s t e n e r ,   u n d e f i n e d ,   e v e n t ) ; 
     e v e n t . c u r r e n t T a r g e t   =   n u l l ; 
 } 
 
 f u n c t i o n   p r o c e s s D i s p a t c h Q u e u e I t e m s I n O r d e r ( e v e n t ,   d i s p a t c h L i s t e n e r s ,   i n C a p t u r e P h a s e )   { 
     v a r   p r e v i o u s I n s t a n c e ; 
 
     i f   ( i n C a p t u r e P h a s e )   { 
         f o r   ( v a r   i   =   d i s p a t c h L i s t e n e r s . l e n g t h   -   1 ;   i   > =   0 ;   i - - )   { 
             v a r   _ d i s p a t c h L i s t e n e r s $ i   =   d i s p a t c h L i s t e n e r s [ i ] , 
                     i n s t a n c e   =   _ d i s p a t c h L i s t e n e r s $ i . i n s t a n c e , 
                     c u r r e n t T a r g e t   =   _ d i s p a t c h L i s t e n e r s $ i . c u r r e n t T a r g e t , 
                     l i s t e n e r   =   _ d i s p a t c h L i s t e n e r s $ i . l i s t e n e r ; 
 
             i f   ( i n s t a n c e   ! = =   p r e v i o u s I n s t a n c e   & &   e v e n t . i s P r o p a g a t i o n S t o p p e d ( ) )   { 
                 r e t u r n ; 
             } 
 
             e x e c u t e D i s p a t c h ( e v e n t ,   l i s t e n e r ,   c u r r e n t T a r g e t ) ; 
             p r e v i o u s I n s t a n c e   =   i n s t a n c e ; 
         } 
     }   e l s e   { 
         f o r   ( v a r   _ i   =   0 ;   _ i   <   d i s p a t c h L i s t e n e r s . l e n g t h ;   _ i + + )   { 
             v a r   _ d i s p a t c h L i s t e n e r s $ _ i   =   d i s p a t c h L i s t e n e r s [ _ i ] , 
                     _ i n s t a n c e   =   _ d i s p a t c h L i s t e n e r s $ _ i . i n s t a n c e , 
                     _ c u r r e n t T a r g e t   =   _ d i s p a t c h L i s t e n e r s $ _ i . c u r r e n t T a r g e t , 
                     _ l i s t e n e r   =   _ d i s p a t c h L i s t e n e r s $ _ i . l i s t e n e r ; 
 
             i f   ( _ i n s t a n c e   ! = =   p r e v i o u s I n s t a n c e   & &   e v e n t . i s P r o p a g a t i o n S t o p p e d ( ) )   { 
                 r e t u r n ; 
             } 
 
             e x e c u t e D i s p a t c h ( e v e n t ,   _ l i s t e n e r ,   _ c u r r e n t T a r g e t ) ; 
             p r e v i o u s I n s t a n c e   =   _ i n s t a n c e ; 
         } 
     } 
 } 
 
 f u n c t i o n   p r o c e s s D i s p a t c h Q u e u e ( d i s p a t c h Q u e u e ,   e v e n t S y s t e m F l a g s )   { 
     v a r   i n C a p t u r e P h a s e   =   ( e v e n t S y s t e m F l a g s   &   I S _ C A P T U R E _ P H A S E )   ! = =   0 ; 
 
     f o r   ( v a r   i   =   0 ;   i   <   d i s p a t c h Q u e u e . l e n g t h ;   i + + )   { 
         v a r   _ d i s p a t c h Q u e u e $ i   =   d i s p a t c h Q u e u e [ i ] , 
                 e v e n t   =   _ d i s p a t c h Q u e u e $ i . e v e n t , 
                 l i s t e n e r s   =   _ d i s p a t c h Q u e u e $ i . l i s t e n e r s ; 
         p r o c e s s D i s p a t c h Q u e u e I t e m s I n O r d e r ( e v e n t ,   l i s t e n e r s ,   i n C a p t u r e P h a s e ) ;   / /     e v e n t   s y s t e m   d o e s n ' t   u s e   p o o l i n g . 
     }   / /   T h i s   w o u l d   b e   a   g o o d   t i m e   t o   r e t h r o w   i f   a n y   o f   t h e   e v e n t   h a n d l e r s   t h r e w . 
 
 
     r e t h r o w C a u g h t E r r o r ( ) ; 
 } 
 
 f u n c t i o n   d i s p a t c h E v e n t s F o r P l u g i n s ( d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   n a t i v e E v e n t ,   t a r g e t I n s t ,   t a r g e t C o n t a i n e r )   { 
     v a r   n a t i v e E v e n t T a r g e t   =   g e t E v e n t T a r g e t ( n a t i v e E v e n t ) ; 
     v a r   d i s p a t c h Q u e u e   =   [ ] ; 
     e x t r a c t E v e n t s $ 5 ( d i s p a t c h Q u e u e ,   d o m E v e n t N a m e ,   t a r g e t I n s t ,   n a t i v e E v e n t ,   n a t i v e E v e n t T a r g e t ,   e v e n t S y s t e m F l a g s ) ; 
     p r o c e s s D i s p a t c h Q u e u e ( d i s p a t c h Q u e u e ,   e v e n t S y s t e m F l a g s ) ; 
 } 
 
 f u n c t i o n   l i s t e n T o N o n D e l e g a t e d E v e n t ( d o m E v e n t N a m e ,   t a r g e t E l e m e n t )   { 
     { 
         i f   ( ! n o n D e l e g a t e d E v e n t s . h a s ( d o m E v e n t N a m e ) )   { 
             e r r o r ( ' D i d   n o t   e x p e c t   a   l i s t e n T o N o n D e l e g a t e d E v e n t ( )   c a l l   f o r   " % s " .   '   +   ' T h i s   i s   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ,   d o m E v e n t N a m e ) ; 
         } 
     } 
 
     v a r   i s C a p t u r e P h a s e L i s t e n e r   =   f a l s e ; 
     v a r   l i s t e n e r S e t   =   g e t E v e n t L i s t e n e r S e t ( t a r g e t E l e m e n t ) ; 
     v a r   l i s t e n e r S e t K e y   =   g e t L i s t e n e r S e t K e y ( d o m E v e n t N a m e ,   i s C a p t u r e P h a s e L i s t e n e r ) ; 
 
     i f   ( ! l i s t e n e r S e t . h a s ( l i s t e n e r S e t K e y ) )   { 
         a d d T r a p p e d E v e n t L i s t e n e r ( t a r g e t E l e m e n t ,   d o m E v e n t N a m e ,   I S _ N O N _ D E L E G A T E D ,   i s C a p t u r e P h a s e L i s t e n e r ) ; 
         l i s t e n e r S e t . a d d ( l i s t e n e r S e t K e y ) ; 
     } 
 } 
 f u n c t i o n   l i s t e n T o N a t i v e E v e n t ( d o m E v e n t N a m e ,   i s C a p t u r e P h a s e L i s t e n e r ,   t a r g e t )   { 
     { 
         i f   ( n o n D e l e g a t e d E v e n t s . h a s ( d o m E v e n t N a m e )   & &   ! i s C a p t u r e P h a s e L i s t e n e r )   { 
             e r r o r ( ' D i d   n o t   e x p e c t   a   l i s t e n T o N a t i v e E v e n t ( )   c a l l   f o r   " % s "   i n   t h e   b u b b l e   p h a s e .   '   +   ' T h i s   i s   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ,   d o m E v e n t N a m e ) ; 
         } 
     } 
 
     v a r   e v e n t S y s t e m F l a g s   =   0 ; 
 
     i f   ( i s C a p t u r e P h a s e L i s t e n e r )   { 
         e v e n t S y s t e m F l a g s   | =   I S _ C A P T U R E _ P H A S E ; 
     } 
 
     a d d T r a p p e d E v e n t L i s t e n e r ( t a r g e t ,   d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   i s C a p t u r e P h a s e L i s t e n e r ) ; 
 }   / /   T h i s   i s   o n l y   u s e d   b y   c r e a t e E v e n t H a n d l e   w h e n   t h e 
 v a r   l i s t e n i n g M a r k e r   =   ' _ r e a c t L i s t e n i n g '   +   M a t h . r a n d o m ( ) . t o S t r i n g ( 3 6 ) . s l i c e ( 2 ) ; 
 f u n c t i o n   l i s t e n T o A l l S u p p o r t e d E v e n t s ( r o o t C o n t a i n e r E l e m e n t )   { 
     i f   ( ! r o o t C o n t a i n e r E l e m e n t [ l i s t e n i n g M a r k e r ] )   { 
         r o o t C o n t a i n e r E l e m e n t [ l i s t e n i n g M a r k e r ]   =   t r u e ; 
         a l l N a t i v e E v e n t s . f o r E a c h ( f u n c t i o n   ( d o m E v e n t N a m e )   { 
             / /   W e   h a n d l e   s e l e c t i o n c h a n g e   s e p a r a t e l y   b e c a u s e   i t 
             / /   d o e s n ' t   b u b b l e   a n d   n e e d s   t o   b e   o n   t h e   d o c u m e n t . 
             i f   ( d o m E v e n t N a m e   ! = =   ' s e l e c t i o n c h a n g e ' )   { 
                 i f   ( ! n o n D e l e g a t e d E v e n t s . h a s ( d o m E v e n t N a m e ) )   { 
                     l i s t e n T o N a t i v e E v e n t ( d o m E v e n t N a m e ,   f a l s e ,   r o o t C o n t a i n e r E l e m e n t ) ; 
                 } 
 
                 l i s t e n T o N a t i v e E v e n t ( d o m E v e n t N a m e ,   t r u e ,   r o o t C o n t a i n e r E l e m e n t ) ; 
             } 
         } ) ; 
         v a r   o w n e r D o c u m e n t   =   r o o t C o n t a i n e r E l e m e n t . n o d e T y p e   = = =   D O C U M E N T _ N O D E   ?   r o o t C o n t a i n e r E l e m e n t   :   r o o t C o n t a i n e r E l e m e n t . o w n e r D o c u m e n t ; 
 
         i f   ( o w n e r D o c u m e n t   ! = =   n u l l )   { 
             / /   T h e   s e l e c t i o n c h a n g e   e v e n t   a l s o   n e e d s   d e d u p l i c a t i o n 
             / /   b u t   i t   i s   a t t a c h e d   t o   t h e   d o c u m e n t . 
             i f   ( ! o w n e r D o c u m e n t [ l i s t e n i n g M a r k e r ] )   { 
                 o w n e r D o c u m e n t [ l i s t e n i n g M a r k e r ]   =   t r u e ; 
                 l i s t e n T o N a t i v e E v e n t ( ' s e l e c t i o n c h a n g e ' ,   f a l s e ,   o w n e r D o c u m e n t ) ; 
             } 
         } 
     } 
 } 
 
 f u n c t i o n   a d d T r a p p e d E v e n t L i s t e n e r ( t a r g e t C o n t a i n e r ,   d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   i s C a p t u r e P h a s e L i s t e n e r ,   i s D e f e r r e d L i s t e n e r F o r L e g a c y F B S u p p o r t )   { 
     v a r   l i s t e n e r   =   c r e a t e E v e n t L i s t e n e r W r a p p e r W i t h P r i o r i t y ( t a r g e t C o n t a i n e r ,   d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ) ;   / /   I f   p a s s i v e   o p t i o n   i s   n o t   s u p p o r t e d ,   t h e n   t h e   e v e n t   w i l l   b e 
     / /   a c t i v e   a n d   n o t   p a s s i v e . 
 
     v a r   i s P a s s i v e L i s t e n e r   =   u n d e f i n e d ; 
 
     i f   ( p a s s i v e B r o w s e r E v e n t s S u p p o r t e d )   { 
         / /   B r o w s e r s   i n t r o d u c e d   a n   i n t e r v e n t i o n ,   m a k i n g   t h e s e   e v e n t s 
         / /   p a s s i v e   b y   d e f a u l t   o n   d o c u m e n t .   R e a c t   d o e s n ' t   b i n d   t h e m 
         / /   t o   d o c u m e n t   a n y m o r e ,   b u t   c h a n g i n g   t h i s   n o w   w o u l d   u n d o 
         / /   t h e   p e r f o r m a n c e   w i n s   f r o m   t h e   c h a n g e .   S o   w e   e m u l a t e 
         / /   t h e   e x i s t i n g   b e h a v i o r   m a n u a l l y   o n   t h e   r o o t s   n o w . 
         / /   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 9 6 5 1 
         i f   ( d o m E v e n t N a m e   = = =   ' t o u c h s t a r t '   | |   d o m E v e n t N a m e   = = =   ' t o u c h m o v e '   | |   d o m E v e n t N a m e   = = =   ' w h e e l ' )   { 
             i s P a s s i v e L i s t e n e r   =   t r u e ; 
         } 
     } 
 
     t a r g e t C o n t a i n e r   =     t a r g e t C o n t a i n e r ; 
     v a r   u n s u b s c r i b e L i s t e n e r ;   / /   W h e n   l e g a c y F B S u p p o r t   i s   e n a b l e d ,   i t ' s   f o r   w h e n   w e 
 
 
     i f   ( i s C a p t u r e P h a s e L i s t e n e r )   { 
         i f   ( i s P a s s i v e L i s t e n e r   ! = =   u n d e f i n e d )   { 
             u n s u b s c r i b e L i s t e n e r   =   a d d E v e n t C a p t u r e L i s t e n e r W i t h P a s s i v e F l a g ( t a r g e t C o n t a i n e r ,   d o m E v e n t N a m e ,   l i s t e n e r ,   i s P a s s i v e L i s t e n e r ) ; 
         }   e l s e   { 
             u n s u b s c r i b e L i s t e n e r   =   a d d E v e n t C a p t u r e L i s t e n e r ( t a r g e t C o n t a i n e r ,   d o m E v e n t N a m e ,   l i s t e n e r ) ; 
         } 
     }   e l s e   { 
         i f   ( i s P a s s i v e L i s t e n e r   ! = =   u n d e f i n e d )   { 
             u n s u b s c r i b e L i s t e n e r   =   a d d E v e n t B u b b l e L i s t e n e r W i t h P a s s i v e F l a g ( t a r g e t C o n t a i n e r ,   d o m E v e n t N a m e ,   l i s t e n e r ,   i s P a s s i v e L i s t e n e r ) ; 
         }   e l s e   { 
             u n s u b s c r i b e L i s t e n e r   =   a d d E v e n t B u b b l e L i s t e n e r ( t a r g e t C o n t a i n e r ,   d o m E v e n t N a m e ,   l i s t e n e r ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   i s M a t c h i n g R o o t C o n t a i n e r ( g r a n d C o n t a i n e r ,   t a r g e t C o n t a i n e r )   { 
     r e t u r n   g r a n d C o n t a i n e r   = = =   t a r g e t C o n t a i n e r   | |   g r a n d C o n t a i n e r . n o d e T y p e   = = =   C O M M E N T _ N O D E   & &   g r a n d C o n t a i n e r . p a r e n t N o d e   = = =   t a r g e t C o n t a i n e r ; 
 } 
 
 f u n c t i o n   d i s p a t c h E v e n t F o r P l u g i n E v e n t S y s t e m ( d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   n a t i v e E v e n t ,   t a r g e t I n s t ,   t a r g e t C o n t a i n e r )   { 
     v a r   a n c e s t o r I n s t   =   t a r g e t I n s t ; 
 
     i f   ( ( e v e n t S y s t e m F l a g s   &   I S _ E V E N T _ H A N D L E _ N O N _ M A N A G E D _ N O D E )   = = =   0   & &   ( e v e n t S y s t e m F l a g s   &   I S _ N O N _ D E L E G A T E D )   = = =   0 )   { 
         v a r   t a r g e t C o n t a i n e r N o d e   =   t a r g e t C o n t a i n e r ;   / /   I f   w e   a r e   u s i n g   t h e   l e g a c y   F B   s u p p o r t   f l a g ,   w e 
 
         i f   ( t a r g e t I n s t   ! = =   n u l l )   { 
             / /   T h e   b e l o w   l o g i c   a t t e m p t s   t o   w o r k   o u t   i f   w e   n e e d   t o   c h a n g e 
             / /   t h e   t a r g e t   f i b e r   t o   a   d i f f e r e n t   a n c e s t o r .   W e   h a d   s i m i l a r   l o g i c 
             / /   i n   t h e   l e g a c y   e v e n t   s y s t e m ,   e x c e p t   t h e   b i g   d i f f e r e n c e   b e t w e e n 
             / /   s y s t e m s   i s   t h a t   t h e   m o d e r n   e v e n t   s y s t e m   n o w   h a s   a n   e v e n t   l i s t e n e r 
             / /   a t t a c h e d   t o   e a c h   R e a c t   R o o t   a n d   R e a c t   P o r t a l   R o o t .   T o g e t h e r , 
             / /   t h e   D O M   n o d e s   r e p r e s e n t i n g   t h e s e   r o o t s   a r e   t h e   " r o o t C o n t a i n e r " . 
             / /   T o   f i g u r e   o u t   w h i c h   a n c e s t o r   i n s t a n c e   w e   s h o u l d   u s e ,   w e   t r a v e r s e 
             / /   u p   t h e   f i b e r   t r e e   f r o m   t h e   t a r g e t   i n s t a n c e   a n d   a t t e m p t   t o   f i n d 
             / /   r o o t   b o u n d a r i e s   t h a t   m a t c h   t h a t   o f   o u r   c u r r e n t   " r o o t C o n t a i n e r " . 
             / /   I f   w e   f i n d   t h a t   " r o o t C o n t a i n e r " ,   w e   f i n d   t h e   p a r e n t   f i b e r 
             / /   s u b - t r e e   f o r   t h a t   r o o t   a n d   m a k e   t h a t   o u r   a n c e s t o r   i n s t a n c e . 
             v a r   n o d e   =   t a r g e t I n s t ; 
 
             m a i n L o o p :   w h i l e   ( t r u e )   { 
                 i f   ( n o d e   = = =   n u l l )   { 
                     r e t u r n ; 
                 } 
 
                 v a r   n o d e T a g   =   n o d e . t a g ; 
 
                 i f   ( n o d e T a g   = = =   H o s t R o o t   | |   n o d e T a g   = = =   H o s t P o r t a l )   { 
                     v a r   c o n t a i n e r   =   n o d e . s t a t e N o d e . c o n t a i n e r I n f o ; 
 
                     i f   ( i s M a t c h i n g R o o t C o n t a i n e r ( c o n t a i n e r ,   t a r g e t C o n t a i n e r N o d e ) )   { 
                         b r e a k ; 
                     } 
 
                     i f   ( n o d e T a g   = = =   H o s t P o r t a l )   { 
                         / /   T h e   t a r g e t   i s   a   p o r t a l ,   b u t   i t ' s   n o t   t h e   r o o t C o n t a i n e r   w e ' r e   l o o k i n g   f o r . 
                         / /   N o r m a l l y   p o r t a l s   h a n d l e   t h e i r   o w n   e v e n t s   a l l   t h e   w a y   d o w n   t o   t h e   r o o t . 
                         / /   S o   w e   s h o u l d   b e   a b l e   t o   s t o p   n o w .   H o w e v e r ,   w e   d o n ' t   k n o w   i f   t h i s   p o r t a l 
                         / /   w a s   p a r t   o f   * o u r *   r o o t . 
                         v a r   g r a n d N o d e   =   n o d e . r e t u r n ; 
 
                         w h i l e   ( g r a n d N o d e   ! = =   n u l l )   { 
                             v a r   g r a n d T a g   =   g r a n d N o d e . t a g ; 
 
                             i f   ( g r a n d T a g   = = =   H o s t R o o t   | |   g r a n d T a g   = = =   H o s t P o r t a l )   { 
                                 v a r   g r a n d C o n t a i n e r   =   g r a n d N o d e . s t a t e N o d e . c o n t a i n e r I n f o ; 
 
                                 i f   ( i s M a t c h i n g R o o t C o n t a i n e r ( g r a n d C o n t a i n e r ,   t a r g e t C o n t a i n e r N o d e ) )   { 
                                     / /   T h i s   i s   t h e   r o o t C o n t a i n e r   w e ' r e   l o o k i n g   f o r   a n d   w e   f o u n d   i t   a s 
                                     / /   a   p a r e n t   o f   t h e   P o r t a l .   T h a t   m e a n s   w e   c a n   i g n o r e   i t   b e c a u s e   t h e 
                                     / /   P o r t a l   w i l l   b u b b l e   t h r o u g h   t o   u s . 
                                     r e t u r n ; 
                                 } 
                             } 
 
                             g r a n d N o d e   =   g r a n d N o d e . r e t u r n ; 
                         } 
                     }   / /   N o w   w e   n e e d   t o   f i n d   i t ' s   c o r r e s p o n d i n g   h o s t   f i b e r   i n   t h e   o t h e r 
                     / /   t r e e .   T o   d o   t h i s   w e   c a n   u s e   g e t C l o s e s t I n s t a n c e F r o m N o d e ,   b u t   w e 
                     / /   n e e d   t o   v a l i d a t e   t h a t   t h e   f i b e r   i s   a   h o s t   i n s t a n c e ,   o t h e r w i s e 
                     / /   w e   n e e d   t o   t r a v e r s e   u p   t h r o u g h   t h e   D O M   t i l l   w e   f i n d   t h e   c o r r e c t 
                     / /   n o d e   t h a t   i s   f r o m   t h e   o t h e r   t r e e . 
 
 
                     w h i l e   ( c o n t a i n e r   ! = =   n u l l )   { 
                         v a r   p a r e n t N o d e   =   g e t C l o s e s t I n s t a n c e F r o m N o d e ( c o n t a i n e r ) ; 
 
                         i f   ( p a r e n t N o d e   = = =   n u l l )   { 
                             r e t u r n ; 
                         } 
 
                         v a r   p a r e n t T a g   =   p a r e n t N o d e . t a g ; 
 
                         i f   ( p a r e n t T a g   = = =   H o s t C o m p o n e n t   | |   p a r e n t T a g   = = =   H o s t T e x t )   { 
                             n o d e   =   a n c e s t o r I n s t   =   p a r e n t N o d e ; 
                             c o n t i n u e   m a i n L o o p ; 
                         } 
 
                         c o n t a i n e r   =   c o n t a i n e r . p a r e n t N o d e ; 
                     } 
                 } 
 
                 n o d e   =   n o d e . r e t u r n ; 
             } 
         } 
     } 
 
     b a t c h e d U p d a t e s ( f u n c t i o n   ( )   { 
         r e t u r n   d i s p a t c h E v e n t s F o r P l u g i n s ( d o m E v e n t N a m e ,   e v e n t S y s t e m F l a g s ,   n a t i v e E v e n t ,   a n c e s t o r I n s t ) ; 
     } ) ; 
 } 
 
 f u n c t i o n   c r e a t e D i s p a t c h L i s t e n e r ( i n s t a n c e ,   l i s t e n e r ,   c u r r e n t T a r g e t )   { 
     r e t u r n   { 
         i n s t a n c e :   i n s t a n c e , 
         l i s t e n e r :   l i s t e n e r , 
         c u r r e n t T a r g e t :   c u r r e n t T a r g e t 
     } ; 
 } 
 
 f u n c t i o n   a c c u m u l a t e S i n g l e P h a s e L i s t e n e r s ( t a r g e t F i b e r ,   r e a c t N a m e ,   n a t i v e E v e n t T y p e ,   i n C a p t u r e P h a s e ,   a c c u m u l a t e T a r g e t O n l y ,   n a t i v e E v e n t )   { 
     v a r   c a p t u r e N a m e   =   r e a c t N a m e   ! = =   n u l l   ?   r e a c t N a m e   +   ' C a p t u r e '   :   n u l l ; 
     v a r   r e a c t E v e n t N a m e   =   i n C a p t u r e P h a s e   ?   c a p t u r e N a m e   :   r e a c t N a m e ; 
     v a r   l i s t e n e r s   =   [ ] ; 
     v a r   i n s t a n c e   =   t a r g e t F i b e r ; 
     v a r   l a s t H o s t C o m p o n e n t   =   n u l l ;   / /   A c c u m u l a t e   a l l   i n s t a n c e s   a n d   l i s t e n e r s   v i a   t h e   t a r g e t   - >   r o o t   p a t h . 
 
     w h i l e   ( i n s t a n c e   ! = =   n u l l )   { 
         v a r   _ i n s t a n c e 2   =   i n s t a n c e , 
                 s t a t e N o d e   =   _ i n s t a n c e 2 . s t a t e N o d e , 
                 t a g   =   _ i n s t a n c e 2 . t a g ;   / /   H a n d l e   l i s t e n e r s   t h a t   a r e   o n   H o s t C o m p o n e n t s   ( i . e .   < d i v > ) 
 
         i f   ( t a g   = = =   H o s t C o m p o n e n t   & &   s t a t e N o d e   ! = =   n u l l )   { 
             l a s t H o s t C o m p o n e n t   =   s t a t e N o d e ;   / /   c r e a t e E v e n t H a n d l e   l i s t e n e r s 
 
 
             i f   ( r e a c t E v e n t N a m e   ! = =   n u l l )   { 
                 v a r   l i s t e n e r   =   g e t L i s t e n e r ( i n s t a n c e ,   r e a c t E v e n t N a m e ) ; 
 
                 i f   ( l i s t e n e r   ! =   n u l l )   { 
                     l i s t e n e r s . p u s h ( c r e a t e D i s p a t c h L i s t e n e r ( i n s t a n c e ,   l i s t e n e r ,   l a s t H o s t C o m p o n e n t ) ) ; 
                 } 
             } 
         }   / /   I f   w e   a r e   o n l y   a c c u m u l a t i n g   e v e n t s   f o r   t h e   t a r g e t ,   t h e n   w e   d o n ' t 
         / /   c o n t i n u e   t o   p r o p a g a t e   t h r o u g h   t h e   R e a c t   f i b e r   t r e e   t o   f i n d   o t h e r 
         / /   l i s t e n e r s . 
 
 
         i f   ( a c c u m u l a t e T a r g e t O n l y )   { 
             b r e a k ; 
         }   / /   I f   w e   a r e   p r o c e s s i n g   t h e   o n B e f o r e B l u r   e v e n t ,   t h e n   w e   n e e d   t o   t a k e 
 
         i n s t a n c e   =   i n s t a n c e . r e t u r n ; 
     } 
 
     r e t u r n   l i s t e n e r s ; 
 }   / /   W e   s h o u l d   o n l y   u s e   t h i s   f u n c t i o n   f o r : 
 / /   -   B e f o r e I n p u t E v e n t P l u g i n 
 / /   -   C h a n g e E v e n t P l u g i n 
 / /   -   S e l e c t E v e n t P l u g i n 
 / /   T h i s   i s   b e c a u s e   w e   o n l y   p r o c e s s   t h e s e   p l u g i n s 
 / /   i n   t h e   b u b b l e   p h a s e ,   s o   w e   n e e d   t o   a c c u m u l a t e   t w o 
 / /   p h a s e   e v e n t   l i s t e n e r s   ( v i a   e m u l a t i o n ) . 
 
 f u n c t i o n   a c c u m u l a t e T w o P h a s e L i s t e n e r s ( t a r g e t F i b e r ,   r e a c t N a m e )   { 
     v a r   c a p t u r e N a m e   =   r e a c t N a m e   +   ' C a p t u r e ' ; 
     v a r   l i s t e n e r s   =   [ ] ; 
     v a r   i n s t a n c e   =   t a r g e t F i b e r ;   / /   A c c u m u l a t e   a l l   i n s t a n c e s   a n d   l i s t e n e r s   v i a   t h e   t a r g e t   - >   r o o t   p a t h . 
 
     w h i l e   ( i n s t a n c e   ! = =   n u l l )   { 
         v a r   _ i n s t a n c e 3   =   i n s t a n c e , 
                 s t a t e N o d e   =   _ i n s t a n c e 3 . s t a t e N o d e , 
                 t a g   =   _ i n s t a n c e 3 . t a g ;   / /   H a n d l e   l i s t e n e r s   t h a t   a r e   o n   H o s t C o m p o n e n t s   ( i . e .   < d i v > ) 
 
         i f   ( t a g   = = =   H o s t C o m p o n e n t   & &   s t a t e N o d e   ! = =   n u l l )   { 
             v a r   c u r r e n t T a r g e t   =   s t a t e N o d e ; 
             v a r   c a p t u r e L i s t e n e r   =   g e t L i s t e n e r ( i n s t a n c e ,   c a p t u r e N a m e ) ; 
 
             i f   ( c a p t u r e L i s t e n e r   ! =   n u l l )   { 
                 l i s t e n e r s . u n s h i f t ( c r e a t e D i s p a t c h L i s t e n e r ( i n s t a n c e ,   c a p t u r e L i s t e n e r ,   c u r r e n t T a r g e t ) ) ; 
             } 
 
             v a r   b u b b l e L i s t e n e r   =   g e t L i s t e n e r ( i n s t a n c e ,   r e a c t N a m e ) ; 
 
             i f   ( b u b b l e L i s t e n e r   ! =   n u l l )   { 
                 l i s t e n e r s . p u s h ( c r e a t e D i s p a t c h L i s t e n e r ( i n s t a n c e ,   b u b b l e L i s t e n e r ,   c u r r e n t T a r g e t ) ) ; 
             } 
         } 
 
         i n s t a n c e   =   i n s t a n c e . r e t u r n ; 
     } 
 
     r e t u r n   l i s t e n e r s ; 
 } 
 
 f u n c t i o n   g e t P a r e n t ( i n s t )   { 
     i f   ( i n s t   = = =   n u l l )   { 
         r e t u r n   n u l l ; 
     } 
 
     d o   { 
         i n s t   =   i n s t . r e t u r n ;   / /   T O D O :   I f   t h i s   i s   a   H o s t R o o t   w e   m i g h t   w a n t   t o   b a i l   o u t . 
         / /   T h a t   i s   d e p e n d i n g   o n   i f   w e   w a n t   n e s t e d   s u b t r e e s   ( l a y e r s )   t o   b u b b l e 
         / /   e v e n t s   t o   t h e i r   p a r e n t .   W e   c o u l d   a l s o   g o   t h r o u g h   p a r e n t N o d e   o n   t h e 
         / /   h o s t   n o d e   b u t   t h a t   w o u l d n ' t   w o r k   f o r   R e a c t   N a t i v e   a n d   d o e s n ' t   l e t   u s 
         / /   d o   t h e   p o r t a l   f e a t u r e . 
     }   w h i l e   ( i n s t   & &   i n s t . t a g   ! = =   H o s t C o m p o n e n t ) ; 
 
     i f   ( i n s t )   { 
         r e t u r n   i n s t ; 
     } 
 
     r e t u r n   n u l l ; 
 } 
 / * * 
   *   R e t u r n   t h e   l o w e s t   c o m m o n   a n c e s t o r   o f   A   a n d   B ,   o r   n u l l   i f   t h e y   a r e   i n 
   *   d i f f e r e n t   t r e e s . 
   * / 
 
 
 f u n c t i o n   g e t L o w e s t C o m m o n A n c e s t o r ( i n s t A ,   i n s t B )   { 
     v a r   n o d e A   =   i n s t A ; 
     v a r   n o d e B   =   i n s t B ; 
     v a r   d e p t h A   =   0 ; 
 
     f o r   ( v a r   t e m p A   =   n o d e A ;   t e m p A ;   t e m p A   =   g e t P a r e n t ( t e m p A ) )   { 
         d e p t h A + + ; 
     } 
 
     v a r   d e p t h B   =   0 ; 
 
     f o r   ( v a r   t e m p B   =   n o d e B ;   t e m p B ;   t e m p B   =   g e t P a r e n t ( t e m p B ) )   { 
         d e p t h B + + ; 
     }   / /   I f   A   i s   d e e p e r ,   c r a w l   u p . 
 
 
     w h i l e   ( d e p t h A   -   d e p t h B   >   0 )   { 
         n o d e A   =   g e t P a r e n t ( n o d e A ) ; 
         d e p t h A - - ; 
     }   / /   I f   B   i s   d e e p e r ,   c r a w l   u p . 
 
 
     w h i l e   ( d e p t h B   -   d e p t h A   >   0 )   { 
         n o d e B   =   g e t P a r e n t ( n o d e B ) ; 
         d e p t h B - - ; 
     }   / /   W a l k   i n   l o c k s t e p   u n t i l   w e   f i n d   a   m a t c h . 
 
 
     v a r   d e p t h   =   d e p t h A ; 
 
     w h i l e   ( d e p t h - - )   { 
         i f   ( n o d e A   = = =   n o d e B   | |   n o d e B   ! = =   n u l l   & &   n o d e A   = = =   n o d e B . a l t e r n a t e )   { 
             r e t u r n   n o d e A ; 
         } 
 
         n o d e A   =   g e t P a r e n t ( n o d e A ) ; 
         n o d e B   =   g e t P a r e n t ( n o d e B ) ; 
     } 
 
     r e t u r n   n u l l ; 
 } 
 
 f u n c t i o n   a c c u m u l a t e E n t e r L e a v e L i s t e n e r s F o r E v e n t ( d i s p a t c h Q u e u e ,   e v e n t ,   t a r g e t ,   c o m m o n ,   i n C a p t u r e P h a s e )   { 
     v a r   r e g i s t r a t i o n N a m e   =   e v e n t . _ r e a c t N a m e ; 
     v a r   l i s t e n e r s   =   [ ] ; 
     v a r   i n s t a n c e   =   t a r g e t ; 
 
     w h i l e   ( i n s t a n c e   ! = =   n u l l )   { 
         i f   ( i n s t a n c e   = = =   c o m m o n )   { 
             b r e a k ; 
         } 
 
         v a r   _ i n s t a n c e 4   =   i n s t a n c e , 
                 a l t e r n a t e   =   _ i n s t a n c e 4 . a l t e r n a t e , 
                 s t a t e N o d e   =   _ i n s t a n c e 4 . s t a t e N o d e , 
                 t a g   =   _ i n s t a n c e 4 . t a g ; 
 
         i f   ( a l t e r n a t e   ! = =   n u l l   & &   a l t e r n a t e   = = =   c o m m o n )   { 
             b r e a k ; 
         } 
 
         i f   ( t a g   = = =   H o s t C o m p o n e n t   & &   s t a t e N o d e   ! = =   n u l l )   { 
             v a r   c u r r e n t T a r g e t   =   s t a t e N o d e ; 
 
             i f   ( i n C a p t u r e P h a s e )   { 
                 v a r   c a p t u r e L i s t e n e r   =   g e t L i s t e n e r ( i n s t a n c e ,   r e g i s t r a t i o n N a m e ) ; 
 
                 i f   ( c a p t u r e L i s t e n e r   ! =   n u l l )   { 
                     l i s t e n e r s . u n s h i f t ( c r e a t e D i s p a t c h L i s t e n e r ( i n s t a n c e ,   c a p t u r e L i s t e n e r ,   c u r r e n t T a r g e t ) ) ; 
                 } 
             }   e l s e   i f   ( ! i n C a p t u r e P h a s e )   { 
                 v a r   b u b b l e L i s t e n e r   =   g e t L i s t e n e r ( i n s t a n c e ,   r e g i s t r a t i o n N a m e ) ; 
 
                 i f   ( b u b b l e L i s t e n e r   ! =   n u l l )   { 
                     l i s t e n e r s . p u s h ( c r e a t e D i s p a t c h L i s t e n e r ( i n s t a n c e ,   b u b b l e L i s t e n e r ,   c u r r e n t T a r g e t ) ) ; 
                 } 
             } 
         } 
 
         i n s t a n c e   =   i n s t a n c e . r e t u r n ; 
     } 
 
     i f   ( l i s t e n e r s . l e n g t h   ! = =   0 )   { 
         d i s p a t c h Q u e u e . p u s h ( { 
             e v e n t :   e v e n t , 
             l i s t e n e r s :   l i s t e n e r s 
         } ) ; 
     } 
 }   / /   W e   s h o u l d   o n l y   u s e   t h i s   f u n c t i o n   f o r : 
 / /   -   E n t e r L e a v e E v e n t P l u g i n 
 / /   T h i s   i s   b e c a u s e   w e   o n l y   p r o c e s s   t h i s   p l u g i n 
 / /   i n   t h e   b u b b l e   p h a s e ,   s o   w e   n e e d   t o   a c c u m u l a t e   t w o 
 / /   p h a s e   e v e n t   l i s t e n e r s . 
 
 
 f u n c t i o n   a c c u m u l a t e E n t e r L e a v e T w o P h a s e L i s t e n e r s ( d i s p a t c h Q u e u e ,   l e a v e E v e n t ,   e n t e r E v e n t ,   f r o m ,   t o )   { 
     v a r   c o m m o n   =   f r o m   & &   t o   ?   g e t L o w e s t C o m m o n A n c e s t o r ( f r o m ,   t o )   :   n u l l ; 
 
     i f   ( f r o m   ! = =   n u l l )   { 
         a c c u m u l a t e E n t e r L e a v e L i s t e n e r s F o r E v e n t ( d i s p a t c h Q u e u e ,   l e a v e E v e n t ,   f r o m ,   c o m m o n ,   f a l s e ) ; 
     } 
 
     i f   ( t o   ! = =   n u l l   & &   e n t e r E v e n t   ! = =   n u l l )   { 
         a c c u m u l a t e E n t e r L e a v e L i s t e n e r s F o r E v e n t ( d i s p a t c h Q u e u e ,   e n t e r E v e n t ,   t o ,   c o m m o n ,   t r u e ) ; 
     } 
 } 
 f u n c t i o n   g e t L i s t e n e r S e t K e y ( d o m E v e n t N a m e ,   c a p t u r e )   { 
     r e t u r n   d o m E v e n t N a m e   +   " _ _ "   +   ( c a p t u r e   ?   ' c a p t u r e '   :   ' b u b b l e ' ) ; 
 } 
 
 v a r   d i d W a r n I n v a l i d H y d r a t i o n   =   f a l s e ; 
 v a r   D A N G E R O U S L Y _ S E T _ I N N E R _ H T M L   =   ' d a n g e r o u s l y S e t I n n e r H T M L ' ; 
 v a r   S U P P R E S S _ C O N T E N T _ E D I T A B L E _ W A R N I N G   =   ' s u p p r e s s C o n t e n t E d i t a b l e W a r n i n g ' ; 
 v a r   S U P P R E S S _ H Y D R A T I O N _ W A R N I N G   =   ' s u p p r e s s H y d r a t i o n W a r n i n g ' ; 
 v a r   A U T O F O C U S   =   ' a u t o F o c u s ' ; 
 v a r   C H I L D R E N   =   ' c h i l d r e n ' ; 
 v a r   S T Y L E   =   ' s t y l e ' ; 
 v a r   H T M L $ 1   =   ' _ _ h t m l ' ; 
 v a r   w a r n e d U n k n o w n T a g s ; 
 v a r   v a l i d a t e P r o p e r t i e s I n D e v e l o p m e n t ; 
 v a r   w a r n F o r P r o p D i f f e r e n c e ; 
 v a r   w a r n F o r E x t r a A t t r i b u t e s ; 
 v a r   w a r n F o r I n v a l i d E v e n t L i s t e n e r ; 
 v a r   c a n D i f f S t y l e F o r H y d r a t i o n W a r n i n g ; 
 v a r   n o r m a l i z e H T M L ; 
 
 { 
     w a r n e d U n k n o w n T a g s   =   { 
         / /   T h e r e   a r e   w o r k i n g   p o l y f i l l s   f o r   < d i a l o g > .   L e t   p e o p l e   u s e   i t . 
         d i a l o g :   t r u e , 
         / /   E l e c t r o n   s h i p s   a   c u s t o m   < w e b v i e w >   t a g   t o   d i s p l a y   e x t e r n a l   w e b   c o n t e n t   i n 
         / /   a n   i s o l a t e d   f r a m e   a n d   p r o c e s s . 
         / /   T h i s   t a g   i s   n o t   p r e s e n t   i n   n o n   E l e c t r o n   e n v i r o n m e n t s   s u c h   a s   J S D o m   w h i c h 
         / /   i s   o f t e n   u s e d   f o r   t e s t i n g   p u r p o s e s . 
         / /   @ s e e   h t t p s : / / e l e c t r o n j s . o r g / d o c s / a p i / w e b v i e w - t a g 
         w e b v i e w :   t r u e 
     } ; 
 
     v a l i d a t e P r o p e r t i e s I n D e v e l o p m e n t   =   f u n c t i o n   ( t y p e ,   p r o p s )   { 
         v a l i d a t e P r o p e r t i e s ( t y p e ,   p r o p s ) ; 
         v a l i d a t e P r o p e r t i e s $ 1 ( t y p e ,   p r o p s ) ; 
         v a l i d a t e P r o p e r t i e s $ 2 ( t y p e ,   p r o p s ,   { 
             r e g i s t r a t i o n N a m e D e p e n d e n c i e s :   r e g i s t r a t i o n N a m e D e p e n d e n c i e s , 
             p o s s i b l e R e g i s t r a t i o n N a m e s :   p o s s i b l e R e g i s t r a t i o n N a m e s 
         } ) ; 
     } ;   / /   I E   1 1   p a r s e s   &   n o r m a l i z e s   t h e   s t y l e   a t t r i b u t e   a s   o p p o s e d   t o   o t h e r 
     / /   b r o w s e r s .   I t   a d d s   s p a c e s   a n d   s o r t s   t h e   p r o p e r t i e s   i n   s o m e 
     / /   n o n - a l p h a b e t i c a l   o r d e r .   H a n d l i n g   t h a t   w o u l d   r e q u i r e   s o r t i n g   C S S 
     / /   p r o p e r t i e s   i n   t h e   c l i e n t   &   s e r v e r   v e r s i o n s   o r   a p p l y i n g 
     / /   ` e x p e c t e d S t y l e `   t o   a   t e m p o r a r y   D O M   n o d e   t o   r e a d   i t s   ` s t y l e `   a t t r i b u t e 
     / /   n o r m a l i z e d .   S i n c e   i t   o n l y   a f f e c t s   I E ,   w e ' r e   s k i p p i n g   s t y l e   w a r n i n g s 
     / /   i n   t h a t   b r o w s e r   c o m p l e t e l y   i n   f a v o r   o f   d o i n g   a l l   t h a t   w o r k . 
     / /   S e e   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 1 8 0 7 
 
 
     c a n D i f f S t y l e F o r H y d r a t i o n W a r n i n g   =   c a n U s e D O M   & &   ! d o c u m e n t . d o c u m e n t M o d e ; 
 
     w a r n F o r P r o p D i f f e r e n c e   =   f u n c t i o n   ( p r o p N a m e ,   s e r v e r V a l u e ,   c l i e n t V a l u e )   { 
         i f   ( d i d W a r n I n v a l i d H y d r a t i o n )   { 
             r e t u r n ; 
         } 
 
         v a r   n o r m a l i z e d C l i e n t V a l u e   =   n o r m a l i z e M a r k u p F o r T e x t O r A t t r i b u t e ( c l i e n t V a l u e ) ; 
         v a r   n o r m a l i z e d S e r v e r V a l u e   =   n o r m a l i z e M a r k u p F o r T e x t O r A t t r i b u t e ( s e r v e r V a l u e ) ; 
 
         i f   ( n o r m a l i z e d S e r v e r V a l u e   = = =   n o r m a l i z e d C l i e n t V a l u e )   { 
             r e t u r n ; 
         } 
 
         d i d W a r n I n v a l i d H y d r a t i o n   =   t r u e ; 
 
         e r r o r ( ' P r o p   ` % s `   d i d   n o t   m a t c h .   S e r v e r :   % s   C l i e n t :   % s ' ,   p r o p N a m e ,   J S O N . s t r i n g i f y ( n o r m a l i z e d S e r v e r V a l u e ) ,   J S O N . s t r i n g i f y ( n o r m a l i z e d C l i e n t V a l u e ) ) ; 
     } ; 
 
     w a r n F o r E x t r a A t t r i b u t e s   =   f u n c t i o n   ( a t t r i b u t e N a m e s )   { 
         i f   ( d i d W a r n I n v a l i d H y d r a t i o n )   { 
             r e t u r n ; 
         } 
 
         d i d W a r n I n v a l i d H y d r a t i o n   =   t r u e ; 
         v a r   n a m e s   =   [ ] ; 
         a t t r i b u t e N a m e s . f o r E a c h ( f u n c t i o n   ( n a m e )   { 
             n a m e s . p u s h ( n a m e ) ; 
         } ) ; 
 
         e r r o r ( ' E x t r a   a t t r i b u t e s   f r o m   t h e   s e r v e r :   % s ' ,   n a m e s ) ; 
     } ; 
 
     w a r n F o r I n v a l i d E v e n t L i s t e n e r   =   f u n c t i o n   ( r e g i s t r a t i o n N a m e ,   l i s t e n e r )   { 
         i f   ( l i s t e n e r   = = =   f a l s e )   { 
             e r r o r ( ' E x p e c t e d   ` % s `   l i s t e n e r   t o   b e   a   f u n c t i o n ,   i n s t e a d   g o t   ` f a l s e ` . \ n \ n '   +   ' I f   y o u   u s e d   t o   c o n d i t i o n a l l y   o m i t   i t   w i t h   % s = { c o n d i t i o n   & &   v a l u e } ,   '   +   ' p a s s   % s = { c o n d i t i o n   ?   v a l u e   :   u n d e f i n e d }   i n s t e a d . ' ,   r e g i s t r a t i o n N a m e ,   r e g i s t r a t i o n N a m e ,   r e g i s t r a t i o n N a m e ) ; 
         }   e l s e   { 
             e r r o r ( ' E x p e c t e d   ` % s `   l i s t e n e r   t o   b e   a   f u n c t i o n ,   i n s t e a d   g o t   a   v a l u e   o f   ` % s `   t y p e . ' ,   r e g i s t r a t i o n N a m e ,   t y p e o f   l i s t e n e r ) ; 
         } 
     } ;   / /   P a r s e   t h e   H T M L   a n d   r e a d   i t   b a c k   t o   n o r m a l i z e   t h e   H T M L   s t r i n g   s o   t h a t   i t 
     / /   c a n   b e   u s e d   f o r   c o m p a r i s o n . 
 
 
     n o r m a l i z e H T M L   =   f u n c t i o n   ( p a r e n t ,   h t m l )   { 
         / /   W e   c o u l d   h a v e   c r e a t e d   a   s e p a r a t e   d o c u m e n t   h e r e   t o   a v o i d 
         / /   r e - i n i t i a l i z i n g   c u s t o m   e l e m e n t s   i f   t h e y   e x i s t .   B u t   t h i s   b r e a k s 
         / /   h o w   < n o s c r i p t >   i s   b e i n g   h a n d l e d .   S o   w e   u s e   t h e   s a m e   d o c u m e n t . 
         / /   S e e   t h e   d i s c u s s i o n   i n   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / p u l l / 1 1 1 5 7 . 
         v a r   t e s t E l e m e n t   =   p a r e n t . n a m e s p a c e U R I   = = =   H T M L _ N A M E S P A C E   ?   p a r e n t . o w n e r D o c u m e n t . c r e a t e E l e m e n t ( p a r e n t . t a g N a m e )   :   p a r e n t . o w n e r D o c u m e n t . c r e a t e E l e m e n t N S ( p a r e n t . n a m e s p a c e U R I ,   p a r e n t . t a g N a m e ) ; 
         t e s t E l e m e n t . i n n e r H T M L   =   h t m l ; 
         r e t u r n   t e s t E l e m e n t . i n n e r H T M L ; 
     } ; 
 }   / /   H T M L   p a r s i n g   n o r m a l i z e s   C R   a n d   C R L F   t o   L F . 
 / /   I t   a l s o   c a n   t u r n   \ u 0 0 0 0   i n t o   \ u F F F D   i n s i d e   a t t r i b u t e s . 
 / /   h t t p s : / / w w w . w 3 . o r g / T R / h t m l 5 / s i n g l e - p a g e . h t m l # p r e p r o c e s s i n g - t h e - i n p u t - s t r e a m 
 / /   I f   w e   h a v e   a   m i s m a t c h ,   i t   m i g h t   b e   c a u s e d   b y   t h a t . 
 / /   W e   w i l l   s t i l l   p a t c h   u p   i n   t h i s   c a s e   b u t   n o t   f i r e   t h e   w a r n i n g . 
 
 
 v a r   N O R M A L I Z E _ N E W L I N E S _ R E G E X   =   / \ r \ n ? / g ; 
 v a r   N O R M A L I Z E _ N U L L _ A N D _ R E P L A C E M E N T _ R E G E X   =   / \ u 0 0 0 0 | \ u F F F D / g ; 
 
 f u n c t i o n   n o r m a l i z e M a r k u p F o r T e x t O r A t t r i b u t e ( m a r k u p )   { 
     { 
         c h e c k H t m l S t r i n g C o e r c i o n ( m a r k u p ) ; 
     } 
 
     v a r   m a r k u p S t r i n g   =   t y p e o f   m a r k u p   = = =   ' s t r i n g '   ?   m a r k u p   :   ' '   +   m a r k u p ; 
     r e t u r n   m a r k u p S t r i n g . r e p l a c e ( N O R M A L I Z E _ N E W L I N E S _ R E G E X ,   ' \ n ' ) . r e p l a c e ( N O R M A L I Z E _ N U L L _ A N D _ R E P L A C E M E N T _ R E G E X ,   ' ' ) ; 
 } 
 
 f u n c t i o n   c h e c k F o r U n m a t c h e d T e x t ( s e r v e r T e x t ,   c l i e n t T e x t ,   i s C o n c u r r e n t M o d e ,   s h o u l d W a r n D e v )   { 
     v a r   n o r m a l i z e d C l i e n t T e x t   =   n o r m a l i z e M a r k u p F o r T e x t O r A t t r i b u t e ( c l i e n t T e x t ) ; 
     v a r   n o r m a l i z e d S e r v e r T e x t   =   n o r m a l i z e M a r k u p F o r T e x t O r A t t r i b u t e ( s e r v e r T e x t ) ; 
 
     i f   ( n o r m a l i z e d S e r v e r T e x t   = = =   n o r m a l i z e d C l i e n t T e x t )   { 
         r e t u r n ; 
     } 
 
     i f   ( s h o u l d W a r n D e v )   { 
         { 
             i f   ( ! d i d W a r n I n v a l i d H y d r a t i o n )   { 
                 d i d W a r n I n v a l i d H y d r a t i o n   =   t r u e ; 
 
                 e r r o r ( ' T e x t   c o n t e n t   d i d   n o t   m a t c h .   S e r v e r :   " % s "   C l i e n t :   " % s " ' ,   n o r m a l i z e d S e r v e r T e x t ,   n o r m a l i z e d C l i e n t T e x t ) ; 
             } 
         } 
     } 
 
     i f   ( i s C o n c u r r e n t M o d e   & &   e n a b l e C l i e n t R e n d e r F a l l b a c k O n T e x t M i s m a t c h )   { 
         / /   I n   c o n c u r r e n t   r o o t s ,   w e   t h r o w   w h e n   t h e r e ' s   a   t e x t   m i s m a t c h   a n d   r e v e r t   t o 
         / /   c l i e n t   r e n d e r i n g ,   u p   t o   t h e   n e a r e s t   S u s p e n s e   b o u n d a r y . 
         t h r o w   n e w   E r r o r ( ' T e x t   c o n t e n t   d o e s   n o t   m a t c h   s e r v e r - r e n d e r e d   H T M L . ' ) ; 
     } 
 } 
 
 f u n c t i o n   g e t O w n e r D o c u m e n t F r o m R o o t C o n t a i n e r ( r o o t C o n t a i n e r E l e m e n t )   { 
     r e t u r n   r o o t C o n t a i n e r E l e m e n t . n o d e T y p e   = = =   D O C U M E N T _ N O D E   ?   r o o t C o n t a i n e r E l e m e n t   :   r o o t C o n t a i n e r E l e m e n t . o w n e r D o c u m e n t ; 
 } 
 
 f u n c t i o n   n o o p ( )   { } 
 
 f u n c t i o n   t r a p C l i c k O n N o n I n t e r a c t i v e E l e m e n t ( n o d e )   { 
     / /   M o b i l e   S a f a r i   d o e s   n o t   f i r e   p r o p e r l y   b u b b l e   c l i c k   e v e n t s   o n 
     / /   n o n - i n t e r a c t i v e   e l e m e n t s ,   w h i c h   m e a n s   d e l e g a t e d   c l i c k   l i s t e n e r s   d o   n o t 
     / /   f i r e .   T h e   w o r k a r o u n d   f o r   t h i s   b u g   i n v o l v e s   a t t a c h i n g   a n   e m p t y   c l i c k 
     / /   l i s t e n e r   o n   t h e   t a r g e t   n o d e . 
     / /   h t t p s : / / w w w . q u i r k s m o d e . o r g / b l o g / a r c h i v e s / 2 0 1 0 / 0 9 / c l i c k _ e v e n t _ d e l . h t m l 
     / /   J u s t   s e t   i t   u s i n g   t h e   o n c l i c k   p r o p e r t y   s o   t h a t   w e   d o n ' t   h a v e   t o   m a n a g e   a n y 
     / /   b o o k k e e p i n g   f o r   i t .   N o t   s u r e   i f   w e   n e e d   t o   c l e a r   i t   w h e n   t h e   l i s t e n e r   i s 
     / /   r e m o v e d . 
     / /   T O D O :   O n l y   d o   t h i s   f o r   t h e   r e l e v a n t   S a f a r i s   m a y b e ? 
     n o d e . o n c l i c k   =   n o o p ; 
 } 
 
 f u n c t i o n   s e t I n i t i a l D O M P r o p e r t i e s ( t a g ,   d o m E l e m e n t ,   r o o t C o n t a i n e r E l e m e n t ,   n e x t P r o p s ,   i s C u s t o m C o m p o n e n t T a g )   { 
     f o r   ( v a r   p r o p K e y   i n   n e x t P r o p s )   { 
         i f   ( ! n e x t P r o p s . h a s O w n P r o p e r t y ( p r o p K e y ) )   { 
             c o n t i n u e ; 
         } 
 
         v a r   n e x t P r o p   =   n e x t P r o p s [ p r o p K e y ] ; 
 
         i f   ( p r o p K e y   = = =   S T Y L E )   { 
             { 
                 i f   ( n e x t P r o p )   { 
                     / /   F r e e z e   t h e   n e x t   s t y l e   o b j e c t   s o   t h a t   w e   c a n   a s s u m e   i t   w o n ' t   b e 
                     / /   m u t a t e d .   W e   h a v e   a l r e a d y   w a r n e d   f o r   t h i s   i n   t h e   p a s t . 
                     O b j e c t . f r e e z e ( n e x t P r o p ) ; 
                 } 
             }   / /   R e l i e s   o n   ` u p d a t e S t y l e s B y I D `   n o t   m u t a t i n g   ` s t y l e U p d a t e s ` . 
 
 
             s e t V a l u e F o r S t y l e s ( d o m E l e m e n t ,   n e x t P r o p ) ; 
         }   e l s e   i f   ( p r o p K e y   = = =   D A N G E R O U S L Y _ S E T _ I N N E R _ H T M L )   { 
             v a r   n e x t H t m l   =   n e x t P r o p   ?   n e x t P r o p [ H T M L $ 1 ]   :   u n d e f i n e d ; 
 
             i f   ( n e x t H t m l   ! =   n u l l )   { 
                 s e t I n n e r H T M L ( d o m E l e m e n t ,   n e x t H t m l ) ; 
             } 
         }   e l s e   i f   ( p r o p K e y   = = =   C H I L D R E N )   { 
             i f   ( t y p e o f   n e x t P r o p   = = =   ' s t r i n g ' )   { 
                 / /   A v o i d   s e t t i n g   i n i t i a l   t e x t C o n t e n t   w h e n   t h e   t e x t   i s   e m p t y .   I n   I E 1 1   s e t t i n g 
                 / /   t e x t C o n t e n t   o n   a   < t e x t a r e a >   w i l l   c a u s e   t h e   p l a c e h o l d e r   t o   n o t 
                 / /   s h o w   w i t h i n   t h e   < t e x t a r e a >   u n t i l   i t   h a s   b e e n   f o c u s e d   a n d   b l u r r e d   a g a i n . 
                 / /   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 6 7 3 1 # i s s u e c o m m e n t - 2 5 4 8 7 4 5 5 3 
                 v a r   c a n S e t T e x t C o n t e n t   =   t a g   ! = =   ' t e x t a r e a '   | |   n e x t P r o p   ! = =   ' ' ; 
 
                 i f   ( c a n S e t T e x t C o n t e n t )   { 
                     s e t T e x t C o n t e n t ( d o m E l e m e n t ,   n e x t P r o p ) ; 
                 } 
             }   e l s e   i f   ( t y p e o f   n e x t P r o p   = = =   ' n u m b e r ' )   { 
                 s e t T e x t C o n t e n t ( d o m E l e m e n t ,   ' '   +   n e x t P r o p ) ; 
             } 
         }   e l s e   i f   ( p r o p K e y   = = =   S U P P R E S S _ C O N T E N T _ E D I T A B L E _ W A R N I N G   | |   p r o p K e y   = = =   S U P P R E S S _ H Y D R A T I O N _ W A R N I N G )   ;   e l s e   i f   ( p r o p K e y   = = =   A U T O F O C U S )   ;   e l s e   i f   ( r e g i s t r a t i o n N a m e D e p e n d e n c i e s . h a s O w n P r o p e r t y ( p r o p K e y ) )   { 
             i f   ( n e x t P r o p   ! =   n u l l )   { 
                 i f   (   t y p e o f   n e x t P r o p   ! = =   ' f u n c t i o n ' )   { 
                     w a r n F o r I n v a l i d E v e n t L i s t e n e r ( p r o p K e y ,   n e x t P r o p ) ; 
                 } 
 
                 i f   ( p r o p K e y   = = =   ' o n S c r o l l ' )   { 
                     l i s t e n T o N o n D e l e g a t e d E v e n t ( ' s c r o l l ' ,   d o m E l e m e n t ) ; 
                 } 
             } 
         }   e l s e   i f   ( n e x t P r o p   ! =   n u l l )   { 
             s e t V a l u e F o r P r o p e r t y ( d o m E l e m e n t ,   p r o p K e y ,   n e x t P r o p ,   i s C u s t o m C o m p o n e n t T a g ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   u p d a t e D O M P r o p e r t i e s ( d o m E l e m e n t ,   u p d a t e P a y l o a d ,   w a s C u s t o m C o m p o n e n t T a g ,   i s C u s t o m C o m p o n e n t T a g )   { 
     / /   T O D O :   H a n d l e   w a s C u s t o m C o m p o n e n t T a g 
     f o r   ( v a r   i   =   0 ;   i   <   u p d a t e P a y l o a d . l e n g t h ;   i   + =   2 )   { 
         v a r   p r o p K e y   =   u p d a t e P a y l o a d [ i ] ; 
         v a r   p r o p V a l u e   =   u p d a t e P a y l o a d [ i   +   1 ] ; 
 
         i f   ( p r o p K e y   = = =   S T Y L E )   { 
             s e t V a l u e F o r S t y l e s ( d o m E l e m e n t ,   p r o p V a l u e ) ; 
         }   e l s e   i f   ( p r o p K e y   = = =   D A N G E R O U S L Y _ S E T _ I N N E R _ H T M L )   { 
             s e t I n n e r H T M L ( d o m E l e m e n t ,   p r o p V a l u e ) ; 
         }   e l s e   i f   ( p r o p K e y   = = =   C H I L D R E N )   { 
             s e t T e x t C o n t e n t ( d o m E l e m e n t ,   p r o p V a l u e ) ; 
         }   e l s e   { 
             s e t V a l u e F o r P r o p e r t y ( d o m E l e m e n t ,   p r o p K e y ,   p r o p V a l u e ,   i s C u s t o m C o m p o n e n t T a g ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   c r e a t e E l e m e n t ( t y p e ,   p r o p s ,   r o o t C o n t a i n e r E l e m e n t ,   p a r e n t N a m e s p a c e )   { 
     v a r   i s C u s t o m C o m p o n e n t T a g ;   / /   W e   c r e a t e   t a g s   i n   t h e   n a m e s p a c e   o f   t h e i r   p a r e n t   c o n t a i n e r ,   e x c e p t   H T M L 
     / /   t a g s   g e t   n o   n a m e s p a c e . 
 
     v a r   o w n e r D o c u m e n t   =   g e t O w n e r D o c u m e n t F r o m R o o t C o n t a i n e r ( r o o t C o n t a i n e r E l e m e n t ) ; 
     v a r   d o m E l e m e n t ; 
     v a r   n a m e s p a c e U R I   =   p a r e n t N a m e s p a c e ; 
 
     i f   ( n a m e s p a c e U R I   = = =   H T M L _ N A M E S P A C E )   { 
         n a m e s p a c e U R I   =   g e t I n t r i n s i c N a m e s p a c e ( t y p e ) ; 
     } 
 
     i f   ( n a m e s p a c e U R I   = = =   H T M L _ N A M E S P A C E )   { 
         { 
             i s C u s t o m C o m p o n e n t T a g   =   i s C u s t o m C o m p o n e n t ( t y p e ,   p r o p s ) ;   / /   S h o u l d   t h i s   c h e c k   b e   g a t e d   b y   p a r e n t   n a m e s p a c e ?   N o t   s u r e   w e   w a n t   t o 
             / /   a l l o w   < S V G >   o r   < m A T H > . 
 
             i f   ( ! i s C u s t o m C o m p o n e n t T a g   & &   t y p e   ! = =   t y p e . t o L o w e r C a s e ( ) )   { 
                 e r r o r ( ' < % s   / >   i s   u s i n g   i n c o r r e c t   c a s i n g .   '   +   ' U s e   P a s c a l C a s e   f o r   R e a c t   c o m p o n e n t s ,   '   +   ' o r   l o w e r c a s e   f o r   H T M L   e l e m e n t s . ' ,   t y p e ) ; 
             } 
         } 
 
         i f   ( t y p e   = = =   ' s c r i p t ' )   { 
             / /   C r e a t e   t h e   s c r i p t   v i a   . i n n e r H T M L   s o   i t s   " p a r s e r - i n s e r t e d "   f l a g   i s 
             / /   s e t   t o   t r u e   a n d   i t   d o e s   n o t   e x e c u t e 
             v a r   d i v   =   o w n e r D o c u m e n t . c r e a t e E l e m e n t ( ' d i v ' ) ; 
 
             d i v . i n n e r H T M L   =   ' < s c r i p t > < '   +   ' / s c r i p t > ' ;   / /   e s l i n t - d i s a b l e - l i n e 
             / /   T h i s   i s   g u a r a n t e e d   t o   y i e l d   a   s c r i p t   e l e m e n t . 
 
             v a r   f i r s t C h i l d   =   d i v . f i r s t C h i l d ; 
             d o m E l e m e n t   =   d i v . r e m o v e C h i l d ( f i r s t C h i l d ) ; 
         }   e l s e   i f   ( t y p e o f   p r o p s . i s   = = =   ' s t r i n g ' )   { 
             / /   $ F l o w I s s u e   ` c r e a t e E l e m e n t `   s h o u l d   b e   u p d a t e d   f o r   W e b   C o m p o n e n t s 
             d o m E l e m e n t   =   o w n e r D o c u m e n t . c r e a t e E l e m e n t ( t y p e ,   { 
                 i s :   p r o p s . i s 
             } ) ; 
         }   e l s e   { 
             / /   S e p a r a t e   e l s e   b r a n c h   i n s t e a d   o f   u s i n g   ` p r o p s . i s   | |   u n d e f i n e d `   a b o v e   b e c a u s e   o f   a   F i r e f o x   b u g . 
             / /   S e e   d i s c u s s i o n   i n   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / p u l l / 6 8 9 6 
             / /   a n d   d i s c u s s i o n   i n   h t t p s : / / b u g z i l l a . m o z i l l a . o r g / s h o w _ b u g . c g i ? i d = 1 2 7 6 2 4 0 
             d o m E l e m e n t   =   o w n e r D o c u m e n t . c r e a t e E l e m e n t ( t y p e ) ;   / /   N o r m a l l y   a t t r i b u t e s   a r e   a s s i g n e d   i n   ` s e t I n i t i a l D O M P r o p e r t i e s ` ,   h o w e v e r   t h e   ` m u l t i p l e `   a n d   ` s i z e ` 
             / /   a t t r i b u t e s   o n   ` s e l e c t ` s   n e e d s   t o   b e   a d d e d   b e f o r e   ` o p t i o n ` s   a r e   i n s e r t e d . 
             / /   T h i s   p r e v e n t s : 
             / /   -   a   b u g   w h e r e   t h e   ` s e l e c t `   d o e s   n o t   s c r o l l   t o   t h e   c o r r e c t   o p t i o n   b e c a u s e   s i n g u l a r 
             / /     ` s e l e c t `   e l e m e n t s   a u t o m a t i c a l l y   p i c k   t h e   f i r s t   i t e m   # 1 3 2 2 2 
             / /   -   a   b u g   w h e r e   t h e   ` s e l e c t `   s e t   t h e   f i r s t   i t e m   a s   s e l e c t e d   d e s p i t e   t h e   ` s i z e `   a t t r i b u t e   # 1 4 2 3 9 
             / /   S e e   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 3 2 2 2 
             / /   a n d   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 4 2 3 9 
 
             i f   ( t y p e   = = =   ' s e l e c t ' )   { 
                 v a r   n o d e   =   d o m E l e m e n t ; 
 
                 i f   ( p r o p s . m u l t i p l e )   { 
                     n o d e . m u l t i p l e   =   t r u e ; 
                 }   e l s e   i f   ( p r o p s . s i z e )   { 
                     / /   S e t t i n g   a   s i z e   g r e a t e r   t h a n   1   c a u s e s   a   s e l e c t   t o   b e h a v e   l i k e   ` m u l t i p l e = t r u e ` ,   w h e r e 
                     / /   i t   i s   p o s s i b l e   t h a t   n o   o p t i o n   i s   s e l e c t e d . 
                     / / 
                     / /   T h i s   i s   o n l y   n e c e s s a r y   w h e n   a   s e l e c t   i n   " s i n g l e   s e l e c t i o n   m o d e " . 
                     n o d e . s i z e   =   p r o p s . s i z e ; 
                 } 
             } 
         } 
     }   e l s e   { 
         d o m E l e m e n t   =   o w n e r D o c u m e n t . c r e a t e E l e m e n t N S ( n a m e s p a c e U R I ,   t y p e ) ; 
     } 
 
     { 
         i f   ( n a m e s p a c e U R I   = = =   H T M L _ N A M E S P A C E )   { 
             i f   ( ! i s C u s t o m C o m p o n e n t T a g   & &   O b j e c t . p r o t o t y p e . t o S t r i n g . c a l l ( d o m E l e m e n t )   = = =   ' [ o b j e c t   H T M L U n k n o w n E l e m e n t ] '   & &   ! h a s O w n P r o p e r t y . c a l l ( w a r n e d U n k n o w n T a g s ,   t y p e ) )   { 
                 w a r n e d U n k n o w n T a g s [ t y p e ]   =   t r u e ; 
 
                 e r r o r ( ' T h e   t a g   < % s >   i s   u n r e c o g n i z e d   i n   t h i s   b r o w s e r .   '   +   ' I f   y o u   m e a n t   t o   r e n d e r   a   R e a c t   c o m p o n e n t ,   s t a r t   i t s   n a m e   w i t h   '   +   ' a n   u p p e r c a s e   l e t t e r . ' ,   t y p e ) ; 
             } 
         } 
     } 
 
     r e t u r n   d o m E l e m e n t ; 
 } 
 f u n c t i o n   c r e a t e T e x t N o d e ( t e x t ,   r o o t C o n t a i n e r E l e m e n t )   { 
     r e t u r n   g e t O w n e r D o c u m e n t F r o m R o o t C o n t a i n e r ( r o o t C o n t a i n e r E l e m e n t ) . c r e a t e T e x t N o d e ( t e x t ) ; 
 } 
 f u n c t i o n   s e t I n i t i a l P r o p e r t i e s ( d o m E l e m e n t ,   t a g ,   r a w P r o p s ,   r o o t C o n t a i n e r E l e m e n t )   { 
     v a r   i s C u s t o m C o m p o n e n t T a g   =   i s C u s t o m C o m p o n e n t ( t a g ,   r a w P r o p s ) ; 
 
     { 
         v a l i d a t e P r o p e r t i e s I n D e v e l o p m e n t ( t a g ,   r a w P r o p s ) ; 
     }   / /   T O D O :   M a k e   s u r e   t h a t   w e   c h e c k   i s M o u n t e d   b e f o r e   f i r i n g   a n y   o f   t h e s e   e v e n t s . 
 
 
     v a r   p r o p s ; 
 
     s w i t c h   ( t a g )   { 
         c a s e   ' d i a l o g ' : 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' c a n c e l ' ,   d o m E l e m e n t ) ; 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' c l o s e ' ,   d o m E l e m e n t ) ; 
             p r o p s   =   r a w P r o p s ; 
             b r e a k ; 
 
         c a s e   ' i f r a m e ' : 
         c a s e   ' o b j e c t ' : 
         c a s e   ' e m b e d ' : 
             / /   W e   l i s t e n   t o   t h i s   e v e n t   i n   c a s e   t o   e n s u r e   e m u l a t e d   b u b b l e 
             / /   l i s t e n e r s   s t i l l   f i r e   f o r   t h e   l o a d   e v e n t . 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' l o a d ' ,   d o m E l e m e n t ) ; 
             p r o p s   =   r a w P r o p s ; 
             b r e a k ; 
 
         c a s e   ' v i d e o ' : 
         c a s e   ' a u d i o ' : 
             / /   W e   l i s t e n   t o   t h e s e   e v e n t s   i n   c a s e   t o   e n s u r e   e m u l a t e d   b u b b l e 
             / /   l i s t e n e r s   s t i l l   f i r e   f o r   a l l   t h e   m e d i a   e v e n t s . 
             f o r   ( v a r   i   =   0 ;   i   <   m e d i a E v e n t T y p e s . l e n g t h ;   i + + )   { 
                 l i s t e n T o N o n D e l e g a t e d E v e n t ( m e d i a E v e n t T y p e s [ i ] ,   d o m E l e m e n t ) ; 
             } 
 
             p r o p s   =   r a w P r o p s ; 
             b r e a k ; 
 
         c a s e   ' s o u r c e ' : 
             / /   W e   l i s t e n   t o   t h i s   e v e n t   i n   c a s e   t o   e n s u r e   e m u l a t e d   b u b b l e 
             / /   l i s t e n e r s   s t i l l   f i r e   f o r   t h e   e r r o r   e v e n t . 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' e r r o r ' ,   d o m E l e m e n t ) ; 
             p r o p s   =   r a w P r o p s ; 
             b r e a k ; 
 
         c a s e   ' i m g ' : 
         c a s e   ' i m a g e ' : 
         c a s e   ' l i n k ' : 
             / /   W e   l i s t e n   t o   t h e s e   e v e n t s   i n   c a s e   t o   e n s u r e   e m u l a t e d   b u b b l e 
             / /   l i s t e n e r s   s t i l l   f i r e   f o r   e r r o r   a n d   l o a d   e v e n t s . 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' e r r o r ' ,   d o m E l e m e n t ) ; 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' l o a d ' ,   d o m E l e m e n t ) ; 
             p r o p s   =   r a w P r o p s ; 
             b r e a k ; 
 
         c a s e   ' d e t a i l s ' : 
             / /   W e   l i s t e n   t o   t h i s   e v e n t   i n   c a s e   t o   e n s u r e   e m u l a t e d   b u b b l e 
             / /   l i s t e n e r s   s t i l l   f i r e   f o r   t h e   t o g g l e   e v e n t . 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' t o g g l e ' ,   d o m E l e m e n t ) ; 
             p r o p s   =   r a w P r o p s ; 
             b r e a k ; 
 
         c a s e   ' i n p u t ' : 
             i n i t W r a p p e r S t a t e ( d o m E l e m e n t ,   r a w P r o p s ) ; 
             p r o p s   =   g e t H o s t P r o p s ( d o m E l e m e n t ,   r a w P r o p s ) ;   / /   W e   l i s t e n   t o   t h i s   e v e n t   i n   c a s e   t o   e n s u r e   e m u l a t e d   b u b b l e 
             / /   l i s t e n e r s   s t i l l   f i r e   f o r   t h e   i n v a l i d   e v e n t . 
 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' i n v a l i d ' ,   d o m E l e m e n t ) ; 
             b r e a k ; 
 
         c a s e   ' o p t i o n ' : 
             v a l i d a t e P r o p s ( d o m E l e m e n t ,   r a w P r o p s ) ; 
             p r o p s   =   r a w P r o p s ; 
             b r e a k ; 
 
         c a s e   ' s e l e c t ' : 
             i n i t W r a p p e r S t a t e $ 1 ( d o m E l e m e n t ,   r a w P r o p s ) ; 
             p r o p s   =   g e t H o s t P r o p s $ 1 ( d o m E l e m e n t ,   r a w P r o p s ) ;   / /   W e   l i s t e n   t o   t h i s   e v e n t   i n   c a s e   t o   e n s u r e   e m u l a t e d   b u b b l e 
             / /   l i s t e n e r s   s t i l l   f i r e   f o r   t h e   i n v a l i d   e v e n t . 
 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' i n v a l i d ' ,   d o m E l e m e n t ) ; 
             b r e a k ; 
 
         c a s e   ' t e x t a r e a ' : 
             i n i t W r a p p e r S t a t e $ 2 ( d o m E l e m e n t ,   r a w P r o p s ) ; 
             p r o p s   =   g e t H o s t P r o p s $ 2 ( d o m E l e m e n t ,   r a w P r o p s ) ;   / /   W e   l i s t e n   t o   t h i s   e v e n t   i n   c a s e   t o   e n s u r e   e m u l a t e d   b u b b l e 
             / /   l i s t e n e r s   s t i l l   f i r e   f o r   t h e   i n v a l i d   e v e n t . 
 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' i n v a l i d ' ,   d o m E l e m e n t ) ; 
             b r e a k ; 
 
         d e f a u l t : 
             p r o p s   =   r a w P r o p s ; 
     } 
 
     a s s e r t V a l i d P r o p s ( t a g ,   p r o p s ) ; 
     s e t I n i t i a l D O M P r o p e r t i e s ( t a g ,   d o m E l e m e n t ,   r o o t C o n t a i n e r E l e m e n t ,   p r o p s ,   i s C u s t o m C o m p o n e n t T a g ) ; 
 
     s w i t c h   ( t a g )   { 
         c a s e   ' i n p u t ' : 
             / /   T O D O :   M a k e   s u r e   w e   c h e c k   i f   t h i s   i s   s t i l l   u n m o u n t e d   o r   d o   a n y   c l e a n 
             / /   u p   n e c e s s a r y   s i n c e   w e   n e v e r   s t o p   t r a c k i n g   a n y m o r e . 
             t r a c k ( d o m E l e m e n t ) ; 
             p o s t M o u n t W r a p p e r ( d o m E l e m e n t ,   r a w P r o p s ,   f a l s e ) ; 
             b r e a k ; 
 
         c a s e   ' t e x t a r e a ' : 
             / /   T O D O :   M a k e   s u r e   w e   c h e c k   i f   t h i s   i s   s t i l l   u n m o u n t e d   o r   d o   a n y   c l e a n 
             / /   u p   n e c e s s a r y   s i n c e   w e   n e v e r   s t o p   t r a c k i n g   a n y m o r e . 
             t r a c k ( d o m E l e m e n t ) ; 
             p o s t M o u n t W r a p p e r $ 3 ( d o m E l e m e n t ) ; 
             b r e a k ; 
 
         c a s e   ' o p t i o n ' : 
             p o s t M o u n t W r a p p e r $ 1 ( d o m E l e m e n t ,   r a w P r o p s ) ; 
             b r e a k ; 
 
         c a s e   ' s e l e c t ' : 
             p o s t M o u n t W r a p p e r $ 2 ( d o m E l e m e n t ,   r a w P r o p s ) ; 
             b r e a k ; 
 
         d e f a u l t : 
             i f   ( t y p e o f   p r o p s . o n C l i c k   = = =   ' f u n c t i o n ' )   { 
                 / /   T O D O :   T h i s   c a s t   m a y   n o t   b e   s o u n d   f o r   S V G ,   M a t h M L   o r   c u s t o m   e l e m e n t s . 
                 t r a p C l i c k O n N o n I n t e r a c t i v e E l e m e n t ( d o m E l e m e n t ) ; 
             } 
 
             b r e a k ; 
     } 
 }   / /   C a l c u l a t e   t h e   d i f f   b e t w e e n   t h e   t w o   o b j e c t s . 
 
 f u n c t i o n   d i f f P r o p e r t i e s ( d o m E l e m e n t ,   t a g ,   l a s t R a w P r o p s ,   n e x t R a w P r o p s ,   r o o t C o n t a i n e r E l e m e n t )   { 
     { 
         v a l i d a t e P r o p e r t i e s I n D e v e l o p m e n t ( t a g ,   n e x t R a w P r o p s ) ; 
     } 
 
     v a r   u p d a t e P a y l o a d   =   n u l l ; 
     v a r   l a s t P r o p s ; 
     v a r   n e x t P r o p s ; 
 
     s w i t c h   ( t a g )   { 
         c a s e   ' i n p u t ' : 
             l a s t P r o p s   =   g e t H o s t P r o p s ( d o m E l e m e n t ,   l a s t R a w P r o p s ) ; 
             n e x t P r o p s   =   g e t H o s t P r o p s ( d o m E l e m e n t ,   n e x t R a w P r o p s ) ; 
             u p d a t e P a y l o a d   =   [ ] ; 
             b r e a k ; 
 
         c a s e   ' s e l e c t ' : 
             l a s t P r o p s   =   g e t H o s t P r o p s $ 1 ( d o m E l e m e n t ,   l a s t R a w P r o p s ) ; 
             n e x t P r o p s   =   g e t H o s t P r o p s $ 1 ( d o m E l e m e n t ,   n e x t R a w P r o p s ) ; 
             u p d a t e P a y l o a d   =   [ ] ; 
             b r e a k ; 
 
         c a s e   ' t e x t a r e a ' : 
             l a s t P r o p s   =   g e t H o s t P r o p s $ 2 ( d o m E l e m e n t ,   l a s t R a w P r o p s ) ; 
             n e x t P r o p s   =   g e t H o s t P r o p s $ 2 ( d o m E l e m e n t ,   n e x t R a w P r o p s ) ; 
             u p d a t e P a y l o a d   =   [ ] ; 
             b r e a k ; 
 
         d e f a u l t : 
             l a s t P r o p s   =   l a s t R a w P r o p s ; 
             n e x t P r o p s   =   n e x t R a w P r o p s ; 
 
             i f   ( t y p e o f   l a s t P r o p s . o n C l i c k   ! = =   ' f u n c t i o n '   & &   t y p e o f   n e x t P r o p s . o n C l i c k   = = =   ' f u n c t i o n ' )   { 
                 / /   T O D O :   T h i s   c a s t   m a y   n o t   b e   s o u n d   f o r   S V G ,   M a t h M L   o r   c u s t o m   e l e m e n t s . 
                 t r a p C l i c k O n N o n I n t e r a c t i v e E l e m e n t ( d o m E l e m e n t ) ; 
             } 
 
             b r e a k ; 
     } 
 
     a s s e r t V a l i d P r o p s ( t a g ,   n e x t P r o p s ) ; 
     v a r   p r o p K e y ; 
     v a r   s t y l e N a m e ; 
     v a r   s t y l e U p d a t e s   =   n u l l ; 
 
     f o r   ( p r o p K e y   i n   l a s t P r o p s )   { 
         i f   ( n e x t P r o p s . h a s O w n P r o p e r t y ( p r o p K e y )   | |   ! l a s t P r o p s . h a s O w n P r o p e r t y ( p r o p K e y )   | |   l a s t P r o p s [ p r o p K e y ]   = =   n u l l )   { 
             c o n t i n u e ; 
         } 
 
         i f   ( p r o p K e y   = = =   S T Y L E )   { 
             v a r   l a s t S t y l e   =   l a s t P r o p s [ p r o p K e y ] ; 
 
             f o r   ( s t y l e N a m e   i n   l a s t S t y l e )   { 
                 i f   ( l a s t S t y l e . h a s O w n P r o p e r t y ( s t y l e N a m e ) )   { 
                     i f   ( ! s t y l e U p d a t e s )   { 
                         s t y l e U p d a t e s   =   { } ; 
                     } 
 
                     s t y l e U p d a t e s [ s t y l e N a m e ]   =   ' ' ; 
                 } 
             } 
         }   e l s e   i f   ( p r o p K e y   = = =   D A N G E R O U S L Y _ S E T _ I N N E R _ H T M L   | |   p r o p K e y   = = =   C H I L D R E N )   ;   e l s e   i f   ( p r o p K e y   = = =   S U P P R E S S _ C O N T E N T _ E D I T A B L E _ W A R N I N G   | |   p r o p K e y   = = =   S U P P R E S S _ H Y D R A T I O N _ W A R N I N G )   ;   e l s e   i f   ( p r o p K e y   = = =   A U T O F O C U S )   ;   e l s e   i f   ( r e g i s t r a t i o n N a m e D e p e n d e n c i e s . h a s O w n P r o p e r t y ( p r o p K e y ) )   { 
             / /   T h i s   i s   a   s p e c i a l   c a s e .   I f   a n y   l i s t e n e r   u p d a t e s   w e   n e e d   t o   e n s u r e 
             / /   t h a t   t h e   " c u r r e n t "   f i b e r   p o i n t e r   g e t s   u p d a t e d   s o   w e   n e e d   a   c o m m i t 
             / /   t o   u p d a t e   t h i s   e l e m e n t . 
             i f   ( ! u p d a t e P a y l o a d )   { 
                 u p d a t e P a y l o a d   =   [ ] ; 
             } 
         }   e l s e   { 
             / /   F o r   a l l   o t h e r   d e l e t e d   p r o p e r t i e s   w e   a d d   i t   t o   t h e   q u e u e .   W e   u s e 
             / /   t h e   a l l o w e d   p r o p e r t y   l i s t   i n   t h e   c o m m i t   p h a s e   i n s t e a d . 
             ( u p d a t e P a y l o a d   =   u p d a t e P a y l o a d   | |   [ ] ) . p u s h ( p r o p K e y ,   n u l l ) ; 
         } 
     } 
 
     f o r   ( p r o p K e y   i n   n e x t P r o p s )   { 
         v a r   n e x t P r o p   =   n e x t P r o p s [ p r o p K e y ] ; 
         v a r   l a s t P r o p   =   l a s t P r o p s   ! =   n u l l   ?   l a s t P r o p s [ p r o p K e y ]   :   u n d e f i n e d ; 
 
         i f   ( ! n e x t P r o p s . h a s O w n P r o p e r t y ( p r o p K e y )   | |   n e x t P r o p   = = =   l a s t P r o p   | |   n e x t P r o p   = =   n u l l   & &   l a s t P r o p   = =   n u l l )   { 
             c o n t i n u e ; 
         } 
 
         i f   ( p r o p K e y   = = =   S T Y L E )   { 
             { 
                 i f   ( n e x t P r o p )   { 
                     / /   F r e e z e   t h e   n e x t   s t y l e   o b j e c t   s o   t h a t   w e   c a n   a s s u m e   i t   w o n ' t   b e 
                     / /   m u t a t e d .   W e   h a v e   a l r e a d y   w a r n e d   f o r   t h i s   i n   t h e   p a s t . 
                     O b j e c t . f r e e z e ( n e x t P r o p ) ; 
                 } 
             } 
 
             i f   ( l a s t P r o p )   { 
                 / /   U n s e t   s t y l e s   o n   ` l a s t P r o p `   b u t   n o t   o n   ` n e x t P r o p ` . 
                 f o r   ( s t y l e N a m e   i n   l a s t P r o p )   { 
                     i f   ( l a s t P r o p . h a s O w n P r o p e r t y ( s t y l e N a m e )   & &   ( ! n e x t P r o p   | |   ! n e x t P r o p . h a s O w n P r o p e r t y ( s t y l e N a m e ) ) )   { 
                         i f   ( ! s t y l e U p d a t e s )   { 
                             s t y l e U p d a t e s   =   { } ; 
                         } 
 
                         s t y l e U p d a t e s [ s t y l e N a m e ]   =   ' ' ; 
                     } 
                 }   / /   U p d a t e   s t y l e s   t h a t   c h a n g e d   s i n c e   ` l a s t P r o p ` . 
 
 
                 f o r   ( s t y l e N a m e   i n   n e x t P r o p )   { 
                     i f   ( n e x t P r o p . h a s O w n P r o p e r t y ( s t y l e N a m e )   & &   l a s t P r o p [ s t y l e N a m e ]   ! = =   n e x t P r o p [ s t y l e N a m e ] )   { 
                         i f   ( ! s t y l e U p d a t e s )   { 
                             s t y l e U p d a t e s   =   { } ; 
                         } 
 
                         s t y l e U p d a t e s [ s t y l e N a m e ]   =   n e x t P r o p [ s t y l e N a m e ] ; 
                     } 
                 } 
             }   e l s e   { 
                 / /   R e l i e s   o n   ` u p d a t e S t y l e s B y I D `   n o t   m u t a t i n g   ` s t y l e U p d a t e s ` . 
                 i f   ( ! s t y l e U p d a t e s )   { 
                     i f   ( ! u p d a t e P a y l o a d )   { 
                         u p d a t e P a y l o a d   =   [ ] ; 
                     } 
 
                     u p d a t e P a y l o a d . p u s h ( p r o p K e y ,   s t y l e U p d a t e s ) ; 
                 } 
 
                 s t y l e U p d a t e s   =   n e x t P r o p ; 
             } 
         }   e l s e   i f   ( p r o p K e y   = = =   D A N G E R O U S L Y _ S E T _ I N N E R _ H T M L )   { 
             v a r   n e x t H t m l   =   n e x t P r o p   ?   n e x t P r o p [ H T M L $ 1 ]   :   u n d e f i n e d ; 
             v a r   l a s t H t m l   =   l a s t P r o p   ?   l a s t P r o p [ H T M L $ 1 ]   :   u n d e f i n e d ; 
 
             i f   ( n e x t H t m l   ! =   n u l l )   { 
                 i f   ( l a s t H t m l   ! = =   n e x t H t m l )   { 
                     ( u p d a t e P a y l o a d   =   u p d a t e P a y l o a d   | |   [ ] ) . p u s h ( p r o p K e y ,   n e x t H t m l ) ; 
                 } 
             } 
         }   e l s e   i f   ( p r o p K e y   = = =   C H I L D R E N )   { 
             i f   ( t y p e o f   n e x t P r o p   = = =   ' s t r i n g '   | |   t y p e o f   n e x t P r o p   = = =   ' n u m b e r ' )   { 
                 ( u p d a t e P a y l o a d   =   u p d a t e P a y l o a d   | |   [ ] ) . p u s h ( p r o p K e y ,   ' '   +   n e x t P r o p ) ; 
             } 
         }   e l s e   i f   ( p r o p K e y   = = =   S U P P R E S S _ C O N T E N T _ E D I T A B L E _ W A R N I N G   | |   p r o p K e y   = = =   S U P P R E S S _ H Y D R A T I O N _ W A R N I N G )   ;   e l s e   i f   ( r e g i s t r a t i o n N a m e D e p e n d e n c i e s . h a s O w n P r o p e r t y ( p r o p K e y ) )   { 
             i f   ( n e x t P r o p   ! =   n u l l )   { 
                 / /   W e   e a g e r l y   l i s t e n   t o   t h i s   e v e n   t h o u g h   w e   h a v e n ' t   c o m m i t t e d   y e t . 
                 i f   (   t y p e o f   n e x t P r o p   ! = =   ' f u n c t i o n ' )   { 
                     w a r n F o r I n v a l i d E v e n t L i s t e n e r ( p r o p K e y ,   n e x t P r o p ) ; 
                 } 
 
                 i f   ( p r o p K e y   = = =   ' o n S c r o l l ' )   { 
                     l i s t e n T o N o n D e l e g a t e d E v e n t ( ' s c r o l l ' ,   d o m E l e m e n t ) ; 
                 } 
             } 
 
             i f   ( ! u p d a t e P a y l o a d   & &   l a s t P r o p   ! = =   n e x t P r o p )   { 
                 / /   T h i s   i s   a   s p e c i a l   c a s e .   I f   a n y   l i s t e n e r   u p d a t e s   w e   n e e d   t o   e n s u r e 
                 / /   t h a t   t h e   " c u r r e n t "   p r o p s   p o i n t e r   g e t s   u p d a t e d   s o   w e   n e e d   a   c o m m i t 
                 / /   t o   u p d a t e   t h i s   e l e m e n t . 
                 u p d a t e P a y l o a d   =   [ ] ; 
             } 
         }   e l s e   { 
             / /   F o r   a n y   o t h e r   p r o p e r t y   w e   a l w a y s   a d d   i t   t o   t h e   q u e u e   a n d   t h e n   w e 
             / /   f i l t e r   i t   o u t   u s i n g   t h e   a l l o w e d   p r o p e r t y   l i s t   d u r i n g   t h e   c o m m i t . 
             ( u p d a t e P a y l o a d   =   u p d a t e P a y l o a d   | |   [ ] ) . p u s h ( p r o p K e y ,   n e x t P r o p ) ; 
         } 
     } 
 
     i f   ( s t y l e U p d a t e s )   { 
         { 
             v a l i d a t e S h o r t h a n d P r o p e r t y C o l l i s i o n I n D e v ( s t y l e U p d a t e s ,   n e x t P r o p s [ S T Y L E ] ) ; 
         } 
 
         ( u p d a t e P a y l o a d   =   u p d a t e P a y l o a d   | |   [ ] ) . p u s h ( S T Y L E ,   s t y l e U p d a t e s ) ; 
     } 
 
     r e t u r n   u p d a t e P a y l o a d ; 
 }   / /   A p p l y   t h e   d i f f . 
 
 f u n c t i o n   u p d a t e P r o p e r t i e s ( d o m E l e m e n t ,   u p d a t e P a y l o a d ,   t a g ,   l a s t R a w P r o p s ,   n e x t R a w P r o p s )   { 
     / /   U p d a t e   c h e c k e d   * b e f o r e *   n a m e . 
     / /   I n   t h e   m i d d l e   o f   a n   u p d a t e ,   i t   i s   p o s s i b l e   t o   h a v e   m u l t i p l e   c h e c k e d . 
     / /   W h e n   a   c h e c k e d   r a d i o   t r i e s   t o   c h a n g e   n a m e ,   b r o w s e r   m a k e s   a n o t h e r   r a d i o ' s   c h e c k e d   f a l s e . 
     i f   ( t a g   = = =   ' i n p u t '   & &   n e x t R a w P r o p s . t y p e   = = =   ' r a d i o '   & &   n e x t R a w P r o p s . n a m e   ! =   n u l l )   { 
         u p d a t e C h e c k e d ( d o m E l e m e n t ,   n e x t R a w P r o p s ) ; 
     } 
 
     v a r   w a s C u s t o m C o m p o n e n t T a g   =   i s C u s t o m C o m p o n e n t ( t a g ,   l a s t R a w P r o p s ) ; 
     v a r   i s C u s t o m C o m p o n e n t T a g   =   i s C u s t o m C o m p o n e n t ( t a g ,   n e x t R a w P r o p s ) ;   / /   A p p l y   t h e   d i f f . 
 
     u p d a t e D O M P r o p e r t i e s ( d o m E l e m e n t ,   u p d a t e P a y l o a d ,   w a s C u s t o m C o m p o n e n t T a g ,   i s C u s t o m C o m p o n e n t T a g ) ;   / /   T O D O :   E n s u r e   t h a t   a n   u p d a t e   g e t s   s c h e d u l e d   i f   a n y   o f   t h e   s p e c i a l   p r o p s 
     / /   c h a n g e d . 
 
     s w i t c h   ( t a g )   { 
         c a s e   ' i n p u t ' : 
             / /   U p d a t e   t h e   w r a p p e r   a r o u n d   i n p u t s   * a f t e r *   u p d a t i n g   p r o p s .   T h i s   h a s   t o 
             / /   h a p p e n   a f t e r   ` u p d a t e D O M P r o p e r t i e s ` .   O t h e r w i s e   H T M L 5   i n p u t   v a l i d a t i o n s 
             / /   r a i s e   w a r n i n g s   a n d   p r e v e n t   t h e   n e w   v a l u e   f r o m   b e i n g   a s s i g n e d . 
             u p d a t e W r a p p e r ( d o m E l e m e n t ,   n e x t R a w P r o p s ) ; 
             b r e a k ; 
 
         c a s e   ' t e x t a r e a ' : 
             u p d a t e W r a p p e r $ 1 ( d o m E l e m e n t ,   n e x t R a w P r o p s ) ; 
             b r e a k ; 
 
         c a s e   ' s e l e c t ' : 
             / /   < s e l e c t >   v a l u e   u p d a t e   n e e d s   t o   o c c u r   a f t e r   < o p t i o n >   c h i l d r e n 
             / /   r e c o n c i l i a t i o n 
             p o s t U p d a t e W r a p p e r ( d o m E l e m e n t ,   n e x t R a w P r o p s ) ; 
             b r e a k ; 
     } 
 } 
 
 f u n c t i o n   g e t P o s s i b l e S t a n d a r d N a m e ( p r o p N a m e )   { 
     { 
         v a r   l o w e r C a s e d N a m e   =   p r o p N a m e . t o L o w e r C a s e ( ) ; 
 
         i f   ( ! p o s s i b l e S t a n d a r d N a m e s . h a s O w n P r o p e r t y ( l o w e r C a s e d N a m e ) )   { 
             r e t u r n   n u l l ; 
         } 
 
         r e t u r n   p o s s i b l e S t a n d a r d N a m e s [ l o w e r C a s e d N a m e ]   | |   n u l l ; 
     } 
 } 
 
 f u n c t i o n   d i f f H y d r a t e d P r o p e r t i e s ( d o m E l e m e n t ,   t a g ,   r a w P r o p s ,   p a r e n t N a m e s p a c e ,   r o o t C o n t a i n e r E l e m e n t ,   i s C o n c u r r e n t M o d e ,   s h o u l d W a r n D e v )   { 
     v a r   i s C u s t o m C o m p o n e n t T a g ; 
     v a r   e x t r a A t t r i b u t e N a m e s ; 
 
     { 
         i s C u s t o m C o m p o n e n t T a g   =   i s C u s t o m C o m p o n e n t ( t a g ,   r a w P r o p s ) ; 
         v a l i d a t e P r o p e r t i e s I n D e v e l o p m e n t ( t a g ,   r a w P r o p s ) ; 
     }   / /   T O D O :   M a k e   s u r e   t h a t   w e   c h e c k   i s M o u n t e d   b e f o r e   f i r i n g   a n y   o f   t h e s e   e v e n t s . 
 
 
     s w i t c h   ( t a g )   { 
         c a s e   ' d i a l o g ' : 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' c a n c e l ' ,   d o m E l e m e n t ) ; 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' c l o s e ' ,   d o m E l e m e n t ) ; 
             b r e a k ; 
 
         c a s e   ' i f r a m e ' : 
         c a s e   ' o b j e c t ' : 
         c a s e   ' e m b e d ' : 
             / /   W e   l i s t e n   t o   t h i s   e v e n t   i n   c a s e   t o   e n s u r e   e m u l a t e d   b u b b l e 
             / /   l i s t e n e r s   s t i l l   f i r e   f o r   t h e   l o a d   e v e n t . 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' l o a d ' ,   d o m E l e m e n t ) ; 
             b r e a k ; 
 
         c a s e   ' v i d e o ' : 
         c a s e   ' a u d i o ' : 
             / /   W e   l i s t e n   t o   t h e s e   e v e n t s   i n   c a s e   t o   e n s u r e   e m u l a t e d   b u b b l e 
             / /   l i s t e n e r s   s t i l l   f i r e   f o r   a l l   t h e   m e d i a   e v e n t s . 
             f o r   ( v a r   i   =   0 ;   i   <   m e d i a E v e n t T y p e s . l e n g t h ;   i + + )   { 
                 l i s t e n T o N o n D e l e g a t e d E v e n t ( m e d i a E v e n t T y p e s [ i ] ,   d o m E l e m e n t ) ; 
             } 
 
             b r e a k ; 
 
         c a s e   ' s o u r c e ' : 
             / /   W e   l i s t e n   t o   t h i s   e v e n t   i n   c a s e   t o   e n s u r e   e m u l a t e d   b u b b l e 
             / /   l i s t e n e r s   s t i l l   f i r e   f o r   t h e   e r r o r   e v e n t . 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' e r r o r ' ,   d o m E l e m e n t ) ; 
             b r e a k ; 
 
         c a s e   ' i m g ' : 
         c a s e   ' i m a g e ' : 
         c a s e   ' l i n k ' : 
             / /   W e   l i s t e n   t o   t h e s e   e v e n t s   i n   c a s e   t o   e n s u r e   e m u l a t e d   b u b b l e 
             / /   l i s t e n e r s   s t i l l   f i r e   f o r   e r r o r   a n d   l o a d   e v e n t s . 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' e r r o r ' ,   d o m E l e m e n t ) ; 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' l o a d ' ,   d o m E l e m e n t ) ; 
             b r e a k ; 
 
         c a s e   ' d e t a i l s ' : 
             / /   W e   l i s t e n   t o   t h i s   e v e n t   i n   c a s e   t o   e n s u r e   e m u l a t e d   b u b b l e 
             / /   l i s t e n e r s   s t i l l   f i r e   f o r   t h e   t o g g l e   e v e n t . 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' t o g g l e ' ,   d o m E l e m e n t ) ; 
             b r e a k ; 
 
         c a s e   ' i n p u t ' : 
             i n i t W r a p p e r S t a t e ( d o m E l e m e n t ,   r a w P r o p s ) ;   / /   W e   l i s t e n   t o   t h i s   e v e n t   i n   c a s e   t o   e n s u r e   e m u l a t e d   b u b b l e 
             / /   l i s t e n e r s   s t i l l   f i r e   f o r   t h e   i n v a l i d   e v e n t . 
 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' i n v a l i d ' ,   d o m E l e m e n t ) ; 
             b r e a k ; 
 
         c a s e   ' o p t i o n ' : 
             v a l i d a t e P r o p s ( d o m E l e m e n t ,   r a w P r o p s ) ; 
             b r e a k ; 
 
         c a s e   ' s e l e c t ' : 
             i n i t W r a p p e r S t a t e $ 1 ( d o m E l e m e n t ,   r a w P r o p s ) ;   / /   W e   l i s t e n   t o   t h i s   e v e n t   i n   c a s e   t o   e n s u r e   e m u l a t e d   b u b b l e 
             / /   l i s t e n e r s   s t i l l   f i r e   f o r   t h e   i n v a l i d   e v e n t . 
 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' i n v a l i d ' ,   d o m E l e m e n t ) ; 
             b r e a k ; 
 
         c a s e   ' t e x t a r e a ' : 
             i n i t W r a p p e r S t a t e $ 2 ( d o m E l e m e n t ,   r a w P r o p s ) ;   / /   W e   l i s t e n   t o   t h i s   e v e n t   i n   c a s e   t o   e n s u r e   e m u l a t e d   b u b b l e 
             / /   l i s t e n e r s   s t i l l   f i r e   f o r   t h e   i n v a l i d   e v e n t . 
 
             l i s t e n T o N o n D e l e g a t e d E v e n t ( ' i n v a l i d ' ,   d o m E l e m e n t ) ; 
             b r e a k ; 
     } 
 
     a s s e r t V a l i d P r o p s ( t a g ,   r a w P r o p s ) ; 
 
     { 
         e x t r a A t t r i b u t e N a m e s   =   n e w   S e t ( ) ; 
         v a r   a t t r i b u t e s   =   d o m E l e m e n t . a t t r i b u t e s ; 
 
         f o r   ( v a r   _ i   =   0 ;   _ i   <   a t t r i b u t e s . l e n g t h ;   _ i + + )   { 
             v a r   n a m e   =   a t t r i b u t e s [ _ i ] . n a m e . t o L o w e r C a s e ( ) ; 
 
             s w i t c h   ( n a m e )   { 
                 / /   C o n t r o l l e d   a t t r i b u t e s   a r e   n o t   v a l i d a t e d 
                 / /   T O D O :   O n l y   i g n o r e   t h e m   o n   c o n t r o l l e d   t a g s . 
                 c a s e   ' v a l u e ' : 
                     b r e a k ; 
 
                 c a s e   ' c h e c k e d ' : 
                     b r e a k ; 
 
                 c a s e   ' s e l e c t e d ' : 
                     b r e a k ; 
 
                 d e f a u l t : 
                     / /   I n t e n t i o n a l l y   u s e   t h e   o r i g i n a l   n a m e . 
                     / /   S e e   d i s c u s s i o n   i n   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / p u l l / 1 0 6 7 6 . 
                     e x t r a A t t r i b u t e N a m e s . a d d ( a t t r i b u t e s [ _ i ] . n a m e ) ; 
             } 
         } 
     } 
 
     v a r   u p d a t e P a y l o a d   =   n u l l ; 
 
     f o r   ( v a r   p r o p K e y   i n   r a w P r o p s )   { 
         i f   ( ! r a w P r o p s . h a s O w n P r o p e r t y ( p r o p K e y ) )   { 
             c o n t i n u e ; 
         } 
 
         v a r   n e x t P r o p   =   r a w P r o p s [ p r o p K e y ] ; 
 
         i f   ( p r o p K e y   = = =   C H I L D R E N )   { 
             / /   F o r   t e x t   c o n t e n t   c h i l d r e n   w e   c o m p a r e   a g a i n s t   t e x t C o n t e n t .   T h i s 
             / /   m i g h t   m a t c h   a d d i t i o n a l   H T M L   t h a t   i s   h i d d e n   w h e n   w e   r e a d   i t   u s i n g 
             / /   t e x t C o n t e n t .   E . g .   " f o o "   w i l l   m a t c h   " f < s p a n > o o < / s p a n > "   b u t   t h a t   s t i l l 
             / /   s a t i s f i e s   o u r   r e q u i r e m e n t .   O u r   r e q u i r e m e n t   i s   n o t   t o   p r o d u c e   p e r f e c t 
             / /   H T M L   a n d   a t t r i b u t e s .   I d e a l l y   w e   s h o u l d   p r e s e r v e   s t r u c t u r e   b u t   i t ' s 
             / /   o k   n o t   t o   i f   t h e   v i s i b l e   c o n t e n t   i s   s t i l l   e n o u g h   t o   i n d i c a t e   w h a t 
             / /   e v e n   l i s t e n e r s   t h e s e   n o d e s   m i g h t   b e   w i r e d   u p   t o . 
             / /   T O D O :   W a r n   i f   t h e r e   i s   m o r e   t h a n   a   s i n g l e   t e x t N o d e   a s   a   c h i l d . 
             / /   T O D O :   S h o u l d   w e   u s e   d o m E l e m e n t . f i r s t C h i l d . n o d e V a l u e   t o   c o m p a r e ? 
             i f   ( t y p e o f   n e x t P r o p   = = =   ' s t r i n g ' )   { 
                 i f   ( d o m E l e m e n t . t e x t C o n t e n t   ! = =   n e x t P r o p )   { 
                     i f   ( r a w P r o p s [ S U P P R E S S _ H Y D R A T I O N _ W A R N I N G ]   ! = =   t r u e )   { 
                         c h e c k F o r U n m a t c h e d T e x t ( d o m E l e m e n t . t e x t C o n t e n t ,   n e x t P r o p ,   i s C o n c u r r e n t M o d e ,   s h o u l d W a r n D e v ) ; 
                     } 
 
                     u p d a t e P a y l o a d   =   [ C H I L D R E N ,   n e x t P r o p ] ; 
                 } 
             }   e l s e   i f   ( t y p e o f   n e x t P r o p   = = =   ' n u m b e r ' )   { 
                 i f   ( d o m E l e m e n t . t e x t C o n t e n t   ! = =   ' '   +   n e x t P r o p )   { 
                     i f   ( r a w P r o p s [ S U P P R E S S _ H Y D R A T I O N _ W A R N I N G ]   ! = =   t r u e )   { 
                         c h e c k F o r U n m a t c h e d T e x t ( d o m E l e m e n t . t e x t C o n t e n t ,   n e x t P r o p ,   i s C o n c u r r e n t M o d e ,   s h o u l d W a r n D e v ) ; 
                     } 
 
                     u p d a t e P a y l o a d   =   [ C H I L D R E N ,   ' '   +   n e x t P r o p ] ; 
                 } 
             } 
         }   e l s e   i f   ( r e g i s t r a t i o n N a m e D e p e n d e n c i e s . h a s O w n P r o p e r t y ( p r o p K e y ) )   { 
             i f   ( n e x t P r o p   ! =   n u l l )   { 
                 i f   (   t y p e o f   n e x t P r o p   ! = =   ' f u n c t i o n ' )   { 
                     w a r n F o r I n v a l i d E v e n t L i s t e n e r ( p r o p K e y ,   n e x t P r o p ) ; 
                 } 
 
                 i f   ( p r o p K e y   = = =   ' o n S c r o l l ' )   { 
                     l i s t e n T o N o n D e l e g a t e d E v e n t ( ' s c r o l l ' ,   d o m E l e m e n t ) ; 
                 } 
             } 
         }   e l s e   i f   ( s h o u l d W a r n D e v   & &   t r u e   & &   / /   C o n v i n c e   F l o w   w e ' v e   c a l c u l a t e d   i t   ( i t ' s   D E V - o n l y   i n   t h i s   m e t h o d . ) 
         t y p e o f   i s C u s t o m C o m p o n e n t T a g   = = =   ' b o o l e a n ' )   { 
             / /   V a l i d a t e   t h a t   t h e   p r o p e r t i e s   c o r r e s p o n d   t o   t h e i r   e x p e c t e d   v a l u e s . 
             v a r   s e r v e r V a l u e   =   v o i d   0 ; 
             v a r   p r o p e r t y I n f o   =   i s C u s t o m C o m p o n e n t T a g   & &   e n a b l e C u s t o m E l e m e n t P r o p e r t y S u p p o r t   ?   n u l l   :   g e t P r o p e r t y I n f o ( p r o p K e y ) ; 
 
             i f   ( r a w P r o p s [ S U P P R E S S _ H Y D R A T I O N _ W A R N I N G ]   = = =   t r u e )   ;   e l s e   i f   ( p r o p K e y   = = =   S U P P R E S S _ C O N T E N T _ E D I T A B L E _ W A R N I N G   | |   p r o p K e y   = = =   S U P P R E S S _ H Y D R A T I O N _ W A R N I N G   | |   / /   C o n t r o l l e d   a t t r i b u t e s   a r e   n o t   v a l i d a t e d 
             / /   T O D O :   O n l y   i g n o r e   t h e m   o n   c o n t r o l l e d   t a g s . 
             p r o p K e y   = = =   ' v a l u e '   | |   p r o p K e y   = = =   ' c h e c k e d '   | |   p r o p K e y   = = =   ' s e l e c t e d ' )   ;   e l s e   i f   ( p r o p K e y   = = =   D A N G E R O U S L Y _ S E T _ I N N E R _ H T M L )   { 
                 v a r   s e r v e r H T M L   =   d o m E l e m e n t . i n n e r H T M L ; 
                 v a r   n e x t H t m l   =   n e x t P r o p   ?   n e x t P r o p [ H T M L $ 1 ]   :   u n d e f i n e d ; 
 
                 i f   ( n e x t H t m l   ! =   n u l l )   { 
                     v a r   e x p e c t e d H T M L   =   n o r m a l i z e H T M L ( d o m E l e m e n t ,   n e x t H t m l ) ; 
 
                     i f   ( e x p e c t e d H T M L   ! = =   s e r v e r H T M L )   { 
                         w a r n F o r P r o p D i f f e r e n c e ( p r o p K e y ,   s e r v e r H T M L ,   e x p e c t e d H T M L ) ; 
                     } 
                 } 
             }   e l s e   i f   ( p r o p K e y   = = =   S T Y L E )   { 
                 / /   $ F l o w F i x M e   -   S h o u l d   b e   i n f e r r e d   a s   n o t   u n d e f i n e d . 
                 e x t r a A t t r i b u t e N a m e s . d e l e t e ( p r o p K e y ) ; 
 
                 i f   ( c a n D i f f S t y l e F o r H y d r a t i o n W a r n i n g )   { 
                     v a r   e x p e c t e d S t y l e   =   c r e a t e D a n g e r o u s S t r i n g F o r S t y l e s ( n e x t P r o p ) ; 
                     s e r v e r V a l u e   =   d o m E l e m e n t . g e t A t t r i b u t e ( ' s t y l e ' ) ; 
 
                     i f   ( e x p e c t e d S t y l e   ! = =   s e r v e r V a l u e )   { 
                         w a r n F o r P r o p D i f f e r e n c e ( p r o p K e y ,   s e r v e r V a l u e ,   e x p e c t e d S t y l e ) ; 
                     } 
                 } 
             }   e l s e   i f   ( i s C u s t o m C o m p o n e n t T a g   & &   ! e n a b l e C u s t o m E l e m e n t P r o p e r t y S u p p o r t )   { 
                 / /   $ F l o w F i x M e   -   S h o u l d   b e   i n f e r r e d   a s   n o t   u n d e f i n e d . 
                 e x t r a A t t r i b u t e N a m e s . d e l e t e ( p r o p K e y . t o L o w e r C a s e ( ) ) ; 
                 s e r v e r V a l u e   =   g e t V a l u e F o r A t t r i b u t e ( d o m E l e m e n t ,   p r o p K e y ,   n e x t P r o p ) ; 
 
                 i f   ( n e x t P r o p   ! = =   s e r v e r V a l u e )   { 
                     w a r n F o r P r o p D i f f e r e n c e ( p r o p K e y ,   s e r v e r V a l u e ,   n e x t P r o p ) ; 
                 } 
             }   e l s e   i f   ( ! s h o u l d I g n o r e A t t r i b u t e ( p r o p K e y ,   p r o p e r t y I n f o ,   i s C u s t o m C o m p o n e n t T a g )   & &   ! s h o u l d R e m o v e A t t r i b u t e ( p r o p K e y ,   n e x t P r o p ,   p r o p e r t y I n f o ,   i s C u s t o m C o m p o n e n t T a g ) )   { 
                 v a r   i s M i s m a t c h D u e T o B a d C a s i n g   =   f a l s e ; 
 
                 i f   ( p r o p e r t y I n f o   ! = =   n u l l )   { 
                     / /   $ F l o w F i x M e   -   S h o u l d   b e   i n f e r r e d   a s   n o t   u n d e f i n e d . 
                     e x t r a A t t r i b u t e N a m e s . d e l e t e ( p r o p e r t y I n f o . a t t r i b u t e N a m e ) ; 
                     s e r v e r V a l u e   =   g e t V a l u e F o r P r o p e r t y ( d o m E l e m e n t ,   p r o p K e y ,   n e x t P r o p ,   p r o p e r t y I n f o ) ; 
                 }   e l s e   { 
                     v a r   o w n N a m e s p a c e   =   p a r e n t N a m e s p a c e ; 
 
                     i f   ( o w n N a m e s p a c e   = = =   H T M L _ N A M E S P A C E )   { 
                         o w n N a m e s p a c e   =   g e t I n t r i n s i c N a m e s p a c e ( t a g ) ; 
                     } 
 
                     i f   ( o w n N a m e s p a c e   = = =   H T M L _ N A M E S P A C E )   { 
                         / /   $ F l o w F i x M e   -   S h o u l d   b e   i n f e r r e d   a s   n o t   u n d e f i n e d . 
                         e x t r a A t t r i b u t e N a m e s . d e l e t e ( p r o p K e y . t o L o w e r C a s e ( ) ) ; 
                     }   e l s e   { 
                         v a r   s t a n d a r d N a m e   =   g e t P o s s i b l e S t a n d a r d N a m e ( p r o p K e y ) ; 
 
                         i f   ( s t a n d a r d N a m e   ! = =   n u l l   & &   s t a n d a r d N a m e   ! = =   p r o p K e y )   { 
                             / /   I f   a n   S V G   p r o p   i s   s u p p l i e d   w i t h   b a d   c a s i n g ,   i t   w i l l 
                             / /   b e   s u c c e s s f u l l y   p a r s e d   f r o m   H T M L ,   b u t   w i l l   p r o d u c e   a   m i s m a t c h 
                             / /   ( a n d   w o u l d   b e   i n c o r r e c t l y   r e n d e r e d   o n   t h e   c l i e n t ) . 
                             / /   H o w e v e r ,   w e   a l r e a d y   w a r n   a b o u t   b a d   c a s i n g   e l s e w h e r e . 
                             / /   S o   w e ' l l   s k i p   t h e   m i s l e a d i n g   e x t r a   m i s m a t c h   w a r n i n g   i n   t h i s   c a s e . 
                             i s M i s m a t c h D u e T o B a d C a s i n g   =   t r u e ;   / /   $ F l o w F i x M e   -   S h o u l d   b e   i n f e r r e d   a s   n o t   u n d e f i n e d . 
 
                             e x t r a A t t r i b u t e N a m e s . d e l e t e ( s t a n d a r d N a m e ) ; 
                         }   / /   $ F l o w F i x M e   -   S h o u l d   b e   i n f e r r e d   a s   n o t   u n d e f i n e d . 
 
 
                         e x t r a A t t r i b u t e N a m e s . d e l e t e ( p r o p K e y ) ; 
                     } 
 
                     s e r v e r V a l u e   =   g e t V a l u e F o r A t t r i b u t e ( d o m E l e m e n t ,   p r o p K e y ,   n e x t P r o p ) ; 
                 } 
 
                 v a r   d o n t W a r n C u s t o m E l e m e n t   =   e n a b l e C u s t o m E l e m e n t P r o p e r t y S u p p o r t     ; 
 
                 i f   ( ! d o n t W a r n C u s t o m E l e m e n t   & &   n e x t P r o p   ! = =   s e r v e r V a l u e   & &   ! i s M i s m a t c h D u e T o B a d C a s i n g )   { 
                     w a r n F o r P r o p D i f f e r e n c e ( p r o p K e y ,   s e r v e r V a l u e ,   n e x t P r o p ) ; 
                 } 
             } 
         } 
     } 
 
     { 
         i f   ( s h o u l d W a r n D e v )   { 
             i f   (   / /   $ F l o w F i x M e   -   S h o u l d   b e   i n f e r r e d   a s   n o t   u n d e f i n e d . 
             e x t r a A t t r i b u t e N a m e s . s i z e   >   0   & &   r a w P r o p s [ S U P P R E S S _ H Y D R A T I O N _ W A R N I N G ]   ! = =   t r u e )   { 
                 / /   $ F l o w F i x M e   -   S h o u l d   b e   i n f e r r e d   a s   n o t   u n d e f i n e d . 
                 w a r n F o r E x t r a A t t r i b u t e s ( e x t r a A t t r i b u t e N a m e s ) ; 
             } 
         } 
     } 
 
     s w i t c h   ( t a g )   { 
         c a s e   ' i n p u t ' : 
             / /   T O D O :   M a k e   s u r e   w e   c h e c k   i f   t h i s   i s   s t i l l   u n m o u n t e d   o r   d o   a n y   c l e a n 
             / /   u p   n e c e s s a r y   s i n c e   w e   n e v e r   s t o p   t r a c k i n g   a n y m o r e . 
             t r a c k ( d o m E l e m e n t ) ; 
             p o s t M o u n t W r a p p e r ( d o m E l e m e n t ,   r a w P r o p s ,   t r u e ) ; 
             b r e a k ; 
 
         c a s e   ' t e x t a r e a ' : 
             / /   T O D O :   M a k e   s u r e   w e   c h e c k   i f   t h i s   i s   s t i l l   u n m o u n t e d   o r   d o   a n y   c l e a n 
             / /   u p   n e c e s s a r y   s i n c e   w e   n e v e r   s t o p   t r a c k i n g   a n y m o r e . 
             t r a c k ( d o m E l e m e n t ) ; 
             p o s t M o u n t W r a p p e r $ 3 ( d o m E l e m e n t ) ; 
             b r e a k ; 
 
         c a s e   ' s e l e c t ' : 
         c a s e   ' o p t i o n ' : 
             / /   F o r   i n p u t   a n d   t e x t a r e a   w e   c u r r e n t   a l w a y s   s e t   t h e   v a l u e   p r o p e r t y   a t 
             / /   p o s t   m o u n t   t o   f o r c e   i t   t o   d i v e r g e   f r o m   a t t r i b u t e s .   H o w e v e r ,   f o r 
             / /   o p t i o n   a n d   s e l e c t   w e   d o n ' t   q u i t e   d o   t h e   s a m e   t h i n g   a n d   s e l e c t 
             / /   i s   n o t   r e s i l i e n t   t o   t h e   D O M   s t a t e   c h a n g i n g   s o   w e   d o n ' t   d o   t h a t   h e r e . 
             / /   T O D O :   C o n s i d e r   n o t   d o i n g   t h i s   f o r   i n p u t   a n d   t e x t a r e a . 
             b r e a k ; 
 
         d e f a u l t : 
             i f   ( t y p e o f   r a w P r o p s . o n C l i c k   = = =   ' f u n c t i o n ' )   { 
                 / /   T O D O :   T h i s   c a s t   m a y   n o t   b e   s o u n d   f o r   S V G ,   M a t h M L   o r   c u s t o m   e l e m e n t s . 
                 t r a p C l i c k O n N o n I n t e r a c t i v e E l e m e n t ( d o m E l e m e n t ) ; 
             } 
 
             b r e a k ; 
     } 
 
     r e t u r n   u p d a t e P a y l o a d ; 
 } 
 f u n c t i o n   d i f f H y d r a t e d T e x t ( t e x t N o d e ,   t e x t ,   i s C o n c u r r e n t M o d e )   { 
     v a r   i s D i f f e r e n t   =   t e x t N o d e . n o d e V a l u e   ! = =   t e x t ; 
     r e t u r n   i s D i f f e r e n t ; 
 } 
 f u n c t i o n   w a r n F o r D e l e t e d H y d r a t a b l e E l e m e n t ( p a r e n t N o d e ,   c h i l d )   { 
     { 
         i f   ( d i d W a r n I n v a l i d H y d r a t i o n )   { 
             r e t u r n ; 
         } 
 
         d i d W a r n I n v a l i d H y d r a t i o n   =   t r u e ; 
 
         e r r o r ( ' D i d   n o t   e x p e c t   s e r v e r   H T M L   t o   c o n t a i n   a   < % s >   i n   < % s > . ' ,   c h i l d . n o d e N a m e . t o L o w e r C a s e ( ) ,   p a r e n t N o d e . n o d e N a m e . t o L o w e r C a s e ( ) ) ; 
     } 
 } 
 f u n c t i o n   w a r n F o r D e l e t e d H y d r a t a b l e T e x t ( p a r e n t N o d e ,   c h i l d )   { 
     { 
         i f   ( d i d W a r n I n v a l i d H y d r a t i o n )   { 
             r e t u r n ; 
         } 
 
         d i d W a r n I n v a l i d H y d r a t i o n   =   t r u e ; 
 
         e r r o r ( ' D i d   n o t   e x p e c t   s e r v e r   H T M L   t o   c o n t a i n   t h e   t e x t   n o d e   " % s "   i n   < % s > . ' ,   c h i l d . n o d e V a l u e ,   p a r e n t N o d e . n o d e N a m e . t o L o w e r C a s e ( ) ) ; 
     } 
 } 
 f u n c t i o n   w a r n F o r I n s e r t e d H y d r a t e d E l e m e n t ( p a r e n t N o d e ,   t a g ,   p r o p s )   { 
     { 
         i f   ( d i d W a r n I n v a l i d H y d r a t i o n )   { 
             r e t u r n ; 
         } 
 
         d i d W a r n I n v a l i d H y d r a t i o n   =   t r u e ; 
 
         e r r o r ( ' E x p e c t e d   s e r v e r   H T M L   t o   c o n t a i n   a   m a t c h i n g   < % s >   i n   < % s > . ' ,   t a g ,   p a r e n t N o d e . n o d e N a m e . t o L o w e r C a s e ( ) ) ; 
     } 
 } 
 f u n c t i o n   w a r n F o r I n s e r t e d H y d r a t e d T e x t ( p a r e n t N o d e ,   t e x t )   { 
     { 
         i f   ( t e x t   = = =   ' ' )   { 
             / /   W e   e x p e c t   t o   i n s e r t   e m p t y   t e x t   n o d e s   s i n c e   t h e y ' r e   n o t   r e p r e s e n t e d   i n 
             / /   t h e   H T M L . 
             / /   T O D O :   R e m o v e   t h i s   s p e c i a l   c a s e   i f   w e   c a n   j u s t   a v o i d   i n s e r t i n g   e m p t y 
             / /   t e x t   n o d e s . 
             r e t u r n ; 
         } 
 
         i f   ( d i d W a r n I n v a l i d H y d r a t i o n )   { 
             r e t u r n ; 
         } 
 
         d i d W a r n I n v a l i d H y d r a t i o n   =   t r u e ; 
 
         e r r o r ( ' E x p e c t e d   s e r v e r   H T M L   t o   c o n t a i n   a   m a t c h i n g   t e x t   n o d e   f o r   " % s "   i n   < % s > . ' ,   t e x t ,   p a r e n t N o d e . n o d e N a m e . t o L o w e r C a s e ( ) ) ; 
     } 
 } 
 f u n c t i o n   r e s t o r e C o n t r o l l e d S t a t e $ 3 ( d o m E l e m e n t ,   t a g ,   p r o p s )   { 
     s w i t c h   ( t a g )   { 
         c a s e   ' i n p u t ' : 
             r e s t o r e C o n t r o l l e d S t a t e ( d o m E l e m e n t ,   p r o p s ) ; 
             r e t u r n ; 
 
         c a s e   ' t e x t a r e a ' : 
             r e s t o r e C o n t r o l l e d S t a t e $ 2 ( d o m E l e m e n t ,   p r o p s ) ; 
             r e t u r n ; 
 
         c a s e   ' s e l e c t ' : 
             r e s t o r e C o n t r o l l e d S t a t e $ 1 ( d o m E l e m e n t ,   p r o p s ) ; 
             r e t u r n ; 
     } 
 } 
 
 v a r   v a l i d a t e D O M N e s t i n g   =   f u n c t i o n   ( )   { } ; 
 
 v a r   u p d a t e d A n c e s t o r I n f o   =   f u n c t i o n   ( )   { } ; 
 
 { 
     / /   T h i s   v a l i d a t i o n   c o d e   w a s   w r i t t e n   b a s e d   o n   t h e   H T M L 5   p a r s i n g   s p e c : 
     / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / s y n t a x . h t m l # h a s - a n - e l e m e n t - i n - s c o p e 
     / / 
     / /   N o t e :   t h i s   d o e s   n o t   c a t c h   a l l   i n v a l i d   n e s t i n g ,   n o r   d o e s   i t   t r y   t o   ( a s   i t ' s 
     / /   n o t   c l e a r   w h a t   p r a c t i c a l   b e n e f i t   d o i n g   s o   p r o v i d e s ) ;   i n s t e a d ,   w e   w a r n   o n l y 
     / /   f o r   c a s e s   w h e r e   t h e   p a r s e r   w i l l   g i v e   a   p a r s e   t r e e   d i f f e r i n g   f r o m   w h a t   R e a c t 
     / /   i n t e n d e d .   F o r   e x a m p l e ,   < b > < d i v > < / d i v > < / b >   i s   i n v a l i d   b u t   w e   d o n ' t   w a r n 
     / /   b e c a u s e   i t   s t i l l   p a r s e s   c o r r e c t l y ;   w e   d o   w a r n   f o r   o t h e r   c a s e s   l i k e   n e s t e d 
     / /   < p >   t a g s   w h e r e   t h e   b e g i n n i n g   o f   t h e   s e c o n d   e l e m e n t   i m p l i c i t l y   c l o s e s   t h e 
     / /   f i r s t ,   c a u s i n g   a   c o n f u s i n g   m e s s . 
     / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / s y n t a x . h t m l # s p e c i a l 
     v a r   s p e c i a l T a g s   =   [ ' a d d r e s s ' ,   ' a p p l e t ' ,   ' a r e a ' ,   ' a r t i c l e ' ,   ' a s i d e ' ,   ' b a s e ' ,   ' b a s e f o n t ' ,   ' b g s o u n d ' ,   ' b l o c k q u o t e ' ,   ' b o d y ' ,   ' b r ' ,   ' b u t t o n ' ,   ' c a p t i o n ' ,   ' c e n t e r ' ,   ' c o l ' ,   ' c o l g r o u p ' ,   ' d d ' ,   ' d e t a i l s ' ,   ' d i r ' ,   ' d i v ' ,   ' d l ' ,   ' d t ' ,   ' e m b e d ' ,   ' f i e l d s e t ' ,   ' f i g c a p t i o n ' ,   ' f i g u r e ' ,   ' f o o t e r ' ,   ' f o r m ' ,   ' f r a m e ' ,   ' f r a m e s e t ' ,   ' h 1 ' ,   ' h 2 ' ,   ' h 3 ' ,   ' h 4 ' ,   ' h 5 ' ,   ' h 6 ' ,   ' h e a d ' ,   ' h e a d e r ' ,   ' h g r o u p ' ,   ' h r ' ,   ' h t m l ' ,   ' i f r a m e ' ,   ' i m g ' ,   ' i n p u t ' ,   ' i s i n d e x ' ,   ' l i ' ,   ' l i n k ' ,   ' l i s t i n g ' ,   ' m a i n ' ,   ' m a r q u e e ' ,   ' m e n u ' ,   ' m e n u i t e m ' ,   ' m e t a ' ,   ' n a v ' ,   ' n o e m b e d ' ,   ' n o f r a m e s ' ,   ' n o s c r i p t ' ,   ' o b j e c t ' ,   ' o l ' ,   ' p ' ,   ' p a r a m ' ,   ' p l a i n t e x t ' ,   ' p r e ' ,   ' s c r i p t ' ,   ' s e c t i o n ' ,   ' s e l e c t ' ,   ' s o u r c e ' ,   ' s t y l e ' ,   ' s u m m a r y ' ,   ' t a b l e ' ,   ' t b o d y ' ,   ' t d ' ,   ' t e m p l a t e ' ,   ' t e x t a r e a ' ,   ' t f o o t ' ,   ' t h ' ,   ' t h e a d ' ,   ' t i t l e ' ,   ' t r ' ,   ' t r a c k ' ,   ' u l ' ,   ' w b r ' ,   ' x m p ' ] ;   / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / s y n t a x . h t m l # h a s - a n - e l e m e n t - i n - s c o p e 
 
     v a r   i n S c o p e T a g s   =   [ ' a p p l e t ' ,   ' c a p t i o n ' ,   ' h t m l ' ,   ' t a b l e ' ,   ' t d ' ,   ' t h ' ,   ' m a r q u e e ' ,   ' o b j e c t ' ,   ' t e m p l a t e ' ,   / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / s y n t a x . h t m l # h t m l - i n t e g r a t i o n - p o i n t 
     / /   T O D O :   D i s t i n g u i s h   b y   n a m e s p a c e   h e r e   - -   f o r   < t i t l e > ,   i n c l u d i n g   i t   h e r e 
     / /   e r r s   o n   t h e   s i d e   o f   f e w e r   w a r n i n g s 
     ' f o r e i g n O b j e c t ' ,   ' d e s c ' ,   ' t i t l e ' ] ;   / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / s y n t a x . h t m l # h a s - a n - e l e m e n t - i n - b u t t o n - s c o p e 
 
     v a r   b u t t o n S c o p e T a g s   =   i n S c o p e T a g s . c o n c a t ( [ ' b u t t o n ' ] ) ;   / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / s y n t a x . h t m l # g e n e r a t e - i m p l i e d - e n d - t a g s 
 
     v a r   i m p l i e d E n d T a g s   =   [ ' d d ' ,   ' d t ' ,   ' l i ' ,   ' o p t i o n ' ,   ' o p t g r o u p ' ,   ' p ' ,   ' r p ' ,   ' r t ' ] ; 
     v a r   e m p t y A n c e s t o r I n f o   =   { 
         c u r r e n t :   n u l l , 
         f o r m T a g :   n u l l , 
         a T a g I n S c o p e :   n u l l , 
         b u t t o n T a g I n S c o p e :   n u l l , 
         n o b r T a g I n S c o p e :   n u l l , 
         p T a g I n B u t t o n S c o p e :   n u l l , 
         l i s t I t e m T a g A u t o c l o s i n g :   n u l l , 
         d l I t e m T a g A u t o c l o s i n g :   n u l l 
     } ; 
 
     u p d a t e d A n c e s t o r I n f o   =   f u n c t i o n   ( o l d I n f o ,   t a g )   { 
         v a r   a n c e s t o r I n f o   =   a s s i g n ( { } ,   o l d I n f o   | |   e m p t y A n c e s t o r I n f o ) ; 
 
         v a r   i n f o   =   { 
             t a g :   t a g 
         } ; 
 
         i f   ( i n S c o p e T a g s . i n d e x O f ( t a g )   ! = =   - 1 )   { 
             a n c e s t o r I n f o . a T a g I n S c o p e   =   n u l l ; 
             a n c e s t o r I n f o . b u t t o n T a g I n S c o p e   =   n u l l ; 
             a n c e s t o r I n f o . n o b r T a g I n S c o p e   =   n u l l ; 
         } 
 
         i f   ( b u t t o n S c o p e T a g s . i n d e x O f ( t a g )   ! = =   - 1 )   { 
             a n c e s t o r I n f o . p T a g I n B u t t o n S c o p e   =   n u l l ; 
         }   / /   S e e   r u l e s   f o r   ' l i ' ,   ' d d ' ,   ' d t '   s t a r t   t a g s   i n 
         / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / s y n t a x . h t m l # p a r s i n g - m a i n - i n b o d y 
 
 
         i f   ( s p e c i a l T a g s . i n d e x O f ( t a g )   ! = =   - 1   & &   t a g   ! = =   ' a d d r e s s '   & &   t a g   ! = =   ' d i v '   & &   t a g   ! = =   ' p ' )   { 
             a n c e s t o r I n f o . l i s t I t e m T a g A u t o c l o s i n g   =   n u l l ; 
             a n c e s t o r I n f o . d l I t e m T a g A u t o c l o s i n g   =   n u l l ; 
         } 
 
         a n c e s t o r I n f o . c u r r e n t   =   i n f o ; 
 
         i f   ( t a g   = = =   ' f o r m ' )   { 
             a n c e s t o r I n f o . f o r m T a g   =   i n f o ; 
         } 
 
         i f   ( t a g   = = =   ' a ' )   { 
             a n c e s t o r I n f o . a T a g I n S c o p e   =   i n f o ; 
         } 
 
         i f   ( t a g   = = =   ' b u t t o n ' )   { 
             a n c e s t o r I n f o . b u t t o n T a g I n S c o p e   =   i n f o ; 
         } 
 
         i f   ( t a g   = = =   ' n o b r ' )   { 
             a n c e s t o r I n f o . n o b r T a g I n S c o p e   =   i n f o ; 
         } 
 
         i f   ( t a g   = = =   ' p ' )   { 
             a n c e s t o r I n f o . p T a g I n B u t t o n S c o p e   =   i n f o ; 
         } 
 
         i f   ( t a g   = = =   ' l i ' )   { 
             a n c e s t o r I n f o . l i s t I t e m T a g A u t o c l o s i n g   =   i n f o ; 
         } 
 
         i f   ( t a g   = = =   ' d d '   | |   t a g   = = =   ' d t ' )   { 
             a n c e s t o r I n f o . d l I t e m T a g A u t o c l o s i n g   =   i n f o ; 
         } 
 
         r e t u r n   a n c e s t o r I n f o ; 
     } ; 
     / * * 
       *   R e t u r n s   w h e t h e r 
       * / 
 
 
     v a r   i s T a g V a l i d W i t h P a r e n t   =   f u n c t i o n   ( t a g ,   p a r e n t T a g )   { 
         / /   F i r s t ,   l e t ' s   c h e c k   i f   w e ' r e   i n   a n   u n u s u a l   p a r s i n g   m o d e . . . 
         s w i t c h   ( p a r e n t T a g )   { 
             / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / s y n t a x . h t m l # p a r s i n g - m a i n - i n s e l e c t 
             c a s e   ' s e l e c t ' : 
                 r e t u r n   t a g   = = =   ' o p t i o n '   | |   t a g   = = =   ' o p t g r o u p '   | |   t a g   = = =   ' # t e x t ' ; 
 
             c a s e   ' o p t g r o u p ' : 
                 r e t u r n   t a g   = = =   ' o p t i o n '   | |   t a g   = = =   ' # t e x t ' ; 
             / /   S t r i c t l y   s p e a k i n g ,   s e e i n g   a n   < o p t i o n >   d o e s n ' t   m e a n   w e ' r e   i n   a   < s e l e c t > 
             / /   b u t 
 
             c a s e   ' o p t i o n ' : 
                 r e t u r n   t a g   = = =   ' # t e x t ' ; 
             / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / s y n t a x . h t m l # p a r s i n g - m a i n - i n t d 
             / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / s y n t a x . h t m l # p a r s i n g - m a i n - i n c a p t i o n 
             / /   N o   s p e c i a l   b e h a v i o r   s i n c e   t h e s e   r u l e s   f a l l   b a c k   t o   " i n   b o d y "   m o d e   f o r 
             / /   a l l   e x c e p t   s p e c i a l   t a b l e   n o d e s   w h i c h   c a u s e   b a d   p a r s i n g   b e h a v i o r   a n y w a y . 
             / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / s y n t a x . h t m l # p a r s i n g - m a i n - i n t r 
 
             c a s e   ' t r ' : 
                 r e t u r n   t a g   = = =   ' t h '   | |   t a g   = = =   ' t d '   | |   t a g   = = =   ' s t y l e '   | |   t a g   = = =   ' s c r i p t '   | |   t a g   = = =   ' t e m p l a t e ' ; 
             / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / s y n t a x . h t m l # p a r s i n g - m a i n - i n t b o d y 
 
             c a s e   ' t b o d y ' : 
             c a s e   ' t h e a d ' : 
             c a s e   ' t f o o t ' : 
                 r e t u r n   t a g   = = =   ' t r '   | |   t a g   = = =   ' s t y l e '   | |   t a g   = = =   ' s c r i p t '   | |   t a g   = = =   ' t e m p l a t e ' ; 
             / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / s y n t a x . h t m l # p a r s i n g - m a i n - i n c o l g r o u p 
 
             c a s e   ' c o l g r o u p ' : 
                 r e t u r n   t a g   = = =   ' c o l '   | |   t a g   = = =   ' t e m p l a t e ' ; 
             / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / s y n t a x . h t m l # p a r s i n g - m a i n - i n t a b l e 
 
             c a s e   ' t a b l e ' : 
                 r e t u r n   t a g   = = =   ' c a p t i o n '   | |   t a g   = = =   ' c o l g r o u p '   | |   t a g   = = =   ' t b o d y '   | |   t a g   = = =   ' t f o o t '   | |   t a g   = = =   ' t h e a d '   | |   t a g   = = =   ' s t y l e '   | |   t a g   = = =   ' s c r i p t '   | |   t a g   = = =   ' t e m p l a t e ' ; 
             / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / s y n t a x . h t m l # p a r s i n g - m a i n - i n h e a d 
 
             c a s e   ' h e a d ' : 
                 r e t u r n   t a g   = = =   ' b a s e '   | |   t a g   = = =   ' b a s e f o n t '   | |   t a g   = = =   ' b g s o u n d '   | |   t a g   = = =   ' l i n k '   | |   t a g   = = =   ' m e t a '   | |   t a g   = = =   ' t i t l e '   | |   t a g   = = =   ' n o s c r i p t '   | |   t a g   = = =   ' n o f r a m e s '   | |   t a g   = = =   ' s t y l e '   | |   t a g   = = =   ' s c r i p t '   | |   t a g   = = =   ' t e m p l a t e ' ; 
             / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / s e m a n t i c s . h t m l # t h e - h t m l - e l e m e n t 
 
             c a s e   ' h t m l ' : 
                 r e t u r n   t a g   = = =   ' h e a d '   | |   t a g   = = =   ' b o d y '   | |   t a g   = = =   ' f r a m e s e t ' ; 
 
             c a s e   ' f r a m e s e t ' : 
                 r e t u r n   t a g   = = =   ' f r a m e ' ; 
 
             c a s e   ' # d o c u m e n t ' : 
                 r e t u r n   t a g   = = =   ' h t m l ' ; 
         }   / /   P r o b a b l y   i n   t h e   " i n   b o d y "   p a r s i n g   m o d e ,   s o   w e   o u t l a w   o n l y   t a g   c o m b o s 
         / /   w h e r e   t h e   p a r s i n g   r u l e s   c a u s e   i m p l i c i t   o p e n s   o r   c l o s e s   t o   b e   a d d e d . 
         / /   h t t p s : / / h t m l . s p e c . w h a t w g . o r g / m u l t i p a g e / s y n t a x . h t m l # p a r s i n g - m a i n - i n b o d y 
 
 
         s w i t c h   ( t a g )   { 
             c a s e   ' h 1 ' : 
             c a s e   ' h 2 ' : 
             c a s e   ' h 3 ' : 
             c a s e   ' h 4 ' : 
             c a s e   ' h 5 ' : 
             c a s e   ' h 6 ' : 
                 r e t u r n   p a r e n t T a g   ! = =   ' h 1 '   & &   p a r e n t T a g   ! = =   ' h 2 '   & &   p a r e n t T a g   ! = =   ' h 3 '   & &   p a r e n t T a g   ! = =   ' h 4 '   & &   p a r e n t T a g   ! = =   ' h 5 '   & &   p a r e n t T a g   ! = =   ' h 6 ' ; 
 
             c a s e   ' r p ' : 
             c a s e   ' r t ' : 
                 r e t u r n   i m p l i e d E n d T a g s . i n d e x O f ( p a r e n t T a g )   = = =   - 1 ; 
 
             c a s e   ' b o d y ' : 
             c a s e   ' c a p t i o n ' : 
             c a s e   ' c o l ' : 
             c a s e   ' c o l g r o u p ' : 
             c a s e   ' f r a m e s e t ' : 
             c a s e   ' f r a m e ' : 
             c a s e   ' h e a d ' : 
             c a s e   ' h t m l ' : 
             c a s e   ' t b o d y ' : 
             c a s e   ' t d ' : 
             c a s e   ' t f o o t ' : 
             c a s e   ' t h ' : 
             c a s e   ' t h e a d ' : 
             c a s e   ' t r ' : 
                 / /   T h e s e   t a g s   a r e   o n l y   v a l i d   w i t h   a   f e w   p a r e n t s   t h a t   h a v e   s p e c i a l   c h i l d 
                 / /   p a r s i n g   r u l e s   - -   i f   w e ' r e   d o w n   h e r e ,   t h e n   n o n e   o f   t h o s e   m a t c h e d   a n d 
                 / /   s o   w e   a l l o w   i t   o n l y   i f   w e   d o n ' t   k n o w   w h a t   t h e   p a r e n t   i s ,   a s   a l l   o t h e r 
                 / /   c a s e s   a r e   i n v a l i d . 
                 r e t u r n   p a r e n t T a g   = =   n u l l ; 
         } 
 
         r e t u r n   t r u e ; 
     } ; 
     / * * 
       *   R e t u r n s   w h e t h e r 
       * / 
 
 
     v a r   f i n d I n v a l i d A n c e s t o r F o r T a g   =   f u n c t i o n   ( t a g ,   a n c e s t o r I n f o )   { 
         s w i t c h   ( t a g )   { 
             c a s e   ' a d d r e s s ' : 
             c a s e   ' a r t i c l e ' : 
             c a s e   ' a s i d e ' : 
             c a s e   ' b l o c k q u o t e ' : 
             c a s e   ' c e n t e r ' : 
             c a s e   ' d e t a i l s ' : 
             c a s e   ' d i a l o g ' : 
             c a s e   ' d i r ' : 
             c a s e   ' d i v ' : 
             c a s e   ' d l ' : 
             c a s e   ' f i e l d s e t ' : 
             c a s e   ' f i g c a p t i o n ' : 
             c a s e   ' f i g u r e ' : 
             c a s e   ' f o o t e r ' : 
             c a s e   ' h e a d e r ' : 
             c a s e   ' h g r o u p ' : 
             c a s e   ' m a i n ' : 
             c a s e   ' m e n u ' : 
             c a s e   ' n a v ' : 
             c a s e   ' o l ' : 
             c a s e   ' p ' : 
             c a s e   ' s e c t i o n ' : 
             c a s e   ' s u m m a r y ' : 
             c a s e   ' u l ' : 
             c a s e   ' p r e ' : 
             c a s e   ' l i s t i n g ' : 
             c a s e   ' t a b l e ' : 
             c a s e   ' h r ' : 
             c a s e   ' x m p ' : 
             c a s e   ' h 1 ' : 
             c a s e   ' h 2 ' : 
             c a s e   ' h 3 ' : 
             c a s e   ' h 4 ' : 
             c a s e   ' h 5 ' : 
             c a s e   ' h 6 ' : 
                 r e t u r n   a n c e s t o r I n f o . p T a g I n B u t t o n S c o p e ; 
 
             c a s e   ' f o r m ' : 
                 r e t u r n   a n c e s t o r I n f o . f o r m T a g   | |   a n c e s t o r I n f o . p T a g I n B u t t o n S c o p e ; 
 
             c a s e   ' l i ' : 
                 r e t u r n   a n c e s t o r I n f o . l i s t I t e m T a g A u t o c l o s i n g ; 
 
             c a s e   ' d d ' : 
             c a s e   ' d t ' : 
                 r e t u r n   a n c e s t o r I n f o . d l I t e m T a g A u t o c l o s i n g ; 
 
             c a s e   ' b u t t o n ' : 
                 r e t u r n   a n c e s t o r I n f o . b u t t o n T a g I n S c o p e ; 
 
             c a s e   ' a ' : 
                 / /   S p e c   s a y s   s o m e t h i n g   a b o u t   s t o r i n g   a   l i s t   o f   m a r k e r s ,   b u t   i t   s o u n d s 
                 / /   e q u i v a l e n t   t o   t h i s   c h e c k . 
                 r e t u r n   a n c e s t o r I n f o . a T a g I n S c o p e ; 
 
             c a s e   ' n o b r ' : 
                 r e t u r n   a n c e s t o r I n f o . n o b r T a g I n S c o p e ; 
         } 
 
         r e t u r n   n u l l ; 
     } ; 
 
     v a r   d i d W a r n $ 1   =   { } ; 
 
     v a l i d a t e D O M N e s t i n g   =   f u n c t i o n   ( c h i l d T a g ,   c h i l d T e x t ,   a n c e s t o r I n f o )   { 
         a n c e s t o r I n f o   =   a n c e s t o r I n f o   | |   e m p t y A n c e s t o r I n f o ; 
         v a r   p a r e n t I n f o   =   a n c e s t o r I n f o . c u r r e n t ; 
         v a r   p a r e n t T a g   =   p a r e n t I n f o   & &   p a r e n t I n f o . t a g ; 
 
         i f   ( c h i l d T e x t   ! =   n u l l )   { 
             i f   ( c h i l d T a g   ! =   n u l l )   { 
                 e r r o r ( ' v a l i d a t e D O M N e s t i n g :   w h e n   c h i l d T e x t   i s   p a s s e d ,   c h i l d T a g   s h o u l d   b e   n u l l ' ) ; 
             } 
 
             c h i l d T a g   =   ' # t e x t ' ; 
         } 
 
         v a r   i n v a l i d P a r e n t   =   i s T a g V a l i d W i t h P a r e n t ( c h i l d T a g ,   p a r e n t T a g )   ?   n u l l   :   p a r e n t I n f o ; 
         v a r   i n v a l i d A n c e s t o r   =   i n v a l i d P a r e n t   ?   n u l l   :   f i n d I n v a l i d A n c e s t o r F o r T a g ( c h i l d T a g ,   a n c e s t o r I n f o ) ; 
         v a r   i n v a l i d P a r e n t O r A n c e s t o r   =   i n v a l i d P a r e n t   | |   i n v a l i d A n c e s t o r ; 
 
         i f   ( ! i n v a l i d P a r e n t O r A n c e s t o r )   { 
             r e t u r n ; 
         } 
 
         v a r   a n c e s t o r T a g   =   i n v a l i d P a r e n t O r A n c e s t o r . t a g ; 
         v a r   w a r n K e y   =   ! ! i n v a l i d P a r e n t   +   ' | '   +   c h i l d T a g   +   ' | '   +   a n c e s t o r T a g ; 
 
         i f   ( d i d W a r n $ 1 [ w a r n K e y ] )   { 
             r e t u r n ; 
         } 
 
         d i d W a r n $ 1 [ w a r n K e y ]   =   t r u e ; 
         v a r   t a g D i s p l a y N a m e   =   c h i l d T a g ; 
         v a r   w h i t e s p a c e I n f o   =   ' ' ; 
 
         i f   ( c h i l d T a g   = = =   ' # t e x t ' )   { 
             i f   ( / \ S / . t e s t ( c h i l d T e x t ) )   { 
                 t a g D i s p l a y N a m e   =   ' T e x t   n o d e s ' ; 
             }   e l s e   { 
                 t a g D i s p l a y N a m e   =   ' W h i t e s p a c e   t e x t   n o d e s ' ; 
                 w h i t e s p a c e I n f o   =   "   M a k e   s u r e   y o u   d o n ' t   h a v e   a n y   e x t r a   w h i t e s p a c e   b e t w e e n   t a g s   o n   "   +   ' e a c h   l i n e   o f   y o u r   s o u r c e   c o d e . ' ; 
             } 
         }   e l s e   { 
             t a g D i s p l a y N a m e   =   ' < '   +   c h i l d T a g   +   ' > ' ; 
         } 
 
         i f   ( i n v a l i d P a r e n t )   { 
             v a r   i n f o   =   ' ' ; 
 
             i f   ( a n c e s t o r T a g   = = =   ' t a b l e '   & &   c h i l d T a g   = = =   ' t r ' )   { 
                 i n f o   + =   '   A d d   a   < t b o d y > ,   < t h e a d >   o r   < t f o o t >   t o   y o u r   c o d e   t o   m a t c h   t h e   D O M   t r e e   g e n e r a t e d   b y   '   +   ' t h e   b r o w s e r . ' ; 
             } 
 
             e r r o r ( ' v a l i d a t e D O M N e s t i n g ( . . . ) :   % s   c a n n o t   a p p e a r   a s   a   c h i l d   o f   < % s > . % s % s ' ,   t a g D i s p l a y N a m e ,   a n c e s t o r T a g ,   w h i t e s p a c e I n f o ,   i n f o ) ; 
         }   e l s e   { 
             e r r o r ( ' v a l i d a t e D O M N e s t i n g ( . . . ) :   % s   c a n n o t   a p p e a r   a s   a   d e s c e n d a n t   o f   '   +   ' < % s > . ' ,   t a g D i s p l a y N a m e ,   a n c e s t o r T a g ) ; 
         } 
     } ; 
 } 
 
 v a r   S U P P R E S S _ H Y D R A T I O N _ W A R N I N G $ 1   =   ' s u p p r e s s H y d r a t i o n W a r n i n g ' ; 
 v a r   S U S P E N S E _ S T A R T _ D A T A   =   ' $ ' ; 
 v a r   S U S P E N S E _ E N D _ D A T A   =   ' / $ ' ; 
 v a r   S U S P E N S E _ P E N D I N G _ S T A R T _ D A T A   =   ' $ ? ' ; 
 v a r   S U S P E N S E _ F A L L B A C K _ S T A R T _ D A T A   =   ' $ ! ' ; 
 v a r   S T Y L E $ 1   =   ' s t y l e ' ; 
 v a r   e v e n t s E n a b l e d   =   n u l l ; 
 v a r   s e l e c t i o n I n f o r m a t i o n   =   n u l l ; 
 f u n c t i o n   g e t R o o t H o s t C o n t e x t ( r o o t C o n t a i n e r I n s t a n c e )   { 
     v a r   t y p e ; 
     v a r   n a m e s p a c e ; 
     v a r   n o d e T y p e   =   r o o t C o n t a i n e r I n s t a n c e . n o d e T y p e ; 
 
     s w i t c h   ( n o d e T y p e )   { 
         c a s e   D O C U M E N T _ N O D E : 
         c a s e   D O C U M E N T _ F R A G M E N T _ N O D E : 
             { 
                 t y p e   =   n o d e T y p e   = = =   D O C U M E N T _ N O D E   ?   ' # d o c u m e n t '   :   ' # f r a g m e n t ' ; 
                 v a r   r o o t   =   r o o t C o n t a i n e r I n s t a n c e . d o c u m e n t E l e m e n t ; 
                 n a m e s p a c e   =   r o o t   ?   r o o t . n a m e s p a c e U R I   :   g e t C h i l d N a m e s p a c e ( n u l l ,   ' ' ) ; 
                 b r e a k ; 
             } 
 
         d e f a u l t : 
             { 
                 v a r   c o n t a i n e r   =   n o d e T y p e   = = =   C O M M E N T _ N O D E   ?   r o o t C o n t a i n e r I n s t a n c e . p a r e n t N o d e   :   r o o t C o n t a i n e r I n s t a n c e ; 
                 v a r   o w n N a m e s p a c e   =   c o n t a i n e r . n a m e s p a c e U R I   | |   n u l l ; 
                 t y p e   =   c o n t a i n e r . t a g N a m e ; 
                 n a m e s p a c e   =   g e t C h i l d N a m e s p a c e ( o w n N a m e s p a c e ,   t y p e ) ; 
                 b r e a k ; 
             } 
     } 
 
     { 
         v a r   v a l i d a t e d T a g   =   t y p e . t o L o w e r C a s e ( ) ; 
         v a r   a n c e s t o r I n f o   =   u p d a t e d A n c e s t o r I n f o ( n u l l ,   v a l i d a t e d T a g ) ; 
         r e t u r n   { 
             n a m e s p a c e :   n a m e s p a c e , 
             a n c e s t o r I n f o :   a n c e s t o r I n f o 
         } ; 
     } 
 } 
 f u n c t i o n   g e t C h i l d H o s t C o n t e x t ( p a r e n t H o s t C o n t e x t ,   t y p e ,   r o o t C o n t a i n e r I n s t a n c e )   { 
     { 
         v a r   p a r e n t H o s t C o n t e x t D e v   =   p a r e n t H o s t C o n t e x t ; 
         v a r   n a m e s p a c e   =   g e t C h i l d N a m e s p a c e ( p a r e n t H o s t C o n t e x t D e v . n a m e s p a c e ,   t y p e ) ; 
         v a r   a n c e s t o r I n f o   =   u p d a t e d A n c e s t o r I n f o ( p a r e n t H o s t C o n t e x t D e v . a n c e s t o r I n f o ,   t y p e ) ; 
         r e t u r n   { 
             n a m e s p a c e :   n a m e s p a c e , 
             a n c e s t o r I n f o :   a n c e s t o r I n f o 
         } ; 
     } 
 } 
 f u n c t i o n   g e t P u b l i c I n s t a n c e ( i n s t a n c e )   { 
     r e t u r n   i n s t a n c e ; 
 } 
 f u n c t i o n   p r e p a r e F o r C o m m i t ( c o n t a i n e r I n f o )   { 
     e v e n t s E n a b l e d   =   i s E n a b l e d ( ) ; 
     s e l e c t i o n I n f o r m a t i o n   =   g e t S e l e c t i o n I n f o r m a t i o n ( ) ; 
     v a r   a c t i v e I n s t a n c e   =   n u l l ; 
 
     s e t E n a b l e d ( f a l s e ) ; 
     r e t u r n   a c t i v e I n s t a n c e ; 
 } 
 f u n c t i o n   r e s e t A f t e r C o m m i t ( c o n t a i n e r I n f o )   { 
     r e s t o r e S e l e c t i o n ( s e l e c t i o n I n f o r m a t i o n ) ; 
     s e t E n a b l e d ( e v e n t s E n a b l e d ) ; 
     e v e n t s E n a b l e d   =   n u l l ; 
     s e l e c t i o n I n f o r m a t i o n   =   n u l l ; 
 } 
 f u n c t i o n   c r e a t e I n s t a n c e ( t y p e ,   p r o p s ,   r o o t C o n t a i n e r I n s t a n c e ,   h o s t C o n t e x t ,   i n t e r n a l I n s t a n c e H a n d l e )   { 
     v a r   p a r e n t N a m e s p a c e ; 
 
     { 
         / /   T O D O :   t a k e   n a m e s p a c e   i n t o   a c c o u n t   w h e n   v a l i d a t i n g . 
         v a r   h o s t C o n t e x t D e v   =   h o s t C o n t e x t ; 
         v a l i d a t e D O M N e s t i n g ( t y p e ,   n u l l ,   h o s t C o n t e x t D e v . a n c e s t o r I n f o ) ; 
 
         i f   ( t y p e o f   p r o p s . c h i l d r e n   = = =   ' s t r i n g '   | |   t y p e o f   p r o p s . c h i l d r e n   = = =   ' n u m b e r ' )   { 
             v a r   s t r i n g   =   ' '   +   p r o p s . c h i l d r e n ; 
             v a r   o w n A n c e s t o r I n f o   =   u p d a t e d A n c e s t o r I n f o ( h o s t C o n t e x t D e v . a n c e s t o r I n f o ,   t y p e ) ; 
             v a l i d a t e D O M N e s t i n g ( n u l l ,   s t r i n g ,   o w n A n c e s t o r I n f o ) ; 
         } 
 
         p a r e n t N a m e s p a c e   =   h o s t C o n t e x t D e v . n a m e s p a c e ; 
     } 
 
     v a r   d o m E l e m e n t   =   c r e a t e E l e m e n t ( t y p e ,   p r o p s ,   r o o t C o n t a i n e r I n s t a n c e ,   p a r e n t N a m e s p a c e ) ; 
     p r e c a c h e F i b e r N o d e ( i n t e r n a l I n s t a n c e H a n d l e ,   d o m E l e m e n t ) ; 
     u p d a t e F i b e r P r o p s ( d o m E l e m e n t ,   p r o p s ) ; 
     r e t u r n   d o m E l e m e n t ; 
 } 
 f u n c t i o n   a p p e n d I n i t i a l C h i l d ( p a r e n t I n s t a n c e ,   c h i l d )   { 
     p a r e n t I n s t a n c e . a p p e n d C h i l d ( c h i l d ) ; 
 } 
 f u n c t i o n   f i n a l i z e I n i t i a l C h i l d r e n ( d o m E l e m e n t ,   t y p e ,   p r o p s ,   r o o t C o n t a i n e r I n s t a n c e ,   h o s t C o n t e x t )   { 
     s e t I n i t i a l P r o p e r t i e s ( d o m E l e m e n t ,   t y p e ,   p r o p s ,   r o o t C o n t a i n e r I n s t a n c e ) ; 
 
     s w i t c h   ( t y p e )   { 
         c a s e   ' b u t t o n ' : 
         c a s e   ' i n p u t ' : 
         c a s e   ' s e l e c t ' : 
         c a s e   ' t e x t a r e a ' : 
             r e t u r n   ! ! p r o p s . a u t o F o c u s ; 
 
         c a s e   ' i m g ' : 
             r e t u r n   t r u e ; 
 
         d e f a u l t : 
             r e t u r n   f a l s e ; 
     } 
 } 
 f u n c t i o n   p r e p a r e U p d a t e ( d o m E l e m e n t ,   t y p e ,   o l d P r o p s ,   n e w P r o p s ,   r o o t C o n t a i n e r I n s t a n c e ,   h o s t C o n t e x t )   { 
     { 
         v a r   h o s t C o n t e x t D e v   =   h o s t C o n t e x t ; 
 
         i f   ( t y p e o f   n e w P r o p s . c h i l d r e n   ! = =   t y p e o f   o l d P r o p s . c h i l d r e n   & &   ( t y p e o f   n e w P r o p s . c h i l d r e n   = = =   ' s t r i n g '   | |   t y p e o f   n e w P r o p s . c h i l d r e n   = = =   ' n u m b e r ' ) )   { 
             v a r   s t r i n g   =   ' '   +   n e w P r o p s . c h i l d r e n ; 
             v a r   o w n A n c e s t o r I n f o   =   u p d a t e d A n c e s t o r I n f o ( h o s t C o n t e x t D e v . a n c e s t o r I n f o ,   t y p e ) ; 
             v a l i d a t e D O M N e s t i n g ( n u l l ,   s t r i n g ,   o w n A n c e s t o r I n f o ) ; 
         } 
     } 
 
     r e t u r n   d i f f P r o p e r t i e s ( d o m E l e m e n t ,   t y p e ,   o l d P r o p s ,   n e w P r o p s ) ; 
 } 
 f u n c t i o n   s h o u l d S e t T e x t C o n t e n t ( t y p e ,   p r o p s )   { 
     r e t u r n   t y p e   = = =   ' t e x t a r e a '   | |   t y p e   = = =   ' n o s c r i p t '   | |   t y p e o f   p r o p s . c h i l d r e n   = = =   ' s t r i n g '   | |   t y p e o f   p r o p s . c h i l d r e n   = = =   ' n u m b e r '   | |   t y p e o f   p r o p s . d a n g e r o u s l y S e t I n n e r H T M L   = = =   ' o b j e c t '   & &   p r o p s . d a n g e r o u s l y S e t I n n e r H T M L   ! = =   n u l l   & &   p r o p s . d a n g e r o u s l y S e t I n n e r H T M L . _ _ h t m l   ! =   n u l l ; 
 } 
 f u n c t i o n   c r e a t e T e x t I n s t a n c e ( t e x t ,   r o o t C o n t a i n e r I n s t a n c e ,   h o s t C o n t e x t ,   i n t e r n a l I n s t a n c e H a n d l e )   { 
     { 
         v a r   h o s t C o n t e x t D e v   =   h o s t C o n t e x t ; 
         v a l i d a t e D O M N e s t i n g ( n u l l ,   t e x t ,   h o s t C o n t e x t D e v . a n c e s t o r I n f o ) ; 
     } 
 
     v a r   t e x t N o d e   =   c r e a t e T e x t N o d e ( t e x t ,   r o o t C o n t a i n e r I n s t a n c e ) ; 
     p r e c a c h e F i b e r N o d e ( i n t e r n a l I n s t a n c e H a n d l e ,   t e x t N o d e ) ; 
     r e t u r n   t e x t N o d e ; 
 } 
 f u n c t i o n   g e t C u r r e n t E v e n t P r i o r i t y ( )   { 
     v a r   c u r r e n t E v e n t   =   w i n d o w . e v e n t ; 
 
     i f   ( c u r r e n t E v e n t   = = =   u n d e f i n e d )   { 
         r e t u r n   D e f a u l t E v e n t P r i o r i t y ; 
     } 
 
     r e t u r n   g e t E v e n t P r i o r i t y ( c u r r e n t E v e n t . t y p e ) ; 
 } 
 / /   i f   a   c o m p o n e n t   j u s t   i m p o r t s   R e a c t D O M   ( e . g .   f o r   f i n d D O M N o d e ) . 
 / /   S o m e   e n v i r o n m e n t s   m i g h t   n o t   h a v e   s e t T i m e o u t   o r   c l e a r T i m e o u t . 
 
 v a r   s c h e d u l e T i m e o u t   =   t y p e o f   s e t T i m e o u t   = = =   ' f u n c t i o n '   ?   s e t T i m e o u t   :   u n d e f i n e d ; 
 v a r   c a n c e l T i m e o u t   =   t y p e o f   c l e a r T i m e o u t   = = =   ' f u n c t i o n '   ?   c l e a r T i m e o u t   :   u n d e f i n e d ; 
 v a r   n o T i m e o u t   =   - 1 ; 
 v a r   l o c a l P r o m i s e   =   t y p e o f   P r o m i s e   = = =   ' f u n c t i o n '   ?   P r o m i s e   :   u n d e f i n e d ;   / /   - - - - - - - - - - - - - - - - - - - 
 v a r   s c h e d u l e M i c r o t a s k   =   t y p e o f   q u e u e M i c r o t a s k   = = =   ' f u n c t i o n '   ?   q u e u e M i c r o t a s k   :   t y p e o f   l o c a l P r o m i s e   ! = =   ' u n d e f i n e d '   ?   f u n c t i o n   ( c a l l b a c k )   { 
     r e t u r n   l o c a l P r o m i s e . r e s o l v e ( n u l l ) . t h e n ( c a l l b a c k ) . c a t c h ( h a n d l e E r r o r I n N e x t T i c k ) ; 
 }   :   s c h e d u l e T i m e o u t ;   / /   T O D O :   D e t e r m i n e   t h e   b e s t   f a l l b a c k   h e r e . 
 
 f u n c t i o n   h a n d l e E r r o r I n N e x t T i c k ( e r r o r )   { 
     s e t T i m e o u t ( f u n c t i o n   ( )   { 
         t h r o w   e r r o r ; 
     } ) ; 
 }   / /   - - - - - - - - - - - - - - - - - - - 
 f u n c t i o n   c o m m i t M o u n t ( d o m E l e m e n t ,   t y p e ,   n e w P r o p s ,   i n t e r n a l I n s t a n c e H a n d l e )   { 
     / /   D e s p i t e   t h e   n a m i n g   t h a t   m i g h t   i m p l y   o t h e r w i s e ,   t h i s   m e t h o d   o n l y 
     / /   f i r e s   i f   t h e r e   i s   a n   ` U p d a t e `   e f f e c t   s c h e d u l e d   d u r i n g   m o u n t i n g . 
     / /   T h i s   h a p p e n s   i f   ` f i n a l i z e I n i t i a l C h i l d r e n `   r e t u r n s   ` t r u e `   ( w h i c h   i t 
     / /   d o e s   t o   i m p l e m e n t   t h e   ` a u t o F o c u s `   a t t r i b u t e   o n   t h e   c l i e n t ) .   B u t 
     / /   t h e r e   a r e   a l s o   o t h e r   c a s e s   w h e n   t h i s   m i g h t   h a p p e n   ( s u c h   a s   p a t c h i n g 
     / /   u p   t e x t   c o n t e n t   d u r i n g   h y d r a t i o n   m i s m a t c h ) .   S o   w e ' l l   c h e c k   t h i s   a g a i n . 
     s w i t c h   ( t y p e )   { 
         c a s e   ' b u t t o n ' : 
         c a s e   ' i n p u t ' : 
         c a s e   ' s e l e c t ' : 
         c a s e   ' t e x t a r e a ' : 
             i f   ( n e w P r o p s . a u t o F o c u s )   { 
                 d o m E l e m e n t . f o c u s ( ) ; 
             } 
 
             r e t u r n ; 
 
         c a s e   ' i m g ' : 
             { 
                 i f   ( n e w P r o p s . s r c )   { 
                     d o m E l e m e n t . s r c   =   n e w P r o p s . s r c ; 
                 } 
 
                 r e t u r n ; 
             } 
     } 
 } 
 f u n c t i o n   c o m m i t U p d a t e ( d o m E l e m e n t ,   u p d a t e P a y l o a d ,   t y p e ,   o l d P r o p s ,   n e w P r o p s ,   i n t e r n a l I n s t a n c e H a n d l e )   { 
     / /   A p p l y   t h e   d i f f   t o   t h e   D O M   n o d e . 
     u p d a t e P r o p e r t i e s ( d o m E l e m e n t ,   u p d a t e P a y l o a d ,   t y p e ,   o l d P r o p s ,   n e w P r o p s ) ;   / /   U p d a t e   t h e   p r o p s   h a n d l e   s o   t h a t   w e   k n o w   w h i c h   p r o p s   a r e   t h e   o n e s   w i t h 
     / /   w i t h   c u r r e n t   e v e n t   h a n d l e r s . 
 
     u p d a t e F i b e r P r o p s ( d o m E l e m e n t ,   n e w P r o p s ) ; 
 } 
 f u n c t i o n   r e s e t T e x t C o n t e n t ( d o m E l e m e n t )   { 
     s e t T e x t C o n t e n t ( d o m E l e m e n t ,   ' ' ) ; 
 } 
 f u n c t i o n   c o m m i t T e x t U p d a t e ( t e x t I n s t a n c e ,   o l d T e x t ,   n e w T e x t )   { 
     t e x t I n s t a n c e . n o d e V a l u e   =   n e w T e x t ; 
 } 
 f u n c t i o n   a p p e n d C h i l d ( p a r e n t I n s t a n c e ,   c h i l d )   { 
     p a r e n t I n s t a n c e . a p p e n d C h i l d ( c h i l d ) ; 
 } 
 f u n c t i o n   a p p e n d C h i l d T o C o n t a i n e r ( c o n t a i n e r ,   c h i l d )   { 
     v a r   p a r e n t N o d e ; 
 
     i f   ( c o n t a i n e r . n o d e T y p e   = = =   C O M M E N T _ N O D E )   { 
         p a r e n t N o d e   =   c o n t a i n e r . p a r e n t N o d e ; 
         p a r e n t N o d e . i n s e r t B e f o r e ( c h i l d ,   c o n t a i n e r ) ; 
     }   e l s e   { 
         p a r e n t N o d e   =   c o n t a i n e r ; 
         p a r e n t N o d e . a p p e n d C h i l d ( c h i l d ) ; 
     }   / /   T h i s   c o n t a i n e r   m i g h t   b e   u s e d   f o r   a   p o r t a l . 
     / /   I f   s o m e t h i n g   i n s i d e   a   p o r t a l   i s   c l i c k e d ,   t h a t   c l i c k   s h o u l d   b u b b l e 
     / /   t h r o u g h   t h e   R e a c t   t r e e .   H o w e v e r ,   o n   M o b i l e   S a f a r i   t h e   c l i c k   w o u l d 
     / /   n e v e r   b u b b l e   t h r o u g h   t h e   * D O M *   t r e e   u n l e s s   a n   a n c e s t o r   w i t h   o n c l i c k 
     / /   e v e n t   e x i s t s .   S o   w e   w o u l d n ' t   s e e   i t   a n d   d i s p a t c h   i t . 
     / /   T h i s   i s   w h y   w e   e n s u r e   t h a t   n o n   R e a c t   r o o t   c o n t a i n e r s   h a v e   i n l i n e   o n c l i c k 
     / /   d e f i n e d . 
     / /   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 1 9 1 8 
 
 
     v a r   r e a c t R o o t C o n t a i n e r   =   c o n t a i n e r . _ r e a c t R o o t C o n t a i n e r ; 
 
     i f   ( ( r e a c t R o o t C o n t a i n e r   = = =   n u l l   | |   r e a c t R o o t C o n t a i n e r   = = =   u n d e f i n e d )   & &   p a r e n t N o d e . o n c l i c k   = = =   n u l l )   { 
         / /   T O D O :   T h i s   c a s t   m a y   n o t   b e   s o u n d   f o r   S V G ,   M a t h M L   o r   c u s t o m   e l e m e n t s . 
         t r a p C l i c k O n N o n I n t e r a c t i v e E l e m e n t ( p a r e n t N o d e ) ; 
     } 
 } 
 f u n c t i o n   i n s e r t B e f o r e ( p a r e n t I n s t a n c e ,   c h i l d ,   b e f o r e C h i l d )   { 
     p a r e n t I n s t a n c e . i n s e r t B e f o r e ( c h i l d ,   b e f o r e C h i l d ) ; 
 } 
 f u n c t i o n   i n s e r t I n C o n t a i n e r B e f o r e ( c o n t a i n e r ,   c h i l d ,   b e f o r e C h i l d )   { 
     i f   ( c o n t a i n e r . n o d e T y p e   = = =   C O M M E N T _ N O D E )   { 
         c o n t a i n e r . p a r e n t N o d e . i n s e r t B e f o r e ( c h i l d ,   b e f o r e C h i l d ) ; 
     }   e l s e   { 
         c o n t a i n e r . i n s e r t B e f o r e ( c h i l d ,   b e f o r e C h i l d ) ; 
     } 
 } 
 
 f u n c t i o n   r e m o v e C h i l d ( p a r e n t I n s t a n c e ,   c h i l d )   { 
     p a r e n t I n s t a n c e . r e m o v e C h i l d ( c h i l d ) ; 
 } 
 f u n c t i o n   r e m o v e C h i l d F r o m C o n t a i n e r ( c o n t a i n e r ,   c h i l d )   { 
     i f   ( c o n t a i n e r . n o d e T y p e   = = =   C O M M E N T _ N O D E )   { 
         c o n t a i n e r . p a r e n t N o d e . r e m o v e C h i l d ( c h i l d ) ; 
     }   e l s e   { 
         c o n t a i n e r . r e m o v e C h i l d ( c h i l d ) ; 
     } 
 } 
 f u n c t i o n   c l e a r S u s p e n s e B o u n d a r y ( p a r e n t I n s t a n c e ,   s u s p e n s e I n s t a n c e )   { 
     v a r   n o d e   =   s u s p e n s e I n s t a n c e ;   / /   D e l e t e   a l l   n o d e s   w i t h i n   t h i s   s u s p e n s e   b o u n d a r y . 
     / /   T h e r e   m i g h t   b e   n e s t e d   n o d e s   s o   w e   n e e d   t o   k e e p   t r a c k   o f   h o w 
     / /   d e e p   w e   a r e   a n d   o n l y   b r e a k   o u t   w h e n   w e ' r e   b a c k   o n   t o p . 
 
     v a r   d e p t h   =   0 ; 
 
     d o   { 
         v a r   n e x t N o d e   =   n o d e . n e x t S i b l i n g ; 
         p a r e n t I n s t a n c e . r e m o v e C h i l d ( n o d e ) ; 
 
         i f   ( n e x t N o d e   & &   n e x t N o d e . n o d e T y p e   = = =   C O M M E N T _ N O D E )   { 
             v a r   d a t a   =   n e x t N o d e . d a t a ; 
 
             i f   ( d a t a   = = =   S U S P E N S E _ E N D _ D A T A )   { 
                 i f   ( d e p t h   = = =   0 )   { 
                     p a r e n t I n s t a n c e . r e m o v e C h i l d ( n e x t N o d e ) ;   / /   R e t r y   i f   a n y   e v e n t   r e p l a y i n g   w a s   b l o c k e d   o n   t h i s . 
 
                     r e t r y I f B l o c k e d O n ( s u s p e n s e I n s t a n c e ) ; 
                     r e t u r n ; 
                 }   e l s e   { 
                     d e p t h - - ; 
                 } 
             }   e l s e   i f   ( d a t a   = = =   S U S P E N S E _ S T A R T _ D A T A   | |   d a t a   = = =   S U S P E N S E _ P E N D I N G _ S T A R T _ D A T A   | |   d a t a   = = =   S U S P E N S E _ F A L L B A C K _ S T A R T _ D A T A )   { 
                 d e p t h + + ; 
             } 
         } 
 
         n o d e   =   n e x t N o d e ; 
     }   w h i l e   ( n o d e ) ;   / /   T O D O :   W a r n ,   w e   d i d n ' t   f i n d   t h e   e n d   c o m m e n t   b o u n d a r y . 
     / /   R e t r y   i f   a n y   e v e n t   r e p l a y i n g   w a s   b l o c k e d   o n   t h i s . 
 
 
     r e t r y I f B l o c k e d O n ( s u s p e n s e I n s t a n c e ) ; 
 } 
 f u n c t i o n   c l e a r S u s p e n s e B o u n d a r y F r o m C o n t a i n e r ( c o n t a i n e r ,   s u s p e n s e I n s t a n c e )   { 
     i f   ( c o n t a i n e r . n o d e T y p e   = = =   C O M M E N T _ N O D E )   { 
         c l e a r S u s p e n s e B o u n d a r y ( c o n t a i n e r . p a r e n t N o d e ,   s u s p e n s e I n s t a n c e ) ; 
     }   e l s e   i f   ( c o n t a i n e r . n o d e T y p e   = = =   E L E M E N T _ N O D E )   { 
         c l e a r S u s p e n s e B o u n d a r y ( c o n t a i n e r ,   s u s p e n s e I n s t a n c e ) ; 
     }   / /   R e t r y   i f   a n y   e v e n t   r e p l a y i n g   w a s   b l o c k e d   o n   t h i s . 
 
 
     r e t r y I f B l o c k e d O n ( c o n t a i n e r ) ; 
 } 
 f u n c t i o n   h i d e I n s t a n c e ( i n s t a n c e )   { 
     / /   T O D O :   D o e s   t h i s   w o r k   f o r   a l l   e l e m e n t   t y p e s ?   W h a t   a b o u t   M a t h M L ?   S h o u l d   w e 
     / /   p a s s   h o s t   c o n t e x t   t o   t h i s   m e t h o d ? 
     i n s t a n c e   =   i n s t a n c e ; 
     v a r   s t y l e   =   i n s t a n c e . s t y l e ; 
 
     i f   ( t y p e o f   s t y l e . s e t P r o p e r t y   = = =   ' f u n c t i o n ' )   { 
         s t y l e . s e t P r o p e r t y ( ' d i s p l a y ' ,   ' n o n e ' ,   ' i m p o r t a n t ' ) ; 
     }   e l s e   { 
         s t y l e . d i s p l a y   =   ' n o n e ' ; 
     } 
 } 
 f u n c t i o n   h i d e T e x t I n s t a n c e ( t e x t I n s t a n c e )   { 
     t e x t I n s t a n c e . n o d e V a l u e   =   ' ' ; 
 } 
 f u n c t i o n   u n h i d e I n s t a n c e ( i n s t a n c e ,   p r o p s )   { 
     i n s t a n c e   =   i n s t a n c e ; 
     v a r   s t y l e P r o p   =   p r o p s [ S T Y L E $ 1 ] ; 
     v a r   d i s p l a y   =   s t y l e P r o p   ! = =   u n d e f i n e d   & &   s t y l e P r o p   ! = =   n u l l   & &   s t y l e P r o p . h a s O w n P r o p e r t y ( ' d i s p l a y ' )   ?   s t y l e P r o p . d i s p l a y   :   n u l l ; 
     i n s t a n c e . s t y l e . d i s p l a y   =   d a n g e r o u s S t y l e V a l u e ( ' d i s p l a y ' ,   d i s p l a y ) ; 
 } 
 f u n c t i o n   u n h i d e T e x t I n s t a n c e ( t e x t I n s t a n c e ,   t e x t )   { 
     t e x t I n s t a n c e . n o d e V a l u e   =   t e x t ; 
 } 
 f u n c t i o n   c l e a r C o n t a i n e r ( c o n t a i n e r )   { 
     i f   ( c o n t a i n e r . n o d e T y p e   = = =   E L E M E N T _ N O D E )   { 
         c o n t a i n e r . t e x t C o n t e n t   =   ' ' ; 
     }   e l s e   i f   ( c o n t a i n e r . n o d e T y p e   = = =   D O C U M E N T _ N O D E )   { 
         v a r   b o d y   =   c o n t a i n e r . b o d y ; 
 
         i f   ( b o d y   ! =   n u l l )   { 
             b o d y . t e x t C o n t e n t   =   ' ' ; 
         } 
     } 
 }   / /   - - - - - - - - - - - - - - - - - - - 
 f u n c t i o n   c a n H y d r a t e I n s t a n c e ( i n s t a n c e ,   t y p e ,   p r o p s )   { 
     i f   ( i n s t a n c e . n o d e T y p e   ! = =   E L E M E N T _ N O D E   | |   t y p e . t o L o w e r C a s e ( )   ! = =   i n s t a n c e . n o d e N a m e . t o L o w e r C a s e ( ) )   { 
         r e t u r n   n u l l ; 
     }   / /   T h i s   h a s   n o w   b e e n   r e f i n e d   t o   a n   e l e m e n t   n o d e . 
 
 
     r e t u r n   i n s t a n c e ; 
 } 
 f u n c t i o n   c a n H y d r a t e T e x t I n s t a n c e ( i n s t a n c e ,   t e x t )   { 
     i f   ( t e x t   = = =   ' '   | |   i n s t a n c e . n o d e T y p e   ! = =   T E X T _ N O D E )   { 
         / /   E m p t y   s t r i n g s   a r e   n o t   p a r s e d   b y   H T M L   s o   t h e r e   w o n ' t   b e   a   c o r r e c t   m a t c h   h e r e . 
         r e t u r n   n u l l ; 
     }   / /   T h i s   h a s   n o w   b e e n   r e f i n e d   t o   a   t e x t   n o d e . 
 
 
     r e t u r n   i n s t a n c e ; 
 } 
 f u n c t i o n   c a n H y d r a t e S u s p e n s e I n s t a n c e ( i n s t a n c e )   { 
     i f   ( i n s t a n c e . n o d e T y p e   ! = =   C O M M E N T _ N O D E )   { 
         / /   E m p t y   s t r i n g s   a r e   n o t   p a r s e d   b y   H T M L   s o   t h e r e   w o n ' t   b e   a   c o r r e c t   m a t c h   h e r e . 
         r e t u r n   n u l l ; 
     }   / /   T h i s   h a s   n o w   b e e n   r e f i n e d   t o   a   s u s p e n s e   n o d e . 
 
 
     r e t u r n   i n s t a n c e ; 
 } 
 f u n c t i o n   i s S u s p e n s e I n s t a n c e P e n d i n g ( i n s t a n c e )   { 
     r e t u r n   i n s t a n c e . d a t a   = = =   S U S P E N S E _ P E N D I N G _ S T A R T _ D A T A ; 
 } 
 f u n c t i o n   i s S u s p e n s e I n s t a n c e F a l l b a c k ( i n s t a n c e )   { 
     r e t u r n   i n s t a n c e . d a t a   = = =   S U S P E N S E _ F A L L B A C K _ S T A R T _ D A T A ; 
 } 
 f u n c t i o n   r e g i s t e r S u s p e n s e I n s t a n c e R e t r y ( i n s t a n c e ,   c a l l b a c k )   { 
     i n s t a n c e . _ r e a c t R e t r y   =   c a l l b a c k ; 
 } 
 
 f u n c t i o n   g e t N e x t H y d r a t a b l e ( n o d e )   { 
     / /   S k i p   n o n - h y d r a t a b l e   n o d e s . 
     f o r   ( ;   n o d e   ! =   n u l l ;   n o d e   =   n o d e . n e x t S i b l i n g )   { 
         v a r   n o d e T y p e   =   n o d e . n o d e T y p e ; 
 
         i f   ( n o d e T y p e   = = =   E L E M E N T _ N O D E   | |   n o d e T y p e   = = =   T E X T _ N O D E )   { 
             b r e a k ; 
         } 
 
         i f   ( n o d e T y p e   = = =   C O M M E N T _ N O D E )   { 
             v a r   n o d e D a t a   =   n o d e . d a t a ; 
 
             i f   ( n o d e D a t a   = = =   S U S P E N S E _ S T A R T _ D A T A   | |   n o d e D a t a   = = =   S U S P E N S E _ F A L L B A C K _ S T A R T _ D A T A   | |   n o d e D a t a   = = =   S U S P E N S E _ P E N D I N G _ S T A R T _ D A T A )   { 
                 b r e a k ; 
             } 
 
             i f   ( n o d e D a t a   = = =   S U S P E N S E _ E N D _ D A T A )   { 
                 r e t u r n   n u l l ; 
             } 
         } 
     } 
 
     r e t u r n   n o d e ; 
 } 
 
 f u n c t i o n   g e t N e x t H y d r a t a b l e S i b l i n g ( i n s t a n c e )   { 
     r e t u r n   g e t N e x t H y d r a t a b l e ( i n s t a n c e . n e x t S i b l i n g ) ; 
 } 
 f u n c t i o n   g e t F i r s t H y d r a t a b l e C h i l d ( p a r e n t I n s t a n c e )   { 
     r e t u r n   g e t N e x t H y d r a t a b l e ( p a r e n t I n s t a n c e . f i r s t C h i l d ) ; 
 } 
 f u n c t i o n   g e t F i r s t H y d r a t a b l e C h i l d W i t h i n C o n t a i n e r ( p a r e n t C o n t a i n e r )   { 
     r e t u r n   g e t N e x t H y d r a t a b l e ( p a r e n t C o n t a i n e r . f i r s t C h i l d ) ; 
 } 
 f u n c t i o n   g e t F i r s t H y d r a t a b l e C h i l d W i t h i n S u s p e n s e I n s t a n c e ( p a r e n t I n s t a n c e )   { 
     r e t u r n   g e t N e x t H y d r a t a b l e ( p a r e n t I n s t a n c e . n e x t S i b l i n g ) ; 
 } 
 f u n c t i o n   h y d r a t e I n s t a n c e ( i n s t a n c e ,   t y p e ,   p r o p s ,   r o o t C o n t a i n e r I n s t a n c e ,   h o s t C o n t e x t ,   i n t e r n a l I n s t a n c e H a n d l e ,   s h o u l d W a r n D e v )   { 
     p r e c a c h e F i b e r N o d e ( i n t e r n a l I n s t a n c e H a n d l e ,   i n s t a n c e ) ;   / /   T O D O :   P o s s i b l y   d e f e r   t h i s   u n t i l   t h e   c o m m i t   p h a s e   w h e r e   a l l   t h e   e v e n t s 
     / /   g e t   a t t a c h e d . 
 
     u p d a t e F i b e r P r o p s ( i n s t a n c e ,   p r o p s ) ; 
     v a r   p a r e n t N a m e s p a c e ; 
 
     { 
         v a r   h o s t C o n t e x t D e v   =   h o s t C o n t e x t ; 
         p a r e n t N a m e s p a c e   =   h o s t C o n t e x t D e v . n a m e s p a c e ; 
     }   / /   T O D O :   T e m p o r a r y   h a c k   t o   c h e c k   i f   w e ' r e   i n   a   c o n c u r r e n t   r o o t .   W e   c a n   d e l e t e 
     / /   w h e n   t h e   l e g a c y   r o o t   A P I   i s   r e m o v e d . 
 
 
     v a r   i s C o n c u r r e n t M o d e   =   ( i n t e r n a l I n s t a n c e H a n d l e . m o d e   &   C o n c u r r e n t M o d e )   ! = =   N o M o d e ; 
     r e t u r n   d i f f H y d r a t e d P r o p e r t i e s ( i n s t a n c e ,   t y p e ,   p r o p s ,   p a r e n t N a m e s p a c e ,   r o o t C o n t a i n e r I n s t a n c e ,   i s C o n c u r r e n t M o d e ,   s h o u l d W a r n D e v ) ; 
 } 
 f u n c t i o n   h y d r a t e T e x t I n s t a n c e ( t e x t I n s t a n c e ,   t e x t ,   i n t e r n a l I n s t a n c e H a n d l e ,   s h o u l d W a r n D e v )   { 
     p r e c a c h e F i b e r N o d e ( i n t e r n a l I n s t a n c e H a n d l e ,   t e x t I n s t a n c e ) ;   / /   T O D O :   T e m p o r a r y   h a c k   t o   c h e c k   i f   w e ' r e   i n   a   c o n c u r r e n t   r o o t .   W e   c a n   d e l e t e 
     / /   w h e n   t h e   l e g a c y   r o o t   A P I   i s   r e m o v e d . 
 
     v a r   i s C o n c u r r e n t M o d e   =   ( i n t e r n a l I n s t a n c e H a n d l e . m o d e   &   C o n c u r r e n t M o d e )   ! = =   N o M o d e ; 
     r e t u r n   d i f f H y d r a t e d T e x t ( t e x t I n s t a n c e ,   t e x t ) ; 
 } 
 f u n c t i o n   h y d r a t e S u s p e n s e I n s t a n c e ( s u s p e n s e I n s t a n c e ,   i n t e r n a l I n s t a n c e H a n d l e )   { 
     p r e c a c h e F i b e r N o d e ( i n t e r n a l I n s t a n c e H a n d l e ,   s u s p e n s e I n s t a n c e ) ; 
 } 
 f u n c t i o n   g e t N e x t H y d r a t a b l e I n s t a n c e A f t e r S u s p e n s e I n s t a n c e ( s u s p e n s e I n s t a n c e )   { 
     v a r   n o d e   =   s u s p e n s e I n s t a n c e . n e x t S i b l i n g ;   / /   S k i p   p a s t   a l l   n o d e s   w i t h i n   t h i s   s u s p e n s e   b o u n d a r y . 
     / /   T h e r e   m i g h t   b e   n e s t e d   n o d e s   s o   w e   n e e d   t o   k e e p   t r a c k   o f   h o w 
     / /   d e e p   w e   a r e   a n d   o n l y   b r e a k   o u t   w h e n   w e ' r e   b a c k   o n   t o p . 
 
     v a r   d e p t h   =   0 ; 
 
     w h i l e   ( n o d e )   { 
         i f   ( n o d e . n o d e T y p e   = = =   C O M M E N T _ N O D E )   { 
             v a r   d a t a   =   n o d e . d a t a ; 
 
             i f   ( d a t a   = = =   S U S P E N S E _ E N D _ D A T A )   { 
                 i f   ( d e p t h   = = =   0 )   { 
                     r e t u r n   g e t N e x t H y d r a t a b l e S i b l i n g ( n o d e ) ; 
                 }   e l s e   { 
                     d e p t h - - ; 
                 } 
             }   e l s e   i f   ( d a t a   = = =   S U S P E N S E _ S T A R T _ D A T A   | |   d a t a   = = =   S U S P E N S E _ F A L L B A C K _ S T A R T _ D A T A   | |   d a t a   = = =   S U S P E N S E _ P E N D I N G _ S T A R T _ D A T A )   { 
                 d e p t h + + ; 
             } 
         } 
 
         n o d e   =   n o d e . n e x t S i b l i n g ; 
     }   / /   T O D O :   W a r n ,   w e   d i d n ' t   f i n d   t h e   e n d   c o m m e n t   b o u n d a r y . 
 
 
     r e t u r n   n u l l ; 
 }   / /   R e t u r n s   t h e   S u s p e n s e I n s t a n c e   i f   t h i s   n o d e   i s   a   d i r e c t   c h i l d   o f   a 
 / /   S u s p e n s e I n s t a n c e .   I . e .   i f   i t s   p r e v i o u s   s i b l i n g   i s   a   C o m m e n t   w i t h 
 / /   S U S P E N S E _ x _ S T A R T _ D A T A .   O t h e r w i s e ,   n u l l . 
 
 f u n c t i o n   g e t P a r e n t S u s p e n s e I n s t a n c e ( t a r g e t I n s t a n c e )   { 
     v a r   n o d e   =   t a r g e t I n s t a n c e . p r e v i o u s S i b l i n g ;   / /   S k i p   p a s t   a l l   n o d e s   w i t h i n   t h i s   s u s p e n s e   b o u n d a r y . 
     / /   T h e r e   m i g h t   b e   n e s t e d   n o d e s   s o   w e   n e e d   t o   k e e p   t r a c k   o f   h o w 
     / /   d e e p   w e   a r e   a n d   o n l y   b r e a k   o u t   w h e n   w e ' r e   b a c k   o n   t o p . 
 
     v a r   d e p t h   =   0 ; 
 
     w h i l e   ( n o d e )   { 
         i f   ( n o d e . n o d e T y p e   = = =   C O M M E N T _ N O D E )   { 
             v a r   d a t a   =   n o d e . d a t a ; 
 
             i f   ( d a t a   = = =   S U S P E N S E _ S T A R T _ D A T A   | |   d a t a   = = =   S U S P E N S E _ F A L L B A C K _ S T A R T _ D A T A   | |   d a t a   = = =   S U S P E N S E _ P E N D I N G _ S T A R T _ D A T A )   { 
                 i f   ( d e p t h   = = =   0 )   { 
                     r e t u r n   n o d e ; 
                 }   e l s e   { 
                     d e p t h - - ; 
                 } 
             }   e l s e   i f   ( d a t a   = = =   S U S P E N S E _ E N D _ D A T A )   { 
                 d e p t h + + ; 
             } 
         } 
 
         n o d e   =   n o d e . p r e v i o u s S i b l i n g ; 
     } 
 
     r e t u r n   n u l l ; 
 } 
 f u n c t i o n   c o m m i t H y d r a t e d C o n t a i n e r ( c o n t a i n e r )   { 
     / /   R e t r y   i f   a n y   e v e n t   r e p l a y i n g   w a s   b l o c k e d   o n   t h i s . 
     r e t r y I f B l o c k e d O n ( c o n t a i n e r ) ; 
 } 
 f u n c t i o n   c o m m i t H y d r a t e d S u s p e n s e I n s t a n c e ( s u s p e n s e I n s t a n c e )   { 
     / /   R e t r y   i f   a n y   e v e n t   r e p l a y i n g   w a s   b l o c k e d   o n   t h i s . 
     r e t r y I f B l o c k e d O n ( s u s p e n s e I n s t a n c e ) ; 
 } 
 f u n c t i o n   s h o u l d D e l e t e U n h y d r a t e d T a i l I n s t a n c e s ( p a r e n t T y p e )   { 
     r e t u r n   p a r e n t T y p e   ! = =   ' h e a d '   & &   p a r e n t T y p e   ! = =   ' b o d y ' ; 
 } 
 f u n c t i o n   d i d N o t M a t c h H y d r a t e d C o n t a i n e r T e x t I n s t a n c e ( p a r e n t C o n t a i n e r ,   t e x t I n s t a n c e ,   t e x t ,   i s C o n c u r r e n t M o d e )   { 
     v a r   s h o u l d W a r n D e v   =   t r u e ; 
     c h e c k F o r U n m a t c h e d T e x t ( t e x t I n s t a n c e . n o d e V a l u e ,   t e x t ,   i s C o n c u r r e n t M o d e ,   s h o u l d W a r n D e v ) ; 
 } 
 f u n c t i o n   d i d N o t M a t c h H y d r a t e d T e x t I n s t a n c e ( p a r e n t T y p e ,   p a r e n t P r o p s ,   p a r e n t I n s t a n c e ,   t e x t I n s t a n c e ,   t e x t ,   i s C o n c u r r e n t M o d e )   { 
     i f   ( p a r e n t P r o p s [ S U P P R E S S _ H Y D R A T I O N _ W A R N I N G $ 1 ]   ! = =   t r u e )   { 
         v a r   s h o u l d W a r n D e v   =   t r u e ; 
         c h e c k F o r U n m a t c h e d T e x t ( t e x t I n s t a n c e . n o d e V a l u e ,   t e x t ,   i s C o n c u r r e n t M o d e ,   s h o u l d W a r n D e v ) ; 
     } 
 } 
 f u n c t i o n   d i d N o t H y d r a t e I n s t a n c e W i t h i n C o n t a i n e r ( p a r e n t C o n t a i n e r ,   i n s t a n c e )   { 
     { 
         i f   ( i n s t a n c e . n o d e T y p e   = = =   E L E M E N T _ N O D E )   { 
             w a r n F o r D e l e t e d H y d r a t a b l e E l e m e n t ( p a r e n t C o n t a i n e r ,   i n s t a n c e ) ; 
         }   e l s e   i f   ( i n s t a n c e . n o d e T y p e   = = =   C O M M E N T _ N O D E )   ;   e l s e   { 
             w a r n F o r D e l e t e d H y d r a t a b l e T e x t ( p a r e n t C o n t a i n e r ,   i n s t a n c e ) ; 
         } 
     } 
 } 
 f u n c t i o n   d i d N o t H y d r a t e I n s t a n c e W i t h i n S u s p e n s e I n s t a n c e ( p a r e n t I n s t a n c e ,   i n s t a n c e )   { 
     { 
         / /   $ F l o w F i x M e :   O n l y   E l e m e n t   o r   D o c u m e n t   c a n   b e   p a r e n t   n o d e s . 
         v a r   p a r e n t N o d e   =   p a r e n t I n s t a n c e . p a r e n t N o d e ; 
 
         i f   ( p a r e n t N o d e   ! = =   n u l l )   { 
             i f   ( i n s t a n c e . n o d e T y p e   = = =   E L E M E N T _ N O D E )   { 
                 w a r n F o r D e l e t e d H y d r a t a b l e E l e m e n t ( p a r e n t N o d e ,   i n s t a n c e ) ; 
             }   e l s e   i f   ( i n s t a n c e . n o d e T y p e   = = =   C O M M E N T _ N O D E )   ;   e l s e   { 
                 w a r n F o r D e l e t e d H y d r a t a b l e T e x t ( p a r e n t N o d e ,   i n s t a n c e ) ; 
             } 
         } 
     } 
 } 
 f u n c t i o n   d i d N o t H y d r a t e I n s t a n c e ( p a r e n t T y p e ,   p a r e n t P r o p s ,   p a r e n t I n s t a n c e ,   i n s t a n c e ,   i s C o n c u r r e n t M o d e )   { 
     { 
         i f   ( i s C o n c u r r e n t M o d e   | |   p a r e n t P r o p s [ S U P P R E S S _ H Y D R A T I O N _ W A R N I N G $ 1 ]   ! = =   t r u e )   { 
             i f   ( i n s t a n c e . n o d e T y p e   = = =   E L E M E N T _ N O D E )   { 
                 w a r n F o r D e l e t e d H y d r a t a b l e E l e m e n t ( p a r e n t I n s t a n c e ,   i n s t a n c e ) ; 
             }   e l s e   i f   ( i n s t a n c e . n o d e T y p e   = = =   C O M M E N T _ N O D E )   ;   e l s e   { 
                 w a r n F o r D e l e t e d H y d r a t a b l e T e x t ( p a r e n t I n s t a n c e ,   i n s t a n c e ) ; 
             } 
         } 
     } 
 } 
 f u n c t i o n   d i d N o t F i n d H y d r a t a b l e I n s t a n c e W i t h i n C o n t a i n e r ( p a r e n t C o n t a i n e r ,   t y p e ,   p r o p s )   { 
     { 
         w a r n F o r I n s e r t e d H y d r a t e d E l e m e n t ( p a r e n t C o n t a i n e r ,   t y p e ) ; 
     } 
 } 
 f u n c t i o n   d i d N o t F i n d H y d r a t a b l e T e x t I n s t a n c e W i t h i n C o n t a i n e r ( p a r e n t C o n t a i n e r ,   t e x t )   { 
     { 
         w a r n F o r I n s e r t e d H y d r a t e d T e x t ( p a r e n t C o n t a i n e r ,   t e x t ) ; 
     } 
 } 
 f u n c t i o n   d i d N o t F i n d H y d r a t a b l e I n s t a n c e W i t h i n S u s p e n s e I n s t a n c e ( p a r e n t I n s t a n c e ,   t y p e ,   p r o p s )   { 
     { 
         / /   $ F l o w F i x M e :   O n l y   E l e m e n t   o r   D o c u m e n t   c a n   b e   p a r e n t   n o d e s . 
         v a r   p a r e n t N o d e   =   p a r e n t I n s t a n c e . p a r e n t N o d e ; 
         i f   ( p a r e n t N o d e   ! = =   n u l l )   w a r n F o r I n s e r t e d H y d r a t e d E l e m e n t ( p a r e n t N o d e ,   t y p e ) ; 
     } 
 } 
 f u n c t i o n   d i d N o t F i n d H y d r a t a b l e T e x t I n s t a n c e W i t h i n S u s p e n s e I n s t a n c e ( p a r e n t I n s t a n c e ,   t e x t )   { 
     { 
         / /   $ F l o w F i x M e :   O n l y   E l e m e n t   o r   D o c u m e n t   c a n   b e   p a r e n t   n o d e s . 
         v a r   p a r e n t N o d e   =   p a r e n t I n s t a n c e . p a r e n t N o d e ; 
         i f   ( p a r e n t N o d e   ! = =   n u l l )   w a r n F o r I n s e r t e d H y d r a t e d T e x t ( p a r e n t N o d e ,   t e x t ) ; 
     } 
 } 
 f u n c t i o n   d i d N o t F i n d H y d r a t a b l e I n s t a n c e ( p a r e n t T y p e ,   p a r e n t P r o p s ,   p a r e n t I n s t a n c e ,   t y p e ,   p r o p s ,   i s C o n c u r r e n t M o d e )   { 
     { 
         i f   ( i s C o n c u r r e n t M o d e   | |   p a r e n t P r o p s [ S U P P R E S S _ H Y D R A T I O N _ W A R N I N G $ 1 ]   ! = =   t r u e )   { 
             w a r n F o r I n s e r t e d H y d r a t e d E l e m e n t ( p a r e n t I n s t a n c e ,   t y p e ) ; 
         } 
     } 
 } 
 f u n c t i o n   d i d N o t F i n d H y d r a t a b l e T e x t I n s t a n c e ( p a r e n t T y p e ,   p a r e n t P r o p s ,   p a r e n t I n s t a n c e ,   t e x t ,   i s C o n c u r r e n t M o d e )   { 
     { 
         i f   ( i s C o n c u r r e n t M o d e   | |   p a r e n t P r o p s [ S U P P R E S S _ H Y D R A T I O N _ W A R N I N G $ 1 ]   ! = =   t r u e )   { 
             w a r n F o r I n s e r t e d H y d r a t e d T e x t ( p a r e n t I n s t a n c e ,   t e x t ) ; 
         } 
     } 
 } 
 f u n c t i o n   e r r o r H y d r a t i n g C o n t a i n e r ( p a r e n t C o n t a i n e r )   { 
     { 
         / /   T O D O :   T h i s   g e t s   l o g g e d   b y   o n R e c o v e r a b l e E r r o r ,   t o o ,   s o   w e   s h o u l d   b e 
         / /   a b l e   t o   r e m o v e   i t . 
         e r r o r ( ' A n   e r r o r   o c c u r r e d   d u r i n g   h y d r a t i o n .   T h e   s e r v e r   H T M L   w a s   r e p l a c e d   w i t h   c l i e n t   c o n t e n t   i n   < % s > . ' ,   p a r e n t C o n t a i n e r . n o d e N a m e . t o L o w e r C a s e ( ) ) ; 
     } 
 } 
 f u n c t i o n   p r e p a r e P o r t a l M o u n t ( p o r t a l I n s t a n c e )   { 
     l i s t e n T o A l l S u p p o r t e d E v e n t s ( p o r t a l I n s t a n c e ) ; 
 } 
 
 v a r   r a n d o m K e y   =   M a t h . r a n d o m ( ) . t o S t r i n g ( 3 6 ) . s l i c e ( 2 ) ; 
 v a r   i n t e r n a l I n s t a n c e K e y   =   ' _ _ r e a c t F i b e r $ '   +   r a n d o m K e y ; 
 v a r   i n t e r n a l P r o p s K e y   =   ' _ _ r e a c t P r o p s $ '   +   r a n d o m K e y ; 
 v a r   i n t e r n a l C o n t a i n e r I n s t a n c e K e y   =   ' _ _ r e a c t C o n t a i n e r $ '   +   r a n d o m K e y ; 
 v a r   i n t e r n a l E v e n t H a n d l e r s K e y   =   ' _ _ r e a c t E v e n t s $ '   +   r a n d o m K e y ; 
 v a r   i n t e r n a l E v e n t H a n d l e r L i s t e n e r s K e y   =   ' _ _ r e a c t L i s t e n e r s $ '   +   r a n d o m K e y ; 
 v a r   i n t e r n a l E v e n t H a n d l e s S e t K e y   =   ' _ _ r e a c t H a n d l e s $ '   +   r a n d o m K e y ; 
 f u n c t i o n   d e t a c h D e l e t e d I n s t a n c e ( n o d e )   { 
     / /   T O D O :   T h i s   f u n c t i o n   i s   o n l y   c a l l e d   o n   h o s t   c o m p o n e n t s .   I   d o n ' t   t h i n k   a l l   o f 
     / /   t h e s e   f i e l d s   a r e   r e l e v a n t . 
     d e l e t e   n o d e [ i n t e r n a l I n s t a n c e K e y ] ; 
     d e l e t e   n o d e [ i n t e r n a l P r o p s K e y ] ; 
     d e l e t e   n o d e [ i n t e r n a l E v e n t H a n d l e r s K e y ] ; 
     d e l e t e   n o d e [ i n t e r n a l E v e n t H a n d l e r L i s t e n e r s K e y ] ; 
     d e l e t e   n o d e [ i n t e r n a l E v e n t H a n d l e s S e t K e y ] ; 
 } 
 f u n c t i o n   p r e c a c h e F i b e r N o d e ( h o s t I n s t ,   n o d e )   { 
     n o d e [ i n t e r n a l I n s t a n c e K e y ]   =   h o s t I n s t ; 
 } 
 f u n c t i o n   m a r k C o n t a i n e r A s R o o t ( h o s t R o o t ,   n o d e )   { 
     n o d e [ i n t e r n a l C o n t a i n e r I n s t a n c e K e y ]   =   h o s t R o o t ; 
 } 
 f u n c t i o n   u n m a r k C o n t a i n e r A s R o o t ( n o d e )   { 
     n o d e [ i n t e r n a l C o n t a i n e r I n s t a n c e K e y ]   =   n u l l ; 
 } 
 f u n c t i o n   i s C o n t a i n e r M a r k e d A s R o o t ( n o d e )   { 
     r e t u r n   ! ! n o d e [ i n t e r n a l C o n t a i n e r I n s t a n c e K e y ] ; 
 }   / /   G i v e n   a   D O M   n o d e ,   r e t u r n   t h e   c l o s e s t   H o s t C o m p o n e n t   o r   H o s t T e x t   f i b e r   a n c e s t o r . 
 / /   I f   t h e   t a r g e t   n o d e   i s   p a r t   o f   a   h y d r a t e d   o r   n o t   y e t   r e n d e r e d   s u b t r e e ,   t h e n 
 / /   t h i s   m a y   a l s o   r e t u r n   a   S u s p e n s e C o m p o n e n t   o r   H o s t R o o t   t o   i n d i c a t e   t h a t . 
 / /   C o n c e p t u a l l y   t h e   H o s t R o o t   f i b e r   i s   a   c h i l d   o f   t h e   C o n t a i n e r   n o d e .   S o   i f   y o u 
 / /   p a s s   t h e   C o n t a i n e r   n o d e   a s   t h e   t a r g e t N o d e ,   y o u   w i l l   n o t   a c t u a l l y   g e t   t h e 
 / /   H o s t R o o t   b a c k .   T o   g e t   t o   t h e   H o s t R o o t ,   y o u   n e e d   t o   p a s s   a   c h i l d   o f   i t . 
 / /   T h e   s a m e   t h i n g   a p p l i e s   t o   S u s p e n s e   b o u n d a r i e s . 
 
 f u n c t i o n   g e t C l o s e s t I n s t a n c e F r o m N o d e ( t a r g e t N o d e )   { 
     v a r   t a r g e t I n s t   =   t a r g e t N o d e [ i n t e r n a l I n s t a n c e K e y ] ; 
 
     i f   ( t a r g e t I n s t )   { 
         / /   D o n ' t   r e t u r n   H o s t R o o t   o r   S u s p e n s e C o m p o n e n t   h e r e . 
         r e t u r n   t a r g e t I n s t ; 
     }   / /   I f   t h e   d i r e c t   e v e n t   t a r g e t   i s n ' t   a   R e a c t   o w n e d   D O M   n o d e ,   w e   n e e d   t o   l o o k 
     / /   t o   s e e   i f   o n e   o f   i t s   p a r e n t s   i s   a   R e a c t   o w n e d   D O M   n o d e . 
 
 
     v a r   p a r e n t N o d e   =   t a r g e t N o d e . p a r e n t N o d e ; 
 
     w h i l e   ( p a r e n t N o d e )   { 
         / /   W e ' l l   c h e c k   i f   t h i s   i s   a   c o n t a i n e r   r o o t   t h a t   c o u l d   i n c l u d e 
         / /   R e a c t   n o d e s   i n   t h e   f u t u r e .   W e   n e e d   t o   c h e c k   t h i s   f i r s t   b e c a u s e 
         / /   i f   w e ' r e   a   c h i l d   o f   a   d e h y d r a t e d   c o n t a i n e r ,   w e   n e e d   t o   f i r s t 
         / /   f i n d   t h a t   i n n e r   c o n t a i n e r   b e f o r e   m o v i n g   o n   t o   f i n d i n g   t h e   p a r e n t 
         / /   i n s t a n c e .   N o t e   t h a t   w e   d o n ' t   c h e c k   t h i s   f i e l d   o n     t h e   t a r g e t N o d e 
         / /   i t s e l f   b e c a u s e   t h e   f i b e r s   a r e   c o n c e p t u a l l y   b e t w e e n   t h e   c o n t a i n e r 
         / /   n o d e   a n d   t h e   f i r s t   c h i l d .   I t   i s n ' t   s u r r o u n d i n g   t h e   c o n t a i n e r   n o d e . 
         / /   I f   i t ' s   n o t   a   c o n t a i n e r ,   w e   c h e c k   i f   i t ' s   a n   i n s t a n c e . 
         t a r g e t I n s t   =   p a r e n t N o d e [ i n t e r n a l C o n t a i n e r I n s t a n c e K e y ]   | |   p a r e n t N o d e [ i n t e r n a l I n s t a n c e K e y ] ; 
 
         i f   ( t a r g e t I n s t )   { 
             / /   S i n c e   t h i s   w a s n ' t   t h e   d i r e c t   t a r g e t   o f   t h e   e v e n t ,   w e   m i g h t   h a v e 
             / /   s t e p p e d   p a s t   d e h y d r a t e d   D O M   n o d e s   t o   g e t   h e r e .   H o w e v e r   t h e y   c o u l d 
             / /   a l s o   h a v e   b e e n   n o n - R e a c t   n o d e s .   W e   n e e d   t o   a n s w e r   w h i c h   o n e . 
             / /   I f   w e   t h e   i n s t a n c e   d o e s n ' t   h a v e   a n y   c h i l d r e n ,   t h e n   t h e r e   c a n ' t   b e 
             / /   a   n e s t e d   s u s p e n s e   b o u n d a r y   w i t h i n   i t .   S o   w e   c a n   u s e   t h i s   a s   a   f a s t 
             / /   b a i l o u t .   M o s t   o f   t h e   t i m e ,   w h e n   p e o p l e   a d d   n o n - R e a c t   c h i l d r e n   t o 
             / /   t h e   t r e e ,   i t   i s   u s i n g   a   r e f   t o   a   c h i l d - l e s s   D O M   n o d e . 
             / /   N o r m a l l y   w e ' d   o n l y   n e e d   t o   c h e c k   o n e   o f   t h e   f i b e r s   b e c a u s e   i f   i t 
             / /   h a s   e v e r   g o n e   f r o m   h a v i n g   c h i l d r e n   t o   d e l e t i n g   t h e m   o r   v i c e   v e r s a 
             / /   i t   w o u l d   h a v e   d e l e t e d   t h e   d e h y d r a t e d   b o u n d a r y   n e s t e d   i n s i d e   a l r e a d y . 
             / /   H o w e v e r ,   s i n c e   t h e   H o s t R o o t   s t a r t s   o u t   w i t h   a n   a l t e r n a t e   i t   m i g h t 
             / /   h a v e   o n e   o n   t h e   a l t e r n a t e   s o   w e   n e e d   t o   c h e c k   i n   c a s e   t h i s   w a s   a 
             / /   r o o t . 
             v a r   a l t e r n a t e   =   t a r g e t I n s t . a l t e r n a t e ; 
 
             i f   ( t a r g e t I n s t . c h i l d   ! = =   n u l l   | |   a l t e r n a t e   ! = =   n u l l   & &   a l t e r n a t e . c h i l d   ! = =   n u l l )   { 
                 / /   N e x t   w e   n e e d   t o   f i g u r e   o u t   i f   t h e   n o d e   t h a t   s k i p p e d   p a s t   i s 
                 / /   n e s t e d   w i t h i n   a   d e h y d r a t e d   b o u n d a r y   a n d   i f   s o ,   w h i c h   o n e . 
                 v a r   s u s p e n s e I n s t a n c e   =   g e t P a r e n t S u s p e n s e I n s t a n c e ( t a r g e t N o d e ) ; 
 
                 w h i l e   ( s u s p e n s e I n s t a n c e   ! = =   n u l l )   { 
                     / /   W e   f o u n d   a   s u s p e n s e   i n s t a n c e .   T h a t   m e a n s   t h a t   w e   h a v e n ' t 
                     / /   h y d r a t e d   i t   y e t .   E v e n   t h o u g h   w e   l e a v e   t h e   c o m m e n t s   i n   t h e 
                     / /   D O M   a f t e r   h y d r a t i n g ,   a n d   t h e r e   a r e   b o u n d a r i e s   i n   t h e   D O M 
                     / /   t h a t   c o u l d   a l r e a d y   b e   h y d r a t e d ,   w e   w o u l d n ' t   h a v e   f o u n d   t h e m 
                     / /   t h r o u g h   t h i s   p a s s   s i n c e   i f   t h e   t a r g e t   i s   h y d r a t e d   i t   w o u l d 
                     / /   h a v e   h a d   a n   i n t e r n a l I n s t a n c e K e y   o n   i t . 
                     / /   L e t ' s   g e t   t h e   f i b e r   a s s o c i a t e d   w i t h   t h e   S u s p e n s e C o m p o n e n t 
                     / /   a s   t h e   d e e p e s t   i n s t a n c e . 
                     v a r   t a r g e t S u s p e n s e I n s t   =   s u s p e n s e I n s t a n c e [ i n t e r n a l I n s t a n c e K e y ] ; 
 
                     i f   ( t a r g e t S u s p e n s e I n s t )   { 
                         r e t u r n   t a r g e t S u s p e n s e I n s t ; 
                     }   / /   I f   w e   d o n ' t   f i n d   a   F i b e r   o n   t h e   c o m m e n t ,   i t   m i g h t   b e   b e c a u s e 
                     / /   w e   h a v e n ' t   g o t t e n   t o   h y d r a t e   i t   y e t .   T h e r e   m i g h t   s t i l l   b e   a 
                     / /   p a r e n t   b o u n d a r y   t h a t   h a s n ' t   a b o v e   t h i s   o n e   s o   w e   n e e d   t o   f i n d 
                     / /   t h e   o u t e r   m o s t   t h a t   i s   k n o w n . 
 
 
                     s u s p e n s e I n s t a n c e   =   g e t P a r e n t S u s p e n s e I n s t a n c e ( s u s p e n s e I n s t a n c e ) ;   / /   I f   w e   d o n ' t   f i n d   o n e ,   t h e n   t h a t   s h o u l d   m e a n   t h a t   t h e   p a r e n t 
                     / /   h o s t   c o m p o n e n t   a l s o   h a s n ' t   h y d r a t e d   y e t .   W e   c a n   r e t u r n   i t 
                     / /   b e l o w   s i n c e   i t   w i l l   b a i l   o u t   o n   t h e   i s M o u n t e d   c h e c k   l a t e r . 
                 } 
             } 
 
             r e t u r n   t a r g e t I n s t ; 
         } 
 
         t a r g e t N o d e   =   p a r e n t N o d e ; 
         p a r e n t N o d e   =   t a r g e t N o d e . p a r e n t N o d e ; 
     } 
 
     r e t u r n   n u l l ; 
 } 
 / * * 
   *   G i v e n   a   D O M   n o d e ,   r e t u r n   t h e   R e a c t D O M C o m p o n e n t   o r   R e a c t D O M T e x t C o m p o n e n t 
   *   i n s t a n c e ,   o r   n u l l   i f   t h e   n o d e   w a s   n o t   r e n d e r e d   b y   t h i s   R e a c t . 
   * / 
 
 f u n c t i o n   g e t I n s t a n c e F r o m N o d e ( n o d e )   { 
     v a r   i n s t   =   n o d e [ i n t e r n a l I n s t a n c e K e y ]   | |   n o d e [ i n t e r n a l C o n t a i n e r I n s t a n c e K e y ] ; 
 
     i f   ( i n s t )   { 
         i f   ( i n s t . t a g   = = =   H o s t C o m p o n e n t   | |   i n s t . t a g   = = =   H o s t T e x t   | |   i n s t . t a g   = = =   S u s p e n s e C o m p o n e n t   | |   i n s t . t a g   = = =   H o s t R o o t )   { 
             r e t u r n   i n s t ; 
         }   e l s e   { 
             r e t u r n   n u l l ; 
         } 
     } 
 
     r e t u r n   n u l l ; 
 } 
 / * * 
   *   G i v e n   a   R e a c t D O M C o m p o n e n t   o r   R e a c t D O M T e x t C o m p o n e n t ,   r e t u r n   t h e   c o r r e s p o n d i n g 
   *   D O M   n o d e . 
   * / 
 
 f u n c t i o n   g e t N o d e F r o m I n s t a n c e ( i n s t )   { 
     i f   ( i n s t . t a g   = = =   H o s t C o m p o n e n t   | |   i n s t . t a g   = = =   H o s t T e x t )   { 
         / /   I n   F i b e r   t h i s ,   i s   j u s t   t h e   s t a t e   n o d e   r i g h t   n o w .   W e   a s s u m e   i t   w i l l   b e 
         / /   a   h o s t   c o m p o n e n t   o r   h o s t   t e x t . 
         r e t u r n   i n s t . s t a t e N o d e ; 
     }   / /   W i t h o u t   t h i s   f i r s t   i n v a r i a n t ,   p a s s i n g   a   n o n - D O M - c o m p o n e n t   t r i g g e r s   t h e   n e x t 
     / /   i n v a r i a n t   f o r   a   m i s s i n g   p a r e n t ,   w h i c h   i s   s u p e r   c o n f u s i n g . 
 
 
     t h r o w   n e w   E r r o r ( ' g e t N o d e F r o m I n s t a n c e :   I n v a l i d   a r g u m e n t . ' ) ; 
 } 
 f u n c t i o n   g e t F i b e r C u r r e n t P r o p s F r o m N o d e ( n o d e )   { 
     r e t u r n   n o d e [ i n t e r n a l P r o p s K e y ]   | |   n u l l ; 
 } 
 f u n c t i o n   u p d a t e F i b e r P r o p s ( n o d e ,   p r o p s )   { 
     n o d e [ i n t e r n a l P r o p s K e y ]   =   p r o p s ; 
 } 
 f u n c t i o n   g e t E v e n t L i s t e n e r S e t ( n o d e )   { 
     v a r   e l e m e n t L i s t e n e r S e t   =   n o d e [ i n t e r n a l E v e n t H a n d l e r s K e y ] ; 
 
     i f   ( e l e m e n t L i s t e n e r S e t   = = =   u n d e f i n e d )   { 
         e l e m e n t L i s t e n e r S e t   =   n o d e [ i n t e r n a l E v e n t H a n d l e r s K e y ]   =   n e w   S e t ( ) ; 
     } 
 
     r e t u r n   e l e m e n t L i s t e n e r S e t ; 
 } 
 
 v a r   l o g g e d T y p e F a i l u r e s   =   { } ; 
 v a r   R e a c t D e b u g C u r r e n t F r a m e $ 1   =   R e a c t S h a r e d I n t e r n a l s . R e a c t D e b u g C u r r e n t F r a m e ; 
 
 f u n c t i o n   s e t C u r r e n t l y V a l i d a t i n g E l e m e n t ( e l e m e n t )   { 
     { 
         i f   ( e l e m e n t )   { 
             v a r   o w n e r   =   e l e m e n t . _ o w n e r ; 
             v a r   s t a c k   =   d e s c r i b e U n k n o w n E l e m e n t T y p e F r a m e I n D E V ( e l e m e n t . t y p e ,   e l e m e n t . _ s o u r c e ,   o w n e r   ?   o w n e r . t y p e   :   n u l l ) ; 
             R e a c t D e b u g C u r r e n t F r a m e $ 1 . s e t E x t r a S t a c k F r a m e ( s t a c k ) ; 
         }   e l s e   { 
             R e a c t D e b u g C u r r e n t F r a m e $ 1 . s e t E x t r a S t a c k F r a m e ( n u l l ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   c h e c k P r o p T y p e s ( t y p e S p e c s ,   v a l u e s ,   l o c a t i o n ,   c o m p o n e n t N a m e ,   e l e m e n t )   { 
     { 
         / /   $ F l o w F i x M e   T h i s   i s   o k a y   b u t   F l o w   d o e s n ' t   k n o w   i t . 
         v a r   h a s   =   F u n c t i o n . c a l l . b i n d ( h a s O w n P r o p e r t y ) ; 
 
         f o r   ( v a r   t y p e S p e c N a m e   i n   t y p e S p e c s )   { 
             i f   ( h a s ( t y p e S p e c s ,   t y p e S p e c N a m e ) )   { 
                 v a r   e r r o r $ 1   =   v o i d   0 ;   / /   P r o p   t y p e   v a l i d a t i o n   m a y   t h r o w .   I n   c a s e   t h e y   d o ,   w e   d o n ' t   w a n t   t o 
                 / /   f a i l   t h e   r e n d e r   p h a s e   w h e r e   i t   d i d n ' t   f a i l   b e f o r e .   S o   w e   l o g   i t . 
                 / /   A f t e r   t h e s e   h a v e   b e e n   c l e a n e d   u p ,   w e ' l l   l e t   t h e m   t h r o w . 
 
                 t r y   { 
                     / /   T h i s   i s   i n t e n t i o n a l l y   a n   i n v a r i a n t   t h a t   g e t s   c a u g h t .   I t ' s   t h e   s a m e 
                     / /   b e h a v i o r   a s   w i t h o u t   t h i s   s t a t e m e n t   e x c e p t   w i t h   a   b e t t e r   m e s s a g e . 
                     i f   ( t y p e o f   t y p e S p e c s [ t y p e S p e c N a m e ]   ! = =   ' f u n c t i o n ' )   { 
                         / /   e s l i n t - d i s a b l e - n e x t - l i n e   r e a c t - i n t e r n a l / p r o d - e r r o r - c o d e s 
                         v a r   e r r   =   E r r o r ( ( c o m p o n e n t N a m e   | |   ' R e a c t   c l a s s ' )   +   ' :   '   +   l o c a t i o n   +   '   t y p e   ` '   +   t y p e S p e c N a m e   +   ' `   i s   i n v a l i d ;   '   +   ' i t   m u s t   b e   a   f u n c t i o n ,   u s u a l l y   f r o m   t h e   ` p r o p - t y p e s `   p a c k a g e ,   b u t   r e c e i v e d   ` '   +   t y p e o f   t y p e S p e c s [ t y p e S p e c N a m e ]   +   ' ` . '   +   ' T h i s   o f t e n   h a p p e n s   b e c a u s e   o f   t y p o s   s u c h   a s   ` P r o p T y p e s . f u n c t i o n `   i n s t e a d   o f   ` P r o p T y p e s . f u n c ` . ' ) ; 
                         e r r . n a m e   =   ' I n v a r i a n t   V i o l a t i o n ' ; 
                         t h r o w   e r r ; 
                     } 
 
                     e r r o r $ 1   =   t y p e S p e c s [ t y p e S p e c N a m e ] ( v a l u e s ,   t y p e S p e c N a m e ,   c o m p o n e n t N a m e ,   l o c a t i o n ,   n u l l ,   ' S E C R E T _ D O _ N O T _ P A S S _ T H I S _ O R _ Y O U _ W I L L _ B E _ F I R E D ' ) ; 
                 }   c a t c h   ( e x )   { 
                     e r r o r $ 1   =   e x ; 
                 } 
 
                 i f   ( e r r o r $ 1   & &   ! ( e r r o r $ 1   i n s t a n c e o f   E r r o r ) )   { 
                     s e t C u r r e n t l y V a l i d a t i n g E l e m e n t ( e l e m e n t ) ; 
 
                     e r r o r ( ' % s :   t y p e   s p e c i f i c a t i o n   o f   % s '   +   '   ` % s `   i s   i n v a l i d ;   t h e   t y p e   c h e c k e r   '   +   ' f u n c t i o n   m u s t   r e t u r n   ` n u l l `   o r   a n   ` E r r o r `   b u t   r e t u r n e d   a   % s .   '   +   ' Y o u   m a y   h a v e   f o r g o t t e n   t o   p a s s   a n   a r g u m e n t   t o   t h e   t y p e   c h e c k e r   '   +   ' c r e a t o r   ( a r r a y O f ,   i n s t a n c e O f ,   o b j e c t O f ,   o n e O f ,   o n e O f T y p e ,   a n d   '   +   ' s h a p e   a l l   r e q u i r e   a n   a r g u m e n t ) . ' ,   c o m p o n e n t N a m e   | |   ' R e a c t   c l a s s ' ,   l o c a t i o n ,   t y p e S p e c N a m e ,   t y p e o f   e r r o r $ 1 ) ; 
 
                     s e t C u r r e n t l y V a l i d a t i n g E l e m e n t ( n u l l ) ; 
                 } 
 
                 i f   ( e r r o r $ 1   i n s t a n c e o f   E r r o r   & &   ! ( e r r o r $ 1 . m e s s a g e   i n   l o g g e d T y p e F a i l u r e s ) )   { 
                     / /   O n l y   m o n i t o r   t h i s   f a i l u r e   o n c e   b e c a u s e   t h e r e   t e n d s   t o   b e   a   l o t   o f   t h e 
                     / /   s a m e   e r r o r . 
                     l o g g e d T y p e F a i l u r e s [ e r r o r $ 1 . m e s s a g e ]   =   t r u e ; 
                     s e t C u r r e n t l y V a l i d a t i n g E l e m e n t ( e l e m e n t ) ; 
 
                     e r r o r ( ' F a i l e d   % s   t y p e :   % s ' ,   l o c a t i o n ,   e r r o r $ 1 . m e s s a g e ) ; 
 
                     s e t C u r r e n t l y V a l i d a t i n g E l e m e n t ( n u l l ) ; 
                 } 
             } 
         } 
     } 
 } 
 
 v a r   v a l u e S t a c k   =   [ ] ; 
 v a r   f i b e r S t a c k ; 
 
 { 
     f i b e r S t a c k   =   [ ] ; 
 } 
 
 v a r   i n d e x   =   - 1 ; 
 
 f u n c t i o n   c r e a t e C u r s o r ( d e f a u l t V a l u e )   { 
     r e t u r n   { 
         c u r r e n t :   d e f a u l t V a l u e 
     } ; 
 } 
 
 f u n c t i o n   p o p ( c u r s o r ,   f i b e r )   { 
     i f   ( i n d e x   <   0 )   { 
         { 
             e r r o r ( ' U n e x p e c t e d   p o p . ' ) ; 
         } 
 
         r e t u r n ; 
     } 
 
     { 
         i f   ( f i b e r   ! = =   f i b e r S t a c k [ i n d e x ] )   { 
             e r r o r ( ' U n e x p e c t e d   F i b e r   p o p p e d . ' ) ; 
         } 
     } 
 
     c u r s o r . c u r r e n t   =   v a l u e S t a c k [ i n d e x ] ; 
     v a l u e S t a c k [ i n d e x ]   =   n u l l ; 
 
     { 
         f i b e r S t a c k [ i n d e x ]   =   n u l l ; 
     } 
 
     i n d e x - - ; 
 } 
 
 f u n c t i o n   p u s h ( c u r s o r ,   v a l u e ,   f i b e r )   { 
     i n d e x + + ; 
     v a l u e S t a c k [ i n d e x ]   =   c u r s o r . c u r r e n t ; 
 
     { 
         f i b e r S t a c k [ i n d e x ]   =   f i b e r ; 
     } 
 
     c u r s o r . c u r r e n t   =   v a l u e ; 
 } 
 
 v a r   w a r n e d A b o u t M i s s i n g G e t C h i l d C o n t e x t ; 
 
 { 
     w a r n e d A b o u t M i s s i n g G e t C h i l d C o n t e x t   =   { } ; 
 } 
 
 v a r   e m p t y C o n t e x t O b j e c t   =   { } ; 
 
 { 
     O b j e c t . f r e e z e ( e m p t y C o n t e x t O b j e c t ) ; 
 }   / /   A   c u r s o r   t o   t h e   c u r r e n t   m e r g e d   c o n t e x t   o b j e c t   o n   t h e   s t a c k . 
 
 
 v a r   c o n t e x t S t a c k C u r s o r   =   c r e a t e C u r s o r ( e m p t y C o n t e x t O b j e c t ) ;   / /   A   c u r s o r   t o   a   b o o l e a n   i n d i c a t i n g   w h e t h e r   t h e   c o n t e x t   h a s   c h a n g e d . 
 
 v a r   d i d P e r f o r m W o r k S t a c k C u r s o r   =   c r e a t e C u r s o r ( f a l s e ) ;   / /   K e e p   t r a c k   o f   t h e   p r e v i o u s   c o n t e x t   o b j e c t   t h a t   w a s   o n   t h e   s t a c k . 
 / /   W e   u s e   t h i s   t o   g e t   a c c e s s   t o   t h e   p a r e n t   c o n t e x t   a f t e r   w e   h a v e   a l r e a d y 
 / /   p u s h e d   t h e   n e x t   c o n t e x t   p r o v i d e r ,   a n d   n o w   n e e d   t o   m e r g e   t h e i r   c o n t e x t s . 
 
 v a r   p r e v i o u s C o n t e x t   =   e m p t y C o n t e x t O b j e c t ; 
 
 f u n c t i o n   g e t U n m a s k e d C o n t e x t ( w o r k I n P r o g r e s s ,   C o m p o n e n t ,   d i d P u s h O w n C o n t e x t I f P r o v i d e r )   { 
     { 
         i f   ( d i d P u s h O w n C o n t e x t I f P r o v i d e r   & &   i s C o n t e x t P r o v i d e r ( C o m p o n e n t ) )   { 
             / /   I f   t h e   f i b e r   i s   a   c o n t e x t   p r o v i d e r   i t s e l f ,   w h e n   w e   r e a d   i t s   c o n t e x t 
             / /   w e   m a y   h a v e   a l r e a d y   p u s h e d   i t s   o w n   c h i l d   c o n t e x t   o n   t h e   s t a c k .   A   c o n t e x t 
             / /   p r o v i d e r   s h o u l d   n o t   " s e e "   i t s   o w n   c h i l d   c o n t e x t .   T h e r e f o r e   w e   r e a d   t h e 
             / /   p r e v i o u s   ( p a r e n t )   c o n t e x t   i n s t e a d   f o r   a   c o n t e x t   p r o v i d e r . 
             r e t u r n   p r e v i o u s C o n t e x t ; 
         } 
 
         r e t u r n   c o n t e x t S t a c k C u r s o r . c u r r e n t ; 
     } 
 } 
 
 f u n c t i o n   c a c h e C o n t e x t ( w o r k I n P r o g r e s s ,   u n m a s k e d C o n t e x t ,   m a s k e d C o n t e x t )   { 
     { 
         v a r   i n s t a n c e   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
         i n s t a n c e . _ _ r e a c t I n t e r n a l M e m o i z e d U n m a s k e d C h i l d C o n t e x t   =   u n m a s k e d C o n t e x t ; 
         i n s t a n c e . _ _ r e a c t I n t e r n a l M e m o i z e d M a s k e d C h i l d C o n t e x t   =   m a s k e d C o n t e x t ; 
     } 
 } 
 
 f u n c t i o n   g e t M a s k e d C o n t e x t ( w o r k I n P r o g r e s s ,   u n m a s k e d C o n t e x t )   { 
     { 
         v a r   t y p e   =   w o r k I n P r o g r e s s . t y p e ; 
         v a r   c o n t e x t T y p e s   =   t y p e . c o n t e x t T y p e s ; 
 
         i f   ( ! c o n t e x t T y p e s )   { 
             r e t u r n   e m p t y C o n t e x t O b j e c t ; 
         }   / /   A v o i d   r e c r e a t i n g   m a s k e d   c o n t e x t   u n l e s s   u n m a s k e d   c o n t e x t   h a s   c h a n g e d . 
         / /   F a i l i n g   t o   d o   t h i s   w i l l   r e s u l t   i n   u n n e c e s s a r y   c a l l s   t o   c o m p o n e n t W i l l R e c e i v e P r o p s . 
         / /   T h i s   m a y   t r i g g e r   i n f i n i t e   l o o p s   i f   c o m p o n e n t W i l l R e c e i v e P r o p s   c a l l s   s e t S t a t e . 
 
 
         v a r   i n s t a n c e   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
 
         i f   ( i n s t a n c e   & &   i n s t a n c e . _ _ r e a c t I n t e r n a l M e m o i z e d U n m a s k e d C h i l d C o n t e x t   = = =   u n m a s k e d C o n t e x t )   { 
             r e t u r n   i n s t a n c e . _ _ r e a c t I n t e r n a l M e m o i z e d M a s k e d C h i l d C o n t e x t ; 
         } 
 
         v a r   c o n t e x t   =   { } ; 
 
         f o r   ( v a r   k e y   i n   c o n t e x t T y p e s )   { 
             c o n t e x t [ k e y ]   =   u n m a s k e d C o n t e x t [ k e y ] ; 
         } 
 
         { 
             v a r   n a m e   =   g e t C o m p o n e n t N a m e F r o m F i b e r ( w o r k I n P r o g r e s s )   | |   ' U n k n o w n ' ; 
             c h e c k P r o p T y p e s ( c o n t e x t T y p e s ,   c o n t e x t ,   ' c o n t e x t ' ,   n a m e ) ; 
         }   / /   C a c h e   u n m a s k e d   c o n t e x t   s o   w e   c a n   a v o i d   r e c r e a t i n g   m a s k e d   c o n t e x t   u n l e s s   n e c e s s a r y . 
         / /   C o n t e x t   i s   c r e a t e d   b e f o r e   t h e   c l a s s   c o m p o n e n t   i s   i n s t a n t i a t e d   s o   c h e c k   f o r   i n s t a n c e . 
 
 
         i f   ( i n s t a n c e )   { 
             c a c h e C o n t e x t ( w o r k I n P r o g r e s s ,   u n m a s k e d C o n t e x t ,   c o n t e x t ) ; 
         } 
 
         r e t u r n   c o n t e x t ; 
     } 
 } 
 
 f u n c t i o n   h a s C o n t e x t C h a n g e d ( )   { 
     { 
         r e t u r n   d i d P e r f o r m W o r k S t a c k C u r s o r . c u r r e n t ; 
     } 
 } 
 
 f u n c t i o n   i s C o n t e x t P r o v i d e r ( t y p e )   { 
     { 
         v a r   c h i l d C o n t e x t T y p e s   =   t y p e . c h i l d C o n t e x t T y p e s ; 
         r e t u r n   c h i l d C o n t e x t T y p e s   ! = =   n u l l   & &   c h i l d C o n t e x t T y p e s   ! = =   u n d e f i n e d ; 
     } 
 } 
 
 f u n c t i o n   p o p C o n t e x t ( f i b e r )   { 
     { 
         p o p ( d i d P e r f o r m W o r k S t a c k C u r s o r ,   f i b e r ) ; 
         p o p ( c o n t e x t S t a c k C u r s o r ,   f i b e r ) ; 
     } 
 } 
 
 f u n c t i o n   p o p T o p L e v e l C o n t e x t O b j e c t ( f i b e r )   { 
     { 
         p o p ( d i d P e r f o r m W o r k S t a c k C u r s o r ,   f i b e r ) ; 
         p o p ( c o n t e x t S t a c k C u r s o r ,   f i b e r ) ; 
     } 
 } 
 
 f u n c t i o n   p u s h T o p L e v e l C o n t e x t O b j e c t ( f i b e r ,   c o n t e x t ,   d i d C h a n g e )   { 
     { 
         i f   ( c o n t e x t S t a c k C u r s o r . c u r r e n t   ! = =   e m p t y C o n t e x t O b j e c t )   { 
             t h r o w   n e w   E r r o r ( ' U n e x p e c t e d   c o n t e x t   f o u n d   o n   s t a c k .   '   +   ' T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
         } 
 
         p u s h ( c o n t e x t S t a c k C u r s o r ,   c o n t e x t ,   f i b e r ) ; 
         p u s h ( d i d P e r f o r m W o r k S t a c k C u r s o r ,   d i d C h a n g e ,   f i b e r ) ; 
     } 
 } 
 
 f u n c t i o n   p r o c e s s C h i l d C o n t e x t ( f i b e r ,   t y p e ,   p a r e n t C o n t e x t )   { 
     { 
         v a r   i n s t a n c e   =   f i b e r . s t a t e N o d e ; 
         v a r   c h i l d C o n t e x t T y p e s   =   t y p e . c h i l d C o n t e x t T y p e s ;   / /   T O D O   ( b v a u g h n )   R e p l a c e   t h i s   b e h a v i o r   w i t h   a n   i n v a r i a n t ( )   i n   t h e   f u t u r e . 
         / /   I t   h a s   o n l y   b e e n   a d d e d   i n   F i b e r   t o   m a t c h   t h e   ( u n i n t e n t i o n a l )   b e h a v i o r   i n   S t a c k . 
 
         i f   ( t y p e o f   i n s t a n c e . g e t C h i l d C o n t e x t   ! = =   ' f u n c t i o n ' )   { 
             { 
                 v a r   c o m p o n e n t N a m e   =   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i b e r )   | |   ' U n k n o w n ' ; 
 
                 i f   ( ! w a r n e d A b o u t M i s s i n g G e t C h i l d C o n t e x t [ c o m p o n e n t N a m e ] )   { 
                     w a r n e d A b o u t M i s s i n g G e t C h i l d C o n t e x t [ c o m p o n e n t N a m e ]   =   t r u e ; 
 
                     e r r o r ( ' % s . c h i l d C o n t e x t T y p e s   i s   s p e c i f i e d   b u t   t h e r e   i s   n o   g e t C h i l d C o n t e x t ( )   m e t h o d   '   +   ' o n   t h e   i n s t a n c e .   Y o u   c a n   e i t h e r   d e f i n e   g e t C h i l d C o n t e x t ( )   o n   % s   o r   r e m o v e   '   +   ' c h i l d C o n t e x t T y p e s   f r o m   i t . ' ,   c o m p o n e n t N a m e ,   c o m p o n e n t N a m e ) ; 
                 } 
             } 
 
             r e t u r n   p a r e n t C o n t e x t ; 
         } 
 
         v a r   c h i l d C o n t e x t   =   i n s t a n c e . g e t C h i l d C o n t e x t ( ) ; 
 
         f o r   ( v a r   c o n t e x t K e y   i n   c h i l d C o n t e x t )   { 
             i f   ( ! ( c o n t e x t K e y   i n   c h i l d C o n t e x t T y p e s ) )   { 
                 t h r o w   n e w   E r r o r ( ( g e t C o m p o n e n t N a m e F r o m F i b e r ( f i b e r )   | |   ' U n k n o w n ' )   +   " . g e t C h i l d C o n t e x t ( ) :   k e y   \ " "   +   c o n t e x t K e y   +   " \ "   i s   n o t   d e f i n e d   i n   c h i l d C o n t e x t T y p e s . " ) ; 
             } 
         } 
 
         { 
             v a r   n a m e   =   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i b e r )   | |   ' U n k n o w n ' ; 
             c h e c k P r o p T y p e s ( c h i l d C o n t e x t T y p e s ,   c h i l d C o n t e x t ,   ' c h i l d   c o n t e x t ' ,   n a m e ) ; 
         } 
 
         r e t u r n   a s s i g n ( { } ,   p a r e n t C o n t e x t ,   c h i l d C o n t e x t ) ; 
     } 
 } 
 
 f u n c t i o n   p u s h C o n t e x t P r o v i d e r ( w o r k I n P r o g r e s s )   { 
     { 
         v a r   i n s t a n c e   =   w o r k I n P r o g r e s s . s t a t e N o d e ;   / /   W e   p u s h   t h e   c o n t e x t   a s   e a r l y   a s   p o s s i b l e   t o   e n s u r e   s t a c k   i n t e g r i t y . 
         / /   I f   t h e   i n s t a n c e   d o e s   n o t   e x i s t   y e t ,   w e   w i l l   p u s h   n u l l   a t   f i r s t , 
         / /   a n d   r e p l a c e   i t   o n   t h e   s t a c k   l a t e r   w h e n   i n v a l i d a t i n g   t h e   c o n t e x t . 
 
         v a r   m e m o i z e d M e r g e d C h i l d C o n t e x t   =   i n s t a n c e   & &   i n s t a n c e . _ _ r e a c t I n t e r n a l M e m o i z e d M e r g e d C h i l d C o n t e x t   | |   e m p t y C o n t e x t O b j e c t ;   / /   R e m e m b e r   t h e   p a r e n t   c o n t e x t   s o   w e   c a n   m e r g e   w i t h   i t   l a t e r . 
         / /   I n h e r i t   t h e   p a r e n t ' s   d i d - p e r f o r m - w o r k   v a l u e   t o   a v o i d   i n a d v e r t e n t l y   b l o c k i n g   u p d a t e s . 
 
         p r e v i o u s C o n t e x t   =   c o n t e x t S t a c k C u r s o r . c u r r e n t ; 
         p u s h ( c o n t e x t S t a c k C u r s o r ,   m e m o i z e d M e r g e d C h i l d C o n t e x t ,   w o r k I n P r o g r e s s ) ; 
         p u s h ( d i d P e r f o r m W o r k S t a c k C u r s o r ,   d i d P e r f o r m W o r k S t a c k C u r s o r . c u r r e n t ,   w o r k I n P r o g r e s s ) ; 
         r e t u r n   t r u e ; 
     } 
 } 
 
 f u n c t i o n   i n v a l i d a t e C o n t e x t P r o v i d e r ( w o r k I n P r o g r e s s ,   t y p e ,   d i d C h a n g e )   { 
     { 
         v a r   i n s t a n c e   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
 
         i f   ( ! i n s t a n c e )   { 
             t h r o w   n e w   E r r o r ( ' E x p e c t e d   t o   h a v e   a n   i n s t a n c e   b y   t h i s   p o i n t .   '   +   ' T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
         } 
 
         i f   ( d i d C h a n g e )   { 
             / /   M e r g e   p a r e n t   a n d   o w n   c o n t e x t . 
             / /   S k i p   t h i s   i f   w e ' r e   n o t   u p d a t i n g   d u e   t o   s C U . 
             / /   T h i s   a v o i d s   u n n e c e s s a r i l y   r e c o m p u t i n g   m e m o i z e d   v a l u e s . 
             v a r   m e r g e d C o n t e x t   =   p r o c e s s C h i l d C o n t e x t ( w o r k I n P r o g r e s s ,   t y p e ,   p r e v i o u s C o n t e x t ) ; 
             i n s t a n c e . _ _ r e a c t I n t e r n a l M e m o i z e d M e r g e d C h i l d C o n t e x t   =   m e r g e d C o n t e x t ;   / /   R e p l a c e   t h e   o l d   ( o r   e m p t y )   c o n t e x t   w i t h   t h e   n e w   o n e . 
             / /   I t   i s   i m p o r t a n t   t o   u n w i n d   t h e   c o n t e x t   i n   t h e   r e v e r s e   o r d e r . 
 
             p o p ( d i d P e r f o r m W o r k S t a c k C u r s o r ,   w o r k I n P r o g r e s s ) ; 
             p o p ( c o n t e x t S t a c k C u r s o r ,   w o r k I n P r o g r e s s ) ;   / /   N o w   p u s h   t h e   n e w   c o n t e x t   a n d   m a r k   t h a t   i t   h a s   c h a n g e d . 
 
             p u s h ( c o n t e x t S t a c k C u r s o r ,   m e r g e d C o n t e x t ,   w o r k I n P r o g r e s s ) ; 
             p u s h ( d i d P e r f o r m W o r k S t a c k C u r s o r ,   d i d C h a n g e ,   w o r k I n P r o g r e s s ) ; 
         }   e l s e   { 
             p o p ( d i d P e r f o r m W o r k S t a c k C u r s o r ,   w o r k I n P r o g r e s s ) ; 
             p u s h ( d i d P e r f o r m W o r k S t a c k C u r s o r ,   d i d C h a n g e ,   w o r k I n P r o g r e s s ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   f i n d C u r r e n t U n m a s k e d C o n t e x t ( f i b e r )   { 
     { 
         / /   C u r r e n t l y   t h i s   i s   o n l y   u s e d   w i t h   r e n d e r S u b t r e e I n t o C o n t a i n e r ;   n o t   s u r e   i f   i t 
         / /   m a k e s   s e n s e   e l s e w h e r e 
         i f   ( ! i s F i b e r M o u n t e d ( f i b e r )   | |   f i b e r . t a g   ! = =   C l a s s C o m p o n e n t )   { 
             t h r o w   n e w   E r r o r ( ' E x p e c t e d   s u b t r e e   p a r e n t   t o   b e   a   m o u n t e d   c l a s s   c o m p o n e n t .   '   +   ' T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
         } 
 
         v a r   n o d e   =   f i b e r ; 
 
         d o   { 
             s w i t c h   ( n o d e . t a g )   { 
                 c a s e   H o s t R o o t : 
                     r e t u r n   n o d e . s t a t e N o d e . c o n t e x t ; 
 
                 c a s e   C l a s s C o m p o n e n t : 
                     { 
                         v a r   C o m p o n e n t   =   n o d e . t y p e ; 
 
                         i f   ( i s C o n t e x t P r o v i d e r ( C o m p o n e n t ) )   { 
                             r e t u r n   n o d e . s t a t e N o d e . _ _ r e a c t I n t e r n a l M e m o i z e d M e r g e d C h i l d C o n t e x t ; 
                         } 
 
                         b r e a k ; 
                     } 
             } 
 
             n o d e   =   n o d e . r e t u r n ; 
         }   w h i l e   ( n o d e   ! = =   n u l l ) ; 
 
         t h r o w   n e w   E r r o r ( ' F o u n d   u n e x p e c t e d   d e t a c h e d   s u b t r e e   p a r e n t .   '   +   ' T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
     } 
 } 
 
 v a r   L e g a c y R o o t   =   0 ; 
 v a r   C o n c u r r e n t R o o t   =   1 ; 
 
 v a r   s y n c Q u e u e   =   n u l l ; 
 v a r   i n c l u d e s L e g a c y S y n c C a l l b a c k s   =   f a l s e ; 
 v a r   i s F l u s h i n g S y n c Q u e u e   =   f a l s e ; 
 f u n c t i o n   s c h e d u l e S y n c C a l l b a c k ( c a l l b a c k )   { 
     / /   P u s h   t h i s   c a l l b a c k   i n t o   a n   i n t e r n a l   q u e u e .   W e ' l l   f l u s h   t h e s e   e i t h e r   i n 
     / /   t h e   n e x t   t i c k ,   o r   e a r l i e r   i f   s o m e t h i n g   c a l l s   ` f l u s h S y n c C a l l b a c k Q u e u e ` . 
     i f   ( s y n c Q u e u e   = = =   n u l l )   { 
         s y n c Q u e u e   =   [ c a l l b a c k ] ; 
     }   e l s e   { 
         / /   P u s h   o n t o   e x i s t i n g   q u e u e .   D o n ' t   n e e d   t o   s c h e d u l e   a   c a l l b a c k   b e c a u s e 
         / /   w e   a l r e a d y   s c h e d u l e d   o n e   w h e n   w e   c r e a t e d   t h e   q u e u e . 
         s y n c Q u e u e . p u s h ( c a l l b a c k ) ; 
     } 
 } 
 f u n c t i o n   s c h e d u l e L e g a c y S y n c C a l l b a c k ( c a l l b a c k )   { 
     i n c l u d e s L e g a c y S y n c C a l l b a c k s   =   t r u e ; 
     s c h e d u l e S y n c C a l l b a c k ( c a l l b a c k ) ; 
 } 
 f u n c t i o n   f l u s h S y n c C a l l b a c k s O n l y I n L e g a c y M o d e ( )   { 
     / /   O n l y   f l u s h e s   t h e   q u e u e   i f   t h e r e ' s   a   l e g a c y   s y n c   c a l l b a c k   s c h e d u l e d . 
     / /   T O D O :   T h e r e ' s   o n l y   a   s i n g l e   t y p e   o f   c a l l b a c k :   p e r f o r m S y n c O n W o r k O n R o o t .   S o 
     / /   i t   m i g h t   m a k e   m o r e   s e n s e   f o r   t h e   q u e u e   t o   b e   a   l i s t   o f   r o o t s   i n s t e a d   o f   a 
     / /   l i s t   o f   g e n e r i c   c a l l b a c k s .   T h e n   w e   c a n   h a v e   t w o :   o n e   f o r   l e g a c y   r o o t s ,   o n e 
     / /   f o r   c o n c u r r e n t   r o o t s .   A n d   t h i s   m e t h o d   w o u l d   o n l y   f l u s h   t h e   l e g a c y   o n e s . 
     i f   ( i n c l u d e s L e g a c y S y n c C a l l b a c k s )   { 
         f l u s h S y n c C a l l b a c k s ( ) ; 
     } 
 } 
 f u n c t i o n   f l u s h S y n c C a l l b a c k s ( )   { 
     i f   ( ! i s F l u s h i n g S y n c Q u e u e   & &   s y n c Q u e u e   ! = =   n u l l )   { 
         / /   P r e v e n t   r e - e n t r a n c e . 
         i s F l u s h i n g S y n c Q u e u e   =   t r u e ; 
         v a r   i   =   0 ; 
         v a r   p r e v i o u s U p d a t e P r i o r i t y   =   g e t C u r r e n t U p d a t e P r i o r i t y ( ) ; 
 
         t r y   { 
             v a r   i s S y n c   =   t r u e ; 
             v a r   q u e u e   =   s y n c Q u e u e ;   / /   T O D O :   I s   t h i s   n e c e s s a r y   a n y m o r e ?   T h e   o n l y   u s e r   c o d e   t h a t   r u n s   i n   t h i s 
             / /   q u e u e   i s   i n   t h e   r e n d e r   o r   c o m m i t   p h a s e s . 
 
             s e t C u r r e n t U p d a t e P r i o r i t y ( D i s c r e t e E v e n t P r i o r i t y ) ; 
 
             f o r   ( ;   i   <   q u e u e . l e n g t h ;   i + + )   { 
                 v a r   c a l l b a c k   =   q u e u e [ i ] ; 
 
                 d o   { 
                     c a l l b a c k   =   c a l l b a c k ( i s S y n c ) ; 
                 }   w h i l e   ( c a l l b a c k   ! = =   n u l l ) ; 
             } 
 
             s y n c Q u e u e   =   n u l l ; 
             i n c l u d e s L e g a c y S y n c C a l l b a c k s   =   f a l s e ; 
         }   c a t c h   ( e r r o r )   { 
             / /   I f   s o m e t h i n g   t h r o w s ,   l e a v e   t h e   r e m a i n i n g   c a l l b a c k s   o n   t h e   q u e u e . 
             i f   ( s y n c Q u e u e   ! = =   n u l l )   { 
                 s y n c Q u e u e   =   s y n c Q u e u e . s l i c e ( i   +   1 ) ; 
             }   / /   R e s u m e   f l u s h i n g   i n   t h e   n e x t   t i c k 
 
 
             s c h e d u l e C a l l b a c k ( I m m e d i a t e P r i o r i t y ,   f l u s h S y n c C a l l b a c k s ) ; 
             t h r o w   e r r o r ; 
         }   f i n a l l y   { 
             s e t C u r r e n t U p d a t e P r i o r i t y ( p r e v i o u s U p d a t e P r i o r i t y ) ; 
             i s F l u s h i n g S y n c Q u e u e   =   f a l s e ; 
         } 
     } 
 
     r e t u r n   n u l l ; 
 } 
 
 v a r   R e a c t C u r r e n t B a t c h C o n f i g $ 1   =   R e a c t S h a r e d I n t e r n a l s . R e a c t C u r r e n t B a t c h C o n f i g ; 
 v a r   N o T r a n s i t i o n   =   n u l l ; 
 f u n c t i o n   r e q u e s t C u r r e n t T r a n s i t i o n ( )   { 
     r e t u r n   R e a c t C u r r e n t B a t c h C o n f i g $ 1 . t r a n s i t i o n ; 
 } 
 
 v a r   R e a c t S t r i c t M o d e W a r n i n g s   =   { 
     r e c o r d U n s a f e L i f e c y c l e W a r n i n g s :   f u n c t i o n   ( f i b e r ,   i n s t a n c e )   { } , 
     f l u s h P e n d i n g U n s a f e L i f e c y c l e W a r n i n g s :   f u n c t i o n   ( )   { } , 
     r e c o r d L e g a c y C o n t e x t W a r n i n g :   f u n c t i o n   ( f i b e r ,   i n s t a n c e )   { } , 
     f l u s h L e g a c y C o n t e x t W a r n i n g :   f u n c t i o n   ( )   { } , 
     d i s c a r d P e n d i n g W a r n i n g s :   f u n c t i o n   ( )   { } 
 } ; 
 
 { 
     v a r   f i n d S t r i c t R o o t   =   f u n c t i o n   ( f i b e r )   { 
         v a r   m a y b e S t r i c t R o o t   =   n u l l ; 
         v a r   n o d e   =   f i b e r ; 
 
         w h i l e   ( n o d e   ! = =   n u l l )   { 
             i f   ( n o d e . m o d e   &   S t r i c t L e g a c y M o d e )   { 
                 m a y b e S t r i c t R o o t   =   n o d e ; 
             } 
 
             n o d e   =   n o d e . r e t u r n ; 
         } 
 
         r e t u r n   m a y b e S t r i c t R o o t ; 
     } ; 
 
     v a r   s e t T o S o r t e d S t r i n g   =   f u n c t i o n   ( s e t )   { 
         v a r   a r r a y   =   [ ] ; 
         s e t . f o r E a c h ( f u n c t i o n   ( v a l u e )   { 
             a r r a y . p u s h ( v a l u e ) ; 
         } ) ; 
         r e t u r n   a r r a y . s o r t ( ) . j o i n ( ' ,   ' ) ; 
     } ; 
 
     v a r   p e n d i n g C o m p o n e n t W i l l M o u n t W a r n i n g s   =   [ ] ; 
     v a r   p e n d i n g U N S A F E _ C o m p o n e n t W i l l M o u n t W a r n i n g s   =   [ ] ; 
     v a r   p e n d i n g C o m p o n e n t W i l l R e c e i v e P r o p s W a r n i n g s   =   [ ] ; 
     v a r   p e n d i n g U N S A F E _ C o m p o n e n t W i l l R e c e i v e P r o p s W a r n i n g s   =   [ ] ; 
     v a r   p e n d i n g C o m p o n e n t W i l l U p d a t e W a r n i n g s   =   [ ] ; 
     v a r   p e n d i n g U N S A F E _ C o m p o n e n t W i l l U p d a t e W a r n i n g s   =   [ ] ;   / /   T r a c k s   c o m p o n e n t s   w e   h a v e   a l r e a d y   w a r n e d   a b o u t . 
 
     v a r   d i d W a r n A b o u t U n s a f e L i f e c y c l e s   =   n e w   S e t ( ) ; 
 
     R e a c t S t r i c t M o d e W a r n i n g s . r e c o r d U n s a f e L i f e c y c l e W a r n i n g s   =   f u n c t i o n   ( f i b e r ,   i n s t a n c e )   { 
         / /   D e d u p e   s t r a t e g y :   W a r n   o n c e   p e r   c o m p o n e n t . 
         i f   ( d i d W a r n A b o u t U n s a f e L i f e c y c l e s . h a s ( f i b e r . t y p e ) )   { 
             r e t u r n ; 
         } 
 
         i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t W i l l M o u n t   = = =   ' f u n c t i o n '   & &   / /   D o n ' t   w a r n   a b o u t   r e a c t - l i f e c y c l e s - c o m p a t   p o l y f i l l e d   c o m p o n e n t s . 
         i n s t a n c e . c o m p o n e n t W i l l M o u n t . _ _ s u p p r e s s D e p r e c a t i o n W a r n i n g   ! = =   t r u e )   { 
             p e n d i n g C o m p o n e n t W i l l M o u n t W a r n i n g s . p u s h ( f i b e r ) ; 
         } 
 
         i f   ( f i b e r . m o d e   &   S t r i c t L e g a c y M o d e   & &   t y p e o f   i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l M o u n t   = = =   ' f u n c t i o n ' )   { 
             p e n d i n g U N S A F E _ C o m p o n e n t W i l l M o u n t W a r n i n g s . p u s h ( f i b e r ) ; 
         } 
 
         i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t W i l l R e c e i v e P r o p s   = = =   ' f u n c t i o n '   & &   i n s t a n c e . c o m p o n e n t W i l l R e c e i v e P r o p s . _ _ s u p p r e s s D e p r e c a t i o n W a r n i n g   ! = =   t r u e )   { 
             p e n d i n g C o m p o n e n t W i l l R e c e i v e P r o p s W a r n i n g s . p u s h ( f i b e r ) ; 
         } 
 
         i f   ( f i b e r . m o d e   &   S t r i c t L e g a c y M o d e   & &   t y p e o f   i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l R e c e i v e P r o p s   = = =   ' f u n c t i o n ' )   { 
             p e n d i n g U N S A F E _ C o m p o n e n t W i l l R e c e i v e P r o p s W a r n i n g s . p u s h ( f i b e r ) ; 
         } 
 
         i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t W i l l U p d a t e   = = =   ' f u n c t i o n '   & &   i n s t a n c e . c o m p o n e n t W i l l U p d a t e . _ _ s u p p r e s s D e p r e c a t i o n W a r n i n g   ! = =   t r u e )   { 
             p e n d i n g C o m p o n e n t W i l l U p d a t e W a r n i n g s . p u s h ( f i b e r ) ; 
         } 
 
         i f   ( f i b e r . m o d e   &   S t r i c t L e g a c y M o d e   & &   t y p e o f   i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l U p d a t e   = = =   ' f u n c t i o n ' )   { 
             p e n d i n g U N S A F E _ C o m p o n e n t W i l l U p d a t e W a r n i n g s . p u s h ( f i b e r ) ; 
         } 
     } ; 
 
     R e a c t S t r i c t M o d e W a r n i n g s . f l u s h P e n d i n g U n s a f e L i f e c y c l e W a r n i n g s   =   f u n c t i o n   ( )   { 
         / /   W e   d o   a n   i n i t i a l   p a s s   t o   g a t h e r   c o m p o n e n t   n a m e s 
         v a r   c o m p o n e n t W i l l M o u n t U n i q u e N a m e s   =   n e w   S e t ( ) ; 
 
         i f   ( p e n d i n g C o m p o n e n t W i l l M o u n t W a r n i n g s . l e n g t h   >   0 )   { 
             p e n d i n g C o m p o n e n t W i l l M o u n t W a r n i n g s . f o r E a c h ( f u n c t i o n   ( f i b e r )   { 
                 c o m p o n e n t W i l l M o u n t U n i q u e N a m e s . a d d ( g e t C o m p o n e n t N a m e F r o m F i b e r ( f i b e r )   | |   ' C o m p o n e n t ' ) ; 
                 d i d W a r n A b o u t U n s a f e L i f e c y c l e s . a d d ( f i b e r . t y p e ) ; 
             } ) ; 
             p e n d i n g C o m p o n e n t W i l l M o u n t W a r n i n g s   =   [ ] ; 
         } 
 
         v a r   U N S A F E _ c o m p o n e n t W i l l M o u n t U n i q u e N a m e s   =   n e w   S e t ( ) ; 
 
         i f   ( p e n d i n g U N S A F E _ C o m p o n e n t W i l l M o u n t W a r n i n g s . l e n g t h   >   0 )   { 
             p e n d i n g U N S A F E _ C o m p o n e n t W i l l M o u n t W a r n i n g s . f o r E a c h ( f u n c t i o n   ( f i b e r )   { 
                 U N S A F E _ c o m p o n e n t W i l l M o u n t U n i q u e N a m e s . a d d ( g e t C o m p o n e n t N a m e F r o m F i b e r ( f i b e r )   | |   ' C o m p o n e n t ' ) ; 
                 d i d W a r n A b o u t U n s a f e L i f e c y c l e s . a d d ( f i b e r . t y p e ) ; 
             } ) ; 
             p e n d i n g U N S A F E _ C o m p o n e n t W i l l M o u n t W a r n i n g s   =   [ ] ; 
         } 
 
         v a r   c o m p o n e n t W i l l R e c e i v e P r o p s U n i q u e N a m e s   =   n e w   S e t ( ) ; 
 
         i f   ( p e n d i n g C o m p o n e n t W i l l R e c e i v e P r o p s W a r n i n g s . l e n g t h   >   0 )   { 
             p e n d i n g C o m p o n e n t W i l l R e c e i v e P r o p s W a r n i n g s . f o r E a c h ( f u n c t i o n   ( f i b e r )   { 
                 c o m p o n e n t W i l l R e c e i v e P r o p s U n i q u e N a m e s . a d d ( g e t C o m p o n e n t N a m e F r o m F i b e r ( f i b e r )   | |   ' C o m p o n e n t ' ) ; 
                 d i d W a r n A b o u t U n s a f e L i f e c y c l e s . a d d ( f i b e r . t y p e ) ; 
             } ) ; 
             p e n d i n g C o m p o n e n t W i l l R e c e i v e P r o p s W a r n i n g s   =   [ ] ; 
         } 
 
         v a r   U N S A F E _ c o m p o n e n t W i l l R e c e i v e P r o p s U n i q u e N a m e s   =   n e w   S e t ( ) ; 
 
         i f   ( p e n d i n g U N S A F E _ C o m p o n e n t W i l l R e c e i v e P r o p s W a r n i n g s . l e n g t h   >   0 )   { 
             p e n d i n g U N S A F E _ C o m p o n e n t W i l l R e c e i v e P r o p s W a r n i n g s . f o r E a c h ( f u n c t i o n   ( f i b e r )   { 
                 U N S A F E _ c o m p o n e n t W i l l R e c e i v e P r o p s U n i q u e N a m e s . a d d ( g e t C o m p o n e n t N a m e F r o m F i b e r ( f i b e r )   | |   ' C o m p o n e n t ' ) ; 
                 d i d W a r n A b o u t U n s a f e L i f e c y c l e s . a d d ( f i b e r . t y p e ) ; 
             } ) ; 
             p e n d i n g U N S A F E _ C o m p o n e n t W i l l R e c e i v e P r o p s W a r n i n g s   =   [ ] ; 
         } 
 
         v a r   c o m p o n e n t W i l l U p d a t e U n i q u e N a m e s   =   n e w   S e t ( ) ; 
 
         i f   ( p e n d i n g C o m p o n e n t W i l l U p d a t e W a r n i n g s . l e n g t h   >   0 )   { 
             p e n d i n g C o m p o n e n t W i l l U p d a t e W a r n i n g s . f o r E a c h ( f u n c t i o n   ( f i b e r )   { 
                 c o m p o n e n t W i l l U p d a t e U n i q u e N a m e s . a d d ( g e t C o m p o n e n t N a m e F r o m F i b e r ( f i b e r )   | |   ' C o m p o n e n t ' ) ; 
                 d i d W a r n A b o u t U n s a f e L i f e c y c l e s . a d d ( f i b e r . t y p e ) ; 
             } ) ; 
             p e n d i n g C o m p o n e n t W i l l U p d a t e W a r n i n g s   =   [ ] ; 
         } 
 
         v a r   U N S A F E _ c o m p o n e n t W i l l U p d a t e U n i q u e N a m e s   =   n e w   S e t ( ) ; 
 
         i f   ( p e n d i n g U N S A F E _ C o m p o n e n t W i l l U p d a t e W a r n i n g s . l e n g t h   >   0 )   { 
             p e n d i n g U N S A F E _ C o m p o n e n t W i l l U p d a t e W a r n i n g s . f o r E a c h ( f u n c t i o n   ( f i b e r )   { 
                 U N S A F E _ c o m p o n e n t W i l l U p d a t e U n i q u e N a m e s . a d d ( g e t C o m p o n e n t N a m e F r o m F i b e r ( f i b e r )   | |   ' C o m p o n e n t ' ) ; 
                 d i d W a r n A b o u t U n s a f e L i f e c y c l e s . a d d ( f i b e r . t y p e ) ; 
             } ) ; 
             p e n d i n g U N S A F E _ C o m p o n e n t W i l l U p d a t e W a r n i n g s   =   [ ] ; 
         }   / /   F i n a l l y ,   w e   f l u s h   a l l   t h e   w a r n i n g s 
         / /   U N S A F E _   o n e s   b e f o r e   t h e   d e p r e c a t e d   o n e s ,   s i n c e   t h e y ' l l   b e   ' l o u d e r ' 
 
 
         i f   ( U N S A F E _ c o m p o n e n t W i l l M o u n t U n i q u e N a m e s . s i z e   >   0 )   { 
             v a r   s o r t e d N a m e s   =   s e t T o S o r t e d S t r i n g ( U N S A F E _ c o m p o n e n t W i l l M o u n t U n i q u e N a m e s ) ; 
 
             e r r o r ( ' U s i n g   U N S A F E _ c o m p o n e n t W i l l M o u n t   i n   s t r i c t   m o d e   i s   n o t   r e c o m m e n d e d   a n d   m a y   i n d i c a t e   b u g s   i n   y o u r   c o d e .   '   +   ' S e e   h t t p s : / / r e a c t j s . o r g / l i n k / u n s a f e - c o m p o n e n t - l i f e c y c l e s   f o r   d e t a i l s . \ n \ n '   +   ' *   M o v e   c o d e   w i t h   s i d e   e f f e c t s   t o   c o m p o n e n t D i d M o u n t ,   a n d   s e t   i n i t i a l   s t a t e   i n   t h e   c o n s t r u c t o r . \ n '   +   ' \ n P l e a s e   u p d a t e   t h e   f o l l o w i n g   c o m p o n e n t s :   % s ' ,   s o r t e d N a m e s ) ; 
         } 
 
         i f   ( U N S A F E _ c o m p o n e n t W i l l R e c e i v e P r o p s U n i q u e N a m e s . s i z e   >   0 )   { 
             v a r   _ s o r t e d N a m e s   =   s e t T o S o r t e d S t r i n g ( U N S A F E _ c o m p o n e n t W i l l R e c e i v e P r o p s U n i q u e N a m e s ) ; 
 
             e r r o r ( ' U s i n g   U N S A F E _ c o m p o n e n t W i l l R e c e i v e P r o p s   i n   s t r i c t   m o d e   i s   n o t   r e c o m m e n d e d   '   +   ' a n d   m a y   i n d i c a t e   b u g s   i n   y o u r   c o d e .   '   +   ' S e e   h t t p s : / / r e a c t j s . o r g / l i n k / u n s a f e - c o m p o n e n t - l i f e c y c l e s   f o r   d e t a i l s . \ n \ n '   +   ' *   M o v e   d a t a   f e t c h i n g   c o d e   o r   s i d e   e f f e c t s   t o   c o m p o n e n t D i d U p d a t e . \ n '   +   " *   I f   y o u ' r e   u p d a t i n g   s t a t e   w h e n e v e r   p r o p s   c h a n g e ,   "   +   ' r e f a c t o r   y o u r   c o d e   t o   u s e   m e m o i z a t i o n   t e c h n i q u e s   o r   m o v e   i t   t o   '   +   ' s t a t i c   g e t D e r i v e d S t a t e F r o m P r o p s .   L e a r n   m o r e   a t :   h t t p s : / / r e a c t j s . o r g / l i n k / d e r i v e d - s t a t e \ n '   +   ' \ n P l e a s e   u p d a t e   t h e   f o l l o w i n g   c o m p o n e n t s :   % s ' ,   _ s o r t e d N a m e s ) ; 
         } 
 
         i f   ( U N S A F E _ c o m p o n e n t W i l l U p d a t e U n i q u e N a m e s . s i z e   >   0 )   { 
             v a r   _ s o r t e d N a m e s 2   =   s e t T o S o r t e d S t r i n g ( U N S A F E _ c o m p o n e n t W i l l U p d a t e U n i q u e N a m e s ) ; 
 
             e r r o r ( ' U s i n g   U N S A F E _ c o m p o n e n t W i l l U p d a t e   i n   s t r i c t   m o d e   i s   n o t   r e c o m m e n d e d   '   +   ' a n d   m a y   i n d i c a t e   b u g s   i n   y o u r   c o d e .   '   +   ' S e e   h t t p s : / / r e a c t j s . o r g / l i n k / u n s a f e - c o m p o n e n t - l i f e c y c l e s   f o r   d e t a i l s . \ n \ n '   +   ' *   M o v e   d a t a   f e t c h i n g   c o d e   o r   s i d e   e f f e c t s   t o   c o m p o n e n t D i d U p d a t e . \ n '   +   ' \ n P l e a s e   u p d a t e   t h e   f o l l o w i n g   c o m p o n e n t s :   % s ' ,   _ s o r t e d N a m e s 2 ) ; 
         } 
 
         i f   ( c o m p o n e n t W i l l M o u n t U n i q u e N a m e s . s i z e   >   0 )   { 
             v a r   _ s o r t e d N a m e s 3   =   s e t T o S o r t e d S t r i n g ( c o m p o n e n t W i l l M o u n t U n i q u e N a m e s ) ; 
 
             w a r n ( ' c o m p o n e n t W i l l M o u n t   h a s   b e e n   r e n a m e d ,   a n d   i s   n o t   r e c o m m e n d e d   f o r   u s e .   '   +   ' S e e   h t t p s : / / r e a c t j s . o r g / l i n k / u n s a f e - c o m p o n e n t - l i f e c y c l e s   f o r   d e t a i l s . \ n \ n '   +   ' *   M o v e   c o d e   w i t h   s i d e   e f f e c t s   t o   c o m p o n e n t D i d M o u n t ,   a n d   s e t   i n i t i a l   s t a t e   i n   t h e   c o n s t r u c t o r . \ n '   +   ' *   R e n a m e   c o m p o n e n t W i l l M o u n t   t o   U N S A F E _ c o m p o n e n t W i l l M o u n t   t o   s u p p r e s s   '   +   ' t h i s   w a r n i n g   i n   n o n - s t r i c t   m o d e .   I n   R e a c t   1 8 . x ,   o n l y   t h e   U N S A F E _   n a m e   w i l l   w o r k .   '   +   ' T o   r e n a m e   a l l   d e p r e c a t e d   l i f e c y c l e s   t o   t h e i r   n e w   n a m e s ,   y o u   c a n   r u n   '   +   ' ` n p x   r e a c t - c o d e m o d   r e n a m e - u n s a f e - l i f e c y c l e s `   i n   y o u r   p r o j e c t   s o u r c e   f o l d e r . \ n '   +   ' \ n P l e a s e   u p d a t e   t h e   f o l l o w i n g   c o m p o n e n t s :   % s ' ,   _ s o r t e d N a m e s 3 ) ; 
         } 
 
         i f   ( c o m p o n e n t W i l l R e c e i v e P r o p s U n i q u e N a m e s . s i z e   >   0 )   { 
             v a r   _ s o r t e d N a m e s 4   =   s e t T o S o r t e d S t r i n g ( c o m p o n e n t W i l l R e c e i v e P r o p s U n i q u e N a m e s ) ; 
 
             w a r n ( ' c o m p o n e n t W i l l R e c e i v e P r o p s   h a s   b e e n   r e n a m e d ,   a n d   i s   n o t   r e c o m m e n d e d   f o r   u s e .   '   +   ' S e e   h t t p s : / / r e a c t j s . o r g / l i n k / u n s a f e - c o m p o n e n t - l i f e c y c l e s   f o r   d e t a i l s . \ n \ n '   +   ' *   M o v e   d a t a   f e t c h i n g   c o d e   o r   s i d e   e f f e c t s   t o   c o m p o n e n t D i d U p d a t e . \ n '   +   " *   I f   y o u ' r e   u p d a t i n g   s t a t e   w h e n e v e r   p r o p s   c h a n g e ,   r e f a c t o r   y o u r   "   +   ' c o d e   t o   u s e   m e m o i z a t i o n   t e c h n i q u e s   o r   m o v e   i t   t o   '   +   ' s t a t i c   g e t D e r i v e d S t a t e F r o m P r o p s .   L e a r n   m o r e   a t :   h t t p s : / / r e a c t j s . o r g / l i n k / d e r i v e d - s t a t e \ n '   +   ' *   R e n a m e   c o m p o n e n t W i l l R e c e i v e P r o p s   t o   U N S A F E _ c o m p o n e n t W i l l R e c e i v e P r o p s   t o   s u p p r e s s   '   +   ' t h i s   w a r n i n g   i n   n o n - s t r i c t   m o d e .   I n   R e a c t   1 8 . x ,   o n l y   t h e   U N S A F E _   n a m e   w i l l   w o r k .   '   +   ' T o   r e n a m e   a l l   d e p r e c a t e d   l i f e c y c l e s   t o   t h e i r   n e w   n a m e s ,   y o u   c a n   r u n   '   +   ' ` n p x   r e a c t - c o d e m o d   r e n a m e - u n s a f e - l i f e c y c l e s `   i n   y o u r   p r o j e c t   s o u r c e   f o l d e r . \ n '   +   ' \ n P l e a s e   u p d a t e   t h e   f o l l o w i n g   c o m p o n e n t s :   % s ' ,   _ s o r t e d N a m e s 4 ) ; 
         } 
 
         i f   ( c o m p o n e n t W i l l U p d a t e U n i q u e N a m e s . s i z e   >   0 )   { 
             v a r   _ s o r t e d N a m e s 5   =   s e t T o S o r t e d S t r i n g ( c o m p o n e n t W i l l U p d a t e U n i q u e N a m e s ) ; 
 
             w a r n ( ' c o m p o n e n t W i l l U p d a t e   h a s   b e e n   r e n a m e d ,   a n d   i s   n o t   r e c o m m e n d e d   f o r   u s e .   '   +   ' S e e   h t t p s : / / r e a c t j s . o r g / l i n k / u n s a f e - c o m p o n e n t - l i f e c y c l e s   f o r   d e t a i l s . \ n \ n '   +   ' *   M o v e   d a t a   f e t c h i n g   c o d e   o r   s i d e   e f f e c t s   t o   c o m p o n e n t D i d U p d a t e . \ n '   +   ' *   R e n a m e   c o m p o n e n t W i l l U p d a t e   t o   U N S A F E _ c o m p o n e n t W i l l U p d a t e   t o   s u p p r e s s   '   +   ' t h i s   w a r n i n g   i n   n o n - s t r i c t   m o d e .   I n   R e a c t   1 8 . x ,   o n l y   t h e   U N S A F E _   n a m e   w i l l   w o r k .   '   +   ' T o   r e n a m e   a l l   d e p r e c a t e d   l i f e c y c l e s   t o   t h e i r   n e w   n a m e s ,   y o u   c a n   r u n   '   +   ' ` n p x   r e a c t - c o d e m o d   r e n a m e - u n s a f e - l i f e c y c l e s `   i n   y o u r   p r o j e c t   s o u r c e   f o l d e r . \ n '   +   ' \ n P l e a s e   u p d a t e   t h e   f o l l o w i n g   c o m p o n e n t s :   % s ' ,   _ s o r t e d N a m e s 5 ) ; 
         } 
     } ; 
 
     v a r   p e n d i n g L e g a c y C o n t e x t W a r n i n g   =   n e w   M a p ( ) ;   / /   T r a c k s   c o m p o n e n t s   w e   h a v e   a l r e a d y   w a r n e d   a b o u t . 
 
     v a r   d i d W a r n A b o u t L e g a c y C o n t e x t   =   n e w   S e t ( ) ; 
 
     R e a c t S t r i c t M o d e W a r n i n g s . r e c o r d L e g a c y C o n t e x t W a r n i n g   =   f u n c t i o n   ( f i b e r ,   i n s t a n c e )   { 
         v a r   s t r i c t R o o t   =   f i n d S t r i c t R o o t ( f i b e r ) ; 
 
         i f   ( s t r i c t R o o t   = = =   n u l l )   { 
             e r r o r ( ' E x p e c t e d   t o   f i n d   a   S t r i c t M o d e   c o m p o n e n t   i n   a   s t r i c t   m o d e   t r e e .   '   +   ' T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
 
             r e t u r n ; 
         }   / /   D e d u p   s t r a t e g y :   W a r n   o n c e   p e r   c o m p o n e n t . 
 
 
         i f   ( d i d W a r n A b o u t L e g a c y C o n t e x t . h a s ( f i b e r . t y p e ) )   { 
             r e t u r n ; 
         } 
 
         v a r   w a r n i n g s F o r R o o t   =   p e n d i n g L e g a c y C o n t e x t W a r n i n g . g e t ( s t r i c t R o o t ) ; 
 
         i f   ( f i b e r . t y p e . c o n t e x t T y p e s   ! =   n u l l   | |   f i b e r . t y p e . c h i l d C o n t e x t T y p e s   ! =   n u l l   | |   i n s t a n c e   ! = =   n u l l   & &   t y p e o f   i n s t a n c e . g e t C h i l d C o n t e x t   = = =   ' f u n c t i o n ' )   { 
             i f   ( w a r n i n g s F o r R o o t   = = =   u n d e f i n e d )   { 
                 w a r n i n g s F o r R o o t   =   [ ] ; 
                 p e n d i n g L e g a c y C o n t e x t W a r n i n g . s e t ( s t r i c t R o o t ,   w a r n i n g s F o r R o o t ) ; 
             } 
 
             w a r n i n g s F o r R o o t . p u s h ( f i b e r ) ; 
         } 
     } ; 
 
     R e a c t S t r i c t M o d e W a r n i n g s . f l u s h L e g a c y C o n t e x t W a r n i n g   =   f u n c t i o n   ( )   { 
         p e n d i n g L e g a c y C o n t e x t W a r n i n g . f o r E a c h ( f u n c t i o n   ( f i b e r A r r a y ,   s t r i c t R o o t )   { 
             i f   ( f i b e r A r r a y . l e n g t h   = = =   0 )   { 
                 r e t u r n ; 
             } 
 
             v a r   f i r s t F i b e r   =   f i b e r A r r a y [ 0 ] ; 
             v a r   u n i q u e N a m e s   =   n e w   S e t ( ) ; 
             f i b e r A r r a y . f o r E a c h ( f u n c t i o n   ( f i b e r )   { 
                 u n i q u e N a m e s . a d d ( g e t C o m p o n e n t N a m e F r o m F i b e r ( f i b e r )   | |   ' C o m p o n e n t ' ) ; 
                 d i d W a r n A b o u t L e g a c y C o n t e x t . a d d ( f i b e r . t y p e ) ; 
             } ) ; 
             v a r   s o r t e d N a m e s   =   s e t T o S o r t e d S t r i n g ( u n i q u e N a m e s ) ; 
 
             t r y   { 
                 s e t C u r r e n t F i b e r ( f i r s t F i b e r ) ; 
 
                 e r r o r ( ' L e g a c y   c o n t e x t   A P I   h a s   b e e n   d e t e c t e d   w i t h i n   a   s t r i c t - m o d e   t r e e . '   +   ' \ n \ n T h e   o l d   A P I   w i l l   b e   s u p p o r t e d   i n   a l l   1 6 . x   r e l e a s e s ,   b u t   a p p l i c a t i o n s   '   +   ' u s i n g   i t   s h o u l d   m i g r a t e   t o   t h e   n e w   v e r s i o n . '   +   ' \ n \ n P l e a s e   u p d a t e   t h e   f o l l o w i n g   c o m p o n e n t s :   % s '   +   ' \ n \ n L e a r n   m o r e   a b o u t   t h i s   w a r n i n g   h e r e :   h t t p s : / / r e a c t j s . o r g / l i n k / l e g a c y - c o n t e x t ' ,   s o r t e d N a m e s ) ; 
             }   f i n a l l y   { 
                 r e s e t C u r r e n t F i b e r ( ) ; 
             } 
         } ) ; 
     } ; 
 
     R e a c t S t r i c t M o d e W a r n i n g s . d i s c a r d P e n d i n g W a r n i n g s   =   f u n c t i o n   ( )   { 
         p e n d i n g C o m p o n e n t W i l l M o u n t W a r n i n g s   =   [ ] ; 
         p e n d i n g U N S A F E _ C o m p o n e n t W i l l M o u n t W a r n i n g s   =   [ ] ; 
         p e n d i n g C o m p o n e n t W i l l R e c e i v e P r o p s W a r n i n g s   =   [ ] ; 
         p e n d i n g U N S A F E _ C o m p o n e n t W i l l R e c e i v e P r o p s W a r n i n g s   =   [ ] ; 
         p e n d i n g C o m p o n e n t W i l l U p d a t e W a r n i n g s   =   [ ] ; 
         p e n d i n g U N S A F E _ C o m p o n e n t W i l l U p d a t e W a r n i n g s   =   [ ] ; 
         p e n d i n g L e g a c y C o n t e x t W a r n i n g   =   n e w   M a p ( ) ; 
     } ; 
 } 
 
 f u n c t i o n   r e s o l v e D e f a u l t P r o p s ( C o m p o n e n t ,   b a s e P r o p s )   { 
     i f   ( C o m p o n e n t   & &   C o m p o n e n t . d e f a u l t P r o p s )   { 
         / /   R e s o l v e   d e f a u l t   p r o p s .   T a k e n   f r o m   R e a c t E l e m e n t 
         v a r   p r o p s   =   a s s i g n ( { } ,   b a s e P r o p s ) ; 
         v a r   d e f a u l t P r o p s   =   C o m p o n e n t . d e f a u l t P r o p s ; 
 
         f o r   ( v a r   p r o p N a m e   i n   d e f a u l t P r o p s )   { 
             i f   ( p r o p s [ p r o p N a m e ]   = = =   u n d e f i n e d )   { 
                 p r o p s [ p r o p N a m e ]   =   d e f a u l t P r o p s [ p r o p N a m e ] ; 
             } 
         } 
 
         r e t u r n   p r o p s ; 
     } 
 
     r e t u r n   b a s e P r o p s ; 
 } 
 
 v a r   v a l u e C u r s o r   =   c r e a t e C u r s o r ( n u l l ) ; 
 v a r   r e n d e r e r S i g i l ; 
 
 { 
     / /   U s e   t h i s   t o   d e t e c t   m u l t i p l e   r e n d e r e r s   u s i n g   t h e   s a m e   c o n t e x t 
     r e n d e r e r S i g i l   =   { } ; 
 } 
 
 v a r   c u r r e n t l y R e n d e r i n g F i b e r   =   n u l l ; 
 v a r   l a s t C o n t e x t D e p e n d e n c y   =   n u l l ; 
 v a r   l a s t F u l l y O b s e r v e d C o n t e x t   =   n u l l ; 
 v a r   i s D i s a l l o w e d C o n t e x t R e a d I n D E V   =   f a l s e ; 
 f u n c t i o n   r e s e t C o n t e x t D e p e n d e n c i e s ( )   { 
     / /   T h i s   i s   c a l l e d   r i g h t   b e f o r e   R e a c t   y i e l d s   e x e c u t i o n ,   t o   e n s u r e   ` r e a d C o n t e x t ` 
     / /   c a n n o t   b e   c a l l e d   o u t s i d e   t h e   r e n d e r   p h a s e . 
     c u r r e n t l y R e n d e r i n g F i b e r   =   n u l l ; 
     l a s t C o n t e x t D e p e n d e n c y   =   n u l l ; 
     l a s t F u l l y O b s e r v e d C o n t e x t   =   n u l l ; 
 
     { 
         i s D i s a l l o w e d C o n t e x t R e a d I n D E V   =   f a l s e ; 
     } 
 } 
 f u n c t i o n   e n t e r D i s a l l o w e d C o n t e x t R e a d I n D E V ( )   { 
     { 
         i s D i s a l l o w e d C o n t e x t R e a d I n D E V   =   t r u e ; 
     } 
 } 
 f u n c t i o n   e x i t D i s a l l o w e d C o n t e x t R e a d I n D E V ( )   { 
     { 
         i s D i s a l l o w e d C o n t e x t R e a d I n D E V   =   f a l s e ; 
     } 
 } 
 f u n c t i o n   p u s h P r o v i d e r ( p r o v i d e r F i b e r ,   c o n t e x t ,   n e x t V a l u e )   { 
     { 
         p u s h ( v a l u e C u r s o r ,   c o n t e x t . _ c u r r e n t V a l u e ,   p r o v i d e r F i b e r ) ; 
         c o n t e x t . _ c u r r e n t V a l u e   =   n e x t V a l u e ; 
 
         { 
             i f   ( c o n t e x t . _ c u r r e n t R e n d e r e r   ! = =   u n d e f i n e d   & &   c o n t e x t . _ c u r r e n t R e n d e r e r   ! = =   n u l l   & &   c o n t e x t . _ c u r r e n t R e n d e r e r   ! = =   r e n d e r e r S i g i l )   { 
                 e r r o r ( ' D e t e c t e d   m u l t i p l e   r e n d e r e r s   c o n c u r r e n t l y   r e n d e r i n g   t h e   '   +   ' s a m e   c o n t e x t   p r o v i d e r .   T h i s   i s   c u r r e n t l y   u n s u p p o r t e d . ' ) ; 
             } 
 
             c o n t e x t . _ c u r r e n t R e n d e r e r   =   r e n d e r e r S i g i l ; 
         } 
     } 
 } 
 f u n c t i o n   p o p P r o v i d e r ( c o n t e x t ,   p r o v i d e r F i b e r )   { 
     v a r   c u r r e n t V a l u e   =   v a l u e C u r s o r . c u r r e n t ; 
     p o p ( v a l u e C u r s o r ,   p r o v i d e r F i b e r ) ; 
 
     { 
         { 
             c o n t e x t . _ c u r r e n t V a l u e   =   c u r r e n t V a l u e ; 
         } 
     } 
 } 
 f u n c t i o n   s c h e d u l e C o n t e x t W o r k O n P a r e n t P a t h ( p a r e n t ,   r e n d e r L a n e s ,   p r o p a g a t i o n R o o t )   { 
     / /   U p d a t e   t h e   c h i l d   l a n e s   o f   a l l   t h e   a n c e s t o r s ,   i n c l u d i n g   t h e   a l t e r n a t e s . 
     v a r   n o d e   =   p a r e n t ; 
 
     w h i l e   ( n o d e   ! = =   n u l l )   { 
         v a r   a l t e r n a t e   =   n o d e . a l t e r n a t e ; 
 
         i f   ( ! i s S u b s e t O f L a n e s ( n o d e . c h i l d L a n e s ,   r e n d e r L a n e s ) )   { 
             n o d e . c h i l d L a n e s   =   m e r g e L a n e s ( n o d e . c h i l d L a n e s ,   r e n d e r L a n e s ) ; 
 
             i f   ( a l t e r n a t e   ! = =   n u l l )   { 
                 a l t e r n a t e . c h i l d L a n e s   =   m e r g e L a n e s ( a l t e r n a t e . c h i l d L a n e s ,   r e n d e r L a n e s ) ; 
             } 
         }   e l s e   i f   ( a l t e r n a t e   ! = =   n u l l   & &   ! i s S u b s e t O f L a n e s ( a l t e r n a t e . c h i l d L a n e s ,   r e n d e r L a n e s ) )   { 
             a l t e r n a t e . c h i l d L a n e s   =   m e r g e L a n e s ( a l t e r n a t e . c h i l d L a n e s ,   r e n d e r L a n e s ) ; 
         } 
 
         i f   ( n o d e   = = =   p r o p a g a t i o n R o o t )   { 
             b r e a k ; 
         } 
 
         n o d e   =   n o d e . r e t u r n ; 
     } 
 
     { 
         i f   ( n o d e   ! = =   p r o p a g a t i o n R o o t )   { 
             e r r o r ( ' E x p e c t e d   t o   f i n d   t h e   p r o p a g a t i o n   r o o t   w h e n   s c h e d u l i n g   c o n t e x t   w o r k .   '   +   ' T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
         } 
     } 
 } 
 f u n c t i o n   p r o p a g a t e C o n t e x t C h a n g e ( w o r k I n P r o g r e s s ,   c o n t e x t ,   r e n d e r L a n e s )   { 
     { 
         p r o p a g a t e C o n t e x t C h a n g e _ e a g e r ( w o r k I n P r o g r e s s ,   c o n t e x t ,   r e n d e r L a n e s ) ; 
     } 
 } 
 
 f u n c t i o n   p r o p a g a t e C o n t e x t C h a n g e _ e a g e r ( w o r k I n P r o g r e s s ,   c o n t e x t ,   r e n d e r L a n e s )   { 
 
     v a r   f i b e r   =   w o r k I n P r o g r e s s . c h i l d ; 
 
     i f   ( f i b e r   ! = =   n u l l )   { 
         / /   S e t   t h e   r e t u r n   p o i n t e r   o f   t h e   c h i l d   t o   t h e   w o r k - i n - p r o g r e s s   f i b e r . 
         f i b e r . r e t u r n   =   w o r k I n P r o g r e s s ; 
     } 
 
     w h i l e   ( f i b e r   ! = =   n u l l )   { 
         v a r   n e x t F i b e r   =   v o i d   0 ;   / /   V i s i t   t h i s   f i b e r . 
 
         v a r   l i s t   =   f i b e r . d e p e n d e n c i e s ; 
 
         i f   ( l i s t   ! = =   n u l l )   { 
             n e x t F i b e r   =   f i b e r . c h i l d ; 
             v a r   d e p e n d e n c y   =   l i s t . f i r s t C o n t e x t ; 
 
             w h i l e   ( d e p e n d e n c y   ! = =   n u l l )   { 
                 / /   C h e c k   i f   t h e   c o n t e x t   m a t c h e s . 
                 i f   ( d e p e n d e n c y . c o n t e x t   = = =   c o n t e x t )   { 
                     / /   M a t c h !   S c h e d u l e   a n   u p d a t e   o n   t h i s   f i b e r . 
                     i f   ( f i b e r . t a g   = = =   C l a s s C o m p o n e n t )   { 
                         / /   S c h e d u l e   a   f o r c e   u p d a t e   o n   t h e   w o r k - i n - p r o g r e s s . 
                         v a r   l a n e   =   p i c k A r b i t r a r y L a n e ( r e n d e r L a n e s ) ; 
                         v a r   u p d a t e   =   c r e a t e U p d a t e ( N o T i m e s t a m p ,   l a n e ) ; 
                         u p d a t e . t a g   =   F o r c e U p d a t e ;   / /   T O D O :   B e c a u s e   w e   d o n ' t   h a v e   a   w o r k - i n - p r o g r e s s ,   t h i s   w i l l   a d d   t h e 
                         / /   u p d a t e   t o   t h e   c u r r e n t   f i b e r ,   t o o ,   w h i c h   m e a n s   i t   w i l l   p e r s i s t   e v e n   i f 
                         / /   t h i s   r e n d e r   i s   t h r o w n   a w a y .   S i n c e   i t ' s   a   r a c e   c o n d i t i o n ,   n o t   s u r e   i t ' s 
                         / /   w o r t h   f i x i n g . 
                         / /   I n l i n e d   ` e n q u e u e U p d a t e `   t o   r e m o v e   i n t e r l e a v e d   u p d a t e   c h e c k 
 
                         v a r   u p d a t e Q u e u e   =   f i b e r . u p d a t e Q u e u e ; 
 
                         i f   ( u p d a t e Q u e u e   = = =   n u l l )   ;   e l s e   { 
                             v a r   s h a r e d Q u e u e   =   u p d a t e Q u e u e . s h a r e d ; 
                             v a r   p e n d i n g   =   s h a r e d Q u e u e . p e n d i n g ; 
 
                             i f   ( p e n d i n g   = = =   n u l l )   { 
                                 / /   T h i s   i s   t h e   f i r s t   u p d a t e .   C r e a t e   a   c i r c u l a r   l i s t . 
                                 u p d a t e . n e x t   =   u p d a t e ; 
                             }   e l s e   { 
                                 u p d a t e . n e x t   =   p e n d i n g . n e x t ; 
                                 p e n d i n g . n e x t   =   u p d a t e ; 
                             } 
 
                             s h a r e d Q u e u e . p e n d i n g   =   u p d a t e ; 
                         } 
                     } 
 
                     f i b e r . l a n e s   =   m e r g e L a n e s ( f i b e r . l a n e s ,   r e n d e r L a n e s ) ; 
                     v a r   a l t e r n a t e   =   f i b e r . a l t e r n a t e ; 
 
                     i f   ( a l t e r n a t e   ! = =   n u l l )   { 
                         a l t e r n a t e . l a n e s   =   m e r g e L a n e s ( a l t e r n a t e . l a n e s ,   r e n d e r L a n e s ) ; 
                     } 
 
                     s c h e d u l e C o n t e x t W o r k O n P a r e n t P a t h ( f i b e r . r e t u r n ,   r e n d e r L a n e s ,   w o r k I n P r o g r e s s ) ;   / /   M a r k   t h e   u p d a t e d   l a n e s   o n   t h e   l i s t ,   t o o . 
 
                     l i s t . l a n e s   =   m e r g e L a n e s ( l i s t . l a n e s ,   r e n d e r L a n e s ) ;   / /   S i n c e   w e   a l r e a d y   f o u n d   a   m a t c h ,   w e   c a n   s t o p   t r a v e r s i n g   t h e 
                     / /   d e p e n d e n c y   l i s t . 
 
                     b r e a k ; 
                 } 
 
                 d e p e n d e n c y   =   d e p e n d e n c y . n e x t ; 
             } 
         }   e l s e   i f   ( f i b e r . t a g   = = =   C o n t e x t P r o v i d e r )   { 
             / /   D o n ' t   s c a n   d e e p e r   i f   t h i s   i s   a   m a t c h i n g   p r o v i d e r 
             n e x t F i b e r   =   f i b e r . t y p e   = = =   w o r k I n P r o g r e s s . t y p e   ?   n u l l   :   f i b e r . c h i l d ; 
         }   e l s e   i f   ( f i b e r . t a g   = = =   D e h y d r a t e d F r a g m e n t )   { 
             / /   I f   a   d e h y d r a t e d   s u s p e n s e   b o u n d a r y   i s   i n   t h i s   s u b t r e e ,   w e   d o n ' t   k n o w 
             / /   i f   i t   w i l l   h a v e   a n y   c o n t e x t   c o n s u m e r s   i n   i t .   T h e   b e s t   w e   c a n   d o   i s 
             / /   m a r k   i t   a s   h a v i n g   u p d a t e s . 
             v a r   p a r e n t S u s p e n s e   =   f i b e r . r e t u r n ; 
 
             i f   ( p a r e n t S u s p e n s e   = = =   n u l l )   { 
                 t h r o w   n e w   E r r o r ( ' W e   j u s t   c a m e   f r o m   a   p a r e n t   s o   w e   m u s t   h a v e   h a d   a   p a r e n t .   T h i s   i s   a   b u g   i n   R e a c t . ' ) ; 
             } 
 
             p a r e n t S u s p e n s e . l a n e s   =   m e r g e L a n e s ( p a r e n t S u s p e n s e . l a n e s ,   r e n d e r L a n e s ) ; 
             v a r   _ a l t e r n a t e   =   p a r e n t S u s p e n s e . a l t e r n a t e ; 
 
             i f   ( _ a l t e r n a t e   ! = =   n u l l )   { 
                 _ a l t e r n a t e . l a n e s   =   m e r g e L a n e s ( _ a l t e r n a t e . l a n e s ,   r e n d e r L a n e s ) ; 
             }   / /   T h i s   i s   i n t e n t i o n a l l y   p a s s i n g   t h i s   f i b e r   a s   t h e   p a r e n t 
             / /   b e c a u s e   w e   w a n t   t o   s c h e d u l e   t h i s   f i b e r   a s   h a v i n g   w o r k 
             / /   o n   i t s   c h i l d r e n .   W e ' l l   u s e   t h e   c h i l d L a n e s   o n 
             / /   t h i s   f i b e r   t o   i n d i c a t e   t h a t   a   c o n t e x t   h a s   c h a n g e d . 
 
 
             s c h e d u l e C o n t e x t W o r k O n P a r e n t P a t h ( p a r e n t S u s p e n s e ,   r e n d e r L a n e s ,   w o r k I n P r o g r e s s ) ; 
             n e x t F i b e r   =   f i b e r . s i b l i n g ; 
         }   e l s e   { 
             / /   T r a v e r s e   d o w n . 
             n e x t F i b e r   =   f i b e r . c h i l d ; 
         } 
 
         i f   ( n e x t F i b e r   ! = =   n u l l )   { 
             / /   S e t   t h e   r e t u r n   p o i n t e r   o f   t h e   c h i l d   t o   t h e   w o r k - i n - p r o g r e s s   f i b e r . 
             n e x t F i b e r . r e t u r n   =   f i b e r ; 
         }   e l s e   { 
             / /   N o   c h i l d .   T r a v e r s e   t o   n e x t   s i b l i n g . 
             n e x t F i b e r   =   f i b e r ; 
 
             w h i l e   ( n e x t F i b e r   ! = =   n u l l )   { 
                 i f   ( n e x t F i b e r   = = =   w o r k I n P r o g r e s s )   { 
                     / /   W e ' r e   b a c k   t o   t h e   r o o t   o f   t h i s   s u b t r e e .   E x i t . 
                     n e x t F i b e r   =   n u l l ; 
                     b r e a k ; 
                 } 
 
                 v a r   s i b l i n g   =   n e x t F i b e r . s i b l i n g ; 
 
                 i f   ( s i b l i n g   ! = =   n u l l )   { 
                     / /   S e t   t h e   r e t u r n   p o i n t e r   o f   t h e   s i b l i n g   t o   t h e   w o r k - i n - p r o g r e s s   f i b e r . 
                     s i b l i n g . r e t u r n   =   n e x t F i b e r . r e t u r n ; 
                     n e x t F i b e r   =   s i b l i n g ; 
                     b r e a k ; 
                 }   / /   N o   m o r e   s i b l i n g s .   T r a v e r s e   u p . 
 
 
                 n e x t F i b e r   =   n e x t F i b e r . r e t u r n ; 
             } 
         } 
 
         f i b e r   =   n e x t F i b e r ; 
     } 
 } 
 f u n c t i o n   p r e p a r e T o R e a d C o n t e x t ( w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     c u r r e n t l y R e n d e r i n g F i b e r   =   w o r k I n P r o g r e s s ; 
     l a s t C o n t e x t D e p e n d e n c y   =   n u l l ; 
     l a s t F u l l y O b s e r v e d C o n t e x t   =   n u l l ; 
     v a r   d e p e n d e n c i e s   =   w o r k I n P r o g r e s s . d e p e n d e n c i e s ; 
 
     i f   ( d e p e n d e n c i e s   ! = =   n u l l )   { 
         { 
             v a r   f i r s t C o n t e x t   =   d e p e n d e n c i e s . f i r s t C o n t e x t ; 
 
             i f   ( f i r s t C o n t e x t   ! = =   n u l l )   { 
                 i f   ( i n c l u d e s S o m e L a n e ( d e p e n d e n c i e s . l a n e s ,   r e n d e r L a n e s ) )   { 
                     / /   C o n t e x t   l i s t   h a s   a   p e n d i n g   u p d a t e .   M a r k   t h a t   t h i s   f i b e r   p e r f o r m e d   w o r k . 
                     m a r k W o r k I n P r o g r e s s R e c e i v e d U p d a t e ( ) ; 
                 }   / /   R e s e t   t h e   w o r k - i n - p r o g r e s s   l i s t 
 
 
                 d e p e n d e n c i e s . f i r s t C o n t e x t   =   n u l l ; 
             } 
         } 
     } 
 } 
 f u n c t i o n   r e a d C o n t e x t ( c o n t e x t )   { 
     { 
         / /   T h i s   w a r n i n g   w o u l d   f i r e   i f   y o u   r e a d   c o n t e x t   i n s i d e   a   H o o k   l i k e   u s e M e m o . 
         / /   U n l i k e   t h e   c l a s s   c h e c k   b e l o w ,   i t ' s   n o t   e n f o r c e d   i n   p r o d u c t i o n   f o r   p e r f . 
         i f   ( i s D i s a l l o w e d C o n t e x t R e a d I n D E V )   { 
             e r r o r ( ' C o n t e x t   c a n   o n l y   b e   r e a d   w h i l e   R e a c t   i s   r e n d e r i n g .   '   +   ' I n   c l a s s e s ,   y o u   c a n   r e a d   i t   i n   t h e   r e n d e r   m e t h o d   o r   g e t D e r i v e d S t a t e F r o m P r o p s .   '   +   ' I n   f u n c t i o n   c o m p o n e n t s ,   y o u   c a n   r e a d   i t   d i r e c t l y   i n   t h e   f u n c t i o n   b o d y ,   b u t   n o t   '   +   ' i n s i d e   H o o k s   l i k e   u s e R e d u c e r ( )   o r   u s e M e m o ( ) . ' ) ; 
         } 
     } 
 
     v a r   v a l u e   =     c o n t e x t . _ c u r r e n t V a l u e   ; 
 
     i f   ( l a s t F u l l y O b s e r v e d C o n t e x t   = = =   c o n t e x t )   ;   e l s e   { 
         v a r   c o n t e x t I t e m   =   { 
             c o n t e x t :   c o n t e x t , 
             m e m o i z e d V a l u e :   v a l u e , 
             n e x t :   n u l l 
         } ; 
 
         i f   ( l a s t C o n t e x t D e p e n d e n c y   = = =   n u l l )   { 
             i f   ( c u r r e n t l y R e n d e r i n g F i b e r   = = =   n u l l )   { 
                 t h r o w   n e w   E r r o r ( ' C o n t e x t   c a n   o n l y   b e   r e a d   w h i l e   R e a c t   i s   r e n d e r i n g .   '   +   ' I n   c l a s s e s ,   y o u   c a n   r e a d   i t   i n   t h e   r e n d e r   m e t h o d   o r   g e t D e r i v e d S t a t e F r o m P r o p s .   '   +   ' I n   f u n c t i o n   c o m p o n e n t s ,   y o u   c a n   r e a d   i t   d i r e c t l y   i n   t h e   f u n c t i o n   b o d y ,   b u t   n o t   '   +   ' i n s i d e   H o o k s   l i k e   u s e R e d u c e r ( )   o r   u s e M e m o ( ) . ' ) ; 
             }   / /   T h i s   i s   t h e   f i r s t   d e p e n d e n c y   f o r   t h i s   c o m p o n e n t .   C r e a t e   a   n e w   l i s t . 
 
 
             l a s t C o n t e x t D e p e n d e n c y   =   c o n t e x t I t e m ; 
             c u r r e n t l y R e n d e r i n g F i b e r . d e p e n d e n c i e s   =   { 
                 l a n e s :   N o L a n e s , 
                 f i r s t C o n t e x t :   c o n t e x t I t e m 
             } ; 
         }   e l s e   { 
             / /   A p p e n d   a   n e w   c o n t e x t   i t e m . 
             l a s t C o n t e x t D e p e n d e n c y   =   l a s t C o n t e x t D e p e n d e n c y . n e x t   =   c o n t e x t I t e m ; 
         } 
     } 
 
     r e t u r n   v a l u e ; 
 } 
 
 / /   A n   a r r a y   o f   a l l   u p d a t e   q u e u e s   t h a t   r e c e i v e d   u p d a t e s   d u r i n g   t h e   c u r r e n t 
 / /   r e n d e r .   W h e n   t h i s   r e n d e r   e x i t s ,   e i t h e r   b e c a u s e   i t   f i n i s h e s   o r   b e c a u s e   i t   i s 
 / /   i n t e r r u p t e d ,   t h e   i n t e r l e a v e d   u p d a t e s   w i l l   b e   t r a n s f e r r e d   o n t o   t h e   m a i n   p a r t 
 / /   o f   t h e   q u e u e . 
 v a r   i n t e r l e a v e d Q u e u e s   =   n u l l ; 
 f u n c t i o n   p u s h I n t e r l e a v e d Q u e u e ( q u e u e )   { 
     i f   ( i n t e r l e a v e d Q u e u e s   = = =   n u l l )   { 
         i n t e r l e a v e d Q u e u e s   =   [ q u e u e ] ; 
     }   e l s e   { 
         i n t e r l e a v e d Q u e u e s . p u s h ( q u e u e ) ; 
     } 
 } 
 f u n c t i o n   h a s I n t e r l e a v e d U p d a t e s ( )   { 
     r e t u r n   i n t e r l e a v e d Q u e u e s   ! = =   n u l l ; 
 } 
 f u n c t i o n   e n q u e u e I n t e r l e a v e d U p d a t e s ( )   { 
     / /   T r a n s f e r   t h e   i n t e r l e a v e d   u p d a t e s   o n t o   t h e   m a i n   q u e u e .   E a c h   q u e u e   h a s   a 
     / /   ` p e n d i n g `   f i e l d   a n d   a n   ` i n t e r l e a v e d `   f i e l d .   W h e n   t h e y   a r e   n o t   n u l l ,   t h e y 
     / /   p o i n t   t o   t h e   l a s t   n o d e   i n   a   c i r c u l a r   l i n k e d   l i s t .   W e   n e e d   t o   a p p e n d   t h e 
     / /   i n t e r l e a v e d   l i s t   t o   t h e   e n d   o f   t h e   p e n d i n g   l i s t   b y   j o i n i n g   t h e m   i n t o   a 
     / /   s i n g l e ,   c i r c u l a r   l i s t . 
     i f   ( i n t e r l e a v e d Q u e u e s   ! = =   n u l l )   { 
         f o r   ( v a r   i   =   0 ;   i   <   i n t e r l e a v e d Q u e u e s . l e n g t h ;   i + + )   { 
             v a r   q u e u e   =   i n t e r l e a v e d Q u e u e s [ i ] ; 
             v a r   l a s t I n t e r l e a v e d U p d a t e   =   q u e u e . i n t e r l e a v e d ; 
 
             i f   ( l a s t I n t e r l e a v e d U p d a t e   ! = =   n u l l )   { 
                 q u e u e . i n t e r l e a v e d   =   n u l l ; 
                 v a r   f i r s t I n t e r l e a v e d U p d a t e   =   l a s t I n t e r l e a v e d U p d a t e . n e x t ; 
                 v a r   l a s t P e n d i n g U p d a t e   =   q u e u e . p e n d i n g ; 
 
                 i f   ( l a s t P e n d i n g U p d a t e   ! = =   n u l l )   { 
                     v a r   f i r s t P e n d i n g U p d a t e   =   l a s t P e n d i n g U p d a t e . n e x t ; 
                     l a s t P e n d i n g U p d a t e . n e x t   =   f i r s t I n t e r l e a v e d U p d a t e ; 
                     l a s t I n t e r l e a v e d U p d a t e . n e x t   =   f i r s t P e n d i n g U p d a t e ; 
                 } 
 
                 q u e u e . p e n d i n g   =   l a s t I n t e r l e a v e d U p d a t e ; 
             } 
         } 
 
         i n t e r l e a v e d Q u e u e s   =   n u l l ; 
     } 
 } 
 
 v a r   U p d a t e S t a t e   =   0 ; 
 v a r   R e p l a c e S t a t e   =   1 ; 
 v a r   F o r c e U p d a t e   =   2 ; 
 v a r   C a p t u r e U p d a t e   =   3 ;   / /   G l o b a l   s t a t e   t h a t   i s   r e s e t   a t   t h e   b e g i n n i n g   o f   c a l l i n g   ` p r o c e s s U p d a t e Q u e u e ` . 
 / /   I t   s h o u l d   o n l y   b e   r e a d   r i g h t   a f t e r   c a l l i n g   ` p r o c e s s U p d a t e Q u e u e ` ,   v i a 
 / /   ` c h e c k H a s F o r c e U p d a t e A f t e r P r o c e s s i n g ` . 
 
 v a r   h a s F o r c e U p d a t e   =   f a l s e ; 
 v a r   d i d W a r n U p d a t e I n s i d e U p d a t e ; 
 v a r   c u r r e n t l y P r o c e s s i n g Q u e u e ; 
 
 { 
     d i d W a r n U p d a t e I n s i d e U p d a t e   =   f a l s e ; 
     c u r r e n t l y P r o c e s s i n g Q u e u e   =   n u l l ; 
 } 
 
 f u n c t i o n   i n i t i a l i z e U p d a t e Q u e u e ( f i b e r )   { 
     v a r   q u e u e   =   { 
         b a s e S t a t e :   f i b e r . m e m o i z e d S t a t e , 
         f i r s t B a s e U p d a t e :   n u l l , 
         l a s t B a s e U p d a t e :   n u l l , 
         s h a r e d :   { 
             p e n d i n g :   n u l l , 
             i n t e r l e a v e d :   n u l l , 
             l a n e s :   N o L a n e s 
         } , 
         e f f e c t s :   n u l l 
     } ; 
     f i b e r . u p d a t e Q u e u e   =   q u e u e ; 
 } 
 f u n c t i o n   c l o n e U p d a t e Q u e u e ( c u r r e n t ,   w o r k I n P r o g r e s s )   { 
     / /   C l o n e   t h e   u p d a t e   q u e u e   f r o m   c u r r e n t .   U n l e s s   i t ' s   a l r e a d y   a   c l o n e . 
     v a r   q u e u e   =   w o r k I n P r o g r e s s . u p d a t e Q u e u e ; 
     v a r   c u r r e n t Q u e u e   =   c u r r e n t . u p d a t e Q u e u e ; 
 
     i f   ( q u e u e   = = =   c u r r e n t Q u e u e )   { 
         v a r   c l o n e   =   { 
             b a s e S t a t e :   c u r r e n t Q u e u e . b a s e S t a t e , 
             f i r s t B a s e U p d a t e :   c u r r e n t Q u e u e . f i r s t B a s e U p d a t e , 
             l a s t B a s e U p d a t e :   c u r r e n t Q u e u e . l a s t B a s e U p d a t e , 
             s h a r e d :   c u r r e n t Q u e u e . s h a r e d , 
             e f f e c t s :   c u r r e n t Q u e u e . e f f e c t s 
         } ; 
         w o r k I n P r o g r e s s . u p d a t e Q u e u e   =   c l o n e ; 
     } 
 } 
 f u n c t i o n   c r e a t e U p d a t e ( e v e n t T i m e ,   l a n e )   { 
     v a r   u p d a t e   =   { 
         e v e n t T i m e :   e v e n t T i m e , 
         l a n e :   l a n e , 
         t a g :   U p d a t e S t a t e , 
         p a y l o a d :   n u l l , 
         c a l l b a c k :   n u l l , 
         n e x t :   n u l l 
     } ; 
     r e t u r n   u p d a t e ; 
 } 
 f u n c t i o n   e n q u e u e U p d a t e ( f i b e r ,   u p d a t e ,   l a n e )   { 
     v a r   u p d a t e Q u e u e   =   f i b e r . u p d a t e Q u e u e ; 
 
     i f   ( u p d a t e Q u e u e   = = =   n u l l )   { 
         / /   O n l y   o c c u r s   i f   t h e   f i b e r   h a s   b e e n   u n m o u n t e d . 
         r e t u r n ; 
     } 
 
     v a r   s h a r e d Q u e u e   =   u p d a t e Q u e u e . s h a r e d ; 
 
     i f   ( i s I n t e r l e a v e d U p d a t e ( f i b e r ) )   { 
         v a r   i n t e r l e a v e d   =   s h a r e d Q u e u e . i n t e r l e a v e d ; 
 
         i f   ( i n t e r l e a v e d   = = =   n u l l )   { 
             / /   T h i s   i s   t h e   f i r s t   u p d a t e .   C r e a t e   a   c i r c u l a r   l i s t . 
             u p d a t e . n e x t   =   u p d a t e ;   / /   A t   t h e   e n d   o f   t h e   c u r r e n t   r e n d e r ,   t h i s   q u e u e ' s   i n t e r l e a v e d   u p d a t e s   w i l l 
             / /   b e   t r a n s f e r r e d   t o   t h e   p e n d i n g   q u e u e . 
 
             p u s h I n t e r l e a v e d Q u e u e ( s h a r e d Q u e u e ) ; 
         }   e l s e   { 
             u p d a t e . n e x t   =   i n t e r l e a v e d . n e x t ; 
             i n t e r l e a v e d . n e x t   =   u p d a t e ; 
         } 
 
         s h a r e d Q u e u e . i n t e r l e a v e d   =   u p d a t e ; 
     }   e l s e   { 
         v a r   p e n d i n g   =   s h a r e d Q u e u e . p e n d i n g ; 
 
         i f   ( p e n d i n g   = = =   n u l l )   { 
             / /   T h i s   i s   t h e   f i r s t   u p d a t e .   C r e a t e   a   c i r c u l a r   l i s t . 
             u p d a t e . n e x t   =   u p d a t e ; 
         }   e l s e   { 
             u p d a t e . n e x t   =   p e n d i n g . n e x t ; 
             p e n d i n g . n e x t   =   u p d a t e ; 
         } 
 
         s h a r e d Q u e u e . p e n d i n g   =   u p d a t e ; 
     } 
 
     { 
         i f   ( c u r r e n t l y P r o c e s s i n g Q u e u e   = = =   s h a r e d Q u e u e   & &   ! d i d W a r n U p d a t e I n s i d e U p d a t e )   { 
             e r r o r ( ' A n   u p d a t e   ( s e t S t a t e ,   r e p l a c e S t a t e ,   o r   f o r c e U p d a t e )   w a s   s c h e d u l e d   '   +   ' f r o m   i n s i d e   a n   u p d a t e   f u n c t i o n .   U p d a t e   f u n c t i o n s   s h o u l d   b e   p u r e ,   '   +   ' w i t h   z e r o   s i d e - e f f e c t s .   C o n s i d e r   u s i n g   c o m p o n e n t D i d U p d a t e   o r   a   '   +   ' c a l l b a c k . ' ) ; 
 
             d i d W a r n U p d a t e I n s i d e U p d a t e   =   t r u e ; 
         } 
     } 
 } 
 f u n c t i o n   e n t a n g l e T r a n s i t i o n s ( r o o t ,   f i b e r ,   l a n e )   { 
     v a r   u p d a t e Q u e u e   =   f i b e r . u p d a t e Q u e u e ; 
 
     i f   ( u p d a t e Q u e u e   = = =   n u l l )   { 
         / /   O n l y   o c c u r s   i f   t h e   f i b e r   h a s   b e e n   u n m o u n t e d . 
         r e t u r n ; 
     } 
 
     v a r   s h a r e d Q u e u e   =   u p d a t e Q u e u e . s h a r e d ; 
 
     i f   ( i s T r a n s i t i o n L a n e ( l a n e ) )   { 
         v a r   q u e u e L a n e s   =   s h a r e d Q u e u e . l a n e s ;   / /   I f   a n y   e n t a n g l e d   l a n e s   a r e   n o   l o n g e r   p e n d i n g   o n   t h e   r o o t ,   t h e n   t h e y   m u s t 
         / /   h a v e   f i n i s h e d .   W e   c a n   r e m o v e   t h e m   f r o m   t h e   s h a r e d   q u e u e ,   w h i c h   r e p r e s e n t s 
         / /   a   s u p e r s e t   o f   t h e   a c t u a l l y   p e n d i n g   l a n e s .   I n   s o m e   c a s e s   w e   m a y   e n t a n g l e 
         / /   m o r e   t h a n   w e   n e e d   t o ,   b u t   t h a t ' s   O K .   I n   f a c t   i t ' s   w o r s e   i f   w e   * d o n ' t * 
         / /   e n t a n g l e   w h e n   w e   s h o u l d . 
 
         q u e u e L a n e s   =   i n t e r s e c t L a n e s ( q u e u e L a n e s ,   r o o t . p e n d i n g L a n e s ) ;   / /   E n t a n g l e   t h e   n e w   t r a n s i t i o n   l a n e   w i t h   t h e   o t h e r   t r a n s i t i o n   l a n e s . 
 
         v a r   n e w Q u e u e L a n e s   =   m e r g e L a n e s ( q u e u e L a n e s ,   l a n e ) ; 
         s h a r e d Q u e u e . l a n e s   =   n e w Q u e u e L a n e s ;   / /   E v e n   i f   q u e u e . l a n e s   a l r e a d y   i n c l u d e   l a n e ,   w e   d o n ' t   k n o w   f o r   c e r t a i n   i f 
         / /   t h e   l a n e   f i n i s h e d   s i n c e   t h e   l a s t   t i m e   w e   e n t a n g l e d   i t .   S o   w e   n e e d   t o 
         / /   e n t a n g l e   i t   a g a i n ,   j u s t   t o   b e   s u r e . 
 
         m a r k R o o t E n t a n g l e d ( r o o t ,   n e w Q u e u e L a n e s ) ; 
     } 
 } 
 f u n c t i o n   e n q u e u e C a p t u r e d U p d a t e ( w o r k I n P r o g r e s s ,   c a p t u r e d U p d a t e )   { 
     / /   C a p t u r e d   u p d a t e s   a r e   u p d a t e s   t h a t   a r e   t h r o w n   b y   a   c h i l d   d u r i n g   t h e   r e n d e r 
     / /   p h a s e .   T h e y   s h o u l d   b e   d i s c a r d e d   i f   t h e   r e n d e r   i s   a b o r t e d .   T h e r e f o r e , 
     / /   w e   s h o u l d   o n l y   p u t   t h e m   o n   t h e   w o r k - i n - p r o g r e s s   q u e u e ,   n o t   t h e   c u r r e n t   o n e . 
     v a r   q u e u e   =   w o r k I n P r o g r e s s . u p d a t e Q u e u e ;   / /   C h e c k   i f   t h e   w o r k - i n - p r o g r e s s   q u e u e   i s   a   c l o n e . 
 
     v a r   c u r r e n t   =   w o r k I n P r o g r e s s . a l t e r n a t e ; 
 
     i f   ( c u r r e n t   ! = =   n u l l )   { 
         v a r   c u r r e n t Q u e u e   =   c u r r e n t . u p d a t e Q u e u e ; 
 
         i f   ( q u e u e   = = =   c u r r e n t Q u e u e )   { 
             / /   T h e   w o r k - i n - p r o g r e s s   q u e u e   i s   t h e   s a m e   a s   c u r r e n t .   T h i s   h a p p e n s   w h e n 
             / /   w e   b a i l   o u t   o n   a   p a r e n t   f i b e r   t h a t   t h e n   c a p t u r e s   a n   e r r o r   t h r o w n   b y 
             / /   a   c h i l d .   S i n c e   w e   w a n t   t o   a p p e n d   t h e   u p d a t e   o n l y   t o   t h e   w o r k - i n 
             / /   - p r o g r e s s   q u e u e ,   w e   n e e d   t o   c l o n e   t h e   u p d a t e s .   W e   u s u a l l y   c l o n e   d u r i n g 
             / /   p r o c e s s U p d a t e Q u e u e ,   b u t   t h a t   d i d n ' t   h a p p e n   i n   t h i s   c a s e   b e c a u s e   w e 
             / /   s k i p p e d   o v e r   t h e   p a r e n t   w h e n   w e   b a i l e d   o u t . 
             v a r   n e w F i r s t   =   n u l l ; 
             v a r   n e w L a s t   =   n u l l ; 
             v a r   f i r s t B a s e U p d a t e   =   q u e u e . f i r s t B a s e U p d a t e ; 
 
             i f   ( f i r s t B a s e U p d a t e   ! = =   n u l l )   { 
                 / /   L o o p   t h r o u g h   t h e   u p d a t e s   a n d   c l o n e   t h e m . 
                 v a r   u p d a t e   =   f i r s t B a s e U p d a t e ; 
 
                 d o   { 
                     v a r   c l o n e   =   { 
                         e v e n t T i m e :   u p d a t e . e v e n t T i m e , 
                         l a n e :   u p d a t e . l a n e , 
                         t a g :   u p d a t e . t a g , 
                         p a y l o a d :   u p d a t e . p a y l o a d , 
                         c a l l b a c k :   u p d a t e . c a l l b a c k , 
                         n e x t :   n u l l 
                     } ; 
 
                     i f   ( n e w L a s t   = = =   n u l l )   { 
                         n e w F i r s t   =   n e w L a s t   =   c l o n e ; 
                     }   e l s e   { 
                         n e w L a s t . n e x t   =   c l o n e ; 
                         n e w L a s t   =   c l o n e ; 
                     } 
 
                     u p d a t e   =   u p d a t e . n e x t ; 
                 }   w h i l e   ( u p d a t e   ! = =   n u l l ) ;   / /   A p p e n d   t h e   c a p t u r e d   u p d a t e   t h e   e n d   o f   t h e   c l o n e d   l i s t . 
 
 
                 i f   ( n e w L a s t   = = =   n u l l )   { 
                     n e w F i r s t   =   n e w L a s t   =   c a p t u r e d U p d a t e ; 
                 }   e l s e   { 
                     n e w L a s t . n e x t   =   c a p t u r e d U p d a t e ; 
                     n e w L a s t   =   c a p t u r e d U p d a t e ; 
                 } 
             }   e l s e   { 
                 / /   T h e r e   a r e   n o   b a s e   u p d a t e s . 
                 n e w F i r s t   =   n e w L a s t   =   c a p t u r e d U p d a t e ; 
             } 
 
             q u e u e   =   { 
                 b a s e S t a t e :   c u r r e n t Q u e u e . b a s e S t a t e , 
                 f i r s t B a s e U p d a t e :   n e w F i r s t , 
                 l a s t B a s e U p d a t e :   n e w L a s t , 
                 s h a r e d :   c u r r e n t Q u e u e . s h a r e d , 
                 e f f e c t s :   c u r r e n t Q u e u e . e f f e c t s 
             } ; 
             w o r k I n P r o g r e s s . u p d a t e Q u e u e   =   q u e u e ; 
             r e t u r n ; 
         } 
     }   / /   A p p e n d   t h e   u p d a t e   t o   t h e   e n d   o f   t h e   l i s t . 
 
 
     v a r   l a s t B a s e U p d a t e   =   q u e u e . l a s t B a s e U p d a t e ; 
 
     i f   ( l a s t B a s e U p d a t e   = = =   n u l l )   { 
         q u e u e . f i r s t B a s e U p d a t e   =   c a p t u r e d U p d a t e ; 
     }   e l s e   { 
         l a s t B a s e U p d a t e . n e x t   =   c a p t u r e d U p d a t e ; 
     } 
 
     q u e u e . l a s t B a s e U p d a t e   =   c a p t u r e d U p d a t e ; 
 } 
 
 f u n c t i o n   g e t S t a t e F r o m U p d a t e ( w o r k I n P r o g r e s s ,   q u e u e ,   u p d a t e ,   p r e v S t a t e ,   n e x t P r o p s ,   i n s t a n c e )   { 
     s w i t c h   ( u p d a t e . t a g )   { 
         c a s e   R e p l a c e S t a t e : 
             { 
                 v a r   p a y l o a d   =   u p d a t e . p a y l o a d ; 
 
                 i f   ( t y p e o f   p a y l o a d   = = =   ' f u n c t i o n ' )   { 
                     / /   U p d a t e r   f u n c t i o n 
                     { 
                         e n t e r D i s a l l o w e d C o n t e x t R e a d I n D E V ( ) ; 
                     } 
 
                     v a r   n e x t S t a t e   =   p a y l o a d . c a l l ( i n s t a n c e ,   p r e v S t a t e ,   n e x t P r o p s ) ; 
 
                     { 
                         i f   (   w o r k I n P r o g r e s s . m o d e   &   S t r i c t L e g a c y M o d e )   { 
                             s e t I s S t r i c t M o d e F o r D e v t o o l s ( t r u e ) ; 
 
                             t r y   { 
                                 p a y l o a d . c a l l ( i n s t a n c e ,   p r e v S t a t e ,   n e x t P r o p s ) ; 
                             }   f i n a l l y   { 
                                 s e t I s S t r i c t M o d e F o r D e v t o o l s ( f a l s e ) ; 
                             } 
                         } 
 
                         e x i t D i s a l l o w e d C o n t e x t R e a d I n D E V ( ) ; 
                     } 
 
                     r e t u r n   n e x t S t a t e ; 
                 }   / /   S t a t e   o b j e c t 
 
 
                 r e t u r n   p a y l o a d ; 
             } 
 
         c a s e   C a p t u r e U p d a t e : 
             { 
                 w o r k I n P r o g r e s s . f l a g s   =   w o r k I n P r o g r e s s . f l a g s   &   ~ S h o u l d C a p t u r e   |   D i d C a p t u r e ; 
             } 
         / /   I n t e n t i o n a l   f a l l t h r o u g h 
 
         c a s e   U p d a t e S t a t e : 
             { 
                 v a r   _ p a y l o a d   =   u p d a t e . p a y l o a d ; 
                 v a r   p a r t i a l S t a t e ; 
 
                 i f   ( t y p e o f   _ p a y l o a d   = = =   ' f u n c t i o n ' )   { 
                     / /   U p d a t e r   f u n c t i o n 
                     { 
                         e n t e r D i s a l l o w e d C o n t e x t R e a d I n D E V ( ) ; 
                     } 
 
                     p a r t i a l S t a t e   =   _ p a y l o a d . c a l l ( i n s t a n c e ,   p r e v S t a t e ,   n e x t P r o p s ) ; 
 
                     { 
                         i f   (   w o r k I n P r o g r e s s . m o d e   &   S t r i c t L e g a c y M o d e )   { 
                             s e t I s S t r i c t M o d e F o r D e v t o o l s ( t r u e ) ; 
 
                             t r y   { 
                                 _ p a y l o a d . c a l l ( i n s t a n c e ,   p r e v S t a t e ,   n e x t P r o p s ) ; 
                             }   f i n a l l y   { 
                                 s e t I s S t r i c t M o d e F o r D e v t o o l s ( f a l s e ) ; 
                             } 
                         } 
 
                         e x i t D i s a l l o w e d C o n t e x t R e a d I n D E V ( ) ; 
                     } 
                 }   e l s e   { 
                     / /   P a r t i a l   s t a t e   o b j e c t 
                     p a r t i a l S t a t e   =   _ p a y l o a d ; 
                 } 
 
                 i f   ( p a r t i a l S t a t e   = = =   n u l l   | |   p a r t i a l S t a t e   = = =   u n d e f i n e d )   { 
                     / /   N u l l   a n d   u n d e f i n e d   a r e   t r e a t e d   a s   n o - o p s . 
                     r e t u r n   p r e v S t a t e ; 
                 }   / /   M e r g e   t h e   p a r t i a l   s t a t e   a n d   t h e   p r e v i o u s   s t a t e . 
 
 
                 r e t u r n   a s s i g n ( { } ,   p r e v S t a t e ,   p a r t i a l S t a t e ) ; 
             } 
 
         c a s e   F o r c e U p d a t e : 
             { 
                 h a s F o r c e U p d a t e   =   t r u e ; 
                 r e t u r n   p r e v S t a t e ; 
             } 
     } 
 
     r e t u r n   p r e v S t a t e ; 
 } 
 
 f u n c t i o n   p r o c e s s U p d a t e Q u e u e ( w o r k I n P r o g r e s s ,   p r o p s ,   i n s t a n c e ,   r e n d e r L a n e s )   { 
     / /   T h i s   i s   a l w a y s   n o n - n u l l   o n   a   C l a s s C o m p o n e n t   o r   H o s t R o o t 
     v a r   q u e u e   =   w o r k I n P r o g r e s s . u p d a t e Q u e u e ; 
     h a s F o r c e U p d a t e   =   f a l s e ; 
 
     { 
         c u r r e n t l y P r o c e s s i n g Q u e u e   =   q u e u e . s h a r e d ; 
     } 
 
     v a r   f i r s t B a s e U p d a t e   =   q u e u e . f i r s t B a s e U p d a t e ; 
     v a r   l a s t B a s e U p d a t e   =   q u e u e . l a s t B a s e U p d a t e ;   / /   C h e c k   i f   t h e r e   a r e   p e n d i n g   u p d a t e s .   I f   s o ,   t r a n s f e r   t h e m   t o   t h e   b a s e   q u e u e . 
 
     v a r   p e n d i n g Q u e u e   =   q u e u e . s h a r e d . p e n d i n g ; 
 
     i f   ( p e n d i n g Q u e u e   ! = =   n u l l )   { 
         q u e u e . s h a r e d . p e n d i n g   =   n u l l ;   / /   T h e   p e n d i n g   q u e u e   i s   c i r c u l a r .   D i s c o n n e c t   t h e   p o i n t e r   b e t w e e n   f i r s t 
         / /   a n d   l a s t   s o   t h a t   i t ' s   n o n - c i r c u l a r . 
 
         v a r   l a s t P e n d i n g U p d a t e   =   p e n d i n g Q u e u e ; 
         v a r   f i r s t P e n d i n g U p d a t e   =   l a s t P e n d i n g U p d a t e . n e x t ; 
         l a s t P e n d i n g U p d a t e . n e x t   =   n u l l ;   / /   A p p e n d   p e n d i n g   u p d a t e s   t o   b a s e   q u e u e 
 
         i f   ( l a s t B a s e U p d a t e   = = =   n u l l )   { 
             f i r s t B a s e U p d a t e   =   f i r s t P e n d i n g U p d a t e ; 
         }   e l s e   { 
             l a s t B a s e U p d a t e . n e x t   =   f i r s t P e n d i n g U p d a t e ; 
         } 
 
         l a s t B a s e U p d a t e   =   l a s t P e n d i n g U p d a t e ;   / /   I f   t h e r e ' s   a   c u r r e n t   q u e u e ,   a n d   i t ' s   d i f f e r e n t   f r o m   t h e   b a s e   q u e u e ,   t h e n 
         / /   w e   n e e d   t o   t r a n s f e r   t h e   u p d a t e s   t o   t h a t   q u e u e ,   t o o .   B e c a u s e   t h e   b a s e 
         / /   q u e u e   i s   a   s i n g l y - l i n k e d   l i s t   w i t h   n o   c y c l e s ,   w e   c a n   a p p e n d   t o   b o t h 
         / /   l i s t s   a n d   t a k e   a d v a n t a g e   o f   s t r u c t u r a l   s h a r i n g . 
         / /   T O D O :   P a s s   ` c u r r e n t `   a s   a r g u m e n t 
 
         v a r   c u r r e n t   =   w o r k I n P r o g r e s s . a l t e r n a t e ; 
 
         i f   ( c u r r e n t   ! = =   n u l l )   { 
             / /   T h i s   i s   a l w a y s   n o n - n u l l   o n   a   C l a s s C o m p o n e n t   o r   H o s t R o o t 
             v a r   c u r r e n t Q u e u e   =   c u r r e n t . u p d a t e Q u e u e ; 
             v a r   c u r r e n t L a s t B a s e U p d a t e   =   c u r r e n t Q u e u e . l a s t B a s e U p d a t e ; 
 
             i f   ( c u r r e n t L a s t B a s e U p d a t e   ! = =   l a s t B a s e U p d a t e )   { 
                 i f   ( c u r r e n t L a s t B a s e U p d a t e   = = =   n u l l )   { 
                     c u r r e n t Q u e u e . f i r s t B a s e U p d a t e   =   f i r s t P e n d i n g U p d a t e ; 
                 }   e l s e   { 
                     c u r r e n t L a s t B a s e U p d a t e . n e x t   =   f i r s t P e n d i n g U p d a t e ; 
                 } 
 
                 c u r r e n t Q u e u e . l a s t B a s e U p d a t e   =   l a s t P e n d i n g U p d a t e ; 
             } 
         } 
     }   / /   T h e s e   v a l u e s   m a y   c h a n g e   a s   w e   p r o c e s s   t h e   q u e u e . 
 
 
     i f   ( f i r s t B a s e U p d a t e   ! = =   n u l l )   { 
         / /   I t e r a t e   t h r o u g h   t h e   l i s t   o f   u p d a t e s   t o   c o m p u t e   t h e   r e s u l t . 
         v a r   n e w S t a t e   =   q u e u e . b a s e S t a t e ;   / /   T O D O :   D o n ' t   n e e d   t o   a c c u m u l a t e   t h i s .   I n s t e a d ,   w e   c a n   r e m o v e   r e n d e r L a n e s 
         / /   f r o m   t h e   o r i g i n a l   l a n e s . 
 
         v a r   n e w L a n e s   =   N o L a n e s ; 
         v a r   n e w B a s e S t a t e   =   n u l l ; 
         v a r   n e w F i r s t B a s e U p d a t e   =   n u l l ; 
         v a r   n e w L a s t B a s e U p d a t e   =   n u l l ; 
         v a r   u p d a t e   =   f i r s t B a s e U p d a t e ; 
 
         d o   { 
             v a r   u p d a t e L a n e   =   u p d a t e . l a n e ; 
             v a r   u p d a t e E v e n t T i m e   =   u p d a t e . e v e n t T i m e ; 
 
             i f   ( ! i s S u b s e t O f L a n e s ( r e n d e r L a n e s ,   u p d a t e L a n e ) )   { 
                 / /   P r i o r i t y   i s   i n s u f f i c i e n t .   S k i p   t h i s   u p d a t e .   I f   t h i s   i s   t h e   f i r s t 
                 / /   s k i p p e d   u p d a t e ,   t h e   p r e v i o u s   u p d a t e / s t a t e   i s   t h e   n e w   b a s e 
                 / /   u p d a t e / s t a t e . 
                 v a r   c l o n e   =   { 
                     e v e n t T i m e :   u p d a t e E v e n t T i m e , 
                     l a n e :   u p d a t e L a n e , 
                     t a g :   u p d a t e . t a g , 
                     p a y l o a d :   u p d a t e . p a y l o a d , 
                     c a l l b a c k :   u p d a t e . c a l l b a c k , 
                     n e x t :   n u l l 
                 } ; 
 
                 i f   ( n e w L a s t B a s e U p d a t e   = = =   n u l l )   { 
                     n e w F i r s t B a s e U p d a t e   =   n e w L a s t B a s e U p d a t e   =   c l o n e ; 
                     n e w B a s e S t a t e   =   n e w S t a t e ; 
                 }   e l s e   { 
                     n e w L a s t B a s e U p d a t e   =   n e w L a s t B a s e U p d a t e . n e x t   =   c l o n e ; 
                 }   / /   U p d a t e   t h e   r e m a i n i n g   p r i o r i t y   i n   t h e   q u e u e . 
 
 
                 n e w L a n e s   =   m e r g e L a n e s ( n e w L a n e s ,   u p d a t e L a n e ) ; 
             }   e l s e   { 
                 / /   T h i s   u p d a t e   d o e s   h a v e   s u f f i c i e n t   p r i o r i t y . 
                 i f   ( n e w L a s t B a s e U p d a t e   ! = =   n u l l )   { 
                     v a r   _ c l o n e   =   { 
                         e v e n t T i m e :   u p d a t e E v e n t T i m e , 
                         / /   T h i s   u p d a t e   i s   g o i n g   t o   b e   c o m m i t t e d   s o   w e   n e v e r   w a n t   u n c o m m i t 
                         / /   i t .   U s i n g   N o L a n e   w o r k s   b e c a u s e   0   i s   a   s u b s e t   o f   a l l   b i t m a s k s ,   s o 
                         / /   t h i s   w i l l   n e v e r   b e   s k i p p e d   b y   t h e   c h e c k   a b o v e . 
                         l a n e :   N o L a n e , 
                         t a g :   u p d a t e . t a g , 
                         p a y l o a d :   u p d a t e . p a y l o a d , 
                         c a l l b a c k :   u p d a t e . c a l l b a c k , 
                         n e x t :   n u l l 
                     } ; 
                     n e w L a s t B a s e U p d a t e   =   n e w L a s t B a s e U p d a t e . n e x t   =   _ c l o n e ; 
                 }   / /   P r o c e s s   t h i s   u p d a t e . 
 
 
                 n e w S t a t e   =   g e t S t a t e F r o m U p d a t e ( w o r k I n P r o g r e s s ,   q u e u e ,   u p d a t e ,   n e w S t a t e ,   p r o p s ,   i n s t a n c e ) ; 
                 v a r   c a l l b a c k   =   u p d a t e . c a l l b a c k ; 
 
                 i f   ( c a l l b a c k   ! = =   n u l l   & &   / /   I f   t h e   u p d a t e   w a s   a l r e a d y   c o m m i t t e d ,   w e   s h o u l d   n o t   q u e u e   i t s 
                 / /   c a l l b a c k   a g a i n . 
                 u p d a t e . l a n e   ! = =   N o L a n e )   { 
                     w o r k I n P r o g r e s s . f l a g s   | =   C a l l b a c k ; 
                     v a r   e f f e c t s   =   q u e u e . e f f e c t s ; 
 
                     i f   ( e f f e c t s   = = =   n u l l )   { 
                         q u e u e . e f f e c t s   =   [ u p d a t e ] ; 
                     }   e l s e   { 
                         e f f e c t s . p u s h ( u p d a t e ) ; 
                     } 
                 } 
             } 
 
             u p d a t e   =   u p d a t e . n e x t ; 
 
             i f   ( u p d a t e   = = =   n u l l )   { 
                 p e n d i n g Q u e u e   =   q u e u e . s h a r e d . p e n d i n g ; 
 
                 i f   ( p e n d i n g Q u e u e   = = =   n u l l )   { 
                     b r e a k ; 
                 }   e l s e   { 
                     / /   A n   u p d a t e   w a s   s c h e d u l e d   f r o m   i n s i d e   a   r e d u c e r .   A d d   t h e   n e w 
                     / /   p e n d i n g   u p d a t e s   t o   t h e   e n d   o f   t h e   l i s t   a n d   k e e p   p r o c e s s i n g . 
                     v a r   _ l a s t P e n d i n g U p d a t e   =   p e n d i n g Q u e u e ;   / /   I n t e n t i o n a l l y   u n s o u n d .   P e n d i n g   u p d a t e s   f o r m   a   c i r c u l a r   l i s t ,   b u t   w e 
                     / /   u n r a v e l   t h e m   w h e n   t r a n s f e r r i n g   t h e m   t o   t h e   b a s e   q u e u e . 
 
                     v a r   _ f i r s t P e n d i n g U p d a t e   =   _ l a s t P e n d i n g U p d a t e . n e x t ; 
                     _ l a s t P e n d i n g U p d a t e . n e x t   =   n u l l ; 
                     u p d a t e   =   _ f i r s t P e n d i n g U p d a t e ; 
                     q u e u e . l a s t B a s e U p d a t e   =   _ l a s t P e n d i n g U p d a t e ; 
                     q u e u e . s h a r e d . p e n d i n g   =   n u l l ; 
                 } 
             } 
         }   w h i l e   ( t r u e ) ; 
 
         i f   ( n e w L a s t B a s e U p d a t e   = = =   n u l l )   { 
             n e w B a s e S t a t e   =   n e w S t a t e ; 
         } 
 
         q u e u e . b a s e S t a t e   =   n e w B a s e S t a t e ; 
         q u e u e . f i r s t B a s e U p d a t e   =   n e w F i r s t B a s e U p d a t e ; 
         q u e u e . l a s t B a s e U p d a t e   =   n e w L a s t B a s e U p d a t e ;   / /   I n t e r l e a v e d   u p d a t e s   a r e   s t o r e d   o n   a   s e p a r a t e   q u e u e .   W e   a r e n ' t   g o i n g   t o 
         / /   p r o c e s s   t h e m   d u r i n g   t h i s   r e n d e r ,   b u t   w e   d o   n e e d   t o   t r a c k   w h i c h   l a n e s 
         / /   a r e   r e m a i n i n g . 
 
         v a r   l a s t I n t e r l e a v e d   =   q u e u e . s h a r e d . i n t e r l e a v e d ; 
 
         i f   ( l a s t I n t e r l e a v e d   ! = =   n u l l )   { 
             v a r   i n t e r l e a v e d   =   l a s t I n t e r l e a v e d ; 
 
             d o   { 
                 n e w L a n e s   =   m e r g e L a n e s ( n e w L a n e s ,   i n t e r l e a v e d . l a n e ) ; 
                 i n t e r l e a v e d   =   i n t e r l e a v e d . n e x t ; 
             }   w h i l e   ( i n t e r l e a v e d   ! = =   l a s t I n t e r l e a v e d ) ; 
         }   e l s e   i f   ( f i r s t B a s e U p d a t e   = = =   n u l l )   { 
             / /   ` q u e u e . l a n e s `   i s   u s e d   f o r   e n t a n g l i n g   t r a n s i t i o n s .   W e   c a n   s e t   i t   b a c k   t o 
             / /   z e r o   o n c e   t h e   q u e u e   i s   e m p t y . 
             q u e u e . s h a r e d . l a n e s   =   N o L a n e s ; 
         }   / /   S e t   t h e   r e m a i n i n g   e x p i r a t i o n   t i m e   t o   b e   w h a t e v e r   i s   r e m a i n i n g   i n   t h e   q u e u e . 
         / /   T h i s   s h o u l d   b e   f i n e   b e c a u s e   t h e   o n l y   t w o   o t h e r   t h i n g s   t h a t   c o n t r i b u t e   t o 
         / /   e x p i r a t i o n   t i m e   a r e   p r o p s   a n d   c o n t e x t .   W e ' r e   a l r e a d y   i n   t h e   m i d d l e   o f   t h e 
         / /   b e g i n   p h a s e   b y   t h e   t i m e   w e   s t a r t   p r o c e s s i n g   t h e   q u e u e ,   s o   w e ' v e   a l r e a d y 
         / /   d e a l t   w i t h   t h e   p r o p s .   C o n t e x t   i n   c o m p o n e n t s   t h a t   s p e c i f y 
         / /   s h o u l d C o m p o n e n t U p d a t e   i s   t r i c k y ;   b u t   w e ' l l   h a v e   t o   a c c o u n t   f o r 
         / /   t h a t   r e g a r d l e s s . 
 
 
         m a r k S k i p p e d U p d a t e L a n e s ( n e w L a n e s ) ; 
         w o r k I n P r o g r e s s . l a n e s   =   n e w L a n e s ; 
         w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   n e w S t a t e ; 
     } 
 
     { 
         c u r r e n t l y P r o c e s s i n g Q u e u e   =   n u l l ; 
     } 
 } 
 
 f u n c t i o n   c a l l C a l l b a c k ( c a l l b a c k ,   c o n t e x t )   { 
     i f   ( t y p e o f   c a l l b a c k   ! = =   ' f u n c t i o n ' )   { 
         t h r o w   n e w   E r r o r ( ' I n v a l i d   a r g u m e n t   p a s s e d   a s   c a l l b a c k .   E x p e c t e d   a   f u n c t i o n .   I n s t e a d   '   +   ( " r e c e i v e d :   "   +   c a l l b a c k ) ) ; 
     } 
 
     c a l l b a c k . c a l l ( c o n t e x t ) ; 
 } 
 
 f u n c t i o n   r e s e t H a s F o r c e U p d a t e B e f o r e P r o c e s s i n g ( )   { 
     h a s F o r c e U p d a t e   =   f a l s e ; 
 } 
 f u n c t i o n   c h e c k H a s F o r c e U p d a t e A f t e r P r o c e s s i n g ( )   { 
     r e t u r n   h a s F o r c e U p d a t e ; 
 } 
 f u n c t i o n   c o m m i t U p d a t e Q u e u e ( f i n i s h e d W o r k ,   f i n i s h e d Q u e u e ,   i n s t a n c e )   { 
     / /   C o m m i t   t h e   e f f e c t s 
     v a r   e f f e c t s   =   f i n i s h e d Q u e u e . e f f e c t s ; 
     f i n i s h e d Q u e u e . e f f e c t s   =   n u l l ; 
 
     i f   ( e f f e c t s   ! = =   n u l l )   { 
         f o r   ( v a r   i   =   0 ;   i   <   e f f e c t s . l e n g t h ;   i + + )   { 
             v a r   e f f e c t   =   e f f e c t s [ i ] ; 
             v a r   c a l l b a c k   =   e f f e c t . c a l l b a c k ; 
 
             i f   ( c a l l b a c k   ! = =   n u l l )   { 
                 e f f e c t . c a l l b a c k   =   n u l l ; 
                 c a l l C a l l b a c k ( c a l l b a c k ,   i n s t a n c e ) ; 
             } 
         } 
     } 
 } 
 
 v a r   f a k e I n t e r n a l I n s t a n c e   =   { } ;   / /   R e a c t . C o m p o n e n t   u s e s   a   s h a r e d   f r o z e n   o b j e c t   b y   d e f a u l t . 
 / /   W e ' l l   u s e   i t   t o   d e t e r m i n e   w h e t h e r   w e   n e e d   t o   i n i t i a l i z e   l e g a c y   r e f s . 
 
 v a r   e m p t y R e f s O b j e c t   =   n e w   R e a c t . C o m p o n e n t ( ) . r e f s ; 
 v a r   d i d W a r n A b o u t S t a t e A s s i g n m e n t F o r C o m p o n e n t ; 
 v a r   d i d W a r n A b o u t U n i n i t i a l i z e d S t a t e ; 
 v a r   d i d W a r n A b o u t G e t S n a p s h o t B e f o r e U p d a t e W i t h o u t D i d U p d a t e ; 
 v a r   d i d W a r n A b o u t L e g a c y L i f e c y c l e s A n d D e r i v e d S t a t e ; 
 v a r   d i d W a r n A b o u t U n d e f i n e d D e r i v e d S t a t e ; 
 v a r   w a r n O n U n d e f i n e d D e r i v e d S t a t e ; 
 v a r   w a r n O n I n v a l i d C a l l b a c k ; 
 v a r   d i d W a r n A b o u t D i r e c t l y A s s i g n i n g P r o p s T o S t a t e ; 
 v a r   d i d W a r n A b o u t C o n t e x t T y p e A n d C o n t e x t T y p e s ; 
 v a r   d i d W a r n A b o u t I n v a l i d a t e C o n t e x t T y p e ; 
 
 { 
     d i d W a r n A b o u t S t a t e A s s i g n m e n t F o r C o m p o n e n t   =   n e w   S e t ( ) ; 
     d i d W a r n A b o u t U n i n i t i a l i z e d S t a t e   =   n e w   S e t ( ) ; 
     d i d W a r n A b o u t G e t S n a p s h o t B e f o r e U p d a t e W i t h o u t D i d U p d a t e   =   n e w   S e t ( ) ; 
     d i d W a r n A b o u t L e g a c y L i f e c y c l e s A n d D e r i v e d S t a t e   =   n e w   S e t ( ) ; 
     d i d W a r n A b o u t D i r e c t l y A s s i g n i n g P r o p s T o S t a t e   =   n e w   S e t ( ) ; 
     d i d W a r n A b o u t U n d e f i n e d D e r i v e d S t a t e   =   n e w   S e t ( ) ; 
     d i d W a r n A b o u t C o n t e x t T y p e A n d C o n t e x t T y p e s   =   n e w   S e t ( ) ; 
     d i d W a r n A b o u t I n v a l i d a t e C o n t e x t T y p e   =   n e w   S e t ( ) ; 
     v a r   d i d W a r n O n I n v a l i d C a l l b a c k   =   n e w   S e t ( ) ; 
 
     w a r n O n I n v a l i d C a l l b a c k   =   f u n c t i o n   ( c a l l b a c k ,   c a l l e r N a m e )   { 
         i f   ( c a l l b a c k   = = =   n u l l   | |   t y p e o f   c a l l b a c k   = = =   ' f u n c t i o n ' )   { 
             r e t u r n ; 
         } 
 
         v a r   k e y   =   c a l l e r N a m e   +   ' _ '   +   c a l l b a c k ; 
 
         i f   ( ! d i d W a r n O n I n v a l i d C a l l b a c k . h a s ( k e y ) )   { 
             d i d W a r n O n I n v a l i d C a l l b a c k . a d d ( k e y ) ; 
 
             e r r o r ( ' % s ( . . . ) :   E x p e c t e d   t h e   l a s t   o p t i o n a l   ` c a l l b a c k `   a r g u m e n t   t o   b e   a   '   +   ' f u n c t i o n .   I n s t e a d   r e c e i v e d :   % s . ' ,   c a l l e r N a m e ,   c a l l b a c k ) ; 
         } 
     } ; 
 
     w a r n O n U n d e f i n e d D e r i v e d S t a t e   =   f u n c t i o n   ( t y p e ,   p a r t i a l S t a t e )   { 
         i f   ( p a r t i a l S t a t e   = = =   u n d e f i n e d )   { 
             v a r   c o m p o n e n t N a m e   =   g e t C o m p o n e n t N a m e F r o m T y p e ( t y p e )   | |   ' C o m p o n e n t ' ; 
 
             i f   ( ! d i d W a r n A b o u t U n d e f i n e d D e r i v e d S t a t e . h a s ( c o m p o n e n t N a m e ) )   { 
                 d i d W a r n A b o u t U n d e f i n e d D e r i v e d S t a t e . a d d ( c o m p o n e n t N a m e ) ; 
 
                 e r r o r ( ' % s . g e t D e r i v e d S t a t e F r o m P r o p s ( ) :   A   v a l i d   s t a t e   o b j e c t   ( o r   n u l l )   m u s t   b e   r e t u r n e d .   '   +   ' Y o u   h a v e   r e t u r n e d   u n d e f i n e d . ' ,   c o m p o n e n t N a m e ) ; 
             } 
         } 
     } ;   / /   T h i s   i s   s o   g r o s s   b u t   i t ' s   a t   l e a s t   n o n - c r i t i c a l   a n d   c a n   b e   r e m o v e d   i f 
     / /   i t   c a u s e s   p r o b l e m s .   T h i s   i s   m e a n t   t o   g i v e   a   n i c e r   e r r o r   m e s s a g e   f o r 
     / /   R e a c t D O M 1 5 . u n s t a b l e _ r e n d e r S u b t r e e I n t o C o n t a i n e r ( r e a c t D O M 1 6 C o m p o n e n t , 
     / /   . . . ) )   w h i c h   o t h e r w i s e   t h r o w s   a   " _ p r o c e s s C h i l d C o n t e x t   i s   n o t   a   f u n c t i o n " 
     / /   e x c e p t i o n . 
 
 
     O b j e c t . d e f i n e P r o p e r t y ( f a k e I n t e r n a l I n s t a n c e ,   ' _ p r o c e s s C h i l d C o n t e x t ' ,   { 
         e n u m e r a b l e :   f a l s e , 
         v a l u e :   f u n c t i o n   ( )   { 
             t h r o w   n e w   E r r o r ( ' _ p r o c e s s C h i l d C o n t e x t   i s   n o t   a v a i l a b l e   i n   R e a c t   1 6 + .   T h i s   l i k e l y   '   +   ' m e a n s   y o u   h a v e   m u l t i p l e   c o p i e s   o f   R e a c t   a n d   a r e   a t t e m p t i n g   t o   n e s t   '   +   ' a   R e a c t   1 5   t r e e   i n s i d e   a   R e a c t   1 6   t r e e   u s i n g   '   +   " u n s t a b l e _ r e n d e r S u b t r e e I n t o C o n t a i n e r ,   w h i c h   i s n ' t   s u p p o r t e d .   T r y   "   +   ' t o   m a k e   s u r e   y o u   h a v e   o n l y   o n e   c o p y   o f   R e a c t   ( a n d   i d e a l l y ,   s w i t c h   '   +   ' t o   R e a c t D O M . c r e a t e P o r t a l ) . ' ) ; 
         } 
     } ) ; 
     O b j e c t . f r e e z e ( f a k e I n t e r n a l I n s t a n c e ) ; 
 } 
 
 f u n c t i o n   a p p l y D e r i v e d S t a t e F r o m P r o p s ( w o r k I n P r o g r e s s ,   c t o r ,   g e t D e r i v e d S t a t e F r o m P r o p s ,   n e x t P r o p s )   { 
     v a r   p r e v S t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
     v a r   p a r t i a l S t a t e   =   g e t D e r i v e d S t a t e F r o m P r o p s ( n e x t P r o p s ,   p r e v S t a t e ) ; 
 
     { 
         i f   (   w o r k I n P r o g r e s s . m o d e   &   S t r i c t L e g a c y M o d e )   { 
             s e t I s S t r i c t M o d e F o r D e v t o o l s ( t r u e ) ; 
 
             t r y   { 
                 / /   I n v o k e   t h e   f u n c t i o n   a n   e x t r a   t i m e   t o   h e l p   d e t e c t   s i d e - e f f e c t s . 
                 p a r t i a l S t a t e   =   g e t D e r i v e d S t a t e F r o m P r o p s ( n e x t P r o p s ,   p r e v S t a t e ) ; 
             }   f i n a l l y   { 
                 s e t I s S t r i c t M o d e F o r D e v t o o l s ( f a l s e ) ; 
             } 
         } 
 
         w a r n O n U n d e f i n e d D e r i v e d S t a t e ( c t o r ,   p a r t i a l S t a t e ) ; 
     }   / /   M e r g e   t h e   p a r t i a l   s t a t e   a n d   t h e   p r e v i o u s   s t a t e . 
 
 
     v a r   m e m o i z e d S t a t e   =   p a r t i a l S t a t e   = = =   n u l l   | |   p a r t i a l S t a t e   = = =   u n d e f i n e d   ?   p r e v S t a t e   :   a s s i g n ( { } ,   p r e v S t a t e ,   p a r t i a l S t a t e ) ; 
     w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   m e m o i z e d S t a t e ;   / /   O n c e   t h e   u p d a t e   q u e u e   i s   e m p t y ,   p e r s i s t   t h e   d e r i v e d   s t a t e   o n t o   t h e 
     / /   b a s e   s t a t e . 
 
     i f   ( w o r k I n P r o g r e s s . l a n e s   = = =   N o L a n e s )   { 
         / /   Q u e u e   i s   a l w a y s   n o n - n u l l   f o r   c l a s s e s 
         v a r   u p d a t e Q u e u e   =   w o r k I n P r o g r e s s . u p d a t e Q u e u e ; 
         u p d a t e Q u e u e . b a s e S t a t e   =   m e m o i z e d S t a t e ; 
     } 
 } 
 
 v a r   c l a s s C o m p o n e n t U p d a t e r   =   { 
     i s M o u n t e d :   i s M o u n t e d , 
     e n q u e u e S e t S t a t e :   f u n c t i o n   ( i n s t ,   p a y l o a d ,   c a l l b a c k )   { 
         v a r   f i b e r   =   g e t ( i n s t ) ; 
         v a r   e v e n t T i m e   =   r e q u e s t E v e n t T i m e ( ) ; 
         v a r   l a n e   =   r e q u e s t U p d a t e L a n e ( f i b e r ) ; 
         v a r   u p d a t e   =   c r e a t e U p d a t e ( e v e n t T i m e ,   l a n e ) ; 
         u p d a t e . p a y l o a d   =   p a y l o a d ; 
 
         i f   ( c a l l b a c k   ! = =   u n d e f i n e d   & &   c a l l b a c k   ! = =   n u l l )   { 
             { 
                 w a r n O n I n v a l i d C a l l b a c k ( c a l l b a c k ,   ' s e t S t a t e ' ) ; 
             } 
 
             u p d a t e . c a l l b a c k   =   c a l l b a c k ; 
         } 
 
         e n q u e u e U p d a t e ( f i b e r ,   u p d a t e ) ; 
         v a r   r o o t   =   s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   l a n e ,   e v e n t T i m e ) ; 
 
         i f   ( r o o t   ! = =   n u l l )   { 
             e n t a n g l e T r a n s i t i o n s ( r o o t ,   f i b e r ,   l a n e ) ; 
         } 
 
         { 
             m a r k S t a t e U p d a t e S c h e d u l e d ( f i b e r ,   l a n e ) ; 
         } 
     } , 
     e n q u e u e R e p l a c e S t a t e :   f u n c t i o n   ( i n s t ,   p a y l o a d ,   c a l l b a c k )   { 
         v a r   f i b e r   =   g e t ( i n s t ) ; 
         v a r   e v e n t T i m e   =   r e q u e s t E v e n t T i m e ( ) ; 
         v a r   l a n e   =   r e q u e s t U p d a t e L a n e ( f i b e r ) ; 
         v a r   u p d a t e   =   c r e a t e U p d a t e ( e v e n t T i m e ,   l a n e ) ; 
         u p d a t e . t a g   =   R e p l a c e S t a t e ; 
         u p d a t e . p a y l o a d   =   p a y l o a d ; 
 
         i f   ( c a l l b a c k   ! = =   u n d e f i n e d   & &   c a l l b a c k   ! = =   n u l l )   { 
             { 
                 w a r n O n I n v a l i d C a l l b a c k ( c a l l b a c k ,   ' r e p l a c e S t a t e ' ) ; 
             } 
 
             u p d a t e . c a l l b a c k   =   c a l l b a c k ; 
         } 
 
         e n q u e u e U p d a t e ( f i b e r ,   u p d a t e ) ; 
         v a r   r o o t   =   s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   l a n e ,   e v e n t T i m e ) ; 
 
         i f   ( r o o t   ! = =   n u l l )   { 
             e n t a n g l e T r a n s i t i o n s ( r o o t ,   f i b e r ,   l a n e ) ; 
         } 
 
         { 
             m a r k S t a t e U p d a t e S c h e d u l e d ( f i b e r ,   l a n e ) ; 
         } 
     } , 
     e n q u e u e F o r c e U p d a t e :   f u n c t i o n   ( i n s t ,   c a l l b a c k )   { 
         v a r   f i b e r   =   g e t ( i n s t ) ; 
         v a r   e v e n t T i m e   =   r e q u e s t E v e n t T i m e ( ) ; 
         v a r   l a n e   =   r e q u e s t U p d a t e L a n e ( f i b e r ) ; 
         v a r   u p d a t e   =   c r e a t e U p d a t e ( e v e n t T i m e ,   l a n e ) ; 
         u p d a t e . t a g   =   F o r c e U p d a t e ; 
 
         i f   ( c a l l b a c k   ! = =   u n d e f i n e d   & &   c a l l b a c k   ! = =   n u l l )   { 
             { 
                 w a r n O n I n v a l i d C a l l b a c k ( c a l l b a c k ,   ' f o r c e U p d a t e ' ) ; 
             } 
 
             u p d a t e . c a l l b a c k   =   c a l l b a c k ; 
         } 
 
         e n q u e u e U p d a t e ( f i b e r ,   u p d a t e ) ; 
         v a r   r o o t   =   s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   l a n e ,   e v e n t T i m e ) ; 
 
         i f   ( r o o t   ! = =   n u l l )   { 
             e n t a n g l e T r a n s i t i o n s ( r o o t ,   f i b e r ,   l a n e ) ; 
         } 
 
         { 
             m a r k F o r c e U p d a t e S c h e d u l e d ( f i b e r ,   l a n e ) ; 
         } 
     } 
 } ; 
 
 f u n c t i o n   c h e c k S h o u l d C o m p o n e n t U p d a t e ( w o r k I n P r o g r e s s ,   c t o r ,   o l d P r o p s ,   n e w P r o p s ,   o l d S t a t e ,   n e w S t a t e ,   n e x t C o n t e x t )   { 
     v a r   i n s t a n c e   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
 
     i f   ( t y p e o f   i n s t a n c e . s h o u l d C o m p o n e n t U p d a t e   = = =   ' f u n c t i o n ' )   { 
         v a r   s h o u l d U p d a t e   =   i n s t a n c e . s h o u l d C o m p o n e n t U p d a t e ( n e w P r o p s ,   n e w S t a t e ,   n e x t C o n t e x t ) ; 
 
         { 
             i f   (   w o r k I n P r o g r e s s . m o d e   &   S t r i c t L e g a c y M o d e )   { 
                 s e t I s S t r i c t M o d e F o r D e v t o o l s ( t r u e ) ; 
 
                 t r y   { 
                     / /   I n v o k e   t h e   f u n c t i o n   a n   e x t r a   t i m e   t o   h e l p   d e t e c t   s i d e - e f f e c t s . 
                     s h o u l d U p d a t e   =   i n s t a n c e . s h o u l d C o m p o n e n t U p d a t e ( n e w P r o p s ,   n e w S t a t e ,   n e x t C o n t e x t ) ; 
                 }   f i n a l l y   { 
                     s e t I s S t r i c t M o d e F o r D e v t o o l s ( f a l s e ) ; 
                 } 
             } 
 
             i f   ( s h o u l d U p d a t e   = = =   u n d e f i n e d )   { 
                 e r r o r ( ' % s . s h o u l d C o m p o n e n t U p d a t e ( ) :   R e t u r n e d   u n d e f i n e d   i n s t e a d   o f   a   '   +   ' b o o l e a n   v a l u e .   M a k e   s u r e   t o   r e t u r n   t r u e   o r   f a l s e . ' ,   g e t C o m p o n e n t N a m e F r o m T y p e ( c t o r )   | |   ' C o m p o n e n t ' ) ; 
             } 
         } 
 
         r e t u r n   s h o u l d U p d a t e ; 
     } 
 
     i f   ( c t o r . p r o t o t y p e   & &   c t o r . p r o t o t y p e . i s P u r e R e a c t C o m p o n e n t )   { 
         r e t u r n   ! s h a l l o w E q u a l ( o l d P r o p s ,   n e w P r o p s )   | |   ! s h a l l o w E q u a l ( o l d S t a t e ,   n e w S t a t e ) ; 
     } 
 
     r e t u r n   t r u e ; 
 } 
 
 f u n c t i o n   c h e c k C l a s s I n s t a n c e ( w o r k I n P r o g r e s s ,   c t o r ,   n e w P r o p s )   { 
     v a r   i n s t a n c e   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
 
     { 
         v a r   n a m e   =   g e t C o m p o n e n t N a m e F r o m T y p e ( c t o r )   | |   ' C o m p o n e n t ' ; 
         v a r   r e n d e r P r e s e n t   =   i n s t a n c e . r e n d e r ; 
 
         i f   ( ! r e n d e r P r e s e n t )   { 
             i f   ( c t o r . p r o t o t y p e   & &   t y p e o f   c t o r . p r o t o t y p e . r e n d e r   = = =   ' f u n c t i o n ' )   { 
                 e r r o r ( ' % s ( . . . ) :   N o   ` r e n d e r `   m e t h o d   f o u n d   o n   t h e   r e t u r n e d   c o m p o n e n t   '   +   ' i n s t a n c e :   d i d   y o u   a c c i d e n t a l l y   r e t u r n   a n   o b j e c t   f r o m   t h e   c o n s t r u c t o r ? ' ,   n a m e ) ; 
             }   e l s e   { 
                 e r r o r ( ' % s ( . . . ) :   N o   ` r e n d e r `   m e t h o d   f o u n d   o n   t h e   r e t u r n e d   c o m p o n e n t   '   +   ' i n s t a n c e :   y o u   m a y   h a v e   f o r g o t t e n   t o   d e f i n e   ` r e n d e r ` . ' ,   n a m e ) ; 
             } 
         } 
 
         i f   ( i n s t a n c e . g e t I n i t i a l S t a t e   & &   ! i n s t a n c e . g e t I n i t i a l S t a t e . i s R e a c t C l a s s A p p r o v e d   & &   ! i n s t a n c e . s t a t e )   { 
             e r r o r ( ' g e t I n i t i a l S t a t e   w a s   d e f i n e d   o n   % s ,   a   p l a i n   J a v a S c r i p t   c l a s s .   '   +   ' T h i s   i s   o n l y   s u p p o r t e d   f o r   c l a s s e s   c r e a t e d   u s i n g   R e a c t . c r e a t e C l a s s .   '   +   ' D i d   y o u   m e a n   t o   d e f i n e   a   s t a t e   p r o p e r t y   i n s t e a d ? ' ,   n a m e ) ; 
         } 
 
         i f   ( i n s t a n c e . g e t D e f a u l t P r o p s   & &   ! i n s t a n c e . g e t D e f a u l t P r o p s . i s R e a c t C l a s s A p p r o v e d )   { 
             e r r o r ( ' g e t D e f a u l t P r o p s   w a s   d e f i n e d   o n   % s ,   a   p l a i n   J a v a S c r i p t   c l a s s .   '   +   ' T h i s   i s   o n l y   s u p p o r t e d   f o r   c l a s s e s   c r e a t e d   u s i n g   R e a c t . c r e a t e C l a s s .   '   +   ' U s e   a   s t a t i c   p r o p e r t y   t o   d e f i n e   d e f a u l t P r o p s   i n s t e a d . ' ,   n a m e ) ; 
         } 
 
         i f   ( i n s t a n c e . p r o p T y p e s )   { 
             e r r o r ( ' p r o p T y p e s   w a s   d e f i n e d   a s   a n   i n s t a n c e   p r o p e r t y   o n   % s .   U s e   a   s t a t i c   '   +   ' p r o p e r t y   t o   d e f i n e   p r o p T y p e s   i n s t e a d . ' ,   n a m e ) ; 
         } 
 
         i f   ( i n s t a n c e . c o n t e x t T y p e )   { 
             e r r o r ( ' c o n t e x t T y p e   w a s   d e f i n e d   a s   a n   i n s t a n c e   p r o p e r t y   o n   % s .   U s e   a   s t a t i c   '   +   ' p r o p e r t y   t o   d e f i n e   c o n t e x t T y p e   i n s t e a d . ' ,   n a m e ) ; 
         } 
 
         { 
             i f   ( i n s t a n c e . c o n t e x t T y p e s )   { 
                 e r r o r ( ' c o n t e x t T y p e s   w a s   d e f i n e d   a s   a n   i n s t a n c e   p r o p e r t y   o n   % s .   U s e   a   s t a t i c   '   +   ' p r o p e r t y   t o   d e f i n e   c o n t e x t T y p e s   i n s t e a d . ' ,   n a m e ) ; 
             } 
 
             i f   ( c t o r . c o n t e x t T y p e   & &   c t o r . c o n t e x t T y p e s   & &   ! d i d W a r n A b o u t C o n t e x t T y p e A n d C o n t e x t T y p e s . h a s ( c t o r ) )   { 
                 d i d W a r n A b o u t C o n t e x t T y p e A n d C o n t e x t T y p e s . a d d ( c t o r ) ; 
 
                 e r r o r ( ' % s   d e c l a r e s   b o t h   c o n t e x t T y p e s   a n d   c o n t e x t T y p e   s t a t i c   p r o p e r t i e s .   '   +   ' T h e   l e g a c y   c o n t e x t T y p e s   p r o p e r t y   w i l l   b e   i g n o r e d . ' ,   n a m e ) ; 
             } 
         } 
 
         i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t S h o u l d U p d a t e   = = =   ' f u n c t i o n ' )   { 
             e r r o r ( ' % s   h a s   a   m e t h o d   c a l l e d   '   +   ' c o m p o n e n t S h o u l d U p d a t e ( ) .   D i d   y o u   m e a n   s h o u l d C o m p o n e n t U p d a t e ( ) ?   '   +   ' T h e   n a m e   i s   p h r a s e d   a s   a   q u e s t i o n   b e c a u s e   t h e   f u n c t i o n   i s   '   +   ' e x p e c t e d   t o   r e t u r n   a   v a l u e . ' ,   n a m e ) ; 
         } 
 
         i f   ( c t o r . p r o t o t y p e   & &   c t o r . p r o t o t y p e . i s P u r e R e a c t C o m p o n e n t   & &   t y p e o f   i n s t a n c e . s h o u l d C o m p o n e n t U p d a t e   ! = =   ' u n d e f i n e d ' )   { 
             e r r o r ( ' % s   h a s   a   m e t h o d   c a l l e d   s h o u l d C o m p o n e n t U p d a t e ( ) .   '   +   ' s h o u l d C o m p o n e n t U p d a t e   s h o u l d   n o t   b e   u s e d   w h e n   e x t e n d i n g   R e a c t . P u r e C o m p o n e n t .   '   +   ' P l e a s e   e x t e n d   R e a c t . C o m p o n e n t   i f   s h o u l d C o m p o n e n t U p d a t e   i s   u s e d . ' ,   g e t C o m p o n e n t N a m e F r o m T y p e ( c t o r )   | |   ' A   p u r e   c o m p o n e n t ' ) ; 
         } 
 
         i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t D i d U n m o u n t   = = =   ' f u n c t i o n ' )   { 
             e r r o r ( ' % s   h a s   a   m e t h o d   c a l l e d   '   +   ' c o m p o n e n t D i d U n m o u n t ( ) .   B u t   t h e r e   i s   n o   s u c h   l i f e c y c l e   m e t h o d .   '   +   ' D i d   y o u   m e a n   c o m p o n e n t W i l l U n m o u n t ( ) ? ' ,   n a m e ) ; 
         } 
 
         i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t D i d R e c e i v e P r o p s   = = =   ' f u n c t i o n ' )   { 
             e r r o r ( ' % s   h a s   a   m e t h o d   c a l l e d   '   +   ' c o m p o n e n t D i d R e c e i v e P r o p s ( ) .   B u t   t h e r e   i s   n o   s u c h   l i f e c y c l e   m e t h o d .   '   +   ' I f   y o u   m e a n t   t o   u p d a t e   t h e   s t a t e   i n   r e s p o n s e   t o   c h a n g i n g   p r o p s ,   '   +   ' u s e   c o m p o n e n t W i l l R e c e i v e P r o p s ( ) .   I f   y o u   m e a n t   t o   f e t c h   d a t a   o r   '   +   ' r u n   s i d e - e f f e c t s   o r   m u t a t i o n s   a f t e r   R e a c t   h a s   u p d a t e d   t h e   U I ,   u s e   c o m p o n e n t D i d U p d a t e ( ) . ' ,   n a m e ) ; 
         } 
 
         i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t W i l l R e c i e v e P r o p s   = = =   ' f u n c t i o n ' )   { 
             e r r o r ( ' % s   h a s   a   m e t h o d   c a l l e d   '   +   ' c o m p o n e n t W i l l R e c i e v e P r o p s ( ) .   D i d   y o u   m e a n   c o m p o n e n t W i l l R e c e i v e P r o p s ( ) ? ' ,   n a m e ) ; 
         } 
 
         i f   ( t y p e o f   i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l R e c i e v e P r o p s   = = =   ' f u n c t i o n ' )   { 
             e r r o r ( ' % s   h a s   a   m e t h o d   c a l l e d   '   +   ' U N S A F E _ c o m p o n e n t W i l l R e c i e v e P r o p s ( ) .   D i d   y o u   m e a n   U N S A F E _ c o m p o n e n t W i l l R e c e i v e P r o p s ( ) ? ' ,   n a m e ) ; 
         } 
 
         v a r   h a s M u t a t e d P r o p s   =   i n s t a n c e . p r o p s   ! = =   n e w P r o p s ; 
 
         i f   ( i n s t a n c e . p r o p s   ! = =   u n d e f i n e d   & &   h a s M u t a t e d P r o p s )   { 
             e r r o r ( ' % s ( . . . ) :   W h e n   c a l l i n g   s u p e r ( )   i n   ` % s ` ,   m a k e   s u r e   t o   p a s s   '   +   " u p   t h e   s a m e   p r o p s   t h a t   y o u r   c o m p o n e n t ' s   c o n s t r u c t o r   w a s   p a s s e d . " ,   n a m e ,   n a m e ) ; 
         } 
 
         i f   ( i n s t a n c e . d e f a u l t P r o p s )   { 
             e r r o r ( ' S e t t i n g   d e f a u l t P r o p s   a s   a n   i n s t a n c e   p r o p e r t y   o n   % s   i s   n o t   s u p p o r t e d   a n d   w i l l   b e   i g n o r e d . '   +   '   I n s t e a d ,   d e f i n e   d e f a u l t P r o p s   a s   a   s t a t i c   p r o p e r t y   o n   % s . ' ,   n a m e ,   n a m e ) ; 
         } 
 
         i f   ( t y p e o f   i n s t a n c e . g e t S n a p s h o t B e f o r e U p d a t e   = = =   ' f u n c t i o n '   & &   t y p e o f   i n s t a n c e . c o m p o n e n t D i d U p d a t e   ! = =   ' f u n c t i o n '   & &   ! d i d W a r n A b o u t G e t S n a p s h o t B e f o r e U p d a t e W i t h o u t D i d U p d a t e . h a s ( c t o r ) )   { 
             d i d W a r n A b o u t G e t S n a p s h o t B e f o r e U p d a t e W i t h o u t D i d U p d a t e . a d d ( c t o r ) ; 
 
             e r r o r ( ' % s :   g e t S n a p s h o t B e f o r e U p d a t e ( )   s h o u l d   b e   u s e d   w i t h   c o m p o n e n t D i d U p d a t e ( ) .   '   +   ' T h i s   c o m p o n e n t   d e f i n e s   g e t S n a p s h o t B e f o r e U p d a t e ( )   o n l y . ' ,   g e t C o m p o n e n t N a m e F r o m T y p e ( c t o r ) ) ; 
         } 
 
         i f   ( t y p e o f   i n s t a n c e . g e t D e r i v e d S t a t e F r o m P r o p s   = = =   ' f u n c t i o n ' )   { 
             e r r o r ( ' % s :   g e t D e r i v e d S t a t e F r o m P r o p s ( )   i s   d e f i n e d   a s   a n   i n s t a n c e   m e t h o d   '   +   ' a n d   w i l l   b e   i g n o r e d .   I n s t e a d ,   d e c l a r e   i t   a s   a   s t a t i c   m e t h o d . ' ,   n a m e ) ; 
         } 
 
         i f   ( t y p e o f   i n s t a n c e . g e t D e r i v e d S t a t e F r o m E r r o r   = = =   ' f u n c t i o n ' )   { 
             e r r o r ( ' % s :   g e t D e r i v e d S t a t e F r o m E r r o r ( )   i s   d e f i n e d   a s   a n   i n s t a n c e   m e t h o d   '   +   ' a n d   w i l l   b e   i g n o r e d .   I n s t e a d ,   d e c l a r e   i t   a s   a   s t a t i c   m e t h o d . ' ,   n a m e ) ; 
         } 
 
         i f   ( t y p e o f   c t o r . g e t S n a p s h o t B e f o r e U p d a t e   = = =   ' f u n c t i o n ' )   { 
             e r r o r ( ' % s :   g e t S n a p s h o t B e f o r e U p d a t e ( )   i s   d e f i n e d   a s   a   s t a t i c   m e t h o d   '   +   ' a n d   w i l l   b e   i g n o r e d .   I n s t e a d ,   d e c l a r e   i t   a s   a n   i n s t a n c e   m e t h o d . ' ,   n a m e ) ; 
         } 
 
         v a r   _ s t a t e   =   i n s t a n c e . s t a t e ; 
 
         i f   ( _ s t a t e   & &   ( t y p e o f   _ s t a t e   ! = =   ' o b j e c t '   | |   i s A r r a y ( _ s t a t e ) ) )   { 
             e r r o r ( ' % s . s t a t e :   m u s t   b e   s e t   t o   a n   o b j e c t   o r   n u l l ' ,   n a m e ) ; 
         } 
 
         i f   ( t y p e o f   i n s t a n c e . g e t C h i l d C o n t e x t   = = =   ' f u n c t i o n '   & &   t y p e o f   c t o r . c h i l d C o n t e x t T y p e s   ! = =   ' o b j e c t ' )   { 
             e r r o r ( ' % s . g e t C h i l d C o n t e x t ( ) :   c h i l d C o n t e x t T y p e s   m u s t   b e   d e f i n e d   i n   o r d e r   t o   '   +   ' u s e   g e t C h i l d C o n t e x t ( ) . ' ,   n a m e ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   a d o p t C l a s s I n s t a n c e ( w o r k I n P r o g r e s s ,   i n s t a n c e )   { 
     i n s t a n c e . u p d a t e r   =   c l a s s C o m p o n e n t U p d a t e r ; 
     w o r k I n P r o g r e s s . s t a t e N o d e   =   i n s t a n c e ;   / /   T h e   i n s t a n c e   n e e d s   a c c e s s   t o   t h e   f i b e r   s o   t h a t   i t   c a n   s c h e d u l e   u p d a t e s 
 
     s e t ( i n s t a n c e ,   w o r k I n P r o g r e s s ) ; 
 
     { 
         i n s t a n c e . _ r e a c t I n t e r n a l I n s t a n c e   =   f a k e I n t e r n a l I n s t a n c e ; 
     } 
 } 
 
 f u n c t i o n   c o n s t r u c t C l a s s I n s t a n c e ( w o r k I n P r o g r e s s ,   c t o r ,   p r o p s )   { 
     v a r   i s L e g a c y C o n t e x t C o n s u m e r   =   f a l s e ; 
     v a r   u n m a s k e d C o n t e x t   =   e m p t y C o n t e x t O b j e c t ; 
     v a r   c o n t e x t   =   e m p t y C o n t e x t O b j e c t ; 
     v a r   c o n t e x t T y p e   =   c t o r . c o n t e x t T y p e ; 
 
     { 
         i f   ( ' c o n t e x t T y p e '   i n   c t o r )   { 
             v a r   i s V a l i d   =   / /   A l l o w   n u l l   f o r   c o n d i t i o n a l   d e c l a r a t i o n 
             c o n t e x t T y p e   = = =   n u l l   | |   c o n t e x t T y p e   ! = =   u n d e f i n e d   & &   c o n t e x t T y p e . $ $ t y p e o f   = = =   R E A C T _ C O N T E X T _ T Y P E   & &   c o n t e x t T y p e . _ c o n t e x t   = = =   u n d e f i n e d ;   / /   N o t   a   < C o n t e x t . C o n s u m e r > 
 
             i f   ( ! i s V a l i d   & &   ! d i d W a r n A b o u t I n v a l i d a t e C o n t e x t T y p e . h a s ( c t o r ) )   { 
                 d i d W a r n A b o u t I n v a l i d a t e C o n t e x t T y p e . a d d ( c t o r ) ; 
                 v a r   a d d e n d u m   =   ' ' ; 
 
                 i f   ( c o n t e x t T y p e   = = =   u n d e f i n e d )   { 
                     a d d e n d u m   =   '   H o w e v e r ,   i t   i s   s e t   t o   u n d e f i n e d .   '   +   ' T h i s   c a n   b e   c a u s e d   b y   a   t y p o   o r   b y   m i x i n g   u p   n a m e d   a n d   d e f a u l t   i m p o r t s .   '   +   ' T h i s   c a n   a l s o   h a p p e n   d u e   t o   a   c i r c u l a r   d e p e n d e n c y ,   s o   '   +   ' t r y   m o v i n g   t h e   c r e a t e C o n t e x t ( )   c a l l   t o   a   s e p a r a t e   f i l e . ' ; 
                 }   e l s e   i f   ( t y p e o f   c o n t e x t T y p e   ! = =   ' o b j e c t ' )   { 
                     a d d e n d u m   =   '   H o w e v e r ,   i t   i s   s e t   t o   a   '   +   t y p e o f   c o n t e x t T y p e   +   ' . ' ; 
                 }   e l s e   i f   ( c o n t e x t T y p e . $ $ t y p e o f   = = =   R E A C T _ P R O V I D E R _ T Y P E )   { 
                     a d d e n d u m   =   '   D i d   y o u   a c c i d e n t a l l y   p a s s   t h e   C o n t e x t . P r o v i d e r   i n s t e a d ? ' ; 
                 }   e l s e   i f   ( c o n t e x t T y p e . _ c o n t e x t   ! = =   u n d e f i n e d )   { 
                     / /   < C o n t e x t . C o n s u m e r > 
                     a d d e n d u m   =   '   D i d   y o u   a c c i d e n t a l l y   p a s s   t h e   C o n t e x t . C o n s u m e r   i n s t e a d ? ' ; 
                 }   e l s e   { 
                     a d d e n d u m   =   '   H o w e v e r ,   i t   i s   s e t   t o   a n   o b j e c t   w i t h   k e y s   { '   +   O b j e c t . k e y s ( c o n t e x t T y p e ) . j o i n ( ' ,   ' )   +   ' } . ' ; 
                 } 
 
                 e r r o r ( ' % s   d e f i n e s   a n   i n v a l i d   c o n t e x t T y p e .   '   +   ' c o n t e x t T y p e   s h o u l d   p o i n t   t o   t h e   C o n t e x t   o b j e c t   r e t u r n e d   b y   R e a c t . c r e a t e C o n t e x t ( ) . % s ' ,   g e t C o m p o n e n t N a m e F r o m T y p e ( c t o r )   | |   ' C o m p o n e n t ' ,   a d d e n d u m ) ; 
             } 
         } 
     } 
 
     i f   ( t y p e o f   c o n t e x t T y p e   = = =   ' o b j e c t '   & &   c o n t e x t T y p e   ! = =   n u l l )   { 
         c o n t e x t   =   r e a d C o n t e x t ( c o n t e x t T y p e ) ; 
     }   e l s e   { 
         u n m a s k e d C o n t e x t   =   g e t U n m a s k e d C o n t e x t ( w o r k I n P r o g r e s s ,   c t o r ,   t r u e ) ; 
         v a r   c o n t e x t T y p e s   =   c t o r . c o n t e x t T y p e s ; 
         i s L e g a c y C o n t e x t C o n s u m e r   =   c o n t e x t T y p e s   ! = =   n u l l   & &   c o n t e x t T y p e s   ! = =   u n d e f i n e d ; 
         c o n t e x t   =   i s L e g a c y C o n t e x t C o n s u m e r   ?   g e t M a s k e d C o n t e x t ( w o r k I n P r o g r e s s ,   u n m a s k e d C o n t e x t )   :   e m p t y C o n t e x t O b j e c t ; 
     } 
 
     v a r   i n s t a n c e   =   n e w   c t o r ( p r o p s ,   c o n t e x t ) ;   / /   I n s t a n t i a t e   t w i c e   t o   h e l p   d e t e c t   s i d e - e f f e c t s . 
 
     { 
         i f   (   w o r k I n P r o g r e s s . m o d e   &   S t r i c t L e g a c y M o d e )   { 
             s e t I s S t r i c t M o d e F o r D e v t o o l s ( t r u e ) ; 
 
             t r y   { 
                 i n s t a n c e   =   n e w   c t o r ( p r o p s ,   c o n t e x t ) ;   / /   e s l i n t - d i s a b l e - l i n e   n o - n e w 
             }   f i n a l l y   { 
                 s e t I s S t r i c t M o d e F o r D e v t o o l s ( f a l s e ) ; 
             } 
         } 
     } 
 
     v a r   s t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   i n s t a n c e . s t a t e   ! = =   n u l l   & &   i n s t a n c e . s t a t e   ! = =   u n d e f i n e d   ?   i n s t a n c e . s t a t e   :   n u l l ; 
     a d o p t C l a s s I n s t a n c e ( w o r k I n P r o g r e s s ,   i n s t a n c e ) ; 
 
     { 
         i f   ( t y p e o f   c t o r . g e t D e r i v e d S t a t e F r o m P r o p s   = = =   ' f u n c t i o n '   & &   s t a t e   = = =   n u l l )   { 
             v a r   c o m p o n e n t N a m e   =   g e t C o m p o n e n t N a m e F r o m T y p e ( c t o r )   | |   ' C o m p o n e n t ' ; 
 
             i f   ( ! d i d W a r n A b o u t U n i n i t i a l i z e d S t a t e . h a s ( c o m p o n e n t N a m e ) )   { 
                 d i d W a r n A b o u t U n i n i t i a l i z e d S t a t e . a d d ( c o m p o n e n t N a m e ) ; 
 
                 e r r o r ( ' ` % s `   u s e s   ` g e t D e r i v e d S t a t e F r o m P r o p s `   b u t   i t s   i n i t i a l   s t a t e   i s   '   +   ' % s .   T h i s   i s   n o t   r e c o m m e n d e d .   I n s t e a d ,   d e f i n e   t h e   i n i t i a l   s t a t e   b y   '   +   ' a s s i g n i n g   a n   o b j e c t   t o   ` t h i s . s t a t e `   i n   t h e   c o n s t r u c t o r   o f   ` % s ` .   '   +   ' T h i s   e n s u r e s   t h a t   ` g e t D e r i v e d S t a t e F r o m P r o p s `   a r g u m e n t s   h a v e   a   c o n s i s t e n t   s h a p e . ' ,   c o m p o n e n t N a m e ,   i n s t a n c e . s t a t e   = = =   n u l l   ?   ' n u l l '   :   ' u n d e f i n e d ' ,   c o m p o n e n t N a m e ) ; 
             } 
         }   / /   I f   n e w   c o m p o n e n t   A P I s   a r e   d e f i n e d ,   " u n s a f e "   l i f e c y c l e s   w o n ' t   b e   c a l l e d . 
         / /   W a r n   a b o u t   t h e s e   l i f e c y c l e s   i f   t h e y   a r e   p r e s e n t . 
         / /   D o n ' t   w a r n   a b o u t   r e a c t - l i f e c y c l e s - c o m p a t   p o l y f i l l e d   m e t h o d s   t h o u g h . 
 
 
         i f   ( t y p e o f   c t o r . g e t D e r i v e d S t a t e F r o m P r o p s   = = =   ' f u n c t i o n '   | |   t y p e o f   i n s t a n c e . g e t S n a p s h o t B e f o r e U p d a t e   = = =   ' f u n c t i o n ' )   { 
             v a r   f o u n d W i l l M o u n t N a m e   =   n u l l ; 
             v a r   f o u n d W i l l R e c e i v e P r o p s N a m e   =   n u l l ; 
             v a r   f o u n d W i l l U p d a t e N a m e   =   n u l l ; 
 
             i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t W i l l M o u n t   = = =   ' f u n c t i o n '   & &   i n s t a n c e . c o m p o n e n t W i l l M o u n t . _ _ s u p p r e s s D e p r e c a t i o n W a r n i n g   ! = =   t r u e )   { 
                 f o u n d W i l l M o u n t N a m e   =   ' c o m p o n e n t W i l l M o u n t ' ; 
             }   e l s e   i f   ( t y p e o f   i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l M o u n t   = = =   ' f u n c t i o n ' )   { 
                 f o u n d W i l l M o u n t N a m e   =   ' U N S A F E _ c o m p o n e n t W i l l M o u n t ' ; 
             } 
 
             i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t W i l l R e c e i v e P r o p s   = = =   ' f u n c t i o n '   & &   i n s t a n c e . c o m p o n e n t W i l l R e c e i v e P r o p s . _ _ s u p p r e s s D e p r e c a t i o n W a r n i n g   ! = =   t r u e )   { 
                 f o u n d W i l l R e c e i v e P r o p s N a m e   =   ' c o m p o n e n t W i l l R e c e i v e P r o p s ' ; 
             }   e l s e   i f   ( t y p e o f   i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l R e c e i v e P r o p s   = = =   ' f u n c t i o n ' )   { 
                 f o u n d W i l l R e c e i v e P r o p s N a m e   =   ' U N S A F E _ c o m p o n e n t W i l l R e c e i v e P r o p s ' ; 
             } 
 
             i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t W i l l U p d a t e   = = =   ' f u n c t i o n '   & &   i n s t a n c e . c o m p o n e n t W i l l U p d a t e . _ _ s u p p r e s s D e p r e c a t i o n W a r n i n g   ! = =   t r u e )   { 
                 f o u n d W i l l U p d a t e N a m e   =   ' c o m p o n e n t W i l l U p d a t e ' ; 
             }   e l s e   i f   ( t y p e o f   i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l U p d a t e   = = =   ' f u n c t i o n ' )   { 
                 f o u n d W i l l U p d a t e N a m e   =   ' U N S A F E _ c o m p o n e n t W i l l U p d a t e ' ; 
             } 
 
             i f   ( f o u n d W i l l M o u n t N a m e   ! = =   n u l l   | |   f o u n d W i l l R e c e i v e P r o p s N a m e   ! = =   n u l l   | |   f o u n d W i l l U p d a t e N a m e   ! = =   n u l l )   { 
                 v a r   _ c o m p o n e n t N a m e   =   g e t C o m p o n e n t N a m e F r o m T y p e ( c t o r )   | |   ' C o m p o n e n t ' ; 
 
                 v a r   n e w A p i N a m e   =   t y p e o f   c t o r . g e t D e r i v e d S t a t e F r o m P r o p s   = = =   ' f u n c t i o n '   ?   ' g e t D e r i v e d S t a t e F r o m P r o p s ( ) '   :   ' g e t S n a p s h o t B e f o r e U p d a t e ( ) ' ; 
 
                 i f   ( ! d i d W a r n A b o u t L e g a c y L i f e c y c l e s A n d D e r i v e d S t a t e . h a s ( _ c o m p o n e n t N a m e ) )   { 
                     d i d W a r n A b o u t L e g a c y L i f e c y c l e s A n d D e r i v e d S t a t e . a d d ( _ c o m p o n e n t N a m e ) ; 
 
                     e r r o r ( ' U n s a f e   l e g a c y   l i f e c y c l e s   w i l l   n o t   b e   c a l l e d   f o r   c o m p o n e n t s   u s i n g   n e w   c o m p o n e n t   A P I s . \ n \ n '   +   ' % s   u s e s   % s   b u t   a l s o   c o n t a i n s   t h e   f o l l o w i n g   l e g a c y   l i f e c y c l e s : % s % s % s \ n \ n '   +   ' T h e   a b o v e   l i f e c y c l e s   s h o u l d   b e   r e m o v e d .   L e a r n   m o r e   a b o u t   t h i s   w a r n i n g   h e r e : \ n '   +   ' h t t p s : / / r e a c t j s . o r g / l i n k / u n s a f e - c o m p o n e n t - l i f e c y c l e s ' ,   _ c o m p o n e n t N a m e ,   n e w A p i N a m e ,   f o u n d W i l l M o u n t N a m e   ! = =   n u l l   ?   " \ n     "   +   f o u n d W i l l M o u n t N a m e   :   ' ' ,   f o u n d W i l l R e c e i v e P r o p s N a m e   ! = =   n u l l   ?   " \ n     "   +   f o u n d W i l l R e c e i v e P r o p s N a m e   :   ' ' ,   f o u n d W i l l U p d a t e N a m e   ! = =   n u l l   ?   " \ n     "   +   f o u n d W i l l U p d a t e N a m e   :   ' ' ) ; 
                 } 
             } 
         } 
     }   / /   C a c h e   u n m a s k e d   c o n t e x t   s o   w e   c a n   a v o i d   r e c r e a t i n g   m a s k e d   c o n t e x t   u n l e s s   n e c e s s a r y . 
     / /   R e a c t F i b e r C o n t e x t   u s u a l l y   u p d a t e s   t h i s   c a c h e   b u t   c a n ' t   f o r   n e w l y - c r e a t e d   i n s t a n c e s . 
 
 
     i f   ( i s L e g a c y C o n t e x t C o n s u m e r )   { 
         c a c h e C o n t e x t ( w o r k I n P r o g r e s s ,   u n m a s k e d C o n t e x t ,   c o n t e x t ) ; 
     } 
 
     r e t u r n   i n s t a n c e ; 
 } 
 
 f u n c t i o n   c a l l C o m p o n e n t W i l l M o u n t ( w o r k I n P r o g r e s s ,   i n s t a n c e )   { 
     v a r   o l d S t a t e   =   i n s t a n c e . s t a t e ; 
 
     i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t W i l l M o u n t   = = =   ' f u n c t i o n ' )   { 
         i n s t a n c e . c o m p o n e n t W i l l M o u n t ( ) ; 
     } 
 
     i f   ( t y p e o f   i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l M o u n t   = = =   ' f u n c t i o n ' )   { 
         i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l M o u n t ( ) ; 
     } 
 
     i f   ( o l d S t a t e   ! = =   i n s t a n c e . s t a t e )   { 
         { 
             e r r o r ( ' % s . c o m p o n e n t W i l l M o u n t ( ) :   A s s i g n i n g   d i r e c t l y   t o   t h i s . s t a t e   i s   '   +   " d e p r e c a t e d   ( e x c e p t   i n s i d e   a   c o m p o n e n t ' s   "   +   ' c o n s t r u c t o r ) .   U s e   s e t S t a t e   i n s t e a d . ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( w o r k I n P r o g r e s s )   | |   ' C o m p o n e n t ' ) ; 
         } 
 
         c l a s s C o m p o n e n t U p d a t e r . e n q u e u e R e p l a c e S t a t e ( i n s t a n c e ,   i n s t a n c e . s t a t e ,   n u l l ) ; 
     } 
 } 
 
 f u n c t i o n   c a l l C o m p o n e n t W i l l R e c e i v e P r o p s ( w o r k I n P r o g r e s s ,   i n s t a n c e ,   n e w P r o p s ,   n e x t C o n t e x t )   { 
     v a r   o l d S t a t e   =   i n s t a n c e . s t a t e ; 
 
     i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t W i l l R e c e i v e P r o p s   = = =   ' f u n c t i o n ' )   { 
         i n s t a n c e . c o m p o n e n t W i l l R e c e i v e P r o p s ( n e w P r o p s ,   n e x t C o n t e x t ) ; 
     } 
 
     i f   ( t y p e o f   i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l R e c e i v e P r o p s   = = =   ' f u n c t i o n ' )   { 
         i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l R e c e i v e P r o p s ( n e w P r o p s ,   n e x t C o n t e x t ) ; 
     } 
 
     i f   ( i n s t a n c e . s t a t e   ! = =   o l d S t a t e )   { 
         { 
             v a r   c o m p o n e n t N a m e   =   g e t C o m p o n e n t N a m e F r o m F i b e r ( w o r k I n P r o g r e s s )   | |   ' C o m p o n e n t ' ; 
 
             i f   ( ! d i d W a r n A b o u t S t a t e A s s i g n m e n t F o r C o m p o n e n t . h a s ( c o m p o n e n t N a m e ) )   { 
                 d i d W a r n A b o u t S t a t e A s s i g n m e n t F o r C o m p o n e n t . a d d ( c o m p o n e n t N a m e ) ; 
 
                 e r r o r ( ' % s . c o m p o n e n t W i l l R e c e i v e P r o p s ( ) :   A s s i g n i n g   d i r e c t l y   t o   '   +   " t h i s . s t a t e   i s   d e p r e c a t e d   ( e x c e p t   i n s i d e   a   c o m p o n e n t ' s   "   +   ' c o n s t r u c t o r ) .   U s e   s e t S t a t e   i n s t e a d . ' ,   c o m p o n e n t N a m e ) ; 
             } 
         } 
 
         c l a s s C o m p o n e n t U p d a t e r . e n q u e u e R e p l a c e S t a t e ( i n s t a n c e ,   i n s t a n c e . s t a t e ,   n u l l ) ; 
     } 
 }   / /   I n v o k e s   t h e   m o u n t   l i f e - c y c l e s   o n   a   p r e v i o u s l y   n e v e r   r e n d e r e d   i n s t a n c e . 
 
 
 f u n c t i o n   m o u n t C l a s s I n s t a n c e ( w o r k I n P r o g r e s s ,   c t o r ,   n e w P r o p s ,   r e n d e r L a n e s )   { 
     { 
         c h e c k C l a s s I n s t a n c e ( w o r k I n P r o g r e s s ,   c t o r ,   n e w P r o p s ) ; 
     } 
 
     v a r   i n s t a n c e   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
     i n s t a n c e . p r o p s   =   n e w P r o p s ; 
     i n s t a n c e . s t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
     i n s t a n c e . r e f s   =   e m p t y R e f s O b j e c t ; 
     i n i t i a l i z e U p d a t e Q u e u e ( w o r k I n P r o g r e s s ) ; 
     v a r   c o n t e x t T y p e   =   c t o r . c o n t e x t T y p e ; 
 
     i f   ( t y p e o f   c o n t e x t T y p e   = = =   ' o b j e c t '   & &   c o n t e x t T y p e   ! = =   n u l l )   { 
         i n s t a n c e . c o n t e x t   =   r e a d C o n t e x t ( c o n t e x t T y p e ) ; 
     }   e l s e   { 
         v a r   u n m a s k e d C o n t e x t   =   g e t U n m a s k e d C o n t e x t ( w o r k I n P r o g r e s s ,   c t o r ,   t r u e ) ; 
         i n s t a n c e . c o n t e x t   =   g e t M a s k e d C o n t e x t ( w o r k I n P r o g r e s s ,   u n m a s k e d C o n t e x t ) ; 
     } 
 
     { 
         i f   ( i n s t a n c e . s t a t e   = = =   n e w P r o p s )   { 
             v a r   c o m p o n e n t N a m e   =   g e t C o m p o n e n t N a m e F r o m T y p e ( c t o r )   | |   ' C o m p o n e n t ' ; 
 
             i f   ( ! d i d W a r n A b o u t D i r e c t l y A s s i g n i n g P r o p s T o S t a t e . h a s ( c o m p o n e n t N a m e ) )   { 
                 d i d W a r n A b o u t D i r e c t l y A s s i g n i n g P r o p s T o S t a t e . a d d ( c o m p o n e n t N a m e ) ; 
 
                 e r r o r ( ' % s :   I t   i s   n o t   r e c o m m e n d e d   t o   a s s i g n   p r o p s   d i r e c t l y   t o   s t a t e   '   +   " b e c a u s e   u p d a t e s   t o   p r o p s   w o n ' t   b e   r e f l e c t e d   i n   s t a t e .   "   +   ' I n   m o s t   c a s e s ,   i t   i s   b e t t e r   t o   u s e   p r o p s   d i r e c t l y . ' ,   c o m p o n e n t N a m e ) ; 
             } 
         } 
 
         i f   ( w o r k I n P r o g r e s s . m o d e   &   S t r i c t L e g a c y M o d e )   { 
             R e a c t S t r i c t M o d e W a r n i n g s . r e c o r d L e g a c y C o n t e x t W a r n i n g ( w o r k I n P r o g r e s s ,   i n s t a n c e ) ; 
         } 
 
         { 
             R e a c t S t r i c t M o d e W a r n i n g s . r e c o r d U n s a f e L i f e c y c l e W a r n i n g s ( w o r k I n P r o g r e s s ,   i n s t a n c e ) ; 
         } 
     } 
 
     i n s t a n c e . s t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
     v a r   g e t D e r i v e d S t a t e F r o m P r o p s   =   c t o r . g e t D e r i v e d S t a t e F r o m P r o p s ; 
 
     i f   ( t y p e o f   g e t D e r i v e d S t a t e F r o m P r o p s   = = =   ' f u n c t i o n ' )   { 
         a p p l y D e r i v e d S t a t e F r o m P r o p s ( w o r k I n P r o g r e s s ,   c t o r ,   g e t D e r i v e d S t a t e F r o m P r o p s ,   n e w P r o p s ) ; 
         i n s t a n c e . s t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
     }   / /   I n   o r d e r   t o   s u p p o r t   r e a c t - l i f e c y c l e s - c o m p a t   p o l y f i l l e d   c o m p o n e n t s , 
     / /   U n s a f e   l i f e c y c l e s   s h o u l d   n o t   b e   i n v o k e d   f o r   c o m p o n e n t s   u s i n g   t h e   n e w   A P I s . 
 
 
     i f   ( t y p e o f   c t o r . g e t D e r i v e d S t a t e F r o m P r o p s   ! = =   ' f u n c t i o n '   & &   t y p e o f   i n s t a n c e . g e t S n a p s h o t B e f o r e U p d a t e   ! = =   ' f u n c t i o n '   & &   ( t y p e o f   i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l M o u n t   = = =   ' f u n c t i o n '   | |   t y p e o f   i n s t a n c e . c o m p o n e n t W i l l M o u n t   = = =   ' f u n c t i o n ' ) )   { 
         c a l l C o m p o n e n t W i l l M o u n t ( w o r k I n P r o g r e s s ,   i n s t a n c e ) ;   / /   I f   w e   h a d   a d d i t i o n a l   s t a t e   u p d a t e s   d u r i n g   t h i s   l i f e - c y c l e ,   l e t ' s 
         / /   p r o c e s s   t h e m   n o w . 
 
         p r o c e s s U p d a t e Q u e u e ( w o r k I n P r o g r e s s ,   n e w P r o p s ,   i n s t a n c e ,   r e n d e r L a n e s ) ; 
         i n s t a n c e . s t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
     } 
 
     i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t D i d M o u n t   = = =   ' f u n c t i o n ' )   { 
         v a r   f i b e r F l a g s   =   U p d a t e ; 
 
         { 
             f i b e r F l a g s   | =   L a y o u t S t a t i c ; 
         } 
 
         i f   (   ( w o r k I n P r o g r e s s . m o d e   &   S t r i c t E f f e c t s M o d e )   ! = =   N o M o d e )   { 
             f i b e r F l a g s   | =   M o u n t L a y o u t D e v ; 
         } 
 
         w o r k I n P r o g r e s s . f l a g s   | =   f i b e r F l a g s ; 
     } 
 } 
 
 f u n c t i o n   r e s u m e M o u n t C l a s s I n s t a n c e ( w o r k I n P r o g r e s s ,   c t o r ,   n e w P r o p s ,   r e n d e r L a n e s )   { 
     v a r   i n s t a n c e   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
     v a r   o l d P r o p s   =   w o r k I n P r o g r e s s . m e m o i z e d P r o p s ; 
     i n s t a n c e . p r o p s   =   o l d P r o p s ; 
     v a r   o l d C o n t e x t   =   i n s t a n c e . c o n t e x t ; 
     v a r   c o n t e x t T y p e   =   c t o r . c o n t e x t T y p e ; 
     v a r   n e x t C o n t e x t   =   e m p t y C o n t e x t O b j e c t ; 
 
     i f   ( t y p e o f   c o n t e x t T y p e   = = =   ' o b j e c t '   & &   c o n t e x t T y p e   ! = =   n u l l )   { 
         n e x t C o n t e x t   =   r e a d C o n t e x t ( c o n t e x t T y p e ) ; 
     }   e l s e   { 
         v a r   n e x t L e g a c y U n m a s k e d C o n t e x t   =   g e t U n m a s k e d C o n t e x t ( w o r k I n P r o g r e s s ,   c t o r ,   t r u e ) ; 
         n e x t C o n t e x t   =   g e t M a s k e d C o n t e x t ( w o r k I n P r o g r e s s ,   n e x t L e g a c y U n m a s k e d C o n t e x t ) ; 
     } 
 
     v a r   g e t D e r i v e d S t a t e F r o m P r o p s   =   c t o r . g e t D e r i v e d S t a t e F r o m P r o p s ; 
     v a r   h a s N e w L i f e c y c l e s   =   t y p e o f   g e t D e r i v e d S t a t e F r o m P r o p s   = = =   ' f u n c t i o n '   | |   t y p e o f   i n s t a n c e . g e t S n a p s h o t B e f o r e U p d a t e   = = =   ' f u n c t i o n ' ;   / /   N o t e :   D u r i n g   t h e s e   l i f e - c y c l e s ,   i n s t a n c e . p r o p s / i n s t a n c e . s t a t e   a r e   w h a t 
     / /   e v e r   t h e   p r e v i o u s l y   a t t e m p t e d   t o   r e n d e r   -   n o t   t h e   " c u r r e n t " .   H o w e v e r , 
     / /   d u r i n g   c o m p o n e n t D i d U p d a t e   w e   p a s s   t h e   " c u r r e n t "   p r o p s . 
     / /   I n   o r d e r   t o   s u p p o r t   r e a c t - l i f e c y c l e s - c o m p a t   p o l y f i l l e d   c o m p o n e n t s , 
     / /   U n s a f e   l i f e c y c l e s   s h o u l d   n o t   b e   i n v o k e d   f o r   c o m p o n e n t s   u s i n g   t h e   n e w   A P I s . 
 
     i f   ( ! h a s N e w L i f e c y c l e s   & &   ( t y p e o f   i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l R e c e i v e P r o p s   = = =   ' f u n c t i o n '   | |   t y p e o f   i n s t a n c e . c o m p o n e n t W i l l R e c e i v e P r o p s   = = =   ' f u n c t i o n ' ) )   { 
         i f   ( o l d P r o p s   ! = =   n e w P r o p s   | |   o l d C o n t e x t   ! = =   n e x t C o n t e x t )   { 
             c a l l C o m p o n e n t W i l l R e c e i v e P r o p s ( w o r k I n P r o g r e s s ,   i n s t a n c e ,   n e w P r o p s ,   n e x t C o n t e x t ) ; 
         } 
     } 
 
     r e s e t H a s F o r c e U p d a t e B e f o r e P r o c e s s i n g ( ) ; 
     v a r   o l d S t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
     v a r   n e w S t a t e   =   i n s t a n c e . s t a t e   =   o l d S t a t e ; 
     p r o c e s s U p d a t e Q u e u e ( w o r k I n P r o g r e s s ,   n e w P r o p s ,   i n s t a n c e ,   r e n d e r L a n e s ) ; 
     n e w S t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
 
     i f   ( o l d P r o p s   = = =   n e w P r o p s   & &   o l d S t a t e   = = =   n e w S t a t e   & &   ! h a s C o n t e x t C h a n g e d ( )   & &   ! c h e c k H a s F o r c e U p d a t e A f t e r P r o c e s s i n g ( ) )   { 
         / /   I f   a n   u p d a t e   w a s   a l r e a d y   i n   p r o g r e s s ,   w e   s h o u l d   s c h e d u l e   a n   U p d a t e 
         / /   e f f e c t   e v e n   t h o u g h   w e ' r e   b a i l i n g   o u t ,   s o   t h a t   c W U / c D U   a r e   c a l l e d . 
         i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t D i d M o u n t   = = =   ' f u n c t i o n ' )   { 
             v a r   f i b e r F l a g s   =   U p d a t e ; 
 
             { 
                 f i b e r F l a g s   | =   L a y o u t S t a t i c ; 
             } 
 
             i f   (   ( w o r k I n P r o g r e s s . m o d e   &   S t r i c t E f f e c t s M o d e )   ! = =   N o M o d e )   { 
                 f i b e r F l a g s   | =   M o u n t L a y o u t D e v ; 
             } 
 
             w o r k I n P r o g r e s s . f l a g s   | =   f i b e r F l a g s ; 
         } 
 
         r e t u r n   f a l s e ; 
     } 
 
     i f   ( t y p e o f   g e t D e r i v e d S t a t e F r o m P r o p s   = = =   ' f u n c t i o n ' )   { 
         a p p l y D e r i v e d S t a t e F r o m P r o p s ( w o r k I n P r o g r e s s ,   c t o r ,   g e t D e r i v e d S t a t e F r o m P r o p s ,   n e w P r o p s ) ; 
         n e w S t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
     } 
 
     v a r   s h o u l d U p d a t e   =   c h e c k H a s F o r c e U p d a t e A f t e r P r o c e s s i n g ( )   | |   c h e c k S h o u l d C o m p o n e n t U p d a t e ( w o r k I n P r o g r e s s ,   c t o r ,   o l d P r o p s ,   n e w P r o p s ,   o l d S t a t e ,   n e w S t a t e ,   n e x t C o n t e x t ) ; 
 
     i f   ( s h o u l d U p d a t e )   { 
         / /   I n   o r d e r   t o   s u p p o r t   r e a c t - l i f e c y c l e s - c o m p a t   p o l y f i l l e d   c o m p o n e n t s , 
         / /   U n s a f e   l i f e c y c l e s   s h o u l d   n o t   b e   i n v o k e d   f o r   c o m p o n e n t s   u s i n g   t h e   n e w   A P I s . 
         i f   ( ! h a s N e w L i f e c y c l e s   & &   ( t y p e o f   i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l M o u n t   = = =   ' f u n c t i o n '   | |   t y p e o f   i n s t a n c e . c o m p o n e n t W i l l M o u n t   = = =   ' f u n c t i o n ' ) )   { 
             i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t W i l l M o u n t   = = =   ' f u n c t i o n ' )   { 
                 i n s t a n c e . c o m p o n e n t W i l l M o u n t ( ) ; 
             } 
 
             i f   ( t y p e o f   i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l M o u n t   = = =   ' f u n c t i o n ' )   { 
                 i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l M o u n t ( ) ; 
             } 
         } 
 
         i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t D i d M o u n t   = = =   ' f u n c t i o n ' )   { 
             v a r   _ f i b e r F l a g s   =   U p d a t e ; 
 
             { 
                 _ f i b e r F l a g s   | =   L a y o u t S t a t i c ; 
             } 
 
             i f   (   ( w o r k I n P r o g r e s s . m o d e   &   S t r i c t E f f e c t s M o d e )   ! = =   N o M o d e )   { 
                 _ f i b e r F l a g s   | =   M o u n t L a y o u t D e v ; 
             } 
 
             w o r k I n P r o g r e s s . f l a g s   | =   _ f i b e r F l a g s ; 
         } 
     }   e l s e   { 
         / /   I f   a n   u p d a t e   w a s   a l r e a d y   i n   p r o g r e s s ,   w e   s h o u l d   s c h e d u l e   a n   U p d a t e 
         / /   e f f e c t   e v e n   t h o u g h   w e ' r e   b a i l i n g   o u t ,   s o   t h a t   c W U / c D U   a r e   c a l l e d . 
         i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t D i d M o u n t   = = =   ' f u n c t i o n ' )   { 
             v a r   _ f i b e r F l a g s 2   =   U p d a t e ; 
 
             { 
                 _ f i b e r F l a g s 2   | =   L a y o u t S t a t i c ; 
             } 
 
             i f   (   ( w o r k I n P r o g r e s s . m o d e   &   S t r i c t E f f e c t s M o d e )   ! = =   N o M o d e )   { 
                 _ f i b e r F l a g s 2   | =   M o u n t L a y o u t D e v ; 
             } 
 
             w o r k I n P r o g r e s s . f l a g s   | =   _ f i b e r F l a g s 2 ; 
         }   / /   I f   s h o u l d C o m p o n e n t U p d a t e   r e t u r n e d   f a l s e ,   w e   s h o u l d   s t i l l   u p d a t e   t h e 
         / /   m e m o i z e d   s t a t e   t o   i n d i c a t e   t h a t   t h i s   w o r k   c a n   b e   r e u s e d . 
 
 
         w o r k I n P r o g r e s s . m e m o i z e d P r o p s   =   n e w P r o p s ; 
         w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   n e w S t a t e ; 
     }   / /   U p d a t e   t h e   e x i s t i n g   i n s t a n c e ' s   s t a t e ,   p r o p s ,   a n d   c o n t e x t   p o i n t e r s   e v e n 
     / /   i f   s h o u l d C o m p o n e n t U p d a t e   r e t u r n s   f a l s e . 
 
 
     i n s t a n c e . p r o p s   =   n e w P r o p s ; 
     i n s t a n c e . s t a t e   =   n e w S t a t e ; 
     i n s t a n c e . c o n t e x t   =   n e x t C o n t e x t ; 
     r e t u r n   s h o u l d U p d a t e ; 
 }   / /   I n v o k e s   t h e   u p d a t e   l i f e - c y c l e s   a n d   r e t u r n s   f a l s e   i f   i t   s h o u l d n ' t   r e r e n d e r . 
 
 
 f u n c t i o n   u p d a t e C l a s s I n s t a n c e ( c u r r e n t ,   w o r k I n P r o g r e s s ,   c t o r ,   n e w P r o p s ,   r e n d e r L a n e s )   { 
     v a r   i n s t a n c e   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
     c l o n e U p d a t e Q u e u e ( c u r r e n t ,   w o r k I n P r o g r e s s ) ; 
     v a r   u n r e s o l v e d O l d P r o p s   =   w o r k I n P r o g r e s s . m e m o i z e d P r o p s ; 
     v a r   o l d P r o p s   =   w o r k I n P r o g r e s s . t y p e   = = =   w o r k I n P r o g r e s s . e l e m e n t T y p e   ?   u n r e s o l v e d O l d P r o p s   :   r e s o l v e D e f a u l t P r o p s ( w o r k I n P r o g r e s s . t y p e ,   u n r e s o l v e d O l d P r o p s ) ; 
     i n s t a n c e . p r o p s   =   o l d P r o p s ; 
     v a r   u n r e s o l v e d N e w P r o p s   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
     v a r   o l d C o n t e x t   =   i n s t a n c e . c o n t e x t ; 
     v a r   c o n t e x t T y p e   =   c t o r . c o n t e x t T y p e ; 
     v a r   n e x t C o n t e x t   =   e m p t y C o n t e x t O b j e c t ; 
 
     i f   ( t y p e o f   c o n t e x t T y p e   = = =   ' o b j e c t '   & &   c o n t e x t T y p e   ! = =   n u l l )   { 
         n e x t C o n t e x t   =   r e a d C o n t e x t ( c o n t e x t T y p e ) ; 
     }   e l s e   { 
         v a r   n e x t U n m a s k e d C o n t e x t   =   g e t U n m a s k e d C o n t e x t ( w o r k I n P r o g r e s s ,   c t o r ,   t r u e ) ; 
         n e x t C o n t e x t   =   g e t M a s k e d C o n t e x t ( w o r k I n P r o g r e s s ,   n e x t U n m a s k e d C o n t e x t ) ; 
     } 
 
     v a r   g e t D e r i v e d S t a t e F r o m P r o p s   =   c t o r . g e t D e r i v e d S t a t e F r o m P r o p s ; 
     v a r   h a s N e w L i f e c y c l e s   =   t y p e o f   g e t D e r i v e d S t a t e F r o m P r o p s   = = =   ' f u n c t i o n '   | |   t y p e o f   i n s t a n c e . g e t S n a p s h o t B e f o r e U p d a t e   = = =   ' f u n c t i o n ' ;   / /   N o t e :   D u r i n g   t h e s e   l i f e - c y c l e s ,   i n s t a n c e . p r o p s / i n s t a n c e . s t a t e   a r e   w h a t 
     / /   e v e r   t h e   p r e v i o u s l y   a t t e m p t e d   t o   r e n d e r   -   n o t   t h e   " c u r r e n t " .   H o w e v e r , 
     / /   d u r i n g   c o m p o n e n t D i d U p d a t e   w e   p a s s   t h e   " c u r r e n t "   p r o p s . 
     / /   I n   o r d e r   t o   s u p p o r t   r e a c t - l i f e c y c l e s - c o m p a t   p o l y f i l l e d   c o m p o n e n t s , 
     / /   U n s a f e   l i f e c y c l e s   s h o u l d   n o t   b e   i n v o k e d   f o r   c o m p o n e n t s   u s i n g   t h e   n e w   A P I s . 
 
     i f   ( ! h a s N e w L i f e c y c l e s   & &   ( t y p e o f   i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l R e c e i v e P r o p s   = = =   ' f u n c t i o n '   | |   t y p e o f   i n s t a n c e . c o m p o n e n t W i l l R e c e i v e P r o p s   = = =   ' f u n c t i o n ' ) )   { 
         i f   ( u n r e s o l v e d O l d P r o p s   ! = =   u n r e s o l v e d N e w P r o p s   | |   o l d C o n t e x t   ! = =   n e x t C o n t e x t )   { 
             c a l l C o m p o n e n t W i l l R e c e i v e P r o p s ( w o r k I n P r o g r e s s ,   i n s t a n c e ,   n e w P r o p s ,   n e x t C o n t e x t ) ; 
         } 
     } 
 
     r e s e t H a s F o r c e U p d a t e B e f o r e P r o c e s s i n g ( ) ; 
     v a r   o l d S t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
     v a r   n e w S t a t e   =   i n s t a n c e . s t a t e   =   o l d S t a t e ; 
     p r o c e s s U p d a t e Q u e u e ( w o r k I n P r o g r e s s ,   n e w P r o p s ,   i n s t a n c e ,   r e n d e r L a n e s ) ; 
     n e w S t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
 
     i f   ( u n r e s o l v e d O l d P r o p s   = = =   u n r e s o l v e d N e w P r o p s   & &   o l d S t a t e   = = =   n e w S t a t e   & &   ! h a s C o n t e x t C h a n g e d ( )   & &   ! c h e c k H a s F o r c e U p d a t e A f t e r P r o c e s s i n g ( )   & &   ! ( e n a b l e L a z y C o n t e x t P r o p a g a t i o n       ) )   { 
         / /   I f   a n   u p d a t e   w a s   a l r e a d y   i n   p r o g r e s s ,   w e   s h o u l d   s c h e d u l e   a n   U p d a t e 
         / /   e f f e c t   e v e n   t h o u g h   w e ' r e   b a i l i n g   o u t ,   s o   t h a t   c W U / c D U   a r e   c a l l e d . 
         i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t D i d U p d a t e   = = =   ' f u n c t i o n ' )   { 
             i f   ( u n r e s o l v e d O l d P r o p s   ! = =   c u r r e n t . m e m o i z e d P r o p s   | |   o l d S t a t e   ! = =   c u r r e n t . m e m o i z e d S t a t e )   { 
                 w o r k I n P r o g r e s s . f l a g s   | =   U p d a t e ; 
             } 
         } 
 
         i f   ( t y p e o f   i n s t a n c e . g e t S n a p s h o t B e f o r e U p d a t e   = = =   ' f u n c t i o n ' )   { 
             i f   ( u n r e s o l v e d O l d P r o p s   ! = =   c u r r e n t . m e m o i z e d P r o p s   | |   o l d S t a t e   ! = =   c u r r e n t . m e m o i z e d S t a t e )   { 
                 w o r k I n P r o g r e s s . f l a g s   | =   S n a p s h o t ; 
             } 
         } 
 
         r e t u r n   f a l s e ; 
     } 
 
     i f   ( t y p e o f   g e t D e r i v e d S t a t e F r o m P r o p s   = = =   ' f u n c t i o n ' )   { 
         a p p l y D e r i v e d S t a t e F r o m P r o p s ( w o r k I n P r o g r e s s ,   c t o r ,   g e t D e r i v e d S t a t e F r o m P r o p s ,   n e w P r o p s ) ; 
         n e w S t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
     } 
 
     v a r   s h o u l d U p d a t e   =   c h e c k H a s F o r c e U p d a t e A f t e r P r o c e s s i n g ( )   | |   c h e c k S h o u l d C o m p o n e n t U p d a t e ( w o r k I n P r o g r e s s ,   c t o r ,   o l d P r o p s ,   n e w P r o p s ,   o l d S t a t e ,   n e w S t a t e ,   n e x t C o n t e x t )   | |   / /   T O D O :   I n   s o m e   c a s e s ,   w e ' l l   e n d   u p   c h e c k i n g   i f   c o n t e x t   h a s   c h a n g e d   t w i c e , 
     / /   b o t h   b e f o r e   a n d   a f t e r   ` s h o u l d C o m p o n e n t U p d a t e `   h a s   b e e n   c a l l e d .   N o t   i d e a l , 
     / /   b u t   I ' m   l o a t h   t o   r e f a c t o r   t h i s   f u n c t i o n .   T h i s   o n l y   h a p p e n s   f o r   m e m o i z e d 
     / /   c o m p o n e n t s   s o   i t ' s   n o t   t h a t   c o m m o n . 
     e n a b l e L a z y C o n t e x t P r o p a g a t i o n       ; 
 
     i f   ( s h o u l d U p d a t e )   { 
         / /   I n   o r d e r   t o   s u p p o r t   r e a c t - l i f e c y c l e s - c o m p a t   p o l y f i l l e d   c o m p o n e n t s , 
         / /   U n s a f e   l i f e c y c l e s   s h o u l d   n o t   b e   i n v o k e d   f o r   c o m p o n e n t s   u s i n g   t h e   n e w   A P I s . 
         i f   ( ! h a s N e w L i f e c y c l e s   & &   ( t y p e o f   i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l U p d a t e   = = =   ' f u n c t i o n '   | |   t y p e o f   i n s t a n c e . c o m p o n e n t W i l l U p d a t e   = = =   ' f u n c t i o n ' ) )   { 
             i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t W i l l U p d a t e   = = =   ' f u n c t i o n ' )   { 
                 i n s t a n c e . c o m p o n e n t W i l l U p d a t e ( n e w P r o p s ,   n e w S t a t e ,   n e x t C o n t e x t ) ; 
             } 
 
             i f   ( t y p e o f   i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l U p d a t e   = = =   ' f u n c t i o n ' )   { 
                 i n s t a n c e . U N S A F E _ c o m p o n e n t W i l l U p d a t e ( n e w P r o p s ,   n e w S t a t e ,   n e x t C o n t e x t ) ; 
             } 
         } 
 
         i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t D i d U p d a t e   = = =   ' f u n c t i o n ' )   { 
             w o r k I n P r o g r e s s . f l a g s   | =   U p d a t e ; 
         } 
 
         i f   ( t y p e o f   i n s t a n c e . g e t S n a p s h o t B e f o r e U p d a t e   = = =   ' f u n c t i o n ' )   { 
             w o r k I n P r o g r e s s . f l a g s   | =   S n a p s h o t ; 
         } 
     }   e l s e   { 
         / /   I f   a n   u p d a t e   w a s   a l r e a d y   i n   p r o g r e s s ,   w e   s h o u l d   s c h e d u l e   a n   U p d a t e 
         / /   e f f e c t   e v e n   t h o u g h   w e ' r e   b a i l i n g   o u t ,   s o   t h a t   c W U / c D U   a r e   c a l l e d . 
         i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t D i d U p d a t e   = = =   ' f u n c t i o n ' )   { 
             i f   ( u n r e s o l v e d O l d P r o p s   ! = =   c u r r e n t . m e m o i z e d P r o p s   | |   o l d S t a t e   ! = =   c u r r e n t . m e m o i z e d S t a t e )   { 
                 w o r k I n P r o g r e s s . f l a g s   | =   U p d a t e ; 
             } 
         } 
 
         i f   ( t y p e o f   i n s t a n c e . g e t S n a p s h o t B e f o r e U p d a t e   = = =   ' f u n c t i o n ' )   { 
             i f   ( u n r e s o l v e d O l d P r o p s   ! = =   c u r r e n t . m e m o i z e d P r o p s   | |   o l d S t a t e   ! = =   c u r r e n t . m e m o i z e d S t a t e )   { 
                 w o r k I n P r o g r e s s . f l a g s   | =   S n a p s h o t ; 
             } 
         }   / /   I f   s h o u l d C o m p o n e n t U p d a t e   r e t u r n e d   f a l s e ,   w e   s h o u l d   s t i l l   u p d a t e   t h e 
         / /   m e m o i z e d   p r o p s / s t a t e   t o   i n d i c a t e   t h a t   t h i s   w o r k   c a n   b e   r e u s e d . 
 
 
         w o r k I n P r o g r e s s . m e m o i z e d P r o p s   =   n e w P r o p s ; 
         w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   n e w S t a t e ; 
     }   / /   U p d a t e   t h e   e x i s t i n g   i n s t a n c e ' s   s t a t e ,   p r o p s ,   a n d   c o n t e x t   p o i n t e r s   e v e n 
     / /   i f   s h o u l d C o m p o n e n t U p d a t e   r e t u r n s   f a l s e . 
 
 
     i n s t a n c e . p r o p s   =   n e w P r o p s ; 
     i n s t a n c e . s t a t e   =   n e w S t a t e ; 
     i n s t a n c e . c o n t e x t   =   n e x t C o n t e x t ; 
     r e t u r n   s h o u l d U p d a t e ; 
 } 
 
 / /   T O D O :   U s e   t h e   u n i f i e d   f i b e r   s t a c k   m o d u l e   i n s t e a d   o f   t h i s   l o c a l   o n e ? 
 / /   I n t e n t i o n a l l y   n o t   u s i n g   i t   y e t   t o   d e r i s k   t h e   i n i t i a l   i m p l e m e n t a t i o n ,   b e c a u s e 
 / /   t h e   w a y   w e   p u s h / p o p   t h e s e   v a l u e s   i s   a   b i t   u n u s u a l .   I f   t h e r e ' s   a   m i s t a k e ,   I ' d 
 / /   r a t h e r   t h e   i d s   b e   w r o n g   t h a n   c r a s h   t h e   w h o l e   r e c o n c i l e r . 
 v a r   f o r k S t a c k   =   [ ] ; 
 v a r   f o r k S t a c k I n d e x   =   0 ; 
 v a r   t r e e F o r k P r o v i d e r   =   n u l l ; 
 v a r   t r e e F o r k C o u n t   =   0 ; 
 v a r   i d S t a c k   =   [ ] ; 
 v a r   i d S t a c k I n d e x   =   0 ; 
 v a r   t r e e C o n t e x t P r o v i d e r   =   n u l l ; 
 v a r   t r e e C o n t e x t I d   =   1 ; 
 v a r   t r e e C o n t e x t O v e r f l o w   =   ' ' ; 
 f u n c t i o n   i s F o r k e d C h i l d ( w o r k I n P r o g r e s s )   { 
     w a r n I f N o t H y d r a t i n g ( ) ; 
     r e t u r n   ( w o r k I n P r o g r e s s . f l a g s   &   F o r k e d )   ! = =   N o F l a g s ; 
 } 
 f u n c t i o n   g e t F o r k s A t L e v e l ( w o r k I n P r o g r e s s )   { 
     w a r n I f N o t H y d r a t i n g ( ) ; 
     r e t u r n   t r e e F o r k C o u n t ; 
 } 
 f u n c t i o n   g e t T r e e I d ( )   { 
     v a r   o v e r f l o w   =   t r e e C o n t e x t O v e r f l o w ; 
     v a r   i d W i t h L e a d i n g B i t   =   t r e e C o n t e x t I d ; 
     v a r   i d   =   i d W i t h L e a d i n g B i t   &   ~ g e t L e a d i n g B i t ( i d W i t h L e a d i n g B i t ) ; 
     r e t u r n   i d . t o S t r i n g ( 3 2 )   +   o v e r f l o w ; 
 } 
 f u n c t i o n   p u s h T r e e F o r k ( w o r k I n P r o g r e s s ,   t o t a l C h i l d r e n )   { 
     / /   T h i s   i s   c a l l e d   r i g h t   a f t e r   w e   r e c o n c i l e   a n   a r r a y   ( o r   i t e r a t o r )   o f   c h i l d 
     / /   f i b e r s ,   b e c a u s e   t h a t ' s   t h e   o n l y   p l a c e   w h e r e   w e   k n o w   h o w   m a n y   c h i l d r e n   i n 
     / /   t h e   w h o l e   s e t   w i t h o u t   d o i n g   e x t r a   w o r k   l a t e r ,   o r   s t o r i n g   a d d t i o n a l 
     / /   i n f o r m a t i o n   o n   t h e   f i b e r . 
     / / 
     / /   T h a t ' s   w h y   t h i s   f u n c t i o n   i s   s e p a r a t e   f r o m   p u s h T r e e I d      i t ' s   c a l l e d   d u r i n g 
     / /   t h e   r e n d e r   p h a s e   o f   t h e   f o r k   p a r e n t ,   n o t   t h e   c h i l d ,   w h i c h   i s   w h e r e   w e   p u s h 
     / /   t h e   o t h e r   c o n t e x t   v a l u e s . 
     / / 
     / /   I n   t h e   F i z z   i m p l e m e n t a t i o n   t h i s   i s   m u c h   s i m p l e r   b e c a u s e   t h e   c h i l d   i s 
     / /   r e n d e r e d   i n   t h e   s a m e   c a l l s t a c k   a s   t h e   p a r e n t . 
     / / 
     / /   I t   m i g h t   b e   b e t t e r   t o   j u s t   a d d   a   ` f o r k s `   f i e l d   t o   t h e   F i b e r   t y p e .   I t   w o u l d 
     / /   m a k e   t h i s   m o d u l e   s i m p l e r . 
     w a r n I f N o t H y d r a t i n g ( ) ; 
     f o r k S t a c k [ f o r k S t a c k I n d e x + + ]   =   t r e e F o r k C o u n t ; 
     f o r k S t a c k [ f o r k S t a c k I n d e x + + ]   =   t r e e F o r k P r o v i d e r ; 
     t r e e F o r k P r o v i d e r   =   w o r k I n P r o g r e s s ; 
     t r e e F o r k C o u n t   =   t o t a l C h i l d r e n ; 
 } 
 f u n c t i o n   p u s h T r e e I d ( w o r k I n P r o g r e s s ,   t o t a l C h i l d r e n ,   i n d e x )   { 
     w a r n I f N o t H y d r a t i n g ( ) ; 
     i d S t a c k [ i d S t a c k I n d e x + + ]   =   t r e e C o n t e x t I d ; 
     i d S t a c k [ i d S t a c k I n d e x + + ]   =   t r e e C o n t e x t O v e r f l o w ; 
     i d S t a c k [ i d S t a c k I n d e x + + ]   =   t r e e C o n t e x t P r o v i d e r ; 
     t r e e C o n t e x t P r o v i d e r   =   w o r k I n P r o g r e s s ; 
     v a r   b a s e I d W i t h L e a d i n g B i t   =   t r e e C o n t e x t I d ; 
     v a r   b a s e O v e r f l o w   =   t r e e C o n t e x t O v e r f l o w ;   / /   T h e   l e f t m o s t   1   m a r k s   t h e   e n d   o f   t h e   s e q u e n c e ,   n o n - i n c l u s i v e .   I t ' s   n o t   p a r t 
     / /   o f   t h e   i d ;   w e   u s e   i t   t o   a c c o u n t   f o r   l e a d i n g   0 s . 
 
     v a r   b a s e L e n g t h   =   g e t B i t L e n g t h ( b a s e I d W i t h L e a d i n g B i t )   -   1 ; 
     v a r   b a s e I d   =   b a s e I d W i t h L e a d i n g B i t   &   ~ ( 1   < <   b a s e L e n g t h ) ; 
     v a r   s l o t   =   i n d e x   +   1 ; 
     v a r   l e n g t h   =   g e t B i t L e n g t h ( t o t a l C h i l d r e n )   +   b a s e L e n g t h ;   / /   3 0   i s   t h e   m a x   l e n g t h   w e   c a n   s t o r e   w i t h o u t   o v e r f l o w i n g ,   t a k i n g   i n t o 
     / /   c o n s i d e r a t i o n   t h e   l e a d i n g   1   w e   u s e   t o   m a r k   t h e   e n d   o f   t h e   s e q u e n c e . 
 
     i f   ( l e n g t h   >   3 0 )   { 
         / /   W e   o v e r f l o w e d   t h e   b i t w i s e - s a f e   r a n g e .   F a l l   b a c k   t o   s l o w e r   a l g o r i t h m . 
         / /   T h i s   b r a n c h   a s s u m e s   t h e   l e n g t h   o f   t h e   b a s e   i d   i s   g r e a t e r   t h a n   5 ;   i t   w o n ' t 
         / /   w o r k   f o r   s m a l l e r   i d s ,   b e c a u s e   y o u   n e e d   5   b i t s   p e r   c h a r a c t e r . 
         / / 
         / /   W e   e n c o d e   t h e   i d   i n   m u l t i p l e   s t e p s :   f i r s t   t h e   b a s e   i d ,   t h e n   t h e 
         / /   r e m a i n i n g   d i g i t s . 
         / / 
         / /   E a c h   5   b i t   s e q u e n c e   c o r r e s p o n d s   t o   a   s i n g l e   b a s e   3 2   c h a r a c t e r .   S o   f o r 
         / /   e x a m p l e ,   i f   t h e   c u r r e n t   i d   i s   2 3   b i t s   l o n g ,   w e   c a n   c o n v e r t   2 0   o f   t h o s e 
         / /   b i t s   i n t o   a   s t r i n g   o f   4   c h a r a c t e r s ,   w i t h   3   b i t s   l e f t   o v e r . 
         / / 
         / /   F i r s t   c a l c u l a t e   h o w   m a n y   b i t s   i n   t h e   b a s e   i d   r e p r e s e n t   a   c o m p l e t e 
         / /   s e q u e n c e   o f   c h a r a c t e r s . 
         v a r   n u m b e r O f O v e r f l o w B i t s   =   b a s e L e n g t h   -   b a s e L e n g t h   %   5 ;   / /   T h e n   c r e a t e   a   b i t m a s k   t h a t   s e l e c t s   o n l y   t h o s e   b i t s . 
 
         v a r   n e w O v e r f l o w B i t s   =   ( 1   < <   n u m b e r O f O v e r f l o w B i t s )   -   1 ;   / /   S e l e c t   t h e   b i t s ,   a n d   c o n v e r t   t h e m   t o   a   b a s e   3 2   s t r i n g . 
 
         v a r   n e w O v e r f l o w   =   ( b a s e I d   &   n e w O v e r f l o w B i t s ) . t o S t r i n g ( 3 2 ) ;   / /   N o w   w e   c a n   r e m o v e   t h o s e   b i t s   f r o m   t h e   b a s e   i d . 
 
         v a r   r e s t O f B a s e I d   =   b a s e I d   > >   n u m b e r O f O v e r f l o w B i t s ; 
         v a r   r e s t O f B a s e L e n g t h   =   b a s e L e n g t h   -   n u m b e r O f O v e r f l o w B i t s ;   / /   F i n a l l y ,   e n c o d e   t h e   r e s t   o f   t h e   b i t s   u s i n g   t h e   n o r m a l   a l g o r i t h m .   B e c a u s e 
         / /   w e   m a d e   m o r e   r o o m ,   t h i s   t i m e   i t   w o n ' t   o v e r f l o w . 
 
         v a r   r e s t O f L e n g t h   =   g e t B i t L e n g t h ( t o t a l C h i l d r e n )   +   r e s t O f B a s e L e n g t h ; 
         v a r   r e s t O f N e w B i t s   =   s l o t   < <   r e s t O f B a s e L e n g t h ; 
         v a r   i d   =   r e s t O f N e w B i t s   |   r e s t O f B a s e I d ; 
         v a r   o v e r f l o w   =   n e w O v e r f l o w   +   b a s e O v e r f l o w ; 
         t r e e C o n t e x t I d   =   1   < <   r e s t O f L e n g t h   |   i d ; 
         t r e e C o n t e x t O v e r f l o w   =   o v e r f l o w ; 
     }   e l s e   { 
         / /   N o r m a l   p a t h 
         v a r   n e w B i t s   =   s l o t   < <   b a s e L e n g t h ; 
 
         v a r   _ i d   =   n e w B i t s   |   b a s e I d ; 
 
         v a r   _ o v e r f l o w   =   b a s e O v e r f l o w ; 
         t r e e C o n t e x t I d   =   1   < <   l e n g t h   |   _ i d ; 
         t r e e C o n t e x t O v e r f l o w   =   _ o v e r f l o w ; 
     } 
 } 
 f u n c t i o n   p u s h M a t e r i a l i z e d T r e e I d ( w o r k I n P r o g r e s s )   { 
     w a r n I f N o t H y d r a t i n g ( ) ;   / /   T h i s   c o m p o n e n t   m a t e r i a l i z e d   a n   i d .   T h i s   w i l l   a f f e c t   a n y   i d s   t h a t   a p p e a r 
     / /   i n   i t s   c h i l d r e n . 
 
     v a r   r e t u r n F i b e r   =   w o r k I n P r o g r e s s . r e t u r n ; 
 
     i f   ( r e t u r n F i b e r   ! = =   n u l l )   { 
         v a r   n u m b e r O f F o r k s   =   1 ; 
         v a r   s l o t I n d e x   =   0 ; 
         p u s h T r e e F o r k ( w o r k I n P r o g r e s s ,   n u m b e r O f F o r k s ) ; 
         p u s h T r e e I d ( w o r k I n P r o g r e s s ,   n u m b e r O f F o r k s ,   s l o t I n d e x ) ; 
     } 
 } 
 
 f u n c t i o n   g e t B i t L e n g t h ( n u m b e r )   { 
     r e t u r n   3 2   -   c l z 3 2 ( n u m b e r ) ; 
 } 
 
 f u n c t i o n   g e t L e a d i n g B i t ( i d )   { 
     r e t u r n   1   < <   g e t B i t L e n g t h ( i d )   -   1 ; 
 } 
 
 f u n c t i o n   p o p T r e e C o n t e x t ( w o r k I n P r o g r e s s )   { 
     / /   R e s t o r e   t h e   p r e v i o u s   v a l u e s . 
     / /   T h i s   i s   a   b i t   m o r e   c o m p l i c a t e d   t h a n   o t h e r   c o n t e x t - l i k e   m o d u l e s   i n   F i b e r 
     / /   b e c a u s e   t h e   s a m e   F i b e r   m a y   a p p e a r   o n   t h e   s t a c k   m u l t i p l e   t i m e s   a n d   f o r 
     / /   d i f f e r e n t   r e a s o n s .   W e   h a v e   t o   k e e p   p o p p i n g   u n t i l   t h e   w o r k - i n - p r o g r e s s   i s 
     / /   n o   l o n g e r   a t   t h e   t o p   o f   t h e   s t a c k . 
     w h i l e   ( w o r k I n P r o g r e s s   = = =   t r e e F o r k P r o v i d e r )   { 
         t r e e F o r k P r o v i d e r   =   f o r k S t a c k [ - - f o r k S t a c k I n d e x ] ; 
         f o r k S t a c k [ f o r k S t a c k I n d e x ]   =   n u l l ; 
         t r e e F o r k C o u n t   =   f o r k S t a c k [ - - f o r k S t a c k I n d e x ] ; 
         f o r k S t a c k [ f o r k S t a c k I n d e x ]   =   n u l l ; 
     } 
 
     w h i l e   ( w o r k I n P r o g r e s s   = = =   t r e e C o n t e x t P r o v i d e r )   { 
         t r e e C o n t e x t P r o v i d e r   =   i d S t a c k [ - - i d S t a c k I n d e x ] ; 
         i d S t a c k [ i d S t a c k I n d e x ]   =   n u l l ; 
         t r e e C o n t e x t O v e r f l o w   =   i d S t a c k [ - - i d S t a c k I n d e x ] ; 
         i d S t a c k [ i d S t a c k I n d e x ]   =   n u l l ; 
         t r e e C o n t e x t I d   =   i d S t a c k [ - - i d S t a c k I n d e x ] ; 
         i d S t a c k [ i d S t a c k I n d e x ]   =   n u l l ; 
     } 
 } 
 f u n c t i o n   g e t S u s p e n d e d T r e e C o n t e x t ( )   { 
     w a r n I f N o t H y d r a t i n g ( ) ; 
 
     i f   ( t r e e C o n t e x t P r o v i d e r   ! = =   n u l l )   { 
         r e t u r n   { 
             i d :   t r e e C o n t e x t I d , 
             o v e r f l o w :   t r e e C o n t e x t O v e r f l o w 
         } ; 
     }   e l s e   { 
         r e t u r n   n u l l ; 
     } 
 } 
 f u n c t i o n   r e s t o r e S u s p e n d e d T r e e C o n t e x t ( w o r k I n P r o g r e s s ,   s u s p e n d e d C o n t e x t )   { 
     w a r n I f N o t H y d r a t i n g ( ) ; 
     i d S t a c k [ i d S t a c k I n d e x + + ]   =   t r e e C o n t e x t I d ; 
     i d S t a c k [ i d S t a c k I n d e x + + ]   =   t r e e C o n t e x t O v e r f l o w ; 
     i d S t a c k [ i d S t a c k I n d e x + + ]   =   t r e e C o n t e x t P r o v i d e r ; 
     t r e e C o n t e x t I d   =   s u s p e n d e d C o n t e x t . i d ; 
     t r e e C o n t e x t O v e r f l o w   =   s u s p e n d e d C o n t e x t . o v e r f l o w ; 
     t r e e C o n t e x t P r o v i d e r   =   w o r k I n P r o g r e s s ; 
 } 
 
 f u n c t i o n   w a r n I f N o t H y d r a t i n g ( )   { 
     { 
         i f   ( ! g e t I s H y d r a t i n g ( ) )   { 
             e r r o r ( ' E x p e c t e d   t o   b e   h y d r a t i n g .   T h i s   i s   a   b u g   i n   R e a c t .   P l e a s e   f i l e   '   +   ' a n   i s s u e . ' ) ; 
         } 
     } 
 } 
 
 / /   T h i s   m a y   h a v e   b e e n   a n   i n s e r t i o n   o r   a   h y d r a t i o n . 
 
 v a r   h y d r a t i o n P a r e n t F i b e r   =   n u l l ; 
 v a r   n e x t H y d r a t a b l e I n s t a n c e   =   n u l l ; 
 v a r   i s H y d r a t i n g   =   f a l s e ;   / /   T h i s   f l a g   a l l o w s   f o r   w a r n i n g   s u p r e s s i o n   w h e n   w e   e x p e c t   t h e r e   t o   b e   m i s m a t c h e s 
 / /   d u e   t o   e a r l i e r   m i s m a t c h e s   o r   a   s u s p e n d e d   f i b e r . 
 
 v a r   d i d S u s p e n d O r E r r o r D E V   =   f a l s e ;   / /   H y d r a t i o n   e r r o r s   t h a t   w e r e   t h r o w n   i n s i d e   t h i s   b o u n d a r y 
 
 v a r   h y d r a t i o n E r r o r s   =   n u l l ; 
 
 f u n c t i o n   w a r n I f H y d r a t i n g ( )   { 
     { 
         i f   ( i s H y d r a t i n g )   { 
             e r r o r ( ' W e   s h o u l d   n o t   b e   h y d r a t i n g   h e r e .   T h i s   i s   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a   b u g . ' ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   m a r k D i d T h r o w W h i l e H y d r a t i n g D E V ( )   { 
     { 
         d i d S u s p e n d O r E r r o r D E V   =   t r u e ; 
     } 
 } 
 
 f u n c t i o n   e n t e r H y d r a t i o n S t a t e ( f i b e r )   { 
 
     v a r   p a r e n t I n s t a n c e   =   f i b e r . s t a t e N o d e . c o n t a i n e r I n f o ; 
     n e x t H y d r a t a b l e I n s t a n c e   =   g e t F i r s t H y d r a t a b l e C h i l d W i t h i n C o n t a i n e r ( p a r e n t I n s t a n c e ) ; 
     h y d r a t i o n P a r e n t F i b e r   =   f i b e r ; 
     i s H y d r a t i n g   =   t r u e ; 
     h y d r a t i o n E r r o r s   =   n u l l ; 
     d i d S u s p e n d O r E r r o r D E V   =   f a l s e ; 
     r e t u r n   t r u e ; 
 } 
 
 f u n c t i o n   r e e n t e r H y d r a t i o n S t a t e F r o m D e h y d r a t e d S u s p e n s e I n s t a n c e ( f i b e r ,   s u s p e n s e I n s t a n c e ,   t r e e C o n t e x t )   { 
 
     n e x t H y d r a t a b l e I n s t a n c e   =   g e t F i r s t H y d r a t a b l e C h i l d W i t h i n S u s p e n s e I n s t a n c e ( s u s p e n s e I n s t a n c e ) ; 
     h y d r a t i o n P a r e n t F i b e r   =   f i b e r ; 
     i s H y d r a t i n g   =   t r u e ; 
     h y d r a t i o n E r r o r s   =   n u l l ; 
     d i d S u s p e n d O r E r r o r D E V   =   f a l s e ; 
 
     i f   ( t r e e C o n t e x t   ! = =   n u l l )   { 
         r e s t o r e S u s p e n d e d T r e e C o n t e x t ( f i b e r ,   t r e e C o n t e x t ) ; 
     } 
 
     r e t u r n   t r u e ; 
 } 
 
 f u n c t i o n   w a r n U n h y d r a t e d I n s t a n c e ( r e t u r n F i b e r ,   i n s t a n c e )   { 
     { 
         s w i t c h   ( r e t u r n F i b e r . t a g )   { 
             c a s e   H o s t R o o t : 
                 { 
                     d i d N o t H y d r a t e I n s t a n c e W i t h i n C o n t a i n e r ( r e t u r n F i b e r . s t a t e N o d e . c o n t a i n e r I n f o ,   i n s t a n c e ) ; 
                     b r e a k ; 
                 } 
 
             c a s e   H o s t C o m p o n e n t : 
                 { 
                     v a r   i s C o n c u r r e n t M o d e   =   ( r e t u r n F i b e r . m o d e   &   C o n c u r r e n t M o d e )   ! = =   N o M o d e ; 
                     d i d N o t H y d r a t e I n s t a n c e ( r e t u r n F i b e r . t y p e ,   r e t u r n F i b e r . m e m o i z e d P r o p s ,   r e t u r n F i b e r . s t a t e N o d e ,   i n s t a n c e ,   / /   T O D O :   D e l e t e   t h i s   a r g u m e n t   w h e n   w e   r e m o v e   t h e   l e g a c y   r o o t   A P I . 
                     i s C o n c u r r e n t M o d e ) ; 
                     b r e a k ; 
                 } 
 
             c a s e   S u s p e n s e C o m p o n e n t : 
                 { 
                     v a r   s u s p e n s e S t a t e   =   r e t u r n F i b e r . m e m o i z e d S t a t e ; 
                     i f   ( s u s p e n s e S t a t e . d e h y d r a t e d   ! = =   n u l l )   d i d N o t H y d r a t e I n s t a n c e W i t h i n S u s p e n s e I n s t a n c e ( s u s p e n s e S t a t e . d e h y d r a t e d ,   i n s t a n c e ) ; 
                     b r e a k ; 
                 } 
         } 
     } 
 } 
 
 f u n c t i o n   d e l e t e H y d r a t a b l e I n s t a n c e ( r e t u r n F i b e r ,   i n s t a n c e )   { 
     w a r n U n h y d r a t e d I n s t a n c e ( r e t u r n F i b e r ,   i n s t a n c e ) ; 
     v a r   c h i l d T o D e l e t e   =   c r e a t e F i b e r F r o m H o s t I n s t a n c e F o r D e l e t i o n ( ) ; 
     c h i l d T o D e l e t e . s t a t e N o d e   =   i n s t a n c e ; 
     c h i l d T o D e l e t e . r e t u r n   =   r e t u r n F i b e r ; 
     v a r   d e l e t i o n s   =   r e t u r n F i b e r . d e l e t i o n s ; 
 
     i f   ( d e l e t i o n s   = = =   n u l l )   { 
         r e t u r n F i b e r . d e l e t i o n s   =   [ c h i l d T o D e l e t e ] ; 
         r e t u r n F i b e r . f l a g s   | =   C h i l d D e l e t i o n ; 
     }   e l s e   { 
         d e l e t i o n s . p u s h ( c h i l d T o D e l e t e ) ; 
     } 
 } 
 
 f u n c t i o n   w a r n N o n h y d r a t e d I n s t a n c e ( r e t u r n F i b e r ,   f i b e r )   { 
     { 
         i f   ( d i d S u s p e n d O r E r r o r D E V )   { 
             / /   I n s i d e   a   b o u n d a r y   t h a t   a l r e a d y   s u s p e n d e d .   W e ' r e   c u r r e n t l y   r e n d e r i n g   t h e 
             / /   s i b l i n g s   o f   a   s u s p e n d e d   n o d e .   T h e   m i s m a t c h   m a y   b e   d u e   t o   t h e   m i s s i n g 
             / /   d a t a ,   s o   i t ' s   p r o b a b l y   a   f a l s e   p o s i t i v e . 
             r e t u r n ; 
         } 
 
         s w i t c h   ( r e t u r n F i b e r . t a g )   { 
             c a s e   H o s t R o o t : 
                 { 
                     v a r   p a r e n t C o n t a i n e r   =   r e t u r n F i b e r . s t a t e N o d e . c o n t a i n e r I n f o ; 
 
                     s w i t c h   ( f i b e r . t a g )   { 
                         c a s e   H o s t C o m p o n e n t : 
                             v a r   t y p e   =   f i b e r . t y p e ; 
                             v a r   p r o p s   =   f i b e r . p e n d i n g P r o p s ; 
                             d i d N o t F i n d H y d r a t a b l e I n s t a n c e W i t h i n C o n t a i n e r ( p a r e n t C o n t a i n e r ,   t y p e ) ; 
                             b r e a k ; 
 
                         c a s e   H o s t T e x t : 
                             v a r   t e x t   =   f i b e r . p e n d i n g P r o p s ; 
                             d i d N o t F i n d H y d r a t a b l e T e x t I n s t a n c e W i t h i n C o n t a i n e r ( p a r e n t C o n t a i n e r ,   t e x t ) ; 
                             b r e a k ; 
                     } 
 
                     b r e a k ; 
                 } 
 
             c a s e   H o s t C o m p o n e n t : 
                 { 
                     v a r   p a r e n t T y p e   =   r e t u r n F i b e r . t y p e ; 
                     v a r   p a r e n t P r o p s   =   r e t u r n F i b e r . m e m o i z e d P r o p s ; 
                     v a r   p a r e n t I n s t a n c e   =   r e t u r n F i b e r . s t a t e N o d e ; 
 
                     s w i t c h   ( f i b e r . t a g )   { 
                         c a s e   H o s t C o m p o n e n t : 
                             { 
                                 v a r   _ t y p e   =   f i b e r . t y p e ; 
                                 v a r   _ p r o p s   =   f i b e r . p e n d i n g P r o p s ; 
                                 v a r   i s C o n c u r r e n t M o d e   =   ( r e t u r n F i b e r . m o d e   &   C o n c u r r e n t M o d e )   ! = =   N o M o d e ; 
                                 d i d N o t F i n d H y d r a t a b l e I n s t a n c e ( p a r e n t T y p e ,   p a r e n t P r o p s ,   p a r e n t I n s t a n c e ,   _ t y p e ,   _ p r o p s ,   / /   T O D O :   D e l e t e   t h i s   a r g u m e n t   w h e n   w e   r e m o v e   t h e   l e g a c y   r o o t   A P I . 
                                 i s C o n c u r r e n t M o d e ) ; 
                                 b r e a k ; 
                             } 
 
                         c a s e   H o s t T e x t : 
                             { 
                                 v a r   _ t e x t   =   f i b e r . p e n d i n g P r o p s ; 
 
                                 v a r   _ i s C o n c u r r e n t M o d e   =   ( r e t u r n F i b e r . m o d e   &   C o n c u r r e n t M o d e )   ! = =   N o M o d e ; 
 
                                 d i d N o t F i n d H y d r a t a b l e T e x t I n s t a n c e ( p a r e n t T y p e ,   p a r e n t P r o p s ,   p a r e n t I n s t a n c e ,   _ t e x t ,   / /   T O D O :   D e l e t e   t h i s   a r g u m e n t   w h e n   w e   r e m o v e   t h e   l e g a c y   r o o t   A P I . 
                                 _ i s C o n c u r r e n t M o d e ) ; 
                                 b r e a k ; 
                             } 
                     } 
 
                     b r e a k ; 
                 } 
 
             c a s e   S u s p e n s e C o m p o n e n t : 
                 { 
                     v a r   s u s p e n s e S t a t e   =   r e t u r n F i b e r . m e m o i z e d S t a t e ; 
                     v a r   _ p a r e n t I n s t a n c e   =   s u s p e n s e S t a t e . d e h y d r a t e d ; 
                     i f   ( _ p a r e n t I n s t a n c e   ! = =   n u l l )   s w i t c h   ( f i b e r . t a g )   { 
                         c a s e   H o s t C o m p o n e n t : 
                             v a r   _ t y p e 2   =   f i b e r . t y p e ; 
                             v a r   _ p r o p s 2   =   f i b e r . p e n d i n g P r o p s ; 
                             d i d N o t F i n d H y d r a t a b l e I n s t a n c e W i t h i n S u s p e n s e I n s t a n c e ( _ p a r e n t I n s t a n c e ,   _ t y p e 2 ) ; 
                             b r e a k ; 
 
                         c a s e   H o s t T e x t : 
                             v a r   _ t e x t 2   =   f i b e r . p e n d i n g P r o p s ; 
                             d i d N o t F i n d H y d r a t a b l e T e x t I n s t a n c e W i t h i n S u s p e n s e I n s t a n c e ( _ p a r e n t I n s t a n c e ,   _ t e x t 2 ) ; 
                             b r e a k ; 
                     } 
                     b r e a k ; 
                 } 
 
             d e f a u l t : 
                 r e t u r n ; 
         } 
     } 
 } 
 
 f u n c t i o n   i n s e r t N o n H y d r a t e d I n s t a n c e ( r e t u r n F i b e r ,   f i b e r )   { 
     f i b e r . f l a g s   =   f i b e r . f l a g s   &   ~ H y d r a t i n g   |   P l a c e m e n t ; 
     w a r n N o n h y d r a t e d I n s t a n c e ( r e t u r n F i b e r ,   f i b e r ) ; 
 } 
 
 f u n c t i o n   t r y H y d r a t e ( f i b e r ,   n e x t I n s t a n c e )   { 
     s w i t c h   ( f i b e r . t a g )   { 
         c a s e   H o s t C o m p o n e n t : 
             { 
                 v a r   t y p e   =   f i b e r . t y p e ; 
                 v a r   p r o p s   =   f i b e r . p e n d i n g P r o p s ; 
                 v a r   i n s t a n c e   =   c a n H y d r a t e I n s t a n c e ( n e x t I n s t a n c e ,   t y p e ) ; 
 
                 i f   ( i n s t a n c e   ! = =   n u l l )   { 
                     f i b e r . s t a t e N o d e   =   i n s t a n c e ; 
                     h y d r a t i o n P a r e n t F i b e r   =   f i b e r ; 
                     n e x t H y d r a t a b l e I n s t a n c e   =   g e t F i r s t H y d r a t a b l e C h i l d ( i n s t a n c e ) ; 
                     r e t u r n   t r u e ; 
                 } 
 
                 r e t u r n   f a l s e ; 
             } 
 
         c a s e   H o s t T e x t : 
             { 
                 v a r   t e x t   =   f i b e r . p e n d i n g P r o p s ; 
                 v a r   t e x t I n s t a n c e   =   c a n H y d r a t e T e x t I n s t a n c e ( n e x t I n s t a n c e ,   t e x t ) ; 
 
                 i f   ( t e x t I n s t a n c e   ! = =   n u l l )   { 
                     f i b e r . s t a t e N o d e   =   t e x t I n s t a n c e ; 
                     h y d r a t i o n P a r e n t F i b e r   =   f i b e r ;   / /   T e x t   I n s t a n c e s   d o n ' t   h a v e   c h i l d r e n   s o   t h e r e ' s   n o t h i n g   t o   h y d r a t e . 
 
                     n e x t H y d r a t a b l e I n s t a n c e   =   n u l l ; 
                     r e t u r n   t r u e ; 
                 } 
 
                 r e t u r n   f a l s e ; 
             } 
 
         c a s e   S u s p e n s e C o m p o n e n t : 
             { 
                 v a r   s u s p e n s e I n s t a n c e   =   c a n H y d r a t e S u s p e n s e I n s t a n c e ( n e x t I n s t a n c e ) ; 
 
                 i f   ( s u s p e n s e I n s t a n c e   ! = =   n u l l )   { 
                     v a r   s u s p e n s e S t a t e   =   { 
                         d e h y d r a t e d :   s u s p e n s e I n s t a n c e , 
                         t r e e C o n t e x t :   g e t S u s p e n d e d T r e e C o n t e x t ( ) , 
                         r e t r y L a n e :   O f f s c r e e n L a n e 
                     } ; 
                     f i b e r . m e m o i z e d S t a t e   =   s u s p e n s e S t a t e ;   / /   S t o r e   t h e   d e h y d r a t e d   f r a g m e n t   a s   a   c h i l d   f i b e r . 
                     / /   T h i s   s i m p l i f i e s   t h e   c o d e   f o r   g e t H o s t S i b l i n g   a n d   d e l e t i n g   n o d e s , 
                     / /   s i n c e   i t   d o e s n ' t   h a v e   t o   c o n s i d e r   a l l   S u s p e n s e   b o u n d a r i e s   a n d 
                     / /   c h e c k   i f   t h e y ' r e   d e h y d r a t e d   o n e s   o r   n o t . 
 
                     v a r   d e h y d r a t e d F r a g m e n t   =   c r e a t e F i b e r F r o m D e h y d r a t e d F r a g m e n t ( s u s p e n s e I n s t a n c e ) ; 
                     d e h y d r a t e d F r a g m e n t . r e t u r n   =   f i b e r ; 
                     f i b e r . c h i l d   =   d e h y d r a t e d F r a g m e n t ; 
                     h y d r a t i o n P a r e n t F i b e r   =   f i b e r ;   / /   W h i l e   a   S u s p e n s e   I n s t a n c e   d o e s   h a v e   c h i l d r e n ,   w e   w o n ' t   s t e p   i n t o 
                     / /   i t   d u r i n g   t h e   f i r s t   p a s s .   I n s t e a d ,   w e ' l l   r e e n t e r   i t   l a t e r . 
 
                     n e x t H y d r a t a b l e I n s t a n c e   =   n u l l ; 
                     r e t u r n   t r u e ; 
                 } 
 
                 r e t u r n   f a l s e ; 
             } 
 
         d e f a u l t : 
             r e t u r n   f a l s e ; 
     } 
 } 
 
 f u n c t i o n   s h o u l d C l i e n t R e n d e r O n M i s m a t c h ( f i b e r )   { 
     r e t u r n   ( f i b e r . m o d e   &   C o n c u r r e n t M o d e )   ! = =   N o M o d e   & &   ( f i b e r . f l a g s   &   D i d C a p t u r e )   = = =   N o F l a g s ; 
 } 
 
 f u n c t i o n   t h r o w O n H y d r a t i o n M i s m a t c h ( f i b e r )   { 
     t h r o w   n e w   E r r o r ( ' H y d r a t i o n   f a i l e d   b e c a u s e   t h e   i n i t i a l   U I   d o e s   n o t   m a t c h   w h a t   w a s   '   +   ' r e n d e r e d   o n   t h e   s e r v e r . ' ) ; 
 } 
 
 f u n c t i o n   t r y T o C l a i m N e x t H y d r a t a b l e I n s t a n c e ( f i b e r )   { 
     i f   ( ! i s H y d r a t i n g )   { 
         r e t u r n ; 
     } 
 
     v a r   n e x t I n s t a n c e   =   n e x t H y d r a t a b l e I n s t a n c e ; 
 
     i f   ( ! n e x t I n s t a n c e )   { 
         i f   ( s h o u l d C l i e n t R e n d e r O n M i s m a t c h ( f i b e r ) )   { 
             w a r n N o n h y d r a t e d I n s t a n c e ( h y d r a t i o n P a r e n t F i b e r ,   f i b e r ) ; 
             t h r o w O n H y d r a t i o n M i s m a t c h ( ) ; 
         }   / /   N o t h i n g   t o   h y d r a t e .   M a k e   i t   a n   i n s e r t i o n . 
 
 
         i n s e r t N o n H y d r a t e d I n s t a n c e ( h y d r a t i o n P a r e n t F i b e r ,   f i b e r ) ; 
         i s H y d r a t i n g   =   f a l s e ; 
         h y d r a t i o n P a r e n t F i b e r   =   f i b e r ; 
         r e t u r n ; 
     } 
 
     v a r   f i r s t A t t e m p t e d I n s t a n c e   =   n e x t I n s t a n c e ; 
 
     i f   ( ! t r y H y d r a t e ( f i b e r ,   n e x t I n s t a n c e ) )   { 
         i f   ( s h o u l d C l i e n t R e n d e r O n M i s m a t c h ( f i b e r ) )   { 
             w a r n N o n h y d r a t e d I n s t a n c e ( h y d r a t i o n P a r e n t F i b e r ,   f i b e r ) ; 
             t h r o w O n H y d r a t i o n M i s m a t c h ( ) ; 
         }   / /   I f   w e   c a n ' t   h y d r a t e   t h i s   i n s t a n c e   l e t ' s   t r y   t h e   n e x t   o n e . 
         / /   W e   u s e   t h i s   a s   a   h e u r i s t i c .   I t ' s   b a s e d   o n   i n t u i t i o n   a n d   n o t   d a t a   s o   i t 
         / /   m i g h t   b e   f l a w e d   o r   u n n e c e s s a r y . 
 
 
         n e x t I n s t a n c e   =   g e t N e x t H y d r a t a b l e S i b l i n g ( f i r s t A t t e m p t e d I n s t a n c e ) ; 
         v a r   p r e v H y d r a t i o n P a r e n t F i b e r   =   h y d r a t i o n P a r e n t F i b e r ; 
 
         i f   ( ! n e x t I n s t a n c e   | |   ! t r y H y d r a t e ( f i b e r ,   n e x t I n s t a n c e ) )   { 
             / /   N o t h i n g   t o   h y d r a t e .   M a k e   i t   a n   i n s e r t i o n . 
             i n s e r t N o n H y d r a t e d I n s t a n c e ( h y d r a t i o n P a r e n t F i b e r ,   f i b e r ) ; 
             i s H y d r a t i n g   =   f a l s e ; 
             h y d r a t i o n P a r e n t F i b e r   =   f i b e r ; 
             r e t u r n ; 
         }   / /   W e   m a t c h e d   t h e   n e x t   o n e ,   w e ' l l   n o w   a s s u m e   t h a t   t h e   f i r s t   o n e   w a s 
         / /   s u p e r f l u o u s   a n d   w e ' l l   d e l e t e   i t .   S i n c e   w e   c a n ' t   e a g e r l y   d e l e t e   i t 
         / /   w e ' l l   h a v e   t o   s c h e d u l e   a   d e l e t i o n .   T o   d o   t h a t ,   t h i s   n o d e   n e e d s   a   d u m m y 
         / /   f i b e r   a s s o c i a t e d   w i t h   i t . 
 
 
         d e l e t e H y d r a t a b l e I n s t a n c e ( p r e v H y d r a t i o n P a r e n t F i b e r ,   f i r s t A t t e m p t e d I n s t a n c e ) ; 
     } 
 } 
 
 f u n c t i o n   p r e p a r e T o H y d r a t e H o s t I n s t a n c e ( f i b e r ,   r o o t C o n t a i n e r I n s t a n c e ,   h o s t C o n t e x t )   { 
 
     v a r   i n s t a n c e   =   f i b e r . s t a t e N o d e ; 
     v a r   s h o u l d W a r n I f M i s m a t c h D e v   =   ! d i d S u s p e n d O r E r r o r D E V ; 
     v a r   u p d a t e P a y l o a d   =   h y d r a t e I n s t a n c e ( i n s t a n c e ,   f i b e r . t y p e ,   f i b e r . m e m o i z e d P r o p s ,   r o o t C o n t a i n e r I n s t a n c e ,   h o s t C o n t e x t ,   f i b e r ,   s h o u l d W a r n I f M i s m a t c h D e v ) ;   / /   T O D O :   T y p e   t h i s   s p e c i f i c   t o   t h i s   t y p e   o f   c o m p o n e n t . 
 
     f i b e r . u p d a t e Q u e u e   =   u p d a t e P a y l o a d ;   / /   I f   t h e   u p d a t e   p a y l o a d   i n d i c a t e s   t h a t   t h e r e   i s   a   c h a n g e   o r   i f   t h e r e 
     / /   i s   a   n e w   r e f   w e   m a r k   t h i s   a s   a n   u p d a t e . 
 
     i f   ( u p d a t e P a y l o a d   ! = =   n u l l )   { 
         r e t u r n   t r u e ; 
     } 
 
     r e t u r n   f a l s e ; 
 } 
 
 f u n c t i o n   p r e p a r e T o H y d r a t e H o s t T e x t I n s t a n c e ( f i b e r )   { 
 
     v a r   t e x t I n s t a n c e   =   f i b e r . s t a t e N o d e ; 
     v a r   t e x t C o n t e n t   =   f i b e r . m e m o i z e d P r o p s ; 
     v a r   s h o u l d U p d a t e   =   h y d r a t e T e x t I n s t a n c e ( t e x t I n s t a n c e ,   t e x t C o n t e n t ,   f i b e r ) ; 
 
     i f   ( s h o u l d U p d a t e )   { 
         / /   W e   a s s u m e   t h a t   p r e p a r e T o H y d r a t e H o s t T e x t I n s t a n c e   i s   c a l l e d   i n   a   c o n t e x t   w h e r e   t h e 
         / /   h y d r a t i o n   p a r e n t   i s   t h e   p a r e n t   h o s t   c o m p o n e n t   o f   t h i s   h o s t   t e x t . 
         v a r   r e t u r n F i b e r   =   h y d r a t i o n P a r e n t F i b e r ; 
 
         i f   ( r e t u r n F i b e r   ! = =   n u l l )   { 
             s w i t c h   ( r e t u r n F i b e r . t a g )   { 
                 c a s e   H o s t R o o t : 
                     { 
                         v a r   p a r e n t C o n t a i n e r   =   r e t u r n F i b e r . s t a t e N o d e . c o n t a i n e r I n f o ; 
                         v a r   i s C o n c u r r e n t M o d e   =   ( r e t u r n F i b e r . m o d e   &   C o n c u r r e n t M o d e )   ! = =   N o M o d e ; 
                         d i d N o t M a t c h H y d r a t e d C o n t a i n e r T e x t I n s t a n c e ( p a r e n t C o n t a i n e r ,   t e x t I n s t a n c e ,   t e x t C o n t e n t ,   / /   T O D O :   D e l e t e   t h i s   a r g u m e n t   w h e n   w e   r e m o v e   t h e   l e g a c y   r o o t   A P I . 
                         i s C o n c u r r e n t M o d e ) ; 
                         b r e a k ; 
                     } 
 
                 c a s e   H o s t C o m p o n e n t : 
                     { 
                         v a r   p a r e n t T y p e   =   r e t u r n F i b e r . t y p e ; 
                         v a r   p a r e n t P r o p s   =   r e t u r n F i b e r . m e m o i z e d P r o p s ; 
                         v a r   p a r e n t I n s t a n c e   =   r e t u r n F i b e r . s t a t e N o d e ; 
 
                         v a r   _ i s C o n c u r r e n t M o d e 2   =   ( r e t u r n F i b e r . m o d e   &   C o n c u r r e n t M o d e )   ! = =   N o M o d e ; 
 
                         d i d N o t M a t c h H y d r a t e d T e x t I n s t a n c e ( p a r e n t T y p e ,   p a r e n t P r o p s ,   p a r e n t I n s t a n c e ,   t e x t I n s t a n c e ,   t e x t C o n t e n t ,   / /   T O D O :   D e l e t e   t h i s   a r g u m e n t   w h e n   w e   r e m o v e   t h e   l e g a c y   r o o t   A P I . 
                         _ i s C o n c u r r e n t M o d e 2 ) ; 
                         b r e a k ; 
                     } 
             } 
         } 
     } 
 
     r e t u r n   s h o u l d U p d a t e ; 
 } 
 
 f u n c t i o n   p r e p a r e T o H y d r a t e H o s t S u s p e n s e I n s t a n c e ( f i b e r )   { 
 
     v a r   s u s p e n s e S t a t e   =   f i b e r . m e m o i z e d S t a t e ; 
     v a r   s u s p e n s e I n s t a n c e   =   s u s p e n s e S t a t e   ! = =   n u l l   ?   s u s p e n s e S t a t e . d e h y d r a t e d   :   n u l l ; 
 
     i f   ( ! s u s p e n s e I n s t a n c e )   { 
         t h r o w   n e w   E r r o r ( ' E x p e c t e d   t o   h a v e   a   h y d r a t e d   s u s p e n s e   i n s t a n c e .   '   +   ' T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
     } 
 
     h y d r a t e S u s p e n s e I n s t a n c e ( s u s p e n s e I n s t a n c e ,   f i b e r ) ; 
 } 
 
 f u n c t i o n   s k i p P a s t D e h y d r a t e d S u s p e n s e I n s t a n c e ( f i b e r )   { 
 
     v a r   s u s p e n s e S t a t e   =   f i b e r . m e m o i z e d S t a t e ; 
     v a r   s u s p e n s e I n s t a n c e   =   s u s p e n s e S t a t e   ! = =   n u l l   ?   s u s p e n s e S t a t e . d e h y d r a t e d   :   n u l l ; 
 
     i f   ( ! s u s p e n s e I n s t a n c e )   { 
         t h r o w   n e w   E r r o r ( ' E x p e c t e d   t o   h a v e   a   h y d r a t e d   s u s p e n s e   i n s t a n c e .   '   +   ' T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
     } 
 
     r e t u r n   g e t N e x t H y d r a t a b l e I n s t a n c e A f t e r S u s p e n s e I n s t a n c e ( s u s p e n s e I n s t a n c e ) ; 
 } 
 
 f u n c t i o n   p o p T o N e x t H o s t P a r e n t ( f i b e r )   { 
     v a r   p a r e n t   =   f i b e r . r e t u r n ; 
 
     w h i l e   ( p a r e n t   ! = =   n u l l   & &   p a r e n t . t a g   ! = =   H o s t C o m p o n e n t   & &   p a r e n t . t a g   ! = =   H o s t R o o t   & &   p a r e n t . t a g   ! = =   S u s p e n s e C o m p o n e n t )   { 
         p a r e n t   =   p a r e n t . r e t u r n ; 
     } 
 
     h y d r a t i o n P a r e n t F i b e r   =   p a r e n t ; 
 } 
 
 f u n c t i o n   p o p H y d r a t i o n S t a t e ( f i b e r )   { 
 
     i f   ( f i b e r   ! = =   h y d r a t i o n P a r e n t F i b e r )   { 
         / /   W e ' r e   d e e p e r   t h a n   t h e   c u r r e n t   h y d r a t i o n   c o n t e x t ,   i n s i d e   a n   i n s e r t e d 
         / /   t r e e . 
         r e t u r n   f a l s e ; 
     } 
 
     i f   ( ! i s H y d r a t i n g )   { 
         / /   I f   w e ' r e   n o t   c u r r e n t l y   h y d r a t i n g   b u t   w e ' r e   i n   a   h y d r a t i o n   c o n t e x t ,   t h e n 
         / /   w e   w e r e   a n   i n s e r t i o n   a n d   n o w   n e e d   t o   p o p   u p   r e e n t e r   h y d r a t i o n   o f   o u r 
         / /   s i b l i n g s . 
         p o p T o N e x t H o s t P a r e n t ( f i b e r ) ; 
         i s H y d r a t i n g   =   t r u e ; 
         r e t u r n   f a l s e ; 
     }   / /   I f   w e   h a v e   a n y   r e m a i n i n g   h y d r a t a b l e   n o d e s ,   w e   n e e d   t o   d e l e t e   t h e m   n o w . 
     / /   W e   o n l y   d o   t h i s   d e e p e r   t h a n   h e a d   a n d   b o d y   s i n c e   t h e y   t e n d   t o   h a v e   r a n d o m 
     / /   o t h e r   n o d e s   i n   t h e m .   W e   a l s o   i g n o r e   c o m p o n e n t s   w i t h   p u r e   t e x t   c o n t e n t   i n 
     / /   s i d e   o f   t h e m .   W e   a l s o   d o n ' t   d e l e t e   a n y t h i n g   i n s i d e   t h e   r o o t   c o n t a i n e r . 
 
 
     i f   ( f i b e r . t a g   ! = =   H o s t R o o t   & &   ( f i b e r . t a g   ! = =   H o s t C o m p o n e n t   | |   s h o u l d D e l e t e U n h y d r a t e d T a i l I n s t a n c e s ( f i b e r . t y p e )   & &   ! s h o u l d S e t T e x t C o n t e n t ( f i b e r . t y p e ,   f i b e r . m e m o i z e d P r o p s ) ) )   { 
         v a r   n e x t I n s t a n c e   =   n e x t H y d r a t a b l e I n s t a n c e ; 
 
         i f   ( n e x t I n s t a n c e )   { 
             i f   ( s h o u l d C l i e n t R e n d e r O n M i s m a t c h ( f i b e r ) )   { 
                 w a r n I f U n h y d r a t e d T a i l N o d e s ( f i b e r ) ; 
                 t h r o w O n H y d r a t i o n M i s m a t c h ( ) ; 
             }   e l s e   { 
                 w h i l e   ( n e x t I n s t a n c e )   { 
                     d e l e t e H y d r a t a b l e I n s t a n c e ( f i b e r ,   n e x t I n s t a n c e ) ; 
                     n e x t I n s t a n c e   =   g e t N e x t H y d r a t a b l e S i b l i n g ( n e x t I n s t a n c e ) ; 
                 } 
             } 
         } 
     } 
 
     p o p T o N e x t H o s t P a r e n t ( f i b e r ) ; 
 
     i f   ( f i b e r . t a g   = = =   S u s p e n s e C o m p o n e n t )   { 
         n e x t H y d r a t a b l e I n s t a n c e   =   s k i p P a s t D e h y d r a t e d S u s p e n s e I n s t a n c e ( f i b e r ) ; 
     }   e l s e   { 
         n e x t H y d r a t a b l e I n s t a n c e   =   h y d r a t i o n P a r e n t F i b e r   ?   g e t N e x t H y d r a t a b l e S i b l i n g ( f i b e r . s t a t e N o d e )   :   n u l l ; 
     } 
 
     r e t u r n   t r u e ; 
 } 
 
 f u n c t i o n   h a s U n h y d r a t e d T a i l N o d e s ( )   { 
     r e t u r n   i s H y d r a t i n g   & &   n e x t H y d r a t a b l e I n s t a n c e   ! = =   n u l l ; 
 } 
 
 f u n c t i o n   w a r n I f U n h y d r a t e d T a i l N o d e s ( f i b e r )   { 
     v a r   n e x t I n s t a n c e   =   n e x t H y d r a t a b l e I n s t a n c e ; 
 
     w h i l e   ( n e x t I n s t a n c e )   { 
         w a r n U n h y d r a t e d I n s t a n c e ( f i b e r ,   n e x t I n s t a n c e ) ; 
         n e x t I n s t a n c e   =   g e t N e x t H y d r a t a b l e S i b l i n g ( n e x t I n s t a n c e ) ; 
     } 
 } 
 
 f u n c t i o n   r e s e t H y d r a t i o n S t a t e ( )   { 
 
     h y d r a t i o n P a r e n t F i b e r   =   n u l l ; 
     n e x t H y d r a t a b l e I n s t a n c e   =   n u l l ; 
     i s H y d r a t i n g   =   f a l s e ; 
     d i d S u s p e n d O r E r r o r D E V   =   f a l s e ; 
 } 
 
 f u n c t i o n   u p g r a d e H y d r a t i o n E r r o r s T o R e c o v e r a b l e ( )   { 
     i f   ( h y d r a t i o n E r r o r s   ! = =   n u l l )   { 
         / /   S u c c e s s f u l l y   c o m p l e t e d   a   f o r c e d   c l i e n t   r e n d e r .   T h e   e r r o r s   t h a t   o c c u r r e d 
         / /   d u r i n g   t h e   h y d r a t i o n   a t t e m p t   a r e   n o w   r e c o v e r e d .   W e   w i l l   l o g   t h e m   i n 
         / /   c o m m i t   p h a s e ,   o n c e   t h e   e n t i r e   t r e e   h a s   f i n i s h e d . 
         q u e u e R e c o v e r a b l e E r r o r s ( h y d r a t i o n E r r o r s ) ; 
         h y d r a t i o n E r r o r s   =   n u l l ; 
     } 
 } 
 
 f u n c t i o n   g e t I s H y d r a t i n g ( )   { 
     r e t u r n   i s H y d r a t i n g ; 
 } 
 
 f u n c t i o n   q u e u e H y d r a t i o n E r r o r ( e r r o r )   { 
     i f   ( h y d r a t i o n E r r o r s   = = =   n u l l )   { 
         h y d r a t i o n E r r o r s   =   [ e r r o r ] ; 
     }   e l s e   { 
         h y d r a t i o n E r r o r s . p u s h ( e r r o r ) ; 
     } 
 } 
 
 v a r   d i d W a r n A b o u t M a p s ; 
 v a r   d i d W a r n A b o u t G e n e r a t o r s ; 
 v a r   d i d W a r n A b o u t S t r i n g R e f s ; 
 v a r   o w n e r H a s K e y U s e W a r n i n g ; 
 v a r   o w n e r H a s F u n c t i o n T y p e W a r n i n g ; 
 
 v a r   w a r n F o r M i s s i n g K e y   =   f u n c t i o n   ( c h i l d ,   r e t u r n F i b e r )   { } ; 
 
 { 
     d i d W a r n A b o u t M a p s   =   f a l s e ; 
     d i d W a r n A b o u t G e n e r a t o r s   =   f a l s e ; 
     d i d W a r n A b o u t S t r i n g R e f s   =   { } ; 
     / * * 
       *   W a r n   i f   t h e r e ' s   n o   k e y   e x p l i c i t l y   s e t   o n   d y n a m i c   a r r a y s   o f   c h i l d r e n   o r 
       *   o b j e c t   k e y s   a r e   n o t   v a l i d .   T h i s   a l l o w s   u s   t o   k e e p   t r a c k   o f   c h i l d r e n   b e t w e e n 
       *   u p d a t e s . 
       * / 
 
     o w n e r H a s K e y U s e W a r n i n g   =   { } ; 
     o w n e r H a s F u n c t i o n T y p e W a r n i n g   =   { } ; 
 
     w a r n F o r M i s s i n g K e y   =   f u n c t i o n   ( c h i l d ,   r e t u r n F i b e r )   { 
         i f   ( c h i l d   = = =   n u l l   | |   t y p e o f   c h i l d   ! = =   ' o b j e c t ' )   { 
             r e t u r n ; 
         } 
 
         i f   ( ! c h i l d . _ s t o r e   | |   c h i l d . _ s t o r e . v a l i d a t e d   | |   c h i l d . k e y   ! =   n u l l )   { 
             r e t u r n ; 
         } 
 
         i f   ( t y p e o f   c h i l d . _ s t o r e   ! = =   ' o b j e c t ' )   { 
             t h r o w   n e w   E r r o r ( ' R e a c t   C o m p o n e n t   i n   w a r n F o r M i s s i n g K e y   s h o u l d   h a v e   a   _ s t o r e .   '   +   ' T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
         } 
 
         c h i l d . _ s t o r e . v a l i d a t e d   =   t r u e ; 
         v a r   c o m p o n e n t N a m e   =   g e t C o m p o n e n t N a m e F r o m F i b e r ( r e t u r n F i b e r )   | |   ' C o m p o n e n t ' ; 
 
         i f   ( o w n e r H a s K e y U s e W a r n i n g [ c o m p o n e n t N a m e ] )   { 
             r e t u r n ; 
         } 
 
         o w n e r H a s K e y U s e W a r n i n g [ c o m p o n e n t N a m e ]   =   t r u e ; 
 
         e r r o r ( ' E a c h   c h i l d   i n   a   l i s t   s h o u l d   h a v e   a   u n i q u e   '   +   ' " k e y "   p r o p .   S e e   h t t p s : / / r e a c t j s . o r g / l i n k / w a r n i n g - k e y s   f o r   '   +   ' m o r e   i n f o r m a t i o n . ' ) ; 
     } ; 
 } 
 
 f u n c t i o n   c o e r c e R e f ( r e t u r n F i b e r ,   c u r r e n t ,   e l e m e n t )   { 
     v a r   m i x e d R e f   =   e l e m e n t . r e f ; 
 
     i f   ( m i x e d R e f   ! = =   n u l l   & &   t y p e o f   m i x e d R e f   ! = =   ' f u n c t i o n '   & &   t y p e o f   m i x e d R e f   ! = =   ' o b j e c t ' )   { 
         { 
             / /   T O D O :   C l e a n   t h i s   u p   o n c e   w e   t u r n   o n   t h e   s t r i n g   r e f   w a r n i n g   f o r 
             / /   e v e r y o n e ,   b e c a u s e   t h e   s t r i c t   m o d e   c a s e   w i l l   n o   l o n g e r   b e   r e l e v a n t 
             i f   ( ( r e t u r n F i b e r . m o d e   &   S t r i c t L e g a c y M o d e   | |   w a r n A b o u t S t r i n g R e f s )   & &   / /   W e   w a r n   i n   R e a c t E l e m e n t . j s   i f   o w n e r   a n d   s e l f   a r e   e q u a l   f o r   s t r i n g   r e f s 
             / /   b e c a u s e   t h e s e   c a n n o t   b e   a u t o m a t i c a l l y   c o n v e r t e d   t o   a n   a r r o w   f u n c t i o n 
             / /   u s i n g   a   c o d e m o d .   T h e r e f o r e ,   w e   d o n ' t   h a v e   t o   w a r n   a b o u t   s t r i n g   r e f s   a g a i n . 
             ! ( e l e m e n t . _ o w n e r   & &   e l e m e n t . _ s e l f   & &   e l e m e n t . _ o w n e r . s t a t e N o d e   ! = =   e l e m e n t . _ s e l f ) )   { 
                 v a r   c o m p o n e n t N a m e   =   g e t C o m p o n e n t N a m e F r o m F i b e r ( r e t u r n F i b e r )   | |   ' C o m p o n e n t ' ; 
 
                 i f   ( ! d i d W a r n A b o u t S t r i n g R e f s [ c o m p o n e n t N a m e ] )   { 
                     { 
                         e r r o r ( ' A   s t r i n g   r e f ,   " % s " ,   h a s   b e e n   f o u n d   w i t h i n   a   s t r i c t   m o d e   t r e e .   '   +   ' S t r i n g   r e f s   a r e   a   s o u r c e   o f   p o t e n t i a l   b u g s   a n d   s h o u l d   b e   a v o i d e d .   '   +   ' W e   r e c o m m e n d   u s i n g   u s e R e f ( )   o r   c r e a t e R e f ( )   i n s t e a d .   '   +   ' L e a r n   m o r e   a b o u t   u s i n g   r e f s   s a f e l y   h e r e :   '   +   ' h t t p s : / / r e a c t j s . o r g / l i n k / s t r i c t - m o d e - s t r i n g - r e f ' ,   m i x e d R e f ) ; 
                     } 
 
                     d i d W a r n A b o u t S t r i n g R e f s [ c o m p o n e n t N a m e ]   =   t r u e ; 
                 } 
             } 
         } 
 
         i f   ( e l e m e n t . _ o w n e r )   { 
             v a r   o w n e r   =   e l e m e n t . _ o w n e r ; 
             v a r   i n s t ; 
 
             i f   ( o w n e r )   { 
                 v a r   o w n e r F i b e r   =   o w n e r ; 
 
                 i f   ( o w n e r F i b e r . t a g   ! = =   C l a s s C o m p o n e n t )   { 
                     t h r o w   n e w   E r r o r ( ' F u n c t i o n   c o m p o n e n t s   c a n n o t   h a v e   s t r i n g   r e f s .   '   +   ' W e   r e c o m m e n d   u s i n g   u s e R e f ( )   i n s t e a d .   '   +   ' L e a r n   m o r e   a b o u t   u s i n g   r e f s   s a f e l y   h e r e :   '   +   ' h t t p s : / / r e a c t j s . o r g / l i n k / s t r i c t - m o d e - s t r i n g - r e f ' ) ; 
                 } 
 
                 i n s t   =   o w n e r F i b e r . s t a t e N o d e ; 
             } 
 
             i f   ( ! i n s t )   { 
                 t h r o w   n e w   E r r o r ( " M i s s i n g   o w n e r   f o r   s t r i n g   r e f   "   +   m i x e d R e f   +   " .   T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   "   +   ' b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
             }   / /   A s s i g n i n g   t h i s   t o   a   c o n s t   s o   F l o w   k n o w s   i t   w o n ' t   c h a n g e   i n   t h e   c l o s u r e 
 
 
             v a r   r e s o l v e d I n s t   =   i n s t ; 
 
             { 
                 c h e c k P r o p S t r i n g C o e r c i o n ( m i x e d R e f ,   ' r e f ' ) ; 
             } 
 
             v a r   s t r i n g R e f   =   ' '   +   m i x e d R e f ;   / /   C h e c k   i f   p r e v i o u s   s t r i n g   r e f   m a t c h e s   n e w   s t r i n g   r e f 
 
             i f   ( c u r r e n t   ! = =   n u l l   & &   c u r r e n t . r e f   ! = =   n u l l   & &   t y p e o f   c u r r e n t . r e f   = = =   ' f u n c t i o n '   & &   c u r r e n t . r e f . _ s t r i n g R e f   = = =   s t r i n g R e f )   { 
                 r e t u r n   c u r r e n t . r e f ; 
             } 
 
             v a r   r e f   =   f u n c t i o n   ( v a l u e )   { 
                 v a r   r e f s   =   r e s o l v e d I n s t . r e f s ; 
 
                 i f   ( r e f s   = = =   e m p t y R e f s O b j e c t )   { 
                     / /   T h i s   i s   a   l a z y   p o o l e d   f r o z e n   o b j e c t ,   s o   w e   n e e d   t o   i n i t i a l i z e . 
                     r e f s   =   r e s o l v e d I n s t . r e f s   =   { } ; 
                 } 
 
                 i f   ( v a l u e   = = =   n u l l )   { 
                     d e l e t e   r e f s [ s t r i n g R e f ] ; 
                 }   e l s e   { 
                     r e f s [ s t r i n g R e f ]   =   v a l u e ; 
                 } 
             } ; 
 
             r e f . _ s t r i n g R e f   =   s t r i n g R e f ; 
             r e t u r n   r e f ; 
         }   e l s e   { 
             i f   ( t y p e o f   m i x e d R e f   ! = =   ' s t r i n g ' )   { 
                 t h r o w   n e w   E r r o r ( ' E x p e c t e d   r e f   t o   b e   a   f u n c t i o n ,   a   s t r i n g ,   a n   o b j e c t   r e t u r n e d   b y   R e a c t . c r e a t e R e f ( ) ,   o r   n u l l . ' ) ; 
             } 
 
             i f   ( ! e l e m e n t . _ o w n e r )   { 
                 t h r o w   n e w   E r r o r ( " E l e m e n t   r e f   w a s   s p e c i f i e d   a s   a   s t r i n g   ( "   +   m i x e d R e f   +   " )   b u t   n o   o w n e r   w a s   s e t .   T h i s   c o u l d   h a p p e n   f o r   o n e   o f "   +   '   t h e   f o l l o w i n g   r e a s o n s : \ n '   +   ' 1 .   Y o u   m a y   b e   a d d i n g   a   r e f   t o   a   f u n c t i o n   c o m p o n e n t \ n '   +   " 2 .   Y o u   m a y   b e   a d d i n g   a   r e f   t o   a   c o m p o n e n t   t h a t   w a s   n o t   c r e a t e d   i n s i d e   a   c o m p o n e n t ' s   r e n d e r   m e t h o d \ n "   +   ' 3 .   Y o u   h a v e   m u l t i p l e   c o p i e s   o f   R e a c t   l o a d e d \ n '   +   ' S e e   h t t p s : / / r e a c t j s . o r g / l i n k / r e f s - m u s t - h a v e - o w n e r   f o r   m o r e   i n f o r m a t i o n . ' ) ; 
             } 
         } 
     } 
 
     r e t u r n   m i x e d R e f ; 
 } 
 
 f u n c t i o n   t h r o w O n I n v a l i d O b j e c t T y p e ( r e t u r n F i b e r ,   n e w C h i l d )   { 
     v a r   c h i l d S t r i n g   =   O b j e c t . p r o t o t y p e . t o S t r i n g . c a l l ( n e w C h i l d ) ; 
     t h r o w   n e w   E r r o r ( " O b j e c t s   a r e   n o t   v a l i d   a s   a   R e a c t   c h i l d   ( f o u n d :   "   +   ( c h i l d S t r i n g   = = =   ' [ o b j e c t   O b j e c t ] '   ?   ' o b j e c t   w i t h   k e y s   { '   +   O b j e c t . k e y s ( n e w C h i l d ) . j o i n ( ' ,   ' )   +   ' } '   :   c h i l d S t r i n g )   +   " ) .   "   +   ' I f   y o u   m e a n t   t o   r e n d e r   a   c o l l e c t i o n   o f   c h i l d r e n ,   u s e   a n   a r r a y   '   +   ' i n s t e a d . ' ) ; 
 } 
 
 f u n c t i o n   w a r n O n F u n c t i o n T y p e ( r e t u r n F i b e r )   { 
     { 
         v a r   c o m p o n e n t N a m e   =   g e t C o m p o n e n t N a m e F r o m F i b e r ( r e t u r n F i b e r )   | |   ' C o m p o n e n t ' ; 
 
         i f   ( o w n e r H a s F u n c t i o n T y p e W a r n i n g [ c o m p o n e n t N a m e ] )   { 
             r e t u r n ; 
         } 
 
         o w n e r H a s F u n c t i o n T y p e W a r n i n g [ c o m p o n e n t N a m e ]   =   t r u e ; 
 
         e r r o r ( ' F u n c t i o n s   a r e   n o t   v a l i d   a s   a   R e a c t   c h i l d .   T h i s   m a y   h a p p e n   i f   '   +   ' y o u   r e t u r n   a   C o m p o n e n t   i n s t e a d   o f   < C o m p o n e n t   / >   f r o m   r e n d e r .   '   +   ' O r   m a y b e   y o u   m e a n t   t o   c a l l   t h i s   f u n c t i o n   r a t h e r   t h a n   r e t u r n   i t . ' ) ; 
     } 
 } 
 
 f u n c t i o n   r e s o l v e L a z y ( l a z y T y p e )   { 
     v a r   p a y l o a d   =   l a z y T y p e . _ p a y l o a d ; 
     v a r   i n i t   =   l a z y T y p e . _ i n i t ; 
     r e t u r n   i n i t ( p a y l o a d ) ; 
 }   / /   T h i s   w r a p p e r   f u n c t i o n   e x i s t s   b e c a u s e   I   e x p e c t   t o   c l o n e   t h e   c o d e   i n   e a c h   p a t h 
 / /   t o   b e   a b l e   t o   o p t i m i z e   e a c h   p a t h   i n d i v i d u a l l y   b y   b r a n c h i n g   e a r l y .   T h i s   n e e d s 
 / /   a   c o m p i l e r   o r   w e   c a n   d o   i t   m a n u a l l y .   H e l p e r s   t h a t   d o n ' t   n e e d   t h i s   b r a n c h i n g 
 / /   l i v e   o u t s i d e   o f   t h i s   f u n c t i o n . 
 
 
 f u n c t i o n   C h i l d R e c o n c i l e r ( s h o u l d T r a c k S i d e E f f e c t s )   { 
     f u n c t i o n   d e l e t e C h i l d ( r e t u r n F i b e r ,   c h i l d T o D e l e t e )   { 
         i f   ( ! s h o u l d T r a c k S i d e E f f e c t s )   { 
             / /   N o o p . 
             r e t u r n ; 
         } 
 
         v a r   d e l e t i o n s   =   r e t u r n F i b e r . d e l e t i o n s ; 
 
         i f   ( d e l e t i o n s   = = =   n u l l )   { 
             r e t u r n F i b e r . d e l e t i o n s   =   [ c h i l d T o D e l e t e ] ; 
             r e t u r n F i b e r . f l a g s   | =   C h i l d D e l e t i o n ; 
         }   e l s e   { 
             d e l e t i o n s . p u s h ( c h i l d T o D e l e t e ) ; 
         } 
     } 
 
     f u n c t i o n   d e l e t e R e m a i n i n g C h i l d r e n ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d )   { 
         i f   ( ! s h o u l d T r a c k S i d e E f f e c t s )   { 
             / /   N o o p . 
             r e t u r n   n u l l ; 
         }   / /   T O D O :   F o r   t h e   s h o u l d C l o n e   c a s e ,   t h i s   c o u l d   b e   m i c r o - o p t i m i z e d   a   b i t   b y 
         / /   a s s u m i n g   t h a t   a f t e r   t h e   f i r s t   c h i l d   w e ' v e   a l r e a d y   a d d e d   e v e r y t h i n g . 
 
 
         v a r   c h i l d T o D e l e t e   =   c u r r e n t F i r s t C h i l d ; 
 
         w h i l e   ( c h i l d T o D e l e t e   ! = =   n u l l )   { 
             d e l e t e C h i l d ( r e t u r n F i b e r ,   c h i l d T o D e l e t e ) ; 
             c h i l d T o D e l e t e   =   c h i l d T o D e l e t e . s i b l i n g ; 
         } 
 
         r e t u r n   n u l l ; 
     } 
 
     f u n c t i o n   m a p R e m a i n i n g C h i l d r e n ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d )   { 
         / /   A d d   t h e   r e m a i n i n g   c h i l d r e n   t o   a   t e m p o r a r y   m a p   s o   t h a t   w e   c a n   f i n d   t h e m   b y 
         / /   k e y s   q u i c k l y .   I m p l i c i t   ( n u l l )   k e y s   g e t   a d d e d   t o   t h i s   s e t   w i t h   t h e i r   i n d e x 
         / /   i n s t e a d . 
         v a r   e x i s t i n g C h i l d r e n   =   n e w   M a p ( ) ; 
         v a r   e x i s t i n g C h i l d   =   c u r r e n t F i r s t C h i l d ; 
 
         w h i l e   ( e x i s t i n g C h i l d   ! = =   n u l l )   { 
             i f   ( e x i s t i n g C h i l d . k e y   ! = =   n u l l )   { 
                 e x i s t i n g C h i l d r e n . s e t ( e x i s t i n g C h i l d . k e y ,   e x i s t i n g C h i l d ) ; 
             }   e l s e   { 
                 e x i s t i n g C h i l d r e n . s e t ( e x i s t i n g C h i l d . i n d e x ,   e x i s t i n g C h i l d ) ; 
             } 
 
             e x i s t i n g C h i l d   =   e x i s t i n g C h i l d . s i b l i n g ; 
         } 
 
         r e t u r n   e x i s t i n g C h i l d r e n ; 
     } 
 
     f u n c t i o n   u s e F i b e r ( f i b e r ,   p e n d i n g P r o p s )   { 
         / /   W e   c u r r e n t l y   s e t   s i b l i n g   t o   n u l l   a n d   i n d e x   t o   0   h e r e   b e c a u s e   i t   i s   e a s y 
         / /   t o   f o r g e t   t o   d o   b e f o r e   r e t u r n i n g   i t .   E . g .   f o r   t h e   s i n g l e   c h i l d   c a s e . 
         v a r   c l o n e   =   c r e a t e W o r k I n P r o g r e s s ( f i b e r ,   p e n d i n g P r o p s ) ; 
         c l o n e . i n d e x   =   0 ; 
         c l o n e . s i b l i n g   =   n u l l ; 
         r e t u r n   c l o n e ; 
     } 
 
     f u n c t i o n   p l a c e C h i l d ( n e w F i b e r ,   l a s t P l a c e d I n d e x ,   n e w I n d e x )   { 
         n e w F i b e r . i n d e x   =   n e w I n d e x ; 
 
         i f   ( ! s h o u l d T r a c k S i d e E f f e c t s )   { 
             / /   D u r i n g   h y d r a t i o n ,   t h e   u s e I d   a l g o r i t h m   n e e d s   t o   k n o w   w h i c h   f i b e r s   a r e 
             / /   p a r t   o f   a   l i s t   o f   c h i l d r e n   ( a r r a y s ,   i t e r a t o r s ) . 
             n e w F i b e r . f l a g s   | =   F o r k e d ; 
             r e t u r n   l a s t P l a c e d I n d e x ; 
         } 
 
         v a r   c u r r e n t   =   n e w F i b e r . a l t e r n a t e ; 
 
         i f   ( c u r r e n t   ! = =   n u l l )   { 
             v a r   o l d I n d e x   =   c u r r e n t . i n d e x ; 
 
             i f   ( o l d I n d e x   <   l a s t P l a c e d I n d e x )   { 
                 / /   T h i s   i s   a   m o v e . 
                 n e w F i b e r . f l a g s   | =   P l a c e m e n t ; 
                 r e t u r n   l a s t P l a c e d I n d e x ; 
             }   e l s e   { 
                 / /   T h i s   i t e m   c a n   s t a y   i n   p l a c e . 
                 r e t u r n   o l d I n d e x ; 
             } 
         }   e l s e   { 
             / /   T h i s   i s   a n   i n s e r t i o n . 
             n e w F i b e r . f l a g s   | =   P l a c e m e n t ; 
             r e t u r n   l a s t P l a c e d I n d e x ; 
         } 
     } 
 
     f u n c t i o n   p l a c e S i n g l e C h i l d ( n e w F i b e r )   { 
         / /   T h i s   i s   s i m p l e r   f o r   t h e   s i n g l e   c h i l d   c a s e .   W e   o n l y   n e e d   t o   d o   a 
         / /   p l a c e m e n t   f o r   i n s e r t i n g   n e w   c h i l d r e n . 
         i f   ( s h o u l d T r a c k S i d e E f f e c t s   & &   n e w F i b e r . a l t e r n a t e   = = =   n u l l )   { 
             n e w F i b e r . f l a g s   | =   P l a c e m e n t ; 
         } 
 
         r e t u r n   n e w F i b e r ; 
     } 
 
     f u n c t i o n   u p d a t e T e x t N o d e ( r e t u r n F i b e r ,   c u r r e n t ,   t e x t C o n t e n t ,   l a n e s )   { 
         i f   ( c u r r e n t   = = =   n u l l   | |   c u r r e n t . t a g   ! = =   H o s t T e x t )   { 
             / /   I n s e r t 
             v a r   c r e a t e d   =   c r e a t e F i b e r F r o m T e x t ( t e x t C o n t e n t ,   r e t u r n F i b e r . m o d e ,   l a n e s ) ; 
             c r e a t e d . r e t u r n   =   r e t u r n F i b e r ; 
             r e t u r n   c r e a t e d ; 
         }   e l s e   { 
             / /   U p d a t e 
             v a r   e x i s t i n g   =   u s e F i b e r ( c u r r e n t ,   t e x t C o n t e n t ) ; 
             e x i s t i n g . r e t u r n   =   r e t u r n F i b e r ; 
             r e t u r n   e x i s t i n g ; 
         } 
     } 
 
     f u n c t i o n   u p d a t e E l e m e n t ( r e t u r n F i b e r ,   c u r r e n t ,   e l e m e n t ,   l a n e s )   { 
         v a r   e l e m e n t T y p e   =   e l e m e n t . t y p e ; 
 
         i f   ( e l e m e n t T y p e   = = =   R E A C T _ F R A G M E N T _ T Y P E )   { 
             r e t u r n   u p d a t e F r a g m e n t ( r e t u r n F i b e r ,   c u r r e n t ,   e l e m e n t . p r o p s . c h i l d r e n ,   l a n e s ,   e l e m e n t . k e y ) ; 
         } 
 
         i f   ( c u r r e n t   ! = =   n u l l )   { 
             i f   ( c u r r e n t . e l e m e n t T y p e   = = =   e l e m e n t T y p e   | |   (   / /   K e e p   t h i s   c h e c k   i n l i n e   s o   i t   o n l y   r u n s   o n   t h e   f a l s e   p a t h : 
               i s C o m p a t i b l e F a m i l y F o r H o t R e l o a d i n g ( c u r r e n t ,   e l e m e n t )   )   | |   / /   L a z y   t y p e s   s h o u l d   r e c o n c i l e   t h e i r   r e s o l v e d   t y p e . 
             / /   W e   n e e d   t o   d o   t h i s   a f t e r   t h e   H o t   R e l o a d i n g   c h e c k   a b o v e , 
             / /   b e c a u s e   h o t   r e l o a d i n g   h a s   d i f f e r e n t   s e m a n t i c s   t h a n   p r o d   b e c a u s e 
             / /   i t   d o e s n ' t   r e s u s p e n d .   S o   w e   c a n ' t   l e t   t h e   c a l l   b e l o w   s u s p e n d . 
             t y p e o f   e l e m e n t T y p e   = = =   ' o b j e c t '   & &   e l e m e n t T y p e   ! = =   n u l l   & &   e l e m e n t T y p e . $ $ t y p e o f   = = =   R E A C T _ L A Z Y _ T Y P E   & &   r e s o l v e L a z y ( e l e m e n t T y p e )   = = =   c u r r e n t . t y p e )   { 
                 / /   M o v e   b a s e d   o n   i n d e x 
                 v a r   e x i s t i n g   =   u s e F i b e r ( c u r r e n t ,   e l e m e n t . p r o p s ) ; 
                 e x i s t i n g . r e f   =   c o e r c e R e f ( r e t u r n F i b e r ,   c u r r e n t ,   e l e m e n t ) ; 
                 e x i s t i n g . r e t u r n   =   r e t u r n F i b e r ; 
 
                 { 
                     e x i s t i n g . _ d e b u g S o u r c e   =   e l e m e n t . _ s o u r c e ; 
                     e x i s t i n g . _ d e b u g O w n e r   =   e l e m e n t . _ o w n e r ; 
                 } 
 
                 r e t u r n   e x i s t i n g ; 
             } 
         }   / /   I n s e r t 
 
 
         v a r   c r e a t e d   =   c r e a t e F i b e r F r o m E l e m e n t ( e l e m e n t ,   r e t u r n F i b e r . m o d e ,   l a n e s ) ; 
         c r e a t e d . r e f   =   c o e r c e R e f ( r e t u r n F i b e r ,   c u r r e n t ,   e l e m e n t ) ; 
         c r e a t e d . r e t u r n   =   r e t u r n F i b e r ; 
         r e t u r n   c r e a t e d ; 
     } 
 
     f u n c t i o n   u p d a t e P o r t a l ( r e t u r n F i b e r ,   c u r r e n t ,   p o r t a l ,   l a n e s )   { 
         i f   ( c u r r e n t   = = =   n u l l   | |   c u r r e n t . t a g   ! = =   H o s t P o r t a l   | |   c u r r e n t . s t a t e N o d e . c o n t a i n e r I n f o   ! = =   p o r t a l . c o n t a i n e r I n f o   | |   c u r r e n t . s t a t e N o d e . i m p l e m e n t a t i o n   ! = =   p o r t a l . i m p l e m e n t a t i o n )   { 
             / /   I n s e r t 
             v a r   c r e a t e d   =   c r e a t e F i b e r F r o m P o r t a l ( p o r t a l ,   r e t u r n F i b e r . m o d e ,   l a n e s ) ; 
             c r e a t e d . r e t u r n   =   r e t u r n F i b e r ; 
             r e t u r n   c r e a t e d ; 
         }   e l s e   { 
             / /   U p d a t e 
             v a r   e x i s t i n g   =   u s e F i b e r ( c u r r e n t ,   p o r t a l . c h i l d r e n   | |   [ ] ) ; 
             e x i s t i n g . r e t u r n   =   r e t u r n F i b e r ; 
             r e t u r n   e x i s t i n g ; 
         } 
     } 
 
     f u n c t i o n   u p d a t e F r a g m e n t ( r e t u r n F i b e r ,   c u r r e n t ,   f r a g m e n t ,   l a n e s ,   k e y )   { 
         i f   ( c u r r e n t   = = =   n u l l   | |   c u r r e n t . t a g   ! = =   F r a g m e n t )   { 
             / /   I n s e r t 
             v a r   c r e a t e d   =   c r e a t e F i b e r F r o m F r a g m e n t ( f r a g m e n t ,   r e t u r n F i b e r . m o d e ,   l a n e s ,   k e y ) ; 
             c r e a t e d . r e t u r n   =   r e t u r n F i b e r ; 
             r e t u r n   c r e a t e d ; 
         }   e l s e   { 
             / /   U p d a t e 
             v a r   e x i s t i n g   =   u s e F i b e r ( c u r r e n t ,   f r a g m e n t ) ; 
             e x i s t i n g . r e t u r n   =   r e t u r n F i b e r ; 
             r e t u r n   e x i s t i n g ; 
         } 
     } 
 
     f u n c t i o n   c r e a t e C h i l d ( r e t u r n F i b e r ,   n e w C h i l d ,   l a n e s )   { 
         i f   ( t y p e o f   n e w C h i l d   = = =   ' s t r i n g '   & &   n e w C h i l d   ! = =   ' '   | |   t y p e o f   n e w C h i l d   = = =   ' n u m b e r ' )   { 
             / /   T e x t   n o d e s   d o n ' t   h a v e   k e y s .   I f   t h e   p r e v i o u s   n o d e   i s   i m p l i c i t l y   k e y e d 
             / /   w e   c a n   c o n t i n u e   t o   r e p l a c e   i t   w i t h o u t   a b o r t i n g   e v e n   i f   i t   i s   n o t   a   t e x t 
             / /   n o d e . 
             v a r   c r e a t e d   =   c r e a t e F i b e r F r o m T e x t ( ' '   +   n e w C h i l d ,   r e t u r n F i b e r . m o d e ,   l a n e s ) ; 
             c r e a t e d . r e t u r n   =   r e t u r n F i b e r ; 
             r e t u r n   c r e a t e d ; 
         } 
 
         i f   ( t y p e o f   n e w C h i l d   = = =   ' o b j e c t '   & &   n e w C h i l d   ! = =   n u l l )   { 
             s w i t c h   ( n e w C h i l d . $ $ t y p e o f )   { 
                 c a s e   R E A C T _ E L E M E N T _ T Y P E : 
                     { 
                         v a r   _ c r e a t e d   =   c r e a t e F i b e r F r o m E l e m e n t ( n e w C h i l d ,   r e t u r n F i b e r . m o d e ,   l a n e s ) ; 
 
                         _ c r e a t e d . r e f   =   c o e r c e R e f ( r e t u r n F i b e r ,   n u l l ,   n e w C h i l d ) ; 
                         _ c r e a t e d . r e t u r n   =   r e t u r n F i b e r ; 
                         r e t u r n   _ c r e a t e d ; 
                     } 
 
                 c a s e   R E A C T _ P O R T A L _ T Y P E : 
                     { 
                         v a r   _ c r e a t e d 2   =   c r e a t e F i b e r F r o m P o r t a l ( n e w C h i l d ,   r e t u r n F i b e r . m o d e ,   l a n e s ) ; 
 
                         _ c r e a t e d 2 . r e t u r n   =   r e t u r n F i b e r ; 
                         r e t u r n   _ c r e a t e d 2 ; 
                     } 
 
                 c a s e   R E A C T _ L A Z Y _ T Y P E : 
                     { 
                         v a r   p a y l o a d   =   n e w C h i l d . _ p a y l o a d ; 
                         v a r   i n i t   =   n e w C h i l d . _ i n i t ; 
                         r e t u r n   c r e a t e C h i l d ( r e t u r n F i b e r ,   i n i t ( p a y l o a d ) ,   l a n e s ) ; 
                     } 
             } 
 
             i f   ( i s A r r a y ( n e w C h i l d )   | |   g e t I t e r a t o r F n ( n e w C h i l d ) )   { 
                 v a r   _ c r e a t e d 3   =   c r e a t e F i b e r F r o m F r a g m e n t ( n e w C h i l d ,   r e t u r n F i b e r . m o d e ,   l a n e s ,   n u l l ) ; 
 
                 _ c r e a t e d 3 . r e t u r n   =   r e t u r n F i b e r ; 
                 r e t u r n   _ c r e a t e d 3 ; 
             } 
 
             t h r o w O n I n v a l i d O b j e c t T y p e ( r e t u r n F i b e r ,   n e w C h i l d ) ; 
         } 
 
         { 
             i f   ( t y p e o f   n e w C h i l d   = = =   ' f u n c t i o n ' )   { 
                 w a r n O n F u n c t i o n T y p e ( r e t u r n F i b e r ) ; 
             } 
         } 
 
         r e t u r n   n u l l ; 
     } 
 
     f u n c t i o n   u p d a t e S l o t ( r e t u r n F i b e r ,   o l d F i b e r ,   n e w C h i l d ,   l a n e s )   { 
         / /   U p d a t e   t h e   f i b e r   i f   t h e   k e y s   m a t c h ,   o t h e r w i s e   r e t u r n   n u l l . 
         v a r   k e y   =   o l d F i b e r   ! = =   n u l l   ?   o l d F i b e r . k e y   :   n u l l ; 
 
         i f   ( t y p e o f   n e w C h i l d   = = =   ' s t r i n g '   & &   n e w C h i l d   ! = =   ' '   | |   t y p e o f   n e w C h i l d   = = =   ' n u m b e r ' )   { 
             / /   T e x t   n o d e s   d o n ' t   h a v e   k e y s .   I f   t h e   p r e v i o u s   n o d e   i s   i m p l i c i t l y   k e y e d 
             / /   w e   c a n   c o n t i n u e   t o   r e p l a c e   i t   w i t h o u t   a b o r t i n g   e v e n   i f   i t   i s   n o t   a   t e x t 
             / /   n o d e . 
             i f   ( k e y   ! = =   n u l l )   { 
                 r e t u r n   n u l l ; 
             } 
 
             r e t u r n   u p d a t e T e x t N o d e ( r e t u r n F i b e r ,   o l d F i b e r ,   ' '   +   n e w C h i l d ,   l a n e s ) ; 
         } 
 
         i f   ( t y p e o f   n e w C h i l d   = = =   ' o b j e c t '   & &   n e w C h i l d   ! = =   n u l l )   { 
             s w i t c h   ( n e w C h i l d . $ $ t y p e o f )   { 
                 c a s e   R E A C T _ E L E M E N T _ T Y P E : 
                     { 
                         i f   ( n e w C h i l d . k e y   = = =   k e y )   { 
                             r e t u r n   u p d a t e E l e m e n t ( r e t u r n F i b e r ,   o l d F i b e r ,   n e w C h i l d ,   l a n e s ) ; 
                         }   e l s e   { 
                             r e t u r n   n u l l ; 
                         } 
                     } 
 
                 c a s e   R E A C T _ P O R T A L _ T Y P E : 
                     { 
                         i f   ( n e w C h i l d . k e y   = = =   k e y )   { 
                             r e t u r n   u p d a t e P o r t a l ( r e t u r n F i b e r ,   o l d F i b e r ,   n e w C h i l d ,   l a n e s ) ; 
                         }   e l s e   { 
                             r e t u r n   n u l l ; 
                         } 
                     } 
 
                 c a s e   R E A C T _ L A Z Y _ T Y P E : 
                     { 
                         v a r   p a y l o a d   =   n e w C h i l d . _ p a y l o a d ; 
                         v a r   i n i t   =   n e w C h i l d . _ i n i t ; 
                         r e t u r n   u p d a t e S l o t ( r e t u r n F i b e r ,   o l d F i b e r ,   i n i t ( p a y l o a d ) ,   l a n e s ) ; 
                     } 
             } 
 
             i f   ( i s A r r a y ( n e w C h i l d )   | |   g e t I t e r a t o r F n ( n e w C h i l d ) )   { 
                 i f   ( k e y   ! = =   n u l l )   { 
                     r e t u r n   n u l l ; 
                 } 
 
                 r e t u r n   u p d a t e F r a g m e n t ( r e t u r n F i b e r ,   o l d F i b e r ,   n e w C h i l d ,   l a n e s ,   n u l l ) ; 
             } 
 
             t h r o w O n I n v a l i d O b j e c t T y p e ( r e t u r n F i b e r ,   n e w C h i l d ) ; 
         } 
 
         { 
             i f   ( t y p e o f   n e w C h i l d   = = =   ' f u n c t i o n ' )   { 
                 w a r n O n F u n c t i o n T y p e ( r e t u r n F i b e r ) ; 
             } 
         } 
 
         r e t u r n   n u l l ; 
     } 
 
     f u n c t i o n   u p d a t e F r o m M a p ( e x i s t i n g C h i l d r e n ,   r e t u r n F i b e r ,   n e w I d x ,   n e w C h i l d ,   l a n e s )   { 
         i f   ( t y p e o f   n e w C h i l d   = = =   ' s t r i n g '   & &   n e w C h i l d   ! = =   ' '   | |   t y p e o f   n e w C h i l d   = = =   ' n u m b e r ' )   { 
             / /   T e x t   n o d e s   d o n ' t   h a v e   k e y s ,   s o   w e   n e i t h e r   h a v e   t o   c h e c k   t h e   o l d   n o r 
             / /   n e w   n o d e   f o r   t h e   k e y .   I f   b o t h   a r e   t e x t   n o d e s ,   t h e y   m a t c h . 
             v a r   m a t c h e d F i b e r   =   e x i s t i n g C h i l d r e n . g e t ( n e w I d x )   | |   n u l l ; 
             r e t u r n   u p d a t e T e x t N o d e ( r e t u r n F i b e r ,   m a t c h e d F i b e r ,   ' '   +   n e w C h i l d ,   l a n e s ) ; 
         } 
 
         i f   ( t y p e o f   n e w C h i l d   = = =   ' o b j e c t '   & &   n e w C h i l d   ! = =   n u l l )   { 
             s w i t c h   ( n e w C h i l d . $ $ t y p e o f )   { 
                 c a s e   R E A C T _ E L E M E N T _ T Y P E : 
                     { 
                         v a r   _ m a t c h e d F i b e r   =   e x i s t i n g C h i l d r e n . g e t ( n e w C h i l d . k e y   = = =   n u l l   ?   n e w I d x   :   n e w C h i l d . k e y )   | |   n u l l ; 
 
                         r e t u r n   u p d a t e E l e m e n t ( r e t u r n F i b e r ,   _ m a t c h e d F i b e r ,   n e w C h i l d ,   l a n e s ) ; 
                     } 
 
                 c a s e   R E A C T _ P O R T A L _ T Y P E : 
                     { 
                         v a r   _ m a t c h e d F i b e r 2   =   e x i s t i n g C h i l d r e n . g e t ( n e w C h i l d . k e y   = = =   n u l l   ?   n e w I d x   :   n e w C h i l d . k e y )   | |   n u l l ; 
 
                         r e t u r n   u p d a t e P o r t a l ( r e t u r n F i b e r ,   _ m a t c h e d F i b e r 2 ,   n e w C h i l d ,   l a n e s ) ; 
                     } 
 
                 c a s e   R E A C T _ L A Z Y _ T Y P E : 
                     v a r   p a y l o a d   =   n e w C h i l d . _ p a y l o a d ; 
                     v a r   i n i t   =   n e w C h i l d . _ i n i t ; 
                     r e t u r n   u p d a t e F r o m M a p ( e x i s t i n g C h i l d r e n ,   r e t u r n F i b e r ,   n e w I d x ,   i n i t ( p a y l o a d ) ,   l a n e s ) ; 
             } 
 
             i f   ( i s A r r a y ( n e w C h i l d )   | |   g e t I t e r a t o r F n ( n e w C h i l d ) )   { 
                 v a r   _ m a t c h e d F i b e r 3   =   e x i s t i n g C h i l d r e n . g e t ( n e w I d x )   | |   n u l l ; 
 
                 r e t u r n   u p d a t e F r a g m e n t ( r e t u r n F i b e r ,   _ m a t c h e d F i b e r 3 ,   n e w C h i l d ,   l a n e s ,   n u l l ) ; 
             } 
 
             t h r o w O n I n v a l i d O b j e c t T y p e ( r e t u r n F i b e r ,   n e w C h i l d ) ; 
         } 
 
         { 
             i f   ( t y p e o f   n e w C h i l d   = = =   ' f u n c t i o n ' )   { 
                 w a r n O n F u n c t i o n T y p e ( r e t u r n F i b e r ) ; 
             } 
         } 
 
         r e t u r n   n u l l ; 
     } 
     / * * 
       *   W a r n s   i f   t h e r e   i s   a   d u p l i c a t e   o r   m i s s i n g   k e y 
       * / 
 
 
     f u n c t i o n   w a r n O n I n v a l i d K e y ( c h i l d ,   k n o w n K e y s ,   r e t u r n F i b e r )   { 
         { 
             i f   ( t y p e o f   c h i l d   ! = =   ' o b j e c t '   | |   c h i l d   = = =   n u l l )   { 
                 r e t u r n   k n o w n K e y s ; 
             } 
 
             s w i t c h   ( c h i l d . $ $ t y p e o f )   { 
                 c a s e   R E A C T _ E L E M E N T _ T Y P E : 
                 c a s e   R E A C T _ P O R T A L _ T Y P E : 
                     w a r n F o r M i s s i n g K e y ( c h i l d ,   r e t u r n F i b e r ) ; 
                     v a r   k e y   =   c h i l d . k e y ; 
 
                     i f   ( t y p e o f   k e y   ! = =   ' s t r i n g ' )   { 
                         b r e a k ; 
                     } 
 
                     i f   ( k n o w n K e y s   = = =   n u l l )   { 
                         k n o w n K e y s   =   n e w   S e t ( ) ; 
                         k n o w n K e y s . a d d ( k e y ) ; 
                         b r e a k ; 
                     } 
 
                     i f   ( ! k n o w n K e y s . h a s ( k e y ) )   { 
                         k n o w n K e y s . a d d ( k e y ) ; 
                         b r e a k ; 
                     } 
 
                     e r r o r ( ' E n c o u n t e r e d   t w o   c h i l d r e n   w i t h   t h e   s a m e   k e y ,   ` % s ` .   '   +   ' K e y s   s h o u l d   b e   u n i q u e   s o   t h a t   c o m p o n e n t s   m a i n t a i n   t h e i r   i d e n t i t y   '   +   ' a c r o s s   u p d a t e s .   N o n - u n i q u e   k e y s   m a y   c a u s e   c h i l d r e n   t o   b e   '   +   ' d u p l i c a t e d   a n d / o r   o m i t t e d      t h e   b e h a v i o r   i s   u n s u p p o r t e d   a n d   '   +   ' c o u l d   c h a n g e   i n   a   f u t u r e   v e r s i o n . ' ,   k e y ) ; 
 
                     b r e a k ; 
 
                 c a s e   R E A C T _ L A Z Y _ T Y P E : 
                     v a r   p a y l o a d   =   c h i l d . _ p a y l o a d ; 
                     v a r   i n i t   =   c h i l d . _ i n i t ; 
                     w a r n O n I n v a l i d K e y ( i n i t ( p a y l o a d ) ,   k n o w n K e y s ,   r e t u r n F i b e r ) ; 
                     b r e a k ; 
             } 
         } 
 
         r e t u r n   k n o w n K e y s ; 
     } 
 
     f u n c t i o n   r e c o n c i l e C h i l d r e n A r r a y ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d ,   n e w C h i l d r e n ,   l a n e s )   { 
         / /   T h i s   a l g o r i t h m   c a n ' t   o p t i m i z e   b y   s e a r c h i n g   f r o m   b o t h   e n d s   s i n c e   w e 
         / /   d o n ' t   h a v e   b a c k p o i n t e r s   o n   f i b e r s .   I ' m   t r y i n g   t o   s e e   h o w   f a r   w e   c a n   g e t 
         / /   w i t h   t h a t   m o d e l .   I f   i t   e n d s   u p   n o t   b e i n g   w o r t h   t h e   t r a d e o f f s ,   w e   c a n 
         / /   a d d   i t   l a t e r . 
         / /   E v e n   w i t h   a   t w o   e n d e d   o p t i m i z a t i o n ,   w e ' d   w a n t   t o   o p t i m i z e   f o r   t h e   c a s e 
         / /   w h e r e   t h e r e   a r e   f e w   c h a n g e s   a n d   b r u t e   f o r c e   t h e   c o m p a r i s o n   i n s t e a d   o f 
         / /   g o i n g   f o r   t h e   M a p .   I t ' d   l i k e   t o   e x p l o r e   h i t t i n g   t h a t   p a t h   f i r s t   i n 
         / /   f o r w a r d - o n l y   m o d e   a n d   o n l y   g o   f o r   t h e   M a p   o n c e   w e   n o t i c e   t h a t   w e   n e e d 
         / /   l o t s   o f   l o o k   a h e a d .   T h i s   d o e s n ' t   h a n d l e   r e v e r s a l   a s   w e l l   a s   t w o   e n d e d 
         / /   s e a r c h   b u t   t h a t ' s   u n u s u a l .   B e s i d e s ,   f o r   t h e   t w o   e n d e d   o p t i m i z a t i o n   t o 
         / /   w o r k   o n   I t e r a b l e s ,   w e ' d   n e e d   t o   c o p y   t h e   w h o l e   s e t . 
         / /   I n   t h i s   f i r s t   i t e r a t i o n ,   w e ' l l   j u s t   l i v e   w i t h   h i t t i n g   t h e   b a d   c a s e 
         / /   ( a d d i n g   e v e r y t h i n g   t o   a   M a p )   i n   f o r   e v e r y   i n s e r t / m o v e . 
         / /   I f   y o u   c h a n g e   t h i s   c o d e ,   a l s o   u p d a t e   r e c o n c i l e C h i l d r e n I t e r a t o r ( )   w h i c h 
         / /   u s e s   t h e   s a m e   a l g o r i t h m . 
         { 
             / /   F i r s t ,   v a l i d a t e   k e y s . 
             v a r   k n o w n K e y s   =   n u l l ; 
 
             f o r   ( v a r   i   =   0 ;   i   <   n e w C h i l d r e n . l e n g t h ;   i + + )   { 
                 v a r   c h i l d   =   n e w C h i l d r e n [ i ] ; 
                 k n o w n K e y s   =   w a r n O n I n v a l i d K e y ( c h i l d ,   k n o w n K e y s ,   r e t u r n F i b e r ) ; 
             } 
         } 
 
         v a r   r e s u l t i n g F i r s t C h i l d   =   n u l l ; 
         v a r   p r e v i o u s N e w F i b e r   =   n u l l ; 
         v a r   o l d F i b e r   =   c u r r e n t F i r s t C h i l d ; 
         v a r   l a s t P l a c e d I n d e x   =   0 ; 
         v a r   n e w I d x   =   0 ; 
         v a r   n e x t O l d F i b e r   =   n u l l ; 
 
         f o r   ( ;   o l d F i b e r   ! = =   n u l l   & &   n e w I d x   <   n e w C h i l d r e n . l e n g t h ;   n e w I d x + + )   { 
             i f   ( o l d F i b e r . i n d e x   >   n e w I d x )   { 
                 n e x t O l d F i b e r   =   o l d F i b e r ; 
                 o l d F i b e r   =   n u l l ; 
             }   e l s e   { 
                 n e x t O l d F i b e r   =   o l d F i b e r . s i b l i n g ; 
             } 
 
             v a r   n e w F i b e r   =   u p d a t e S l o t ( r e t u r n F i b e r ,   o l d F i b e r ,   n e w C h i l d r e n [ n e w I d x ] ,   l a n e s ) ; 
 
             i f   ( n e w F i b e r   = = =   n u l l )   { 
                 / /   T O D O :   T h i s   b r e a k s   o n   e m p t y   s l o t s   l i k e   n u l l   c h i l d r e n .   T h a t ' s 
                 / /   u n f o r t u n a t e   b e c a u s e   i t   t r i g g e r s   t h e   s l o w   p a t h   a l l   t h e   t i m e .   W e   n e e d 
                 / /   a   b e t t e r   w a y   t o   c o m m u n i c a t e   w h e t h e r   t h i s   w a s   a   m i s s   o r   n u l l , 
                 / /   b o o l e a n ,   u n d e f i n e d ,   e t c . 
                 i f   ( o l d F i b e r   = = =   n u l l )   { 
                     o l d F i b e r   =   n e x t O l d F i b e r ; 
                 } 
 
                 b r e a k ; 
             } 
 
             i f   ( s h o u l d T r a c k S i d e E f f e c t s )   { 
                 i f   ( o l d F i b e r   & &   n e w F i b e r . a l t e r n a t e   = = =   n u l l )   { 
                     / /   W e   m a t c h e d   t h e   s l o t ,   b u t   w e   d i d n ' t   r e u s e   t h e   e x i s t i n g   f i b e r ,   s o   w e 
                     / /   n e e d   t o   d e l e t e   t h e   e x i s t i n g   c h i l d . 
                     d e l e t e C h i l d ( r e t u r n F i b e r ,   o l d F i b e r ) ; 
                 } 
             } 
 
             l a s t P l a c e d I n d e x   =   p l a c e C h i l d ( n e w F i b e r ,   l a s t P l a c e d I n d e x ,   n e w I d x ) ; 
 
             i f   ( p r e v i o u s N e w F i b e r   = = =   n u l l )   { 
                 / /   T O D O :   M o v e   o u t   o f   t h e   l o o p .   T h i s   o n l y   h a p p e n s   f o r   t h e   f i r s t   r u n . 
                 r e s u l t i n g F i r s t C h i l d   =   n e w F i b e r ; 
             }   e l s e   { 
                 / /   T O D O :   D e f e r   s i b l i n g s   i f   w e ' r e   n o t   a t   t h e   r i g h t   i n d e x   f o r   t h i s   s l o t . 
                 / /   I . e .   i f   w e   h a d   n u l l   v a l u e s   b e f o r e ,   t h e n   w e   w a n t   t o   d e f e r   t h i s 
                 / /   f o r   e a c h   n u l l   v a l u e .   H o w e v e r ,   w e   a l s o   d o n ' t   w a n t   t o   c a l l   u p d a t e S l o t 
                 / /   w i t h   t h e   p r e v i o u s   o n e . 
                 p r e v i o u s N e w F i b e r . s i b l i n g   =   n e w F i b e r ; 
             } 
 
             p r e v i o u s N e w F i b e r   =   n e w F i b e r ; 
             o l d F i b e r   =   n e x t O l d F i b e r ; 
         } 
 
         i f   ( n e w I d x   = = =   n e w C h i l d r e n . l e n g t h )   { 
             / /   W e ' v e   r e a c h e d   t h e   e n d   o f   t h e   n e w   c h i l d r e n .   W e   c a n   d e l e t e   t h e   r e s t . 
             d e l e t e R e m a i n i n g C h i l d r e n ( r e t u r n F i b e r ,   o l d F i b e r ) ; 
 
             i f   ( g e t I s H y d r a t i n g ( ) )   { 
                 v a r   n u m b e r O f F o r k s   =   n e w I d x ; 
                 p u s h T r e e F o r k ( r e t u r n F i b e r ,   n u m b e r O f F o r k s ) ; 
             } 
 
             r e t u r n   r e s u l t i n g F i r s t C h i l d ; 
         } 
 
         i f   ( o l d F i b e r   = = =   n u l l )   { 
             / /   I f   w e   d o n ' t   h a v e   a n y   m o r e   e x i s t i n g   c h i l d r e n   w e   c a n   c h o o s e   a   f a s t   p a t h 
             / /   s i n c e   t h e   r e s t   w i l l   a l l   b e   i n s e r t i o n s . 
             f o r   ( ;   n e w I d x   <   n e w C h i l d r e n . l e n g t h ;   n e w I d x + + )   { 
                 v a r   _ n e w F i b e r   =   c r e a t e C h i l d ( r e t u r n F i b e r ,   n e w C h i l d r e n [ n e w I d x ] ,   l a n e s ) ; 
 
                 i f   ( _ n e w F i b e r   = = =   n u l l )   { 
                     c o n t i n u e ; 
                 } 
 
                 l a s t P l a c e d I n d e x   =   p l a c e C h i l d ( _ n e w F i b e r ,   l a s t P l a c e d I n d e x ,   n e w I d x ) ; 
 
                 i f   ( p r e v i o u s N e w F i b e r   = = =   n u l l )   { 
                     / /   T O D O :   M o v e   o u t   o f   t h e   l o o p .   T h i s   o n l y   h a p p e n s   f o r   t h e   f i r s t   r u n . 
                     r e s u l t i n g F i r s t C h i l d   =   _ n e w F i b e r ; 
                 }   e l s e   { 
                     p r e v i o u s N e w F i b e r . s i b l i n g   =   _ n e w F i b e r ; 
                 } 
 
                 p r e v i o u s N e w F i b e r   =   _ n e w F i b e r ; 
             } 
 
             i f   ( g e t I s H y d r a t i n g ( ) )   { 
                 v a r   _ n u m b e r O f F o r k s   =   n e w I d x ; 
                 p u s h T r e e F o r k ( r e t u r n F i b e r ,   _ n u m b e r O f F o r k s ) ; 
             } 
 
             r e t u r n   r e s u l t i n g F i r s t C h i l d ; 
         }   / /   A d d   a l l   c h i l d r e n   t o   a   k e y   m a p   f o r   q u i c k   l o o k u p s . 
 
 
         v a r   e x i s t i n g C h i l d r e n   =   m a p R e m a i n i n g C h i l d r e n ( r e t u r n F i b e r ,   o l d F i b e r ) ;   / /   K e e p   s c a n n i n g   a n d   u s e   t h e   m a p   t o   r e s t o r e   d e l e t e d   i t e m s   a s   m o v e s . 
 
         f o r   ( ;   n e w I d x   <   n e w C h i l d r e n . l e n g t h ;   n e w I d x + + )   { 
             v a r   _ n e w F i b e r 2   =   u p d a t e F r o m M a p ( e x i s t i n g C h i l d r e n ,   r e t u r n F i b e r ,   n e w I d x ,   n e w C h i l d r e n [ n e w I d x ] ,   l a n e s ) ; 
 
             i f   ( _ n e w F i b e r 2   ! = =   n u l l )   { 
                 i f   ( s h o u l d T r a c k S i d e E f f e c t s )   { 
                     i f   ( _ n e w F i b e r 2 . a l t e r n a t e   ! = =   n u l l )   { 
                         / /   T h e   n e w   f i b e r   i s   a   w o r k   i n   p r o g r e s s ,   b u t   i f   t h e r e   e x i s t s   a 
                         / /   c u r r e n t ,   t h a t   m e a n s   t h a t   w e   r e u s e d   t h e   f i b e r .   W e   n e e d   t o   d e l e t e 
                         / /   i t   f r o m   t h e   c h i l d   l i s t   s o   t h a t   w e   d o n ' t   a d d   i t   t o   t h e   d e l e t i o n 
                         / /   l i s t . 
                         e x i s t i n g C h i l d r e n . d e l e t e ( _ n e w F i b e r 2 . k e y   = = =   n u l l   ?   n e w I d x   :   _ n e w F i b e r 2 . k e y ) ; 
                     } 
                 } 
 
                 l a s t P l a c e d I n d e x   =   p l a c e C h i l d ( _ n e w F i b e r 2 ,   l a s t P l a c e d I n d e x ,   n e w I d x ) ; 
 
                 i f   ( p r e v i o u s N e w F i b e r   = = =   n u l l )   { 
                     r e s u l t i n g F i r s t C h i l d   =   _ n e w F i b e r 2 ; 
                 }   e l s e   { 
                     p r e v i o u s N e w F i b e r . s i b l i n g   =   _ n e w F i b e r 2 ; 
                 } 
 
                 p r e v i o u s N e w F i b e r   =   _ n e w F i b e r 2 ; 
             } 
         } 
 
         i f   ( s h o u l d T r a c k S i d e E f f e c t s )   { 
             / /   A n y   e x i s t i n g   c h i l d r e n   t h a t   w e r e n ' t   c o n s u m e d   a b o v e   w e r e   d e l e t e d .   W e   n e e d 
             / /   t o   a d d   t h e m   t o   t h e   d e l e t i o n   l i s t . 
             e x i s t i n g C h i l d r e n . f o r E a c h ( f u n c t i o n   ( c h i l d )   { 
                 r e t u r n   d e l e t e C h i l d ( r e t u r n F i b e r ,   c h i l d ) ; 
             } ) ; 
         } 
 
         i f   ( g e t I s H y d r a t i n g ( ) )   { 
             v a r   _ n u m b e r O f F o r k s 2   =   n e w I d x ; 
             p u s h T r e e F o r k ( r e t u r n F i b e r ,   _ n u m b e r O f F o r k s 2 ) ; 
         } 
 
         r e t u r n   r e s u l t i n g F i r s t C h i l d ; 
     } 
 
     f u n c t i o n   r e c o n c i l e C h i l d r e n I t e r a t o r ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d ,   n e w C h i l d r e n I t e r a b l e ,   l a n e s )   { 
         / /   T h i s   i s   t h e   s a m e   i m p l e m e n t a t i o n   a s   r e c o n c i l e C h i l d r e n A r r a y ( ) , 
         / /   b u t   u s i n g   t h e   i t e r a t o r   i n s t e a d . 
         v a r   i t e r a t o r F n   =   g e t I t e r a t o r F n ( n e w C h i l d r e n I t e r a b l e ) ; 
 
         i f   ( t y p e o f   i t e r a t o r F n   ! = =   ' f u n c t i o n ' )   { 
             t h r o w   n e w   E r r o r ( ' A n   o b j e c t   i s   n o t   a n   i t e r a b l e .   T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   i n   '   +   ' R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
         } 
 
         { 
             / /   W e   d o n ' t   s u p p o r t   r e n d e r i n g   G e n e r a t o r s   b e c a u s e   i t ' s   a   m u t a t i o n . 
             / /   S e e   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 2 9 9 5 
             i f   ( t y p e o f   S y m b o l   = = =   ' f u n c t i o n '   & &   / /   $ F l o w F i x M e   F l o w   d o e s n ' t   k n o w   a b o u t   t o S t r i n g T a g 
             n e w C h i l d r e n I t e r a b l e [ S y m b o l . t o S t r i n g T a g ]   = = =   ' G e n e r a t o r ' )   { 
                 i f   ( ! d i d W a r n A b o u t G e n e r a t o r s )   { 
                     e r r o r ( ' U s i n g   G e n e r a t o r s   a s   c h i l d r e n   i s   u n s u p p o r t e d   a n d   w i l l   l i k e l y   y i e l d   '   +   ' u n e x p e c t e d   r e s u l t s   b e c a u s e   e n u m e r a t i n g   a   g e n e r a t o r   m u t a t e s   i t .   '   +   ' Y o u   m a y   c o n v e r t   i t   t o   a n   a r r a y   w i t h   ` A r r a y . f r o m ( ) `   o r   t h e   '   +   ' ` [ . . . s p r e a d ] `   o p e r a t o r   b e f o r e   r e n d e r i n g .   K e e p   i n   m i n d   '   +   ' y o u   m i g h t   n e e d   t o   p o l y f i l l   t h e s e   f e a t u r e s   f o r   o l d e r   b r o w s e r s . ' ) ; 
                 } 
 
                 d i d W a r n A b o u t G e n e r a t o r s   =   t r u e ; 
             }   / /   W a r n   a b o u t   u s i n g   M a p s   a s   c h i l d r e n 
 
 
             i f   ( n e w C h i l d r e n I t e r a b l e . e n t r i e s   = = =   i t e r a t o r F n )   { 
                 i f   ( ! d i d W a r n A b o u t M a p s )   { 
                     e r r o r ( ' U s i n g   M a p s   a s   c h i l d r e n   i s   n o t   s u p p o r t e d .   '   +   ' U s e   a n   a r r a y   o f   k e y e d   R e a c t E l e m e n t s   i n s t e a d . ' ) ; 
                 } 
 
                 d i d W a r n A b o u t M a p s   =   t r u e ; 
             }   / /   F i r s t ,   v a l i d a t e   k e y s . 
             / /   W e ' l l   g e t   a   d i f f e r e n t   i t e r a t o r   l a t e r   f o r   t h e   m a i n   p a s s . 
 
 
             v a r   _ n e w C h i l d r e n   =   i t e r a t o r F n . c a l l ( n e w C h i l d r e n I t e r a b l e ) ; 
 
             i f   ( _ n e w C h i l d r e n )   { 
                 v a r   k n o w n K e y s   =   n u l l ; 
 
                 v a r   _ s t e p   =   _ n e w C h i l d r e n . n e x t ( ) ; 
 
                 f o r   ( ;   ! _ s t e p . d o n e ;   _ s t e p   =   _ n e w C h i l d r e n . n e x t ( ) )   { 
                     v a r   c h i l d   =   _ s t e p . v a l u e ; 
                     k n o w n K e y s   =   w a r n O n I n v a l i d K e y ( c h i l d ,   k n o w n K e y s ,   r e t u r n F i b e r ) ; 
                 } 
             } 
         } 
 
         v a r   n e w C h i l d r e n   =   i t e r a t o r F n . c a l l ( n e w C h i l d r e n I t e r a b l e ) ; 
 
         i f   ( n e w C h i l d r e n   = =   n u l l )   { 
             t h r o w   n e w   E r r o r ( ' A n   i t e r a b l e   o b j e c t   p r o v i d e d   n o   i t e r a t o r . ' ) ; 
         } 
 
         v a r   r e s u l t i n g F i r s t C h i l d   =   n u l l ; 
         v a r   p r e v i o u s N e w F i b e r   =   n u l l ; 
         v a r   o l d F i b e r   =   c u r r e n t F i r s t C h i l d ; 
         v a r   l a s t P l a c e d I n d e x   =   0 ; 
         v a r   n e w I d x   =   0 ; 
         v a r   n e x t O l d F i b e r   =   n u l l ; 
         v a r   s t e p   =   n e w C h i l d r e n . n e x t ( ) ; 
 
         f o r   ( ;   o l d F i b e r   ! = =   n u l l   & &   ! s t e p . d o n e ;   n e w I d x + + ,   s t e p   =   n e w C h i l d r e n . n e x t ( ) )   { 
             i f   ( o l d F i b e r . i n d e x   >   n e w I d x )   { 
                 n e x t O l d F i b e r   =   o l d F i b e r ; 
                 o l d F i b e r   =   n u l l ; 
             }   e l s e   { 
                 n e x t O l d F i b e r   =   o l d F i b e r . s i b l i n g ; 
             } 
 
             v a r   n e w F i b e r   =   u p d a t e S l o t ( r e t u r n F i b e r ,   o l d F i b e r ,   s t e p . v a l u e ,   l a n e s ) ; 
 
             i f   ( n e w F i b e r   = = =   n u l l )   { 
                 / /   T O D O :   T h i s   b r e a k s   o n   e m p t y   s l o t s   l i k e   n u l l   c h i l d r e n .   T h a t ' s 
                 / /   u n f o r t u n a t e   b e c a u s e   i t   t r i g g e r s   t h e   s l o w   p a t h   a l l   t h e   t i m e .   W e   n e e d 
                 / /   a   b e t t e r   w a y   t o   c o m m u n i c a t e   w h e t h e r   t h i s   w a s   a   m i s s   o r   n u l l , 
                 / /   b o o l e a n ,   u n d e f i n e d ,   e t c . 
                 i f   ( o l d F i b e r   = = =   n u l l )   { 
                     o l d F i b e r   =   n e x t O l d F i b e r ; 
                 } 
 
                 b r e a k ; 
             } 
 
             i f   ( s h o u l d T r a c k S i d e E f f e c t s )   { 
                 i f   ( o l d F i b e r   & &   n e w F i b e r . a l t e r n a t e   = = =   n u l l )   { 
                     / /   W e   m a t c h e d   t h e   s l o t ,   b u t   w e   d i d n ' t   r e u s e   t h e   e x i s t i n g   f i b e r ,   s o   w e 
                     / /   n e e d   t o   d e l e t e   t h e   e x i s t i n g   c h i l d . 
                     d e l e t e C h i l d ( r e t u r n F i b e r ,   o l d F i b e r ) ; 
                 } 
             } 
 
             l a s t P l a c e d I n d e x   =   p l a c e C h i l d ( n e w F i b e r ,   l a s t P l a c e d I n d e x ,   n e w I d x ) ; 
 
             i f   ( p r e v i o u s N e w F i b e r   = = =   n u l l )   { 
                 / /   T O D O :   M o v e   o u t   o f   t h e   l o o p .   T h i s   o n l y   h a p p e n s   f o r   t h e   f i r s t   r u n . 
                 r e s u l t i n g F i r s t C h i l d   =   n e w F i b e r ; 
             }   e l s e   { 
                 / /   T O D O :   D e f e r   s i b l i n g s   i f   w e ' r e   n o t   a t   t h e   r i g h t   i n d e x   f o r   t h i s   s l o t . 
                 / /   I . e .   i f   w e   h a d   n u l l   v a l u e s   b e f o r e ,   t h e n   w e   w a n t   t o   d e f e r   t h i s 
                 / /   f o r   e a c h   n u l l   v a l u e .   H o w e v e r ,   w e   a l s o   d o n ' t   w a n t   t o   c a l l   u p d a t e S l o t 
                 / /   w i t h   t h e   p r e v i o u s   o n e . 
                 p r e v i o u s N e w F i b e r . s i b l i n g   =   n e w F i b e r ; 
             } 
 
             p r e v i o u s N e w F i b e r   =   n e w F i b e r ; 
             o l d F i b e r   =   n e x t O l d F i b e r ; 
         } 
 
         i f   ( s t e p . d o n e )   { 
             / /   W e ' v e   r e a c h e d   t h e   e n d   o f   t h e   n e w   c h i l d r e n .   W e   c a n   d e l e t e   t h e   r e s t . 
             d e l e t e R e m a i n i n g C h i l d r e n ( r e t u r n F i b e r ,   o l d F i b e r ) ; 
 
             i f   ( g e t I s H y d r a t i n g ( ) )   { 
                 v a r   n u m b e r O f F o r k s   =   n e w I d x ; 
                 p u s h T r e e F o r k ( r e t u r n F i b e r ,   n u m b e r O f F o r k s ) ; 
             } 
 
             r e t u r n   r e s u l t i n g F i r s t C h i l d ; 
         } 
 
         i f   ( o l d F i b e r   = = =   n u l l )   { 
             / /   I f   w e   d o n ' t   h a v e   a n y   m o r e   e x i s t i n g   c h i l d r e n   w e   c a n   c h o o s e   a   f a s t   p a t h 
             / /   s i n c e   t h e   r e s t   w i l l   a l l   b e   i n s e r t i o n s . 
             f o r   ( ;   ! s t e p . d o n e ;   n e w I d x + + ,   s t e p   =   n e w C h i l d r e n . n e x t ( ) )   { 
                 v a r   _ n e w F i b e r 3   =   c r e a t e C h i l d ( r e t u r n F i b e r ,   s t e p . v a l u e ,   l a n e s ) ; 
 
                 i f   ( _ n e w F i b e r 3   = = =   n u l l )   { 
                     c o n t i n u e ; 
                 } 
 
                 l a s t P l a c e d I n d e x   =   p l a c e C h i l d ( _ n e w F i b e r 3 ,   l a s t P l a c e d I n d e x ,   n e w I d x ) ; 
 
                 i f   ( p r e v i o u s N e w F i b e r   = = =   n u l l )   { 
                     / /   T O D O :   M o v e   o u t   o f   t h e   l o o p .   T h i s   o n l y   h a p p e n s   f o r   t h e   f i r s t   r u n . 
                     r e s u l t i n g F i r s t C h i l d   =   _ n e w F i b e r 3 ; 
                 }   e l s e   { 
                     p r e v i o u s N e w F i b e r . s i b l i n g   =   _ n e w F i b e r 3 ; 
                 } 
 
                 p r e v i o u s N e w F i b e r   =   _ n e w F i b e r 3 ; 
             } 
 
             i f   ( g e t I s H y d r a t i n g ( ) )   { 
                 v a r   _ n u m b e r O f F o r k s 3   =   n e w I d x ; 
                 p u s h T r e e F o r k ( r e t u r n F i b e r ,   _ n u m b e r O f F o r k s 3 ) ; 
             } 
 
             r e t u r n   r e s u l t i n g F i r s t C h i l d ; 
         }   / /   A d d   a l l   c h i l d r e n   t o   a   k e y   m a p   f o r   q u i c k   l o o k u p s . 
 
 
         v a r   e x i s t i n g C h i l d r e n   =   m a p R e m a i n i n g C h i l d r e n ( r e t u r n F i b e r ,   o l d F i b e r ) ;   / /   K e e p   s c a n n i n g   a n d   u s e   t h e   m a p   t o   r e s t o r e   d e l e t e d   i t e m s   a s   m o v e s . 
 
         f o r   ( ;   ! s t e p . d o n e ;   n e w I d x + + ,   s t e p   =   n e w C h i l d r e n . n e x t ( ) )   { 
             v a r   _ n e w F i b e r 4   =   u p d a t e F r o m M a p ( e x i s t i n g C h i l d r e n ,   r e t u r n F i b e r ,   n e w I d x ,   s t e p . v a l u e ,   l a n e s ) ; 
 
             i f   ( _ n e w F i b e r 4   ! = =   n u l l )   { 
                 i f   ( s h o u l d T r a c k S i d e E f f e c t s )   { 
                     i f   ( _ n e w F i b e r 4 . a l t e r n a t e   ! = =   n u l l )   { 
                         / /   T h e   n e w   f i b e r   i s   a   w o r k   i n   p r o g r e s s ,   b u t   i f   t h e r e   e x i s t s   a 
                         / /   c u r r e n t ,   t h a t   m e a n s   t h a t   w e   r e u s e d   t h e   f i b e r .   W e   n e e d   t o   d e l e t e 
                         / /   i t   f r o m   t h e   c h i l d   l i s t   s o   t h a t   w e   d o n ' t   a d d   i t   t o   t h e   d e l e t i o n 
                         / /   l i s t . 
                         e x i s t i n g C h i l d r e n . d e l e t e ( _ n e w F i b e r 4 . k e y   = = =   n u l l   ?   n e w I d x   :   _ n e w F i b e r 4 . k e y ) ; 
                     } 
                 } 
 
                 l a s t P l a c e d I n d e x   =   p l a c e C h i l d ( _ n e w F i b e r 4 ,   l a s t P l a c e d I n d e x ,   n e w I d x ) ; 
 
                 i f   ( p r e v i o u s N e w F i b e r   = = =   n u l l )   { 
                     r e s u l t i n g F i r s t C h i l d   =   _ n e w F i b e r 4 ; 
                 }   e l s e   { 
                     p r e v i o u s N e w F i b e r . s i b l i n g   =   _ n e w F i b e r 4 ; 
                 } 
 
                 p r e v i o u s N e w F i b e r   =   _ n e w F i b e r 4 ; 
             } 
         } 
 
         i f   ( s h o u l d T r a c k S i d e E f f e c t s )   { 
             / /   A n y   e x i s t i n g   c h i l d r e n   t h a t   w e r e n ' t   c o n s u m e d   a b o v e   w e r e   d e l e t e d .   W e   n e e d 
             / /   t o   a d d   t h e m   t o   t h e   d e l e t i o n   l i s t . 
             e x i s t i n g C h i l d r e n . f o r E a c h ( f u n c t i o n   ( c h i l d )   { 
                 r e t u r n   d e l e t e C h i l d ( r e t u r n F i b e r ,   c h i l d ) ; 
             } ) ; 
         } 
 
         i f   ( g e t I s H y d r a t i n g ( ) )   { 
             v a r   _ n u m b e r O f F o r k s 4   =   n e w I d x ; 
             p u s h T r e e F o r k ( r e t u r n F i b e r ,   _ n u m b e r O f F o r k s 4 ) ; 
         } 
 
         r e t u r n   r e s u l t i n g F i r s t C h i l d ; 
     } 
 
     f u n c t i o n   r e c o n c i l e S i n g l e T e x t N o d e ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d ,   t e x t C o n t e n t ,   l a n e s )   { 
         / /   T h e r e ' s   n o   n e e d   t o   c h e c k   f o r   k e y s   o n   t e x t   n o d e s   s i n c e   w e   d o n ' t   h a v e   a 
         / /   w a y   t o   d e f i n e   t h e m . 
         i f   ( c u r r e n t F i r s t C h i l d   ! = =   n u l l   & &   c u r r e n t F i r s t C h i l d . t a g   = = =   H o s t T e x t )   { 
             / /   W e   a l r e a d y   h a v e   a n   e x i s t i n g   n o d e   s o   l e t ' s   j u s t   u p d a t e   i t   a n d   d e l e t e 
             / /   t h e   r e s t . 
             d e l e t e R e m a i n i n g C h i l d r e n ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d . s i b l i n g ) ; 
             v a r   e x i s t i n g   =   u s e F i b e r ( c u r r e n t F i r s t C h i l d ,   t e x t C o n t e n t ) ; 
             e x i s t i n g . r e t u r n   =   r e t u r n F i b e r ; 
             r e t u r n   e x i s t i n g ; 
         }   / /   T h e   e x i s t i n g   f i r s t   c h i l d   i s   n o t   a   t e x t   n o d e   s o   w e   n e e d   t o   c r e a t e   o n e 
         / /   a n d   d e l e t e   t h e   e x i s t i n g   o n e s . 
 
 
         d e l e t e R e m a i n i n g C h i l d r e n ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d ) ; 
         v a r   c r e a t e d   =   c r e a t e F i b e r F r o m T e x t ( t e x t C o n t e n t ,   r e t u r n F i b e r . m o d e ,   l a n e s ) ; 
         c r e a t e d . r e t u r n   =   r e t u r n F i b e r ; 
         r e t u r n   c r e a t e d ; 
     } 
 
     f u n c t i o n   r e c o n c i l e S i n g l e E l e m e n t ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d ,   e l e m e n t ,   l a n e s )   { 
         v a r   k e y   =   e l e m e n t . k e y ; 
         v a r   c h i l d   =   c u r r e n t F i r s t C h i l d ; 
 
         w h i l e   ( c h i l d   ! = =   n u l l )   { 
             / /   T O D O :   I f   k e y   = = =   n u l l   a n d   c h i l d . k e y   = = =   n u l l ,   t h e n   t h i s   o n l y   a p p l i e s   t o 
             / /   t h e   f i r s t   i t e m   i n   t h e   l i s t . 
             i f   ( c h i l d . k e y   = = =   k e y )   { 
                 v a r   e l e m e n t T y p e   =   e l e m e n t . t y p e ; 
 
                 i f   ( e l e m e n t T y p e   = = =   R E A C T _ F R A G M E N T _ T Y P E )   { 
                     i f   ( c h i l d . t a g   = = =   F r a g m e n t )   { 
                         d e l e t e R e m a i n i n g C h i l d r e n ( r e t u r n F i b e r ,   c h i l d . s i b l i n g ) ; 
                         v a r   e x i s t i n g   =   u s e F i b e r ( c h i l d ,   e l e m e n t . p r o p s . c h i l d r e n ) ; 
                         e x i s t i n g . r e t u r n   =   r e t u r n F i b e r ; 
 
                         { 
                             e x i s t i n g . _ d e b u g S o u r c e   =   e l e m e n t . _ s o u r c e ; 
                             e x i s t i n g . _ d e b u g O w n e r   =   e l e m e n t . _ o w n e r ; 
                         } 
 
                         r e t u r n   e x i s t i n g ; 
                     } 
                 }   e l s e   { 
                     i f   ( c h i l d . e l e m e n t T y p e   = = =   e l e m e n t T y p e   | |   (   / /   K e e p   t h i s   c h e c k   i n l i n e   s o   i t   o n l y   r u n s   o n   t h e   f a l s e   p a t h : 
                       i s C o m p a t i b l e F a m i l y F o r H o t R e l o a d i n g ( c h i l d ,   e l e m e n t )   )   | |   / /   L a z y   t y p e s   s h o u l d   r e c o n c i l e   t h e i r   r e s o l v e d   t y p e . 
                     / /   W e   n e e d   t o   d o   t h i s   a f t e r   t h e   H o t   R e l o a d i n g   c h e c k   a b o v e , 
                     / /   b e c a u s e   h o t   r e l o a d i n g   h a s   d i f f e r e n t   s e m a n t i c s   t h a n   p r o d   b e c a u s e 
                     / /   i t   d o e s n ' t   r e s u s p e n d .   S o   w e   c a n ' t   l e t   t h e   c a l l   b e l o w   s u s p e n d . 
                     t y p e o f   e l e m e n t T y p e   = = =   ' o b j e c t '   & &   e l e m e n t T y p e   ! = =   n u l l   & &   e l e m e n t T y p e . $ $ t y p e o f   = = =   R E A C T _ L A Z Y _ T Y P E   & &   r e s o l v e L a z y ( e l e m e n t T y p e )   = = =   c h i l d . t y p e )   { 
                         d e l e t e R e m a i n i n g C h i l d r e n ( r e t u r n F i b e r ,   c h i l d . s i b l i n g ) ; 
 
                         v a r   _ e x i s t i n g   =   u s e F i b e r ( c h i l d ,   e l e m e n t . p r o p s ) ; 
 
                         _ e x i s t i n g . r e f   =   c o e r c e R e f ( r e t u r n F i b e r ,   c h i l d ,   e l e m e n t ) ; 
                         _ e x i s t i n g . r e t u r n   =   r e t u r n F i b e r ; 
 
                         { 
                             _ e x i s t i n g . _ d e b u g S o u r c e   =   e l e m e n t . _ s o u r c e ; 
                             _ e x i s t i n g . _ d e b u g O w n e r   =   e l e m e n t . _ o w n e r ; 
                         } 
 
                         r e t u r n   _ e x i s t i n g ; 
                     } 
                 }   / /   D i d n ' t   m a t c h . 
 
 
                 d e l e t e R e m a i n i n g C h i l d r e n ( r e t u r n F i b e r ,   c h i l d ) ; 
                 b r e a k ; 
             }   e l s e   { 
                 d e l e t e C h i l d ( r e t u r n F i b e r ,   c h i l d ) ; 
             } 
 
             c h i l d   =   c h i l d . s i b l i n g ; 
         } 
 
         i f   ( e l e m e n t . t y p e   = = =   R E A C T _ F R A G M E N T _ T Y P E )   { 
             v a r   c r e a t e d   =   c r e a t e F i b e r F r o m F r a g m e n t ( e l e m e n t . p r o p s . c h i l d r e n ,   r e t u r n F i b e r . m o d e ,   l a n e s ,   e l e m e n t . k e y ) ; 
             c r e a t e d . r e t u r n   =   r e t u r n F i b e r ; 
             r e t u r n   c r e a t e d ; 
         }   e l s e   { 
             v a r   _ c r e a t e d 4   =   c r e a t e F i b e r F r o m E l e m e n t ( e l e m e n t ,   r e t u r n F i b e r . m o d e ,   l a n e s ) ; 
 
             _ c r e a t e d 4 . r e f   =   c o e r c e R e f ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d ,   e l e m e n t ) ; 
             _ c r e a t e d 4 . r e t u r n   =   r e t u r n F i b e r ; 
             r e t u r n   _ c r e a t e d 4 ; 
         } 
     } 
 
     f u n c t i o n   r e c o n c i l e S i n g l e P o r t a l ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d ,   p o r t a l ,   l a n e s )   { 
         v a r   k e y   =   p o r t a l . k e y ; 
         v a r   c h i l d   =   c u r r e n t F i r s t C h i l d ; 
 
         w h i l e   ( c h i l d   ! = =   n u l l )   { 
             / /   T O D O :   I f   k e y   = = =   n u l l   a n d   c h i l d . k e y   = = =   n u l l ,   t h e n   t h i s   o n l y   a p p l i e s   t o 
             / /   t h e   f i r s t   i t e m   i n   t h e   l i s t . 
             i f   ( c h i l d . k e y   = = =   k e y )   { 
                 i f   ( c h i l d . t a g   = = =   H o s t P o r t a l   & &   c h i l d . s t a t e N o d e . c o n t a i n e r I n f o   = = =   p o r t a l . c o n t a i n e r I n f o   & &   c h i l d . s t a t e N o d e . i m p l e m e n t a t i o n   = = =   p o r t a l . i m p l e m e n t a t i o n )   { 
                     d e l e t e R e m a i n i n g C h i l d r e n ( r e t u r n F i b e r ,   c h i l d . s i b l i n g ) ; 
                     v a r   e x i s t i n g   =   u s e F i b e r ( c h i l d ,   p o r t a l . c h i l d r e n   | |   [ ] ) ; 
                     e x i s t i n g . r e t u r n   =   r e t u r n F i b e r ; 
                     r e t u r n   e x i s t i n g ; 
                 }   e l s e   { 
                     d e l e t e R e m a i n i n g C h i l d r e n ( r e t u r n F i b e r ,   c h i l d ) ; 
                     b r e a k ; 
                 } 
             }   e l s e   { 
                 d e l e t e C h i l d ( r e t u r n F i b e r ,   c h i l d ) ; 
             } 
 
             c h i l d   =   c h i l d . s i b l i n g ; 
         } 
 
         v a r   c r e a t e d   =   c r e a t e F i b e r F r o m P o r t a l ( p o r t a l ,   r e t u r n F i b e r . m o d e ,   l a n e s ) ; 
         c r e a t e d . r e t u r n   =   r e t u r n F i b e r ; 
         r e t u r n   c r e a t e d ; 
     }   / /   T h i s   A P I   w i l l   t a g   t h e   c h i l d r e n   w i t h   t h e   s i d e - e f f e c t   o f   t h e   r e c o n c i l i a t i o n 
     / /   i t s e l f .   T h e y   w i l l   b e   a d d e d   t o   t h e   s i d e - e f f e c t   l i s t   a s   w e   p a s s   t h r o u g h   t h e 
     / /   c h i l d r e n   a n d   t h e   p a r e n t . 
 
 
     f u n c t i o n   r e c o n c i l e C h i l d F i b e r s ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d ,   n e w C h i l d ,   l a n e s )   { 
         / /   T h i s   f u n c t i o n   i s   n o t   r e c u r s i v e . 
         / /   I f   t h e   t o p   l e v e l   i t e m   i s   a n   a r r a y ,   w e   t r e a t   i t   a s   a   s e t   o f   c h i l d r e n , 
         / /   n o t   a s   a   f r a g m e n t .   N e s t e d   a r r a y s   o n   t h e   o t h e r   h a n d   w i l l   b e   t r e a t e d   a s 
         / /   f r a g m e n t   n o d e s .   R e c u r s i o n   h a p p e n s   a t   t h e   n o r m a l   f l o w . 
         / /   H a n d l e   t o p   l e v e l   u n k e y e d   f r a g m e n t s   a s   i f   t h e y   w e r e   a r r a y s . 
         / /   T h i s   l e a d s   t o   a n   a m b i g u i t y   b e t w e e n   < > { [ . . . ] } < / >   a n d   < > . . . < / > . 
         / /   W e   t r e a t   t h e   a m b i g u o u s   c a s e s   a b o v e   t h e   s a m e . 
         v a r   i s U n k e y e d T o p L e v e l F r a g m e n t   =   t y p e o f   n e w C h i l d   = = =   ' o b j e c t '   & &   n e w C h i l d   ! = =   n u l l   & &   n e w C h i l d . t y p e   = = =   R E A C T _ F R A G M E N T _ T Y P E   & &   n e w C h i l d . k e y   = = =   n u l l ; 
 
         i f   ( i s U n k e y e d T o p L e v e l F r a g m e n t )   { 
             n e w C h i l d   =   n e w C h i l d . p r o p s . c h i l d r e n ; 
         }   / /   H a n d l e   o b j e c t   t y p e s 
 
 
         i f   ( t y p e o f   n e w C h i l d   = = =   ' o b j e c t '   & &   n e w C h i l d   ! = =   n u l l )   { 
             s w i t c h   ( n e w C h i l d . $ $ t y p e o f )   { 
                 c a s e   R E A C T _ E L E M E N T _ T Y P E : 
                     r e t u r n   p l a c e S i n g l e C h i l d ( r e c o n c i l e S i n g l e E l e m e n t ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d ,   n e w C h i l d ,   l a n e s ) ) ; 
 
                 c a s e   R E A C T _ P O R T A L _ T Y P E : 
                     r e t u r n   p l a c e S i n g l e C h i l d ( r e c o n c i l e S i n g l e P o r t a l ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d ,   n e w C h i l d ,   l a n e s ) ) ; 
 
                 c a s e   R E A C T _ L A Z Y _ T Y P E : 
                     v a r   p a y l o a d   =   n e w C h i l d . _ p a y l o a d ; 
                     v a r   i n i t   =   n e w C h i l d . _ i n i t ;   / /   T O D O :   T h i s   f u n c t i o n   i s   s u p p o s e d   t o   b e   n o n - r e c u r s i v e . 
 
                     r e t u r n   r e c o n c i l e C h i l d F i b e r s ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d ,   i n i t ( p a y l o a d ) ,   l a n e s ) ; 
             } 
 
             i f   ( i s A r r a y ( n e w C h i l d ) )   { 
                 r e t u r n   r e c o n c i l e C h i l d r e n A r r a y ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d ,   n e w C h i l d ,   l a n e s ) ; 
             } 
 
             i f   ( g e t I t e r a t o r F n ( n e w C h i l d ) )   { 
                 r e t u r n   r e c o n c i l e C h i l d r e n I t e r a t o r ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d ,   n e w C h i l d ,   l a n e s ) ; 
             } 
 
             t h r o w O n I n v a l i d O b j e c t T y p e ( r e t u r n F i b e r ,   n e w C h i l d ) ; 
         } 
 
         i f   ( t y p e o f   n e w C h i l d   = = =   ' s t r i n g '   & &   n e w C h i l d   ! = =   ' '   | |   t y p e o f   n e w C h i l d   = = =   ' n u m b e r ' )   { 
             r e t u r n   p l a c e S i n g l e C h i l d ( r e c o n c i l e S i n g l e T e x t N o d e ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d ,   ' '   +   n e w C h i l d ,   l a n e s ) ) ; 
         } 
 
         { 
             i f   ( t y p e o f   n e w C h i l d   = = =   ' f u n c t i o n ' )   { 
                 w a r n O n F u n c t i o n T y p e ( r e t u r n F i b e r ) ; 
             } 
         }   / /   R e m a i n i n g   c a s e s   a r e   a l l   t r e a t e d   a s   e m p t y . 
 
 
         r e t u r n   d e l e t e R e m a i n i n g C h i l d r e n ( r e t u r n F i b e r ,   c u r r e n t F i r s t C h i l d ) ; 
     } 
 
     r e t u r n   r e c o n c i l e C h i l d F i b e r s ; 
 } 
 
 v a r   r e c o n c i l e C h i l d F i b e r s   =   C h i l d R e c o n c i l e r ( t r u e ) ; 
 v a r   m o u n t C h i l d F i b e r s   =   C h i l d R e c o n c i l e r ( f a l s e ) ; 
 f u n c t i o n   c l o n e C h i l d F i b e r s ( c u r r e n t ,   w o r k I n P r o g r e s s )   { 
     i f   ( c u r r e n t   ! = =   n u l l   & &   w o r k I n P r o g r e s s . c h i l d   ! = =   c u r r e n t . c h i l d )   { 
         t h r o w   n e w   E r r o r ( ' R e s u m i n g   w o r k   n o t   y e t   i m p l e m e n t e d . ' ) ; 
     } 
 
     i f   ( w o r k I n P r o g r e s s . c h i l d   = = =   n u l l )   { 
         r e t u r n ; 
     } 
 
     v a r   c u r r e n t C h i l d   =   w o r k I n P r o g r e s s . c h i l d ; 
     v a r   n e w C h i l d   =   c r e a t e W o r k I n P r o g r e s s ( c u r r e n t C h i l d ,   c u r r e n t C h i l d . p e n d i n g P r o p s ) ; 
     w o r k I n P r o g r e s s . c h i l d   =   n e w C h i l d ; 
     n e w C h i l d . r e t u r n   =   w o r k I n P r o g r e s s ; 
 
     w h i l e   ( c u r r e n t C h i l d . s i b l i n g   ! = =   n u l l )   { 
         c u r r e n t C h i l d   =   c u r r e n t C h i l d . s i b l i n g ; 
         n e w C h i l d   =   n e w C h i l d . s i b l i n g   =   c r e a t e W o r k I n P r o g r e s s ( c u r r e n t C h i l d ,   c u r r e n t C h i l d . p e n d i n g P r o p s ) ; 
         n e w C h i l d . r e t u r n   =   w o r k I n P r o g r e s s ; 
     } 
 
     n e w C h i l d . s i b l i n g   =   n u l l ; 
 }   / /   R e s e t   a   w o r k I n P r o g r e s s   c h i l d   s e t   t o   p r e p a r e   i t   f o r   a   s e c o n d   p a s s . 
 
 f u n c t i o n   r e s e t C h i l d F i b e r s ( w o r k I n P r o g r e s s ,   l a n e s )   { 
     v a r   c h i l d   =   w o r k I n P r o g r e s s . c h i l d ; 
 
     w h i l e   ( c h i l d   ! = =   n u l l )   { 
         r e s e t W o r k I n P r o g r e s s ( c h i l d ,   l a n e s ) ; 
         c h i l d   =   c h i l d . s i b l i n g ; 
     } 
 } 
 
 v a r   N O _ C O N T E X T   =   { } ; 
 v a r   c o n t e x t S t a c k C u r s o r $ 1   =   c r e a t e C u r s o r ( N O _ C O N T E X T ) ; 
 v a r   c o n t e x t F i b e r S t a c k C u r s o r   =   c r e a t e C u r s o r ( N O _ C O N T E X T ) ; 
 v a r   r o o t I n s t a n c e S t a c k C u r s o r   =   c r e a t e C u r s o r ( N O _ C O N T E X T ) ; 
 
 f u n c t i o n   r e q u i r e d C o n t e x t ( c )   { 
     i f   ( c   = = =   N O _ C O N T E X T )   { 
         t h r o w   n e w   E r r o r ( ' E x p e c t e d   h o s t   c o n t e x t   t o   e x i s t .   T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   '   +   ' i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
     } 
 
     r e t u r n   c ; 
 } 
 
 f u n c t i o n   g e t R o o t H o s t C o n t a i n e r ( )   { 
     v a r   r o o t I n s t a n c e   =   r e q u i r e d C o n t e x t ( r o o t I n s t a n c e S t a c k C u r s o r . c u r r e n t ) ; 
     r e t u r n   r o o t I n s t a n c e ; 
 } 
 
 f u n c t i o n   p u s h H o s t C o n t a i n e r ( f i b e r ,   n e x t R o o t I n s t a n c e )   { 
     / /   P u s h   c u r r e n t   r o o t   i n s t a n c e   o n t o   t h e   s t a c k ; 
     / /   T h i s   a l l o w s   u s   t o   r e s e t   r o o t   w h e n   p o r t a l s   a r e   p o p p e d . 
     p u s h ( r o o t I n s t a n c e S t a c k C u r s o r ,   n e x t R o o t I n s t a n c e ,   f i b e r ) ;   / /   T r a c k   t h e   c o n t e x t   a n d   t h e   F i b e r   t h a t   p r o v i d e d   i t . 
     / /   T h i s   e n a b l e s   u s   t o   p o p   o n l y   F i b e r s   t h a t   p r o v i d e   u n i q u e   c o n t e x t s . 
 
     p u s h ( c o n t e x t F i b e r S t a c k C u r s o r ,   f i b e r ,   f i b e r ) ;   / /   F i n a l l y ,   w e   n e e d   t o   p u s h   t h e   h o s t   c o n t e x t   t o   t h e   s t a c k . 
     / /   H o w e v e r ,   w e   c a n ' t   j u s t   c a l l   g e t R o o t H o s t C o n t e x t ( )   a n d   p u s h   i t   b e c a u s e 
     / /   w e ' d   h a v e   a   d i f f e r e n t   n u m b e r   o f   e n t r i e s   o n   t h e   s t a c k   d e p e n d i n g   o n 
     / /   w h e t h e r   g e t R o o t H o s t C o n t e x t ( )   t h r o w s   s o m e w h e r e   i n   r e n d e r e r   c o d e   o r   n o t . 
     / /   S o   w e   p u s h   a n   e m p t y   v a l u e   f i r s t .   T h i s   l e t s   u s   s a f e l y   u n w i n d   o n   e r r o r s . 
 
     p u s h ( c o n t e x t S t a c k C u r s o r $ 1 ,   N O _ C O N T E X T ,   f i b e r ) ; 
     v a r   n e x t R o o t C o n t e x t   =   g e t R o o t H o s t C o n t e x t ( n e x t R o o t I n s t a n c e ) ;   / /   N o w   t h a t   w e   k n o w   t h i s   f u n c t i o n   d o e s n ' t   t h r o w ,   r e p l a c e   i t . 
 
     p o p ( c o n t e x t S t a c k C u r s o r $ 1 ,   f i b e r ) ; 
     p u s h ( c o n t e x t S t a c k C u r s o r $ 1 ,   n e x t R o o t C o n t e x t ,   f i b e r ) ; 
 } 
 
 f u n c t i o n   p o p H o s t C o n t a i n e r ( f i b e r )   { 
     p o p ( c o n t e x t S t a c k C u r s o r $ 1 ,   f i b e r ) ; 
     p o p ( c o n t e x t F i b e r S t a c k C u r s o r ,   f i b e r ) ; 
     p o p ( r o o t I n s t a n c e S t a c k C u r s o r ,   f i b e r ) ; 
 } 
 
 f u n c t i o n   g e t H o s t C o n t e x t ( )   { 
     v a r   c o n t e x t   =   r e q u i r e d C o n t e x t ( c o n t e x t S t a c k C u r s o r $ 1 . c u r r e n t ) ; 
     r e t u r n   c o n t e x t ; 
 } 
 
 f u n c t i o n   p u s h H o s t C o n t e x t ( f i b e r )   { 
     v a r   r o o t I n s t a n c e   =   r e q u i r e d C o n t e x t ( r o o t I n s t a n c e S t a c k C u r s o r . c u r r e n t ) ; 
     v a r   c o n t e x t   =   r e q u i r e d C o n t e x t ( c o n t e x t S t a c k C u r s o r $ 1 . c u r r e n t ) ; 
     v a r   n e x t C o n t e x t   =   g e t C h i l d H o s t C o n t e x t ( c o n t e x t ,   f i b e r . t y p e ) ;   / /   D o n ' t   p u s h   t h i s   F i b e r ' s   c o n t e x t   u n l e s s   i t ' s   u n i q u e . 
 
     i f   ( c o n t e x t   = = =   n e x t C o n t e x t )   { 
         r e t u r n ; 
     }   / /   T r a c k   t h e   c o n t e x t   a n d   t h e   F i b e r   t h a t   p r o v i d e d   i t . 
     / /   T h i s   e n a b l e s   u s   t o   p o p   o n l y   F i b e r s   t h a t   p r o v i d e   u n i q u e   c o n t e x t s . 
 
 
     p u s h ( c o n t e x t F i b e r S t a c k C u r s o r ,   f i b e r ,   f i b e r ) ; 
     p u s h ( c o n t e x t S t a c k C u r s o r $ 1 ,   n e x t C o n t e x t ,   f i b e r ) ; 
 } 
 
 f u n c t i o n   p o p H o s t C o n t e x t ( f i b e r )   { 
     / /   D o   n o t   p o p   u n l e s s   t h i s   F i b e r   p r o v i d e d   t h e   c u r r e n t   c o n t e x t . 
     / /   p u s h H o s t C o n t e x t ( )   o n l y   p u s h e s   F i b e r s   t h a t   p r o v i d e   u n i q u e   c o n t e x t s . 
     i f   ( c o n t e x t F i b e r S t a c k C u r s o r . c u r r e n t   ! = =   f i b e r )   { 
         r e t u r n ; 
     } 
 
     p o p ( c o n t e x t S t a c k C u r s o r $ 1 ,   f i b e r ) ; 
     p o p ( c o n t e x t F i b e r S t a c k C u r s o r ,   f i b e r ) ; 
 } 
 
 v a r   D e f a u l t S u s p e n s e C o n t e x t   =   0 ;   / /   T h e   S u s p e n s e   C o n t e x t   i s   s p l i t   i n t o   t w o   p a r t s .   T h e   l o w e r   b i t s   i s 
 / /   i n h e r i t e d   d e e p l y   d o w n   t h e   s u b t r e e .   T h e   u p p e r   b i t s   o n l y   a f f e c t 
 / /   t h i s   i m m e d i a t e   s u s p e n s e   b o u n d a r y   a n d   g e t s   r e s e t   e a c h   n e w 
 / /   b o u n d a r y   o r   s u s p e n s e   l i s t . 
 
 v a r   S u b t r e e S u s p e n s e C o n t e x t M a s k   =   1 ;   / /   S u b t r e e   F l a g s : 
 / /   I n v i s i b l e P a r e n t S u s p e n s e C o n t e x t   i n d i c a t e s   t h a t   o n e   o f   o u r   p a r e n t   S u s p e n s e 
 / /   b o u n d a r i e s   i s   n o t   c u r r e n t l y   s h o w i n g   v i s i b l e   m a i n   c o n t e n t . 
 / /   E i t h e r   b e c a u s e   i t   i s   a l r e a d y   s h o w i n g   a   f a l l b a c k   o r   i s   n o t   m o u n t e d   a t   a l l . 
 / /   W e   c a n   u s e   t h i s   t o   d e t e r m i n e   i f   i t   i s   d e s i r a b l e   t o   t r i g g e r   a   f a l l b a c k   a t 
 / /   t h e   p a r e n t .   I f   n o t ,   t h e n   w e   m i g h t   n e e d   t o   t r i g g e r   u n d e s i r a b l e   b o u n d a r i e s 
 / /   a n d / o r   s u s p e n d   t h e   c o m m i t   t o   a v o i d   h i d i n g   t h e   p a r e n t   c o n t e n t . 
 
 v a r   I n v i s i b l e P a r e n t S u s p e n s e C o n t e x t   =   1 ;   / /   S h a l l o w   F l a g s : 
 / /   F o r c e S u s p e n s e F a l l b a c k   c a n   b e   u s e d   b y   S u s p e n s e L i s t   t o   f o r c e   n e w l y   a d d e d 
 / /   i t e m s   i n t o   t h e i r   f a l l b a c k   s t a t e   d u r i n g   o n e   o f   t h e   r e n d e r   p a s s e s . 
 
 v a r   F o r c e S u s p e n s e F a l l b a c k   =   2 ; 
 v a r   s u s p e n s e S t a c k C u r s o r   =   c r e a t e C u r s o r ( D e f a u l t S u s p e n s e C o n t e x t ) ; 
 f u n c t i o n   h a s S u s p e n s e C o n t e x t ( p a r e n t C o n t e x t ,   f l a g )   { 
     r e t u r n   ( p a r e n t C o n t e x t   &   f l a g )   ! = =   0 ; 
 } 
 f u n c t i o n   s e t D e f a u l t S h a l l o w S u s p e n s e C o n t e x t ( p a r e n t C o n t e x t )   { 
     r e t u r n   p a r e n t C o n t e x t   &   S u b t r e e S u s p e n s e C o n t e x t M a s k ; 
 } 
 f u n c t i o n   s e t S h a l l o w S u s p e n s e C o n t e x t ( p a r e n t C o n t e x t ,   s h a l l o w C o n t e x t )   { 
     r e t u r n   p a r e n t C o n t e x t   &   S u b t r e e S u s p e n s e C o n t e x t M a s k   |   s h a l l o w C o n t e x t ; 
 } 
 f u n c t i o n   a d d S u b t r e e S u s p e n s e C o n t e x t ( p a r e n t C o n t e x t ,   s u b t r e e C o n t e x t )   { 
     r e t u r n   p a r e n t C o n t e x t   |   s u b t r e e C o n t e x t ; 
 } 
 f u n c t i o n   p u s h S u s p e n s e C o n t e x t ( f i b e r ,   n e w C o n t e x t )   { 
     p u s h ( s u s p e n s e S t a c k C u r s o r ,   n e w C o n t e x t ,   f i b e r ) ; 
 } 
 f u n c t i o n   p o p S u s p e n s e C o n t e x t ( f i b e r )   { 
     p o p ( s u s p e n s e S t a c k C u r s o r ,   f i b e r ) ; 
 } 
 
 f u n c t i o n   s h o u l d C a p t u r e S u s p e n s e ( w o r k I n P r o g r e s s ,   h a s I n v i s i b l e P a r e n t )   { 
     / /   I f   i t   w a s   t h e   p r i m a r y   c h i l d r e n   t h a t   j u s t   s u s p e n d e d ,   c a p t u r e   a n d   r e n d e r   t h e 
     / /   f a l l b a c k .   O t h e r w i s e ,   d o n ' t   c a p t u r e   a n d   b u b b l e   t o   t h e   n e x t   b o u n d a r y . 
     v a r   n e x t S t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
 
     i f   ( n e x t S t a t e   ! = =   n u l l )   { 
         i f   ( n e x t S t a t e . d e h y d r a t e d   ! = =   n u l l )   { 
             / /   A   d e h y d r a t e d   b o u n d a r y   a l w a y s   c a p t u r e s . 
             r e t u r n   t r u e ; 
         } 
 
         r e t u r n   f a l s e ; 
     } 
 
     v a r   p r o p s   =   w o r k I n P r o g r e s s . m e m o i z e d P r o p s ;   / /   R e g u l a r   b o u n d a r i e s   a l w a y s   c a p t u r e . 
 
     { 
         r e t u r n   t r u e ; 
     }   / /   I f   i t ' s   a   b o u n d a r y   w e   s h o u l d   a v o i d ,   t h e n   w e   p r e f e r   t o   b u b b l e   u p   t o   t h e 
 } 
 f u n c t i o n   f i n d F i r s t S u s p e n d e d ( r o w )   { 
     v a r   n o d e   =   r o w ; 
 
     w h i l e   ( n o d e   ! = =   n u l l )   { 
         i f   ( n o d e . t a g   = = =   S u s p e n s e C o m p o n e n t )   { 
             v a r   s t a t e   =   n o d e . m e m o i z e d S t a t e ; 
 
             i f   ( s t a t e   ! = =   n u l l )   { 
                 v a r   d e h y d r a t e d   =   s t a t e . d e h y d r a t e d ; 
 
                 i f   ( d e h y d r a t e d   = = =   n u l l   | |   i s S u s p e n s e I n s t a n c e P e n d i n g ( d e h y d r a t e d )   | |   i s S u s p e n s e I n s t a n c e F a l l b a c k ( d e h y d r a t e d ) )   { 
                     r e t u r n   n o d e ; 
                 } 
             } 
         }   e l s e   i f   ( n o d e . t a g   = = =   S u s p e n s e L i s t C o m p o n e n t   & &   / /   r e v e a l O r d e r   u n d e f i n e d   c a n ' t   b e   t r u s t e d   b e c a u s e   i t   d o n ' t 
         / /   k e e p   t r a c k   o f   w h e t h e r   i t   s u s p e n d e d   o r   n o t . 
         n o d e . m e m o i z e d P r o p s . r e v e a l O r d e r   ! = =   u n d e f i n e d )   { 
             v a r   d i d S u s p e n d   =   ( n o d e . f l a g s   &   D i d C a p t u r e )   ! = =   N o F l a g s ; 
 
             i f   ( d i d S u s p e n d )   { 
                 r e t u r n   n o d e ; 
             } 
         }   e l s e   i f   ( n o d e . c h i l d   ! = =   n u l l )   { 
             n o d e . c h i l d . r e t u r n   =   n o d e ; 
             n o d e   =   n o d e . c h i l d ; 
             c o n t i n u e ; 
         } 
 
         i f   ( n o d e   = = =   r o w )   { 
             r e t u r n   n u l l ; 
         } 
 
         w h i l e   ( n o d e . s i b l i n g   = = =   n u l l )   { 
             i f   ( n o d e . r e t u r n   = = =   n u l l   | |   n o d e . r e t u r n   = = =   r o w )   { 
                 r e t u r n   n u l l ; 
             } 
 
             n o d e   =   n o d e . r e t u r n ; 
         } 
 
         n o d e . s i b l i n g . r e t u r n   =   n o d e . r e t u r n ; 
         n o d e   =   n o d e . s i b l i n g ; 
     } 
 
     r e t u r n   n u l l ; 
 } 
 
 v a r   N o F l a g s $ 1   = 
 / *       * / 
 0 ;   / /   R e p r e s e n t s   w h e t h e r   e f f e c t   s h o u l d   f i r e . 
 
 v a r   H a s E f f e c t   = 
 / *   * / 
 1 ;   / /   R e p r e s e n t s   t h e   p h a s e   i n   w h i c h   t h e   e f f e c t   ( n o t   t h e   c l e a n - u p )   f i r e s . 
 
 v a r   I n s e r t i o n   = 
 / *     * / 
 2 ; 
 v a r   L a y o u t   = 
 / *         * / 
 4 ; 
 v a r   P a s s i v e $ 1   = 
 / *       * / 
 8 ; 
 
 / /   a n d   s h o u l d   b e   r e s e t   b e f o r e   s t a r t i n g   a   n e w   r e n d e r . 
 / /   T h i s   t r a c k s   w h i c h   m u t a b l e   s o u r c e s   n e e d   t o   b e   r e s e t   a f t e r   a   r e n d e r . 
 
 v a r   w o r k I n P r o g r e s s S o u r c e s   =   [ ] ; 
 f u n c t i o n   r e s e t W o r k I n P r o g r e s s V e r s i o n s ( )   { 
     f o r   ( v a r   i   =   0 ;   i   <   w o r k I n P r o g r e s s S o u r c e s . l e n g t h ;   i + + )   { 
         v a r   m u t a b l e S o u r c e   =   w o r k I n P r o g r e s s S o u r c e s [ i ] ; 
 
         { 
             m u t a b l e S o u r c e . _ w o r k I n P r o g r e s s V e r s i o n P r i m a r y   =   n u l l ; 
         } 
     } 
 
     w o r k I n P r o g r e s s S o u r c e s . l e n g t h   =   0 ; 
 } 
 / /   T h i s   e n s u r e s   t h a t   t h e   v e r s i o n   u s e d   f o r   s e r v e r   r e n d e r i n g   m a t c h e s   t h e   o n e 
 / /   t h a t   i s   e v e n t u a l l y   r e a d   d u r i n g   h y d r a t i o n . 
 / /   I f   t h e y   d o n ' t   m a t c h   t h e r e ' s   a   p o t e n t i a l   t e a r   a n d   a   f u l l   d e o p t   r e n d e r   i s   r e q u i r e d . 
 
 f u n c t i o n   r e g i s t e r M u t a b l e S o u r c e F o r H y d r a t i o n ( r o o t ,   m u t a b l e S o u r c e )   { 
     v a r   g e t V e r s i o n   =   m u t a b l e S o u r c e . _ g e t V e r s i o n ; 
     v a r   v e r s i o n   =   g e t V e r s i o n ( m u t a b l e S o u r c e . _ s o u r c e ) ;   / /   T O D O   C l e a r   t h i s   d a t a   o n c e   a l l   p e n d i n g   h y d r a t i o n   w o r k   i s   f i n i s h e d . 
     / /   R e t a i n i n g   i t   f o r e v e r   m a y   i n t e r f e r e   w i t h   G C . 
 
     i f   ( r o o t . m u t a b l e S o u r c e E a g e r H y d r a t i o n D a t a   = =   n u l l )   { 
         r o o t . m u t a b l e S o u r c e E a g e r H y d r a t i o n D a t a   =   [ m u t a b l e S o u r c e ,   v e r s i o n ] ; 
     }   e l s e   { 
         r o o t . m u t a b l e S o u r c e E a g e r H y d r a t i o n D a t a . p u s h ( m u t a b l e S o u r c e ,   v e r s i o n ) ; 
     } 
 } 
 
 v a r   R e a c t C u r r e n t D i s p a t c h e r $ 1   =   R e a c t S h a r e d I n t e r n a l s . R e a c t C u r r e n t D i s p a t c h e r , 
         R e a c t C u r r e n t B a t c h C o n f i g $ 2   =   R e a c t S h a r e d I n t e r n a l s . R e a c t C u r r e n t B a t c h C o n f i g ; 
 v a r   d i d W a r n A b o u t M i s m a t c h e d H o o k s F o r C o m p o n e n t ; 
 v a r   d i d W a r n U n c a c h e d G e t S n a p s h o t ; 
 
 { 
     d i d W a r n A b o u t M i s m a t c h e d H o o k s F o r C o m p o n e n t   =   n e w   S e t ( ) ; 
 } 
 
 / /   T h e s e   a r e   s e t   r i g h t   b e f o r e   c a l l i n g   t h e   c o m p o n e n t . 
 v a r   r e n d e r L a n e s   =   N o L a n e s ;   / /   T h e   w o r k - i n - p r o g r e s s   f i b e r .   I ' v e   n a m e d   i t   d i f f e r e n t l y   t o   d i s t i n g u i s h   i t   f r o m 
 / /   t h e   w o r k - i n - p r o g r e s s   h o o k . 
 
 v a r   c u r r e n t l y R e n d e r i n g F i b e r $ 1   =   n u l l ;   / /   H o o k s   a r e   s t o r e d   a s   a   l i n k e d   l i s t   o n   t h e   f i b e r ' s   m e m o i z e d S t a t e   f i e l d .   T h e 
 / /   c u r r e n t   h o o k   l i s t   i s   t h e   l i s t   t h a t   b e l o n g s   t o   t h e   c u r r e n t   f i b e r .   T h e 
 / /   w o r k - i n - p r o g r e s s   h o o k   l i s t   i s   a   n e w   l i s t   t h a t   w i l l   b e   a d d e d   t o   t h e 
 / /   w o r k - i n - p r o g r e s s   f i b e r . 
 
 v a r   c u r r e n t H o o k   =   n u l l ; 
 v a r   w o r k I n P r o g r e s s H o o k   =   n u l l ;   / /   W h e t h e r   a n   u p d a t e   w a s   s c h e d u l e d   a t   a n y   p o i n t   d u r i n g   t h e   r e n d e r   p h a s e .   T h i s 
 / /   d o e s   n o t   g e t   r e s e t   i f   w e   d o   a n o t h e r   r e n d e r   p a s s ;   o n l y   w h e n   w e ' r e   c o m p l e t e l y 
 / /   f i n i s h e d   e v a l u a t i n g   t h i s   c o m p o n e n t .   T h i s   i s   a n   o p t i m i z a t i o n   s o   w e   k n o w 
 / /   w h e t h e r   w e   n e e d   t o   c l e a r   r e n d e r   p h a s e   u p d a t e s   a f t e r   a   t h r o w . 
 
 v a r   d i d S c h e d u l e R e n d e r P h a s e U p d a t e   =   f a l s e ;   / /   W h e r e   a n   u p d a t e   w a s   s c h e d u l e d   o n l y   d u r i n g   t h e   c u r r e n t   r e n d e r   p a s s .   T h i s 
 / /   g e t s   r e s e t   a f t e r   e a c h   a t t e m p t . 
 / /   T O D O :   M a y b e   t h e r e ' s   s o m e   w a y   t o   c o n s o l i d a t e   t h i s   w i t h 
 / /   ` d i d S c h e d u l e R e n d e r P h a s e U p d a t e ` .   O r   w i t h   ` n u m b e r O f R e R e n d e r s ` . 
 
 v a r   d i d S c h e d u l e R e n d e r P h a s e U p d a t e D u r i n g T h i s P a s s   =   f a l s e ;   / /   C o u n t s   t h e   n u m b e r   o f   u s e I d   h o o k s   i n   t h i s   c o m p o n e n t . 
 
 v a r   l o c a l I d C o u n t e r   =   0 ;   / /   U s e d   f o r   i d s   t h a t   a r e   g e n e r a t e d   c o m p l e t e l y   c l i e n t - s i d e   ( i . e .   n o t   d u r i n g 
 / /   h y d r a t i o n ) .   T h i s   c o u n t e r   i s   g l o b a l ,   s o   c l i e n t   i d s   a r e   n o t   s t a b l e   a c r o s s 
 / /   r e n d e r   a t t e m p t s . 
 
 v a r   g l o b a l C l i e n t I d C o u n t e r   =   0 ; 
 v a r   R E _ R E N D E R _ L I M I T   =   2 5 ;   / /   I n   D E V ,   t h i s   i s   t h e   n a m e   o f   t h e   c u r r e n t l y   e x e c u t i n g   p r i m i t i v e   h o o k 
 
 v a r   c u r r e n t H o o k N a m e I n D e v   =   n u l l ;   / /   I n   D E V ,   t h i s   l i s t   e n s u r e s   t h a t   h o o k s   a r e   c a l l e d   i n   t h e   s a m e   o r d e r   b e t w e e n   r e n d e r s . 
 / /   T h e   l i s t   s t o r e s   t h e   o r d e r   o f   h o o k s   u s e d   d u r i n g   t h e   i n i t i a l   r e n d e r   ( m o u n t ) . 
 / /   S u b s e q u e n t   r e n d e r s   ( u p d a t e s )   r e f e r e n c e   t h i s   l i s t . 
 
 v a r   h o o k T y p e s D e v   =   n u l l ; 
 v a r   h o o k T y p e s U p d a t e I n d e x D e v   =   - 1 ;   / /   I n   D E V ,   t h i s   t r a c k s   w h e t h e r   c u r r e n t l y   r e n d e r i n g   c o m p o n e n t   n e e d s   t o   i g n o r e 
 / /   t h e   d e p e n d e n c i e s   f o r   H o o k s   t h a t   n e e d   t h e m   ( e . g .   u s e E f f e c t   o r   u s e M e m o ) . 
 / /   W h e n   t r u e ,   s u c h   H o o k s   w i l l   a l w a y s   b e   " r e m o u n t e d " .   O n l y   u s e d   d u r i n g   h o t   r e l o a d . 
 
 v a r   i g n o r e P r e v i o u s D e p e n d e n c i e s   =   f a l s e ; 
 
 f u n c t i o n   m o u n t H o o k T y p e s D e v ( )   { 
     { 
         v a r   h o o k N a m e   =   c u r r e n t H o o k N a m e I n D e v ; 
 
         i f   ( h o o k T y p e s D e v   = = =   n u l l )   { 
             h o o k T y p e s D e v   =   [ h o o k N a m e ] ; 
         }   e l s e   { 
             h o o k T y p e s D e v . p u s h ( h o o k N a m e ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   u p d a t e H o o k T y p e s D e v ( )   { 
     { 
         v a r   h o o k N a m e   =   c u r r e n t H o o k N a m e I n D e v ; 
 
         i f   ( h o o k T y p e s D e v   ! = =   n u l l )   { 
             h o o k T y p e s U p d a t e I n d e x D e v + + ; 
 
             i f   ( h o o k T y p e s D e v [ h o o k T y p e s U p d a t e I n d e x D e v ]   ! = =   h o o k N a m e )   { 
                 w a r n O n H o o k M i s m a t c h I n D e v ( h o o k N a m e ) ; 
             } 
         } 
     } 
 } 
 
 f u n c t i o n   c h e c k D e p s A r e A r r a y D e v ( d e p s )   { 
     { 
         i f   ( d e p s   ! = =   u n d e f i n e d   & &   d e p s   ! = =   n u l l   & &   ! i s A r r a y ( d e p s ) )   { 
             / /   V e r i f y   d e p s ,   b u t   o n l y   o n   m o u n t   t o   a v o i d   e x t r a   c h e c k s . 
             / /   I t ' s   u n l i k e l y   t h e i r   t y p e   w o u l d   c h a n g e   a s   u s u a l l y   y o u   d e f i n e   t h e m   i n l i n e . 
             e r r o r ( ' % s   r e c e i v e d   a   f i n a l   a r g u m e n t   t h a t   i s   n o t   a n   a r r a y   ( i n s t e a d ,   r e c e i v e d   ` % s ` ) .   W h e n   '   +   ' s p e c i f i e d ,   t h e   f i n a l   a r g u m e n t   m u s t   b e   a n   a r r a y . ' ,   c u r r e n t H o o k N a m e I n D e v ,   t y p e o f   d e p s ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   w a r n O n H o o k M i s m a t c h I n D e v ( c u r r e n t H o o k N a m e )   { 
     { 
         v a r   c o m p o n e n t N a m e   =   g e t C o m p o n e n t N a m e F r o m F i b e r ( c u r r e n t l y R e n d e r i n g F i b e r $ 1 ) ; 
 
         i f   ( ! d i d W a r n A b o u t M i s m a t c h e d H o o k s F o r C o m p o n e n t . h a s ( c o m p o n e n t N a m e ) )   { 
             d i d W a r n A b o u t M i s m a t c h e d H o o k s F o r C o m p o n e n t . a d d ( c o m p o n e n t N a m e ) ; 
 
             i f   ( h o o k T y p e s D e v   ! = =   n u l l )   { 
                 v a r   t a b l e   =   ' ' ; 
                 v a r   s e c o n d C o l u m n S t a r t   =   3 0 ; 
 
                 f o r   ( v a r   i   =   0 ;   i   < =   h o o k T y p e s U p d a t e I n d e x D e v ;   i + + )   { 
                     v a r   o l d H o o k N a m e   =   h o o k T y p e s D e v [ i ] ; 
                     v a r   n e w H o o k N a m e   =   i   = = =   h o o k T y p e s U p d a t e I n d e x D e v   ?   c u r r e n t H o o k N a m e   :   o l d H o o k N a m e ; 
                     v a r   r o w   =   i   +   1   +   " .   "   +   o l d H o o k N a m e ;   / /   E x t r a   s p a c e   s o   s e c o n d   c o l u m n   l i n e s   u p 
                     / /   l o l   @   I E   n o t   s u p p o r t i n g   S t r i n g # r e p e a t 
 
                     w h i l e   ( r o w . l e n g t h   <   s e c o n d C o l u m n S t a r t )   { 
                         r o w   + =   '   ' ; 
                     } 
 
                     r o w   + =   n e w H o o k N a m e   +   ' \ n ' ; 
                     t a b l e   + =   r o w ; 
                 } 
 
                 e r r o r ( ' R e a c t   h a s   d e t e c t e d   a   c h a n g e   i n   t h e   o r d e r   o f   H o o k s   c a l l e d   b y   % s .   '   +   ' T h i s   w i l l   l e a d   t o   b u g s   a n d   e r r o r s   i f   n o t   f i x e d .   '   +   ' F o r   m o r e   i n f o r m a t i o n ,   r e a d   t h e   R u l e s   o f   H o o k s :   h t t p s : / / r e a c t j s . o r g / l i n k / r u l e s - o f - h o o k s \ n \ n '   +   '       P r e v i o u s   r e n d e r                         N e x t   r e n d e r \ n '   +   '       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \ n '   +   ' % s '   +   '       ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ \ n ' ,   c o m p o n e n t N a m e ,   t a b l e ) ; 
             } 
         } 
     } 
 } 
 
 f u n c t i o n   t h r o w I n v a l i d H o o k E r r o r ( )   { 
     t h r o w   n e w   E r r o r ( ' I n v a l i d   h o o k   c a l l .   H o o k s   c a n   o n l y   b e   c a l l e d   i n s i d e   o f   t h e   b o d y   o f   a   f u n c t i o n   c o m p o n e n t .   T h i s   c o u l d   h a p p e n   f o r '   +   '   o n e   o f   t h e   f o l l o w i n g   r e a s o n s : \ n '   +   ' 1 .   Y o u   m i g h t   h a v e   m i s m a t c h i n g   v e r s i o n s   o f   R e a c t   a n d   t h e   r e n d e r e r   ( s u c h   a s   R e a c t   D O M ) \ n '   +   ' 2 .   Y o u   m i g h t   b e   b r e a k i n g   t h e   R u l e s   o f   H o o k s \ n '   +   ' 3 .   Y o u   m i g h t   h a v e   m o r e   t h a n   o n e   c o p y   o f   R e a c t   i n   t h e   s a m e   a p p \ n '   +   ' S e e   h t t p s : / / r e a c t j s . o r g / l i n k / i n v a l i d - h o o k - c a l l   f o r   t i p s   a b o u t   h o w   t o   d e b u g   a n d   f i x   t h i s   p r o b l e m . ' ) ; 
 } 
 
 f u n c t i o n   a r e H o o k I n p u t s E q u a l ( n e x t D e p s ,   p r e v D e p s )   { 
     { 
         i f   ( i g n o r e P r e v i o u s D e p e n d e n c i e s )   { 
             / /   O n l y   t r u e   w h e n   t h i s   c o m p o n e n t   i s   b e i n g   h o t   r e l o a d e d . 
             r e t u r n   f a l s e ; 
         } 
     } 
 
     i f   ( p r e v D e p s   = = =   n u l l )   { 
         { 
             e r r o r ( ' % s   r e c e i v e d   a   f i n a l   a r g u m e n t   d u r i n g   t h i s   r e n d e r ,   b u t   n o t   d u r i n g   '   +   ' t h e   p r e v i o u s   r e n d e r .   E v e n   t h o u g h   t h e   f i n a l   a r g u m e n t   i s   o p t i o n a l ,   '   +   ' i t s   t y p e   c a n n o t   c h a n g e   b e t w e e n   r e n d e r s . ' ,   c u r r e n t H o o k N a m e I n D e v ) ; 
         } 
 
         r e t u r n   f a l s e ; 
     } 
 
     { 
         / /   D o n ' t   b o t h e r   c o m p a r i n g   l e n g t h s   i n   p r o d   b e c a u s e   t h e s e   a r r a y s   s h o u l d   b e 
         / /   p a s s e d   i n l i n e . 
         i f   ( n e x t D e p s . l e n g t h   ! = =   p r e v D e p s . l e n g t h )   { 
             e r r o r ( ' T h e   f i n a l   a r g u m e n t   p a s s e d   t o   % s   c h a n g e d   s i z e   b e t w e e n   r e n d e r s .   T h e   '   +   ' o r d e r   a n d   s i z e   o f   t h i s   a r r a y   m u s t   r e m a i n   c o n s t a n t . \ n \ n '   +   ' P r e v i o u s :   % s \ n '   +   ' I n c o m i n g :   % s ' ,   c u r r e n t H o o k N a m e I n D e v ,   " [ "   +   p r e v D e p s . j o i n ( ' ,   ' )   +   " ] " ,   " [ "   +   n e x t D e p s . j o i n ( ' ,   ' )   +   " ] " ) ; 
         } 
     } 
 
     f o r   ( v a r   i   =   0 ;   i   <   p r e v D e p s . l e n g t h   & &   i   <   n e x t D e p s . l e n g t h ;   i + + )   { 
         i f   ( o b j e c t I s ( n e x t D e p s [ i ] ,   p r e v D e p s [ i ] ) )   { 
             c o n t i n u e ; 
         } 
 
         r e t u r n   f a l s e ; 
     } 
 
     r e t u r n   t r u e ; 
 } 
 
 f u n c t i o n   r e n d e r W i t h H o o k s ( c u r r e n t ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   p r o p s ,   s e c o n d A r g ,   n e x t R e n d e r L a n e s )   { 
     r e n d e r L a n e s   =   n e x t R e n d e r L a n e s ; 
     c u r r e n t l y R e n d e r i n g F i b e r $ 1   =   w o r k I n P r o g r e s s ; 
 
     { 
         h o o k T y p e s D e v   =   c u r r e n t   ! = =   n u l l   ?   c u r r e n t . _ d e b u g H o o k T y p e s   :   n u l l ; 
         h o o k T y p e s U p d a t e I n d e x D e v   =   - 1 ;   / /   U s e d   f o r   h o t   r e l o a d i n g : 
 
         i g n o r e P r e v i o u s D e p e n d e n c i e s   =   c u r r e n t   ! = =   n u l l   & &   c u r r e n t . t y p e   ! = =   w o r k I n P r o g r e s s . t y p e ; 
     } 
 
     w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   n u l l ; 
     w o r k I n P r o g r e s s . u p d a t e Q u e u e   =   n u l l ; 
     w o r k I n P r o g r e s s . l a n e s   =   N o L a n e s ;   / /   T h e   f o l l o w i n g   s h o u l d   h a v e   a l r e a d y   b e e n   r e s e t 
     / /   c u r r e n t H o o k   =   n u l l ; 
     / /   w o r k I n P r o g r e s s H o o k   =   n u l l ; 
     / /   d i d S c h e d u l e R e n d e r P h a s e U p d a t e   =   f a l s e ; 
     / /   l o c a l I d C o u n t e r   =   0 ; 
     / /   T O D O   W a r n   i f   n o   h o o k s   a r e   u s e d   a t   a l l   d u r i n g   m o u n t ,   t h e n   s o m e   a r e   u s e d   d u r i n g   u p d a t e . 
     / /   C u r r e n t l y   w e   w i l l   i d e n t i f y   t h e   u p d a t e   r e n d e r   a s   a   m o u n t   b e c a u s e   m e m o i z e d S t a t e   = = =   n u l l . 
     / /   T h i s   i s   t r i c k y   b e c a u s e   i t ' s   v a l i d   f o r   c e r t a i n   t y p e s   o f   c o m p o n e n t s   ( e . g .   R e a c t . l a z y ) 
     / /   U s i n g   m e m o i z e d S t a t e   t o   d i f f e r e n t i a t e   b e t w e e n   m o u n t / u p d a t e   o n l y   w o r k s   i f   a t   l e a s t   o n e   s t a t e f u l   h o o k   i s   u s e d . 
     / /   N o n - s t a t e f u l   h o o k s   ( e . g .   c o n t e x t )   d o n ' t   g e t   a d d e d   t o   m e m o i z e d S t a t e , 
     / /   s o   m e m o i z e d S t a t e   w o u l d   b e   n u l l   d u r i n g   u p d a t e s   a n d   m o u n t s . 
 
     { 
         i f   ( c u r r e n t   ! = =   n u l l   & &   c u r r e n t . m e m o i z e d S t a t e   ! = =   n u l l )   { 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   H o o k s D i s p a t c h e r O n U p d a t e I n D E V ; 
         }   e l s e   i f   ( h o o k T y p e s D e v   ! = =   n u l l )   { 
             / /   T h i s   d i s p a t c h e r   h a n d l e s   a n   e d g e   c a s e   w h e r e   a   c o m p o n e n t   i s   u p d a t i n g , 
             / /   b u t   n o   s t a t e f u l   h o o k s   h a v e   b e e n   u s e d . 
             / /   W e   w a n t   t o   m a t c h   t h e   p r o d u c t i o n   c o d e   b e h a v i o r   ( w h i c h   w i l l   u s e   H o o k s D i s p a t c h e r O n M o u n t ) , 
             / /   b u t   w i t h   t h e   e x t r a   D E V   v a l i d a t i o n   t o   e n s u r e   h o o k s   o r d e r i n g   h a s n ' t   c h a n g e d . 
             / /   T h i s   d i s p a t c h e r   d o e s   t h a t . 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   H o o k s D i s p a t c h e r O n M o u n t W i t h H o o k T y p e s I n D E V ; 
         }   e l s e   { 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   H o o k s D i s p a t c h e r O n M o u n t I n D E V ; 
         } 
     } 
 
     v a r   c h i l d r e n   =   C o m p o n e n t ( p r o p s ,   s e c o n d A r g ) ;   / /   C h e c k   i f   t h e r e   w a s   a   r e n d e r   p h a s e   u p d a t e 
 
     i f   ( d i d S c h e d u l e R e n d e r P h a s e U p d a t e D u r i n g T h i s P a s s )   { 
         / /   K e e p   r e n d e r i n g   i n   a   l o o p   f o r   a s   l o n g   a s   r e n d e r   p h a s e   u p d a t e s   c o n t i n u e   t o 
         / /   b e   s c h e d u l e d .   U s e   a   c o u n t e r   t o   p r e v e n t   i n f i n i t e   l o o p s . 
         v a r   n u m b e r O f R e R e n d e r s   =   0 ; 
 
         d o   { 
             d i d S c h e d u l e R e n d e r P h a s e U p d a t e D u r i n g T h i s P a s s   =   f a l s e ; 
             l o c a l I d C o u n t e r   =   0 ; 
 
             i f   ( n u m b e r O f R e R e n d e r s   > =   R E _ R E N D E R _ L I M I T )   { 
                 t h r o w   n e w   E r r o r ( ' T o o   m a n y   r e - r e n d e r s .   R e a c t   l i m i t s   t h e   n u m b e r   o f   r e n d e r s   t o   p r e v e n t   '   +   ' a n   i n f i n i t e   l o o p . ' ) ; 
             } 
 
             n u m b e r O f R e R e n d e r s   + =   1 ; 
 
             { 
                 / /   E v e n   w h e n   h o t   r e l o a d i n g ,   a l l o w   d e p e n d e n c i e s   t o   s t a b i l i z e 
                 / /   a f t e r   f i r s t   r e n d e r   t o   p r e v e n t   i n f i n i t e   r e n d e r   p h a s e   u p d a t e s . 
                 i g n o r e P r e v i o u s D e p e n d e n c i e s   =   f a l s e ; 
             }   / /   S t a r t   o v e r   f r o m   t h e   b e g i n n i n g   o f   t h e   l i s t 
 
 
             c u r r e n t H o o k   =   n u l l ; 
             w o r k I n P r o g r e s s H o o k   =   n u l l ; 
             w o r k I n P r o g r e s s . u p d a t e Q u e u e   =   n u l l ; 
 
             { 
                 / /   A l s o   v a l i d a t e   h o o k   o r d e r   f o r   c a s c a d i n g   u p d a t e s . 
                 h o o k T y p e s U p d a t e I n d e x D e v   =   - 1 ; 
             } 
 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =     H o o k s D i s p a t c h e r O n R e r e n d e r I n D E V   ; 
             c h i l d r e n   =   C o m p o n e n t ( p r o p s ,   s e c o n d A r g ) ; 
         }   w h i l e   ( d i d S c h e d u l e R e n d e r P h a s e U p d a t e D u r i n g T h i s P a s s ) ; 
     }   / /   W e   c a n   a s s u m e   t h e   p r e v i o u s   d i s p a t c h e r   i s   a l w a y s   t h i s   o n e ,   s i n c e   w e   s e t   i t 
     / /   a t   t h e   b e g i n n i n g   o f   t h e   r e n d e r   p h a s e   a n d   t h e r e ' s   n o   r e - e n t r a n c e . 
 
 
     R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   C o n t e x t O n l y D i s p a t c h e r ; 
 
     { 
         w o r k I n P r o g r e s s . _ d e b u g H o o k T y p e s   =   h o o k T y p e s D e v ; 
     }   / /   T h i s   c h e c k   u s e s   c u r r e n t H o o k   s o   t h a t   i t   w o r k s   t h e   s a m e   i n   D E V   a n d   p r o d   b u n d l e s . 
     / /   h o o k T y p e s D e v   c o u l d   c a t c h   m o r e   c a s e s   ( e . g .   c o n t e x t )   b u t   o n l y   i n   D E V   b u n d l e s . 
 
 
     v a r   d i d R e n d e r T o o F e w H o o k s   =   c u r r e n t H o o k   ! = =   n u l l   & &   c u r r e n t H o o k . n e x t   ! = =   n u l l ; 
     r e n d e r L a n e s   =   N o L a n e s ; 
     c u r r e n t l y R e n d e r i n g F i b e r $ 1   =   n u l l ; 
     c u r r e n t H o o k   =   n u l l ; 
     w o r k I n P r o g r e s s H o o k   =   n u l l ; 
 
     { 
         c u r r e n t H o o k N a m e I n D e v   =   n u l l ; 
         h o o k T y p e s D e v   =   n u l l ; 
         h o o k T y p e s U p d a t e I n d e x D e v   =   - 1 ;   / /   C o n f i r m   t h a t   a   s t a t i c   f l a g   w a s   n o t   a d d e d   o r   r e m o v e d   s i n c e   t h e   l a s t 
         / /   r e n d e r .   I f   t h i s   f i r e s ,   i t   s u g g e s t s   t h a t   w e   i n c o r r e c t l y   r e s e t   t h e   s t a t i c 
         / /   f l a g s   i n   s o m e   o t h e r   p a r t   o f   t h e   c o d e b a s e .   T h i s   h a s   h a p p e n e d   b e f o r e ,   f o r 
         / /   e x a m p l e ,   i n   t h e   S u s p e n s e L i s t   i m p l e m e n t a t i o n . 
 
         i f   ( c u r r e n t   ! = =   n u l l   & &   ( c u r r e n t . f l a g s   &   S t a t i c M a s k )   ! = =   ( w o r k I n P r o g r e s s . f l a g s   &   S t a t i c M a s k )   & &   / /   D i s a b l e   t h i s   w a r n i n g   i n   l e g a c y   m o d e ,   b e c a u s e   l e g a c y   S u s p e n s e   i s   w e i r d 
         / /   a n d   c r e a t e s   f a l s e   p o s i t i v e s .   T o   m a k e   t h i s   w o r k   i n   l e g a c y   m o d e ,   w e ' d 
         / /   n e e d   t o   m a r k   f i b e r s   t h a t   c o m m i t   i n   a n   i n c o m p l e t e   s t a t e ,   s o m e h o w .   F o r 
         / /   n o w   I ' l l   d i s a b l e   t h e   w a r n i n g   t h a t   m o s t   o f   t h e   b u g s   t h a t   w o u l d   t r i g g e r 
         / /   i t   a r e   e i t h e r   e x c l u s i v e   t o   c o n c u r r e n t   m o d e   o r   e x i s t   i n   b o t h . 
         ( c u r r e n t . m o d e   &   C o n c u r r e n t M o d e )   ! = =   N o M o d e )   { 
             e r r o r ( ' I n t e r n a l   R e a c t   e r r o r :   E x p e c t e d   s t a t i c   f l a g   w a s   m i s s i n g .   P l e a s e   '   +   ' n o t i f y   t h e   R e a c t   t e a m . ' ) ; 
         } 
     } 
 
     d i d S c h e d u l e R e n d e r P h a s e U p d a t e   =   f a l s e ;   / /   T h i s   i s   r e s e t   b y   c h e c k D i d R e n d e r I d H o o k 
     / /   l o c a l I d C o u n t e r   =   0 ; 
 
     i f   ( d i d R e n d e r T o o F e w H o o k s )   { 
         t h r o w   n e w   E r r o r ( ' R e n d e r e d   f e w e r   h o o k s   t h a n   e x p e c t e d .   T h i s   m a y   b e   c a u s e d   b y   a n   a c c i d e n t a l   '   +   ' e a r l y   r e t u r n   s t a t e m e n t . ' ) ; 
     } 
 
     r e t u r n   c h i l d r e n ; 
 } 
 f u n c t i o n   c h e c k D i d R e n d e r I d H o o k ( )   { 
     / /   T h i s   s h o u l d   b e   c a l l e d   i m m e d i a t e l y   a f t e r   e v e r y   r e n d e r W i t h H o o k s   c a l l . 
     / /   C o n c e p t u a l l y ,   i t ' s   p a r t   o f   t h e   r e t u r n   v a l u e   o f   r e n d e r W i t h H o o k s ;   i t ' s   o n l y   a 
     / /   s e p a r a t e   f u n c t i o n   t o   a v o i d   u s i n g   a n   a r r a y   t u p l e . 
     v a r   d i d R e n d e r I d H o o k   =   l o c a l I d C o u n t e r   ! = =   0 ; 
     l o c a l I d C o u n t e r   =   0 ; 
     r e t u r n   d i d R e n d e r I d H o o k ; 
 } 
 f u n c t i o n   b a i l o u t H o o k s ( c u r r e n t ,   w o r k I n P r o g r e s s ,   l a n e s )   { 
     w o r k I n P r o g r e s s . u p d a t e Q u e u e   =   c u r r e n t . u p d a t e Q u e u e ;   / /   T O D O :   D o n ' t   n e e d   t o   r e s e t   t h e   f l a g s   h e r e ,   b e c a u s e   t h e y ' r e   r e s e t   i n   t h e 
     / /   c o m p l e t e   p h a s e   ( b u b b l e P r o p e r t i e s ) . 
 
     i f   (   ( w o r k I n P r o g r e s s . m o d e   &   S t r i c t E f f e c t s M o d e )   ! = =   N o M o d e )   { 
         w o r k I n P r o g r e s s . f l a g s   & =   ~ ( M o u n t P a s s i v e D e v   |   M o u n t L a y o u t D e v   |   P a s s i v e   |   U p d a t e ) ; 
     }   e l s e   { 
         w o r k I n P r o g r e s s . f l a g s   & =   ~ ( P a s s i v e   |   U p d a t e ) ; 
     } 
 
     c u r r e n t . l a n e s   =   r e m o v e L a n e s ( c u r r e n t . l a n e s ,   l a n e s ) ; 
 } 
 f u n c t i o n   r e s e t H o o k s A f t e r T h r o w ( )   { 
     / /   W e   c a n   a s s u m e   t h e   p r e v i o u s   d i s p a t c h e r   i s   a l w a y s   t h i s   o n e ,   s i n c e   w e   s e t   i t 
     / /   a t   t h e   b e g i n n i n g   o f   t h e   r e n d e r   p h a s e   a n d   t h e r e ' s   n o   r e - e n t r a n c e . 
     R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   C o n t e x t O n l y D i s p a t c h e r ; 
 
     i f   ( d i d S c h e d u l e R e n d e r P h a s e U p d a t e )   { 
         / /   T h e r e   w e r e   r e n d e r   p h a s e   u p d a t e s .   T h e s e   a r e   o n l y   v a l i d   f o r   t h i s   r e n d e r 
         / /   p h a s e ,   w h i c h   w e   a r e   n o w   a b o r t i n g .   R e m o v e   t h e   u p d a t e s   f r o m   t h e   q u e u e s   s o 
         / /   t h e y   d o   n o t   p e r s i s t   t o   t h e   n e x t   r e n d e r .   D o   n o t   r e m o v e   u p d a t e s   f r o m   h o o k s 
         / /   t h a t   w e r e n ' t   p r o c e s s e d . 
         / / 
         / /   O n l y   r e s e t   t h e   u p d a t e s   f r o m   t h e   q u e u e   i f   i t   h a s   a   c l o n e .   I f   i t   d o e s 
         / /   n o t   h a v e   a   c l o n e ,   t h a t   m e a n s   i t   w a s n ' t   p r o c e s s e d ,   a n d   t h e   u p d a t e s   w e r e 
         / /   s c h e d u l e d   b e f o r e   w e   e n t e r e d   t h e   r e n d e r   p h a s e . 
         v a r   h o o k   =   c u r r e n t l y R e n d e r i n g F i b e r $ 1 . m e m o i z e d S t a t e ; 
 
         w h i l e   ( h o o k   ! = =   n u l l )   { 
             v a r   q u e u e   =   h o o k . q u e u e ; 
 
             i f   ( q u e u e   ! = =   n u l l )   { 
                 q u e u e . p e n d i n g   =   n u l l ; 
             } 
 
             h o o k   =   h o o k . n e x t ; 
         } 
 
         d i d S c h e d u l e R e n d e r P h a s e U p d a t e   =   f a l s e ; 
     } 
 
     r e n d e r L a n e s   =   N o L a n e s ; 
     c u r r e n t l y R e n d e r i n g F i b e r $ 1   =   n u l l ; 
     c u r r e n t H o o k   =   n u l l ; 
     w o r k I n P r o g r e s s H o o k   =   n u l l ; 
 
     { 
         h o o k T y p e s D e v   =   n u l l ; 
         h o o k T y p e s U p d a t e I n d e x D e v   =   - 1 ; 
         c u r r e n t H o o k N a m e I n D e v   =   n u l l ; 
         i s U p d a t i n g O p a q u e V a l u e I n R e n d e r P h a s e   =   f a l s e ; 
     } 
 
     d i d S c h e d u l e R e n d e r P h a s e U p d a t e D u r i n g T h i s P a s s   =   f a l s e ; 
     l o c a l I d C o u n t e r   =   0 ; 
 } 
 
 f u n c t i o n   m o u n t W o r k I n P r o g r e s s H o o k ( )   { 
     v a r   h o o k   =   { 
         m e m o i z e d S t a t e :   n u l l , 
         b a s e S t a t e :   n u l l , 
         b a s e Q u e u e :   n u l l , 
         q u e u e :   n u l l , 
         n e x t :   n u l l 
     } ; 
 
     i f   ( w o r k I n P r o g r e s s H o o k   = = =   n u l l )   { 
         / /   T h i s   i s   t h e   f i r s t   h o o k   i n   t h e   l i s t 
         c u r r e n t l y R e n d e r i n g F i b e r $ 1 . m e m o i z e d S t a t e   =   w o r k I n P r o g r e s s H o o k   =   h o o k ; 
     }   e l s e   { 
         / /   A p p e n d   t o   t h e   e n d   o f   t h e   l i s t 
         w o r k I n P r o g r e s s H o o k   =   w o r k I n P r o g r e s s H o o k . n e x t   =   h o o k ; 
     } 
 
     r e t u r n   w o r k I n P r o g r e s s H o o k ; 
 } 
 
 f u n c t i o n   u p d a t e W o r k I n P r o g r e s s H o o k ( )   { 
     / /   T h i s   f u n c t i o n   i s   u s e d   b o t h   f o r   u p d a t e s   a n d   f o r   r e - r e n d e r s   t r i g g e r e d   b y   a 
     / /   r e n d e r   p h a s e   u p d a t e .   I t   a s s u m e s   t h e r e   i s   e i t h e r   a   c u r r e n t   h o o k   w e   c a n 
     / /   c l o n e ,   o r   a   w o r k - i n - p r o g r e s s   h o o k   f r o m   a   p r e v i o u s   r e n d e r   p a s s   t h a t   w e   c a n 
     / /   u s e   a s   a   b a s e .   W h e n   w e   r e a c h   t h e   e n d   o f   t h e   b a s e   l i s t ,   w e   m u s t   s w i t c h   t o 
     / /   t h e   d i s p a t c h e r   u s e d   f o r   m o u n t s . 
     v a r   n e x t C u r r e n t H o o k ; 
 
     i f   ( c u r r e n t H o o k   = = =   n u l l )   { 
         v a r   c u r r e n t   =   c u r r e n t l y R e n d e r i n g F i b e r $ 1 . a l t e r n a t e ; 
 
         i f   ( c u r r e n t   ! = =   n u l l )   { 
             n e x t C u r r e n t H o o k   =   c u r r e n t . m e m o i z e d S t a t e ; 
         }   e l s e   { 
             n e x t C u r r e n t H o o k   =   n u l l ; 
         } 
     }   e l s e   { 
         n e x t C u r r e n t H o o k   =   c u r r e n t H o o k . n e x t ; 
     } 
 
     v a r   n e x t W o r k I n P r o g r e s s H o o k ; 
 
     i f   ( w o r k I n P r o g r e s s H o o k   = = =   n u l l )   { 
         n e x t W o r k I n P r o g r e s s H o o k   =   c u r r e n t l y R e n d e r i n g F i b e r $ 1 . m e m o i z e d S t a t e ; 
     }   e l s e   { 
         n e x t W o r k I n P r o g r e s s H o o k   =   w o r k I n P r o g r e s s H o o k . n e x t ; 
     } 
 
     i f   ( n e x t W o r k I n P r o g r e s s H o o k   ! = =   n u l l )   { 
         / /   T h e r e ' s   a l r e a d y   a   w o r k - i n - p r o g r e s s .   R e u s e   i t . 
         w o r k I n P r o g r e s s H o o k   =   n e x t W o r k I n P r o g r e s s H o o k ; 
         n e x t W o r k I n P r o g r e s s H o o k   =   w o r k I n P r o g r e s s H o o k . n e x t ; 
         c u r r e n t H o o k   =   n e x t C u r r e n t H o o k ; 
     }   e l s e   { 
         / /   C l o n e   f r o m   t h e   c u r r e n t   h o o k . 
         i f   ( n e x t C u r r e n t H o o k   = = =   n u l l )   { 
             t h r o w   n e w   E r r o r ( ' R e n d e r e d   m o r e   h o o k s   t h a n   d u r i n g   t h e   p r e v i o u s   r e n d e r . ' ) ; 
         } 
 
         c u r r e n t H o o k   =   n e x t C u r r e n t H o o k ; 
         v a r   n e w H o o k   =   { 
             m e m o i z e d S t a t e :   c u r r e n t H o o k . m e m o i z e d S t a t e , 
             b a s e S t a t e :   c u r r e n t H o o k . b a s e S t a t e , 
             b a s e Q u e u e :   c u r r e n t H o o k . b a s e Q u e u e , 
             q u e u e :   c u r r e n t H o o k . q u e u e , 
             n e x t :   n u l l 
         } ; 
 
         i f   ( w o r k I n P r o g r e s s H o o k   = = =   n u l l )   { 
             / /   T h i s   i s   t h e   f i r s t   h o o k   i n   t h e   l i s t . 
             c u r r e n t l y R e n d e r i n g F i b e r $ 1 . m e m o i z e d S t a t e   =   w o r k I n P r o g r e s s H o o k   =   n e w H o o k ; 
         }   e l s e   { 
             / /   A p p e n d   t o   t h e   e n d   o f   t h e   l i s t . 
             w o r k I n P r o g r e s s H o o k   =   w o r k I n P r o g r e s s H o o k . n e x t   =   n e w H o o k ; 
         } 
     } 
 
     r e t u r n   w o r k I n P r o g r e s s H o o k ; 
 } 
 
 f u n c t i o n   c r e a t e F u n c t i o n C o m p o n e n t U p d a t e Q u e u e ( )   { 
     r e t u r n   { 
         l a s t E f f e c t :   n u l l , 
         s t o r e s :   n u l l 
     } ; 
 } 
 
 f u n c t i o n   b a s i c S t a t e R e d u c e r ( s t a t e ,   a c t i o n )   { 
     / /   $ F l o w F i x M e :   F l o w   d o e s n ' t   l i k e   m i x e d   t y p e s 
     r e t u r n   t y p e o f   a c t i o n   = = =   ' f u n c t i o n '   ?   a c t i o n ( s t a t e )   :   a c t i o n ; 
 } 
 
 f u n c t i o n   m o u n t R e d u c e r ( r e d u c e r ,   i n i t i a l A r g ,   i n i t )   { 
     v a r   h o o k   =   m o u n t W o r k I n P r o g r e s s H o o k ( ) ; 
     v a r   i n i t i a l S t a t e ; 
 
     i f   ( i n i t   ! = =   u n d e f i n e d )   { 
         i n i t i a l S t a t e   =   i n i t ( i n i t i a l A r g ) ; 
     }   e l s e   { 
         i n i t i a l S t a t e   =   i n i t i a l A r g ; 
     } 
 
     h o o k . m e m o i z e d S t a t e   =   h o o k . b a s e S t a t e   =   i n i t i a l S t a t e ; 
     v a r   q u e u e   =   { 
         p e n d i n g :   n u l l , 
         i n t e r l e a v e d :   n u l l , 
         l a n e s :   N o L a n e s , 
         d i s p a t c h :   n u l l , 
         l a s t R e n d e r e d R e d u c e r :   r e d u c e r , 
         l a s t R e n d e r e d S t a t e :   i n i t i a l S t a t e 
     } ; 
     h o o k . q u e u e   =   q u e u e ; 
     v a r   d i s p a t c h   =   q u e u e . d i s p a t c h   =   d i s p a t c h R e d u c e r A c t i o n . b i n d ( n u l l ,   c u r r e n t l y R e n d e r i n g F i b e r $ 1 ,   q u e u e ) ; 
     r e t u r n   [ h o o k . m e m o i z e d S t a t e ,   d i s p a t c h ] ; 
 } 
 
 f u n c t i o n   u p d a t e R e d u c e r ( r e d u c e r ,   i n i t i a l A r g ,   i n i t )   { 
     v a r   h o o k   =   u p d a t e W o r k I n P r o g r e s s H o o k ( ) ; 
     v a r   q u e u e   =   h o o k . q u e u e ; 
 
     i f   ( q u e u e   = = =   n u l l )   { 
         t h r o w   n e w   E r r o r ( ' S h o u l d   h a v e   a   q u e u e .   T h i s   i s   l i k e l y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
     } 
 
     q u e u e . l a s t R e n d e r e d R e d u c e r   =   r e d u c e r ; 
     v a r   c u r r e n t   =   c u r r e n t H o o k ;   / /   T h e   l a s t   r e b a s e   u p d a t e   t h a t   i s   N O T   p a r t   o f   t h e   b a s e   s t a t e . 
 
     v a r   b a s e Q u e u e   =   c u r r e n t . b a s e Q u e u e ;   / /   T h e   l a s t   p e n d i n g   u p d a t e   t h a t   h a s n ' t   b e e n   p r o c e s s e d   y e t . 
 
     v a r   p e n d i n g Q u e u e   =   q u e u e . p e n d i n g ; 
 
     i f   ( p e n d i n g Q u e u e   ! = =   n u l l )   { 
         / /   W e   h a v e   n e w   u p d a t e s   t h a t   h a v e n ' t   b e e n   p r o c e s s e d   y e t . 
         / /   W e ' l l   a d d   t h e m   t o   t h e   b a s e   q u e u e . 
         i f   ( b a s e Q u e u e   ! = =   n u l l )   { 
             / /   M e r g e   t h e   p e n d i n g   q u e u e   a n d   t h e   b a s e   q u e u e . 
             v a r   b a s e F i r s t   =   b a s e Q u e u e . n e x t ; 
             v a r   p e n d i n g F i r s t   =   p e n d i n g Q u e u e . n e x t ; 
             b a s e Q u e u e . n e x t   =   p e n d i n g F i r s t ; 
             p e n d i n g Q u e u e . n e x t   =   b a s e F i r s t ; 
         } 
 
         { 
             i f   ( c u r r e n t . b a s e Q u e u e   ! = =   b a s e Q u e u e )   { 
                 / /   I n t e r n a l   i n v a r i a n t   t h a t   s h o u l d   n e v e r   h a p p e n ,   b u t   f e a s i b l y   c o u l d   i n 
                 / /   t h e   f u t u r e   i f   w e   i m p l e m e n t   r e s u m i n g ,   o r   s o m e   f o r m   o f   t h a t . 
                 e r r o r ( ' I n t e r n a l   e r r o r :   E x p e c t e d   w o r k - i n - p r o g r e s s   q u e u e   t o   b e   a   c l o n e .   '   +   ' T h i s   i s   a   b u g   i n   R e a c t . ' ) ; 
             } 
         } 
 
         c u r r e n t . b a s e Q u e u e   =   b a s e Q u e u e   =   p e n d i n g Q u e u e ; 
         q u e u e . p e n d i n g   =   n u l l ; 
     } 
 
     i f   ( b a s e Q u e u e   ! = =   n u l l )   { 
         / /   W e   h a v e   a   q u e u e   t o   p r o c e s s . 
         v a r   f i r s t   =   b a s e Q u e u e . n e x t ; 
         v a r   n e w S t a t e   =   c u r r e n t . b a s e S t a t e ; 
         v a r   n e w B a s e S t a t e   =   n u l l ; 
         v a r   n e w B a s e Q u e u e F i r s t   =   n u l l ; 
         v a r   n e w B a s e Q u e u e L a s t   =   n u l l ; 
         v a r   u p d a t e   =   f i r s t ; 
 
         d o   { 
             v a r   u p d a t e L a n e   =   u p d a t e . l a n e ; 
 
             i f   ( ! i s S u b s e t O f L a n e s ( r e n d e r L a n e s ,   u p d a t e L a n e ) )   { 
                 / /   P r i o r i t y   i s   i n s u f f i c i e n t .   S k i p   t h i s   u p d a t e .   I f   t h i s   i s   t h e   f i r s t 
                 / /   s k i p p e d   u p d a t e ,   t h e   p r e v i o u s   u p d a t e / s t a t e   i s   t h e   n e w   b a s e 
                 / /   u p d a t e / s t a t e . 
                 v a r   c l o n e   =   { 
                     l a n e :   u p d a t e L a n e , 
                     a c t i o n :   u p d a t e . a c t i o n , 
                     h a s E a g e r S t a t e :   u p d a t e . h a s E a g e r S t a t e , 
                     e a g e r S t a t e :   u p d a t e . e a g e r S t a t e , 
                     n e x t :   n u l l 
                 } ; 
 
                 i f   ( n e w B a s e Q u e u e L a s t   = = =   n u l l )   { 
                     n e w B a s e Q u e u e F i r s t   =   n e w B a s e Q u e u e L a s t   =   c l o n e ; 
                     n e w B a s e S t a t e   =   n e w S t a t e ; 
                 }   e l s e   { 
                     n e w B a s e Q u e u e L a s t   =   n e w B a s e Q u e u e L a s t . n e x t   =   c l o n e ; 
                 }   / /   U p d a t e   t h e   r e m a i n i n g   p r i o r i t y   i n   t h e   q u e u e . 
                 / /   T O D O :   D o n ' t   n e e d   t o   a c c u m u l a t e   t h i s .   I n s t e a d ,   w e   c a n   r e m o v e 
                 / /   r e n d e r L a n e s   f r o m   t h e   o r i g i n a l   l a n e s . 
 
 
                 c u r r e n t l y R e n d e r i n g F i b e r $ 1 . l a n e s   =   m e r g e L a n e s ( c u r r e n t l y R e n d e r i n g F i b e r $ 1 . l a n e s ,   u p d a t e L a n e ) ; 
                 m a r k S k i p p e d U p d a t e L a n e s ( u p d a t e L a n e ) ; 
             }   e l s e   { 
                 / /   T h i s   u p d a t e   d o e s   h a v e   s u f f i c i e n t   p r i o r i t y . 
                 i f   ( n e w B a s e Q u e u e L a s t   ! = =   n u l l )   { 
                     v a r   _ c l o n e   =   { 
                         / /   T h i s   u p d a t e   i s   g o i n g   t o   b e   c o m m i t t e d   s o   w e   n e v e r   w a n t   u n c o m m i t 
                         / /   i t .   U s i n g   N o L a n e   w o r k s   b e c a u s e   0   i s   a   s u b s e t   o f   a l l   b i t m a s k s ,   s o 
                         / /   t h i s   w i l l   n e v e r   b e   s k i p p e d   b y   t h e   c h e c k   a b o v e . 
                         l a n e :   N o L a n e , 
                         a c t i o n :   u p d a t e . a c t i o n , 
                         h a s E a g e r S t a t e :   u p d a t e . h a s E a g e r S t a t e , 
                         e a g e r S t a t e :   u p d a t e . e a g e r S t a t e , 
                         n e x t :   n u l l 
                     } ; 
                     n e w B a s e Q u e u e L a s t   =   n e w B a s e Q u e u e L a s t . n e x t   =   _ c l o n e ; 
                 }   / /   P r o c e s s   t h i s   u p d a t e . 
 
 
                 i f   ( u p d a t e . h a s E a g e r S t a t e )   { 
                     / /   I f   t h i s   u p d a t e   i s   a   s t a t e   u p d a t e   ( n o t   a   r e d u c e r )   a n d   w a s   p r o c e s s e d   e a g e r l y , 
                     / /   w e   c a n   u s e   t h e   e a g e r l y   c o m p u t e d   s t a t e 
                     n e w S t a t e   =   u p d a t e . e a g e r S t a t e ; 
                 }   e l s e   { 
                     v a r   a c t i o n   =   u p d a t e . a c t i o n ; 
                     n e w S t a t e   =   r e d u c e r ( n e w S t a t e ,   a c t i o n ) ; 
                 } 
             } 
 
             u p d a t e   =   u p d a t e . n e x t ; 
         }   w h i l e   ( u p d a t e   ! = =   n u l l   & &   u p d a t e   ! = =   f i r s t ) ; 
 
         i f   ( n e w B a s e Q u e u e L a s t   = = =   n u l l )   { 
             n e w B a s e S t a t e   =   n e w S t a t e ; 
         }   e l s e   { 
             n e w B a s e Q u e u e L a s t . n e x t   =   n e w B a s e Q u e u e F i r s t ; 
         }   / /   M a r k   t h a t   t h e   f i b e r   p e r f o r m e d   w o r k ,   b u t   o n l y   i f   t h e   n e w   s t a t e   i s 
         / /   d i f f e r e n t   f r o m   t h e   c u r r e n t   s t a t e . 
 
 
         i f   ( ! o b j e c t I s ( n e w S t a t e ,   h o o k . m e m o i z e d S t a t e ) )   { 
             m a r k W o r k I n P r o g r e s s R e c e i v e d U p d a t e ( ) ; 
         } 
 
         h o o k . m e m o i z e d S t a t e   =   n e w S t a t e ; 
         h o o k . b a s e S t a t e   =   n e w B a s e S t a t e ; 
         h o o k . b a s e Q u e u e   =   n e w B a s e Q u e u e L a s t ; 
         q u e u e . l a s t R e n d e r e d S t a t e   =   n e w S t a t e ; 
     }   / /   I n t e r l e a v e d   u p d a t e s   a r e   s t o r e d   o n   a   s e p a r a t e   q u e u e .   W e   a r e n ' t   g o i n g   t o 
     / /   p r o c e s s   t h e m   d u r i n g   t h i s   r e n d e r ,   b u t   w e   d o   n e e d   t o   t r a c k   w h i c h   l a n e s 
     / /   a r e   r e m a i n i n g . 
 
 
     v a r   l a s t I n t e r l e a v e d   =   q u e u e . i n t e r l e a v e d ; 
 
     i f   ( l a s t I n t e r l e a v e d   ! = =   n u l l )   { 
         v a r   i n t e r l e a v e d   =   l a s t I n t e r l e a v e d ; 
 
         d o   { 
             v a r   i n t e r l e a v e d L a n e   =   i n t e r l e a v e d . l a n e ; 
             c u r r e n t l y R e n d e r i n g F i b e r $ 1 . l a n e s   =   m e r g e L a n e s ( c u r r e n t l y R e n d e r i n g F i b e r $ 1 . l a n e s ,   i n t e r l e a v e d L a n e ) ; 
             m a r k S k i p p e d U p d a t e L a n e s ( i n t e r l e a v e d L a n e ) ; 
             i n t e r l e a v e d   =   i n t e r l e a v e d . n e x t ; 
         }   w h i l e   ( i n t e r l e a v e d   ! = =   l a s t I n t e r l e a v e d ) ; 
     }   e l s e   i f   ( b a s e Q u e u e   = = =   n u l l )   { 
         / /   ` q u e u e . l a n e s `   i s   u s e d   f o r   e n t a n g l i n g   t r a n s i t i o n s .   W e   c a n   s e t   i t   b a c k   t o 
         / /   z e r o   o n c e   t h e   q u e u e   i s   e m p t y . 
         q u e u e . l a n e s   =   N o L a n e s ; 
     } 
 
     v a r   d i s p a t c h   =   q u e u e . d i s p a t c h ; 
     r e t u r n   [ h o o k . m e m o i z e d S t a t e ,   d i s p a t c h ] ; 
 } 
 
 f u n c t i o n   r e r e n d e r R e d u c e r ( r e d u c e r ,   i n i t i a l A r g ,   i n i t )   { 
     v a r   h o o k   =   u p d a t e W o r k I n P r o g r e s s H o o k ( ) ; 
     v a r   q u e u e   =   h o o k . q u e u e ; 
 
     i f   ( q u e u e   = = =   n u l l )   { 
         t h r o w   n e w   E r r o r ( ' S h o u l d   h a v e   a   q u e u e .   T h i s   i s   l i k e l y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
     } 
 
     q u e u e . l a s t R e n d e r e d R e d u c e r   =   r e d u c e r ;   / /   T h i s   i s   a   r e - r e n d e r .   A p p l y   t h e   n e w   r e n d e r   p h a s e   u p d a t e s   t o   t h e   p r e v i o u s 
     / /   w o r k - i n - p r o g r e s s   h o o k . 
 
     v a r   d i s p a t c h   =   q u e u e . d i s p a t c h ; 
     v a r   l a s t R e n d e r P h a s e U p d a t e   =   q u e u e . p e n d i n g ; 
     v a r   n e w S t a t e   =   h o o k . m e m o i z e d S t a t e ; 
 
     i f   ( l a s t R e n d e r P h a s e U p d a t e   ! = =   n u l l )   { 
         / /   T h e   q u e u e   d o e s n ' t   p e r s i s t   p a s t   t h i s   r e n d e r   p a s s . 
         q u e u e . p e n d i n g   =   n u l l ; 
         v a r   f i r s t R e n d e r P h a s e U p d a t e   =   l a s t R e n d e r P h a s e U p d a t e . n e x t ; 
         v a r   u p d a t e   =   f i r s t R e n d e r P h a s e U p d a t e ; 
 
         d o   { 
             / /   P r o c e s s   t h i s   r e n d e r   p h a s e   u p d a t e .   W e   d o n ' t   h a v e   t o   c h e c k   t h e 
             / /   p r i o r i t y   b e c a u s e   i t   w i l l   a l w a y s   b e   t h e   s a m e   a s   t h e   c u r r e n t 
             / /   r e n d e r ' s . 
             v a r   a c t i o n   =   u p d a t e . a c t i o n ; 
             n e w S t a t e   =   r e d u c e r ( n e w S t a t e ,   a c t i o n ) ; 
             u p d a t e   =   u p d a t e . n e x t ; 
         }   w h i l e   ( u p d a t e   ! = =   f i r s t R e n d e r P h a s e U p d a t e ) ;   / /   M a r k   t h a t   t h e   f i b e r   p e r f o r m e d   w o r k ,   b u t   o n l y   i f   t h e   n e w   s t a t e   i s 
         / /   d i f f e r e n t   f r o m   t h e   c u r r e n t   s t a t e . 
 
 
         i f   ( ! o b j e c t I s ( n e w S t a t e ,   h o o k . m e m o i z e d S t a t e ) )   { 
             m a r k W o r k I n P r o g r e s s R e c e i v e d U p d a t e ( ) ; 
         } 
 
         h o o k . m e m o i z e d S t a t e   =   n e w S t a t e ;   / /   D o n ' t   p e r s i s t   t h e   s t a t e   a c c u m u l a t e d   f r o m   t h e   r e n d e r   p h a s e   u p d a t e s   t o 
         / /   t h e   b a s e   s t a t e   u n l e s s   t h e   q u e u e   i s   e m p t y . 
         / /   T O D O :   N o t   s u r e   i f   t h i s   i s   t h e   d e s i r e d   s e m a n t i c s ,   b u t   i t ' s   w h a t   w e 
         / /   d o   f o r   g D S F P .   I   c a n ' t   r e m e m b e r   w h y . 
 
         i f   ( h o o k . b a s e Q u e u e   = = =   n u l l )   { 
             h o o k . b a s e S t a t e   =   n e w S t a t e ; 
         } 
 
         q u e u e . l a s t R e n d e r e d S t a t e   =   n e w S t a t e ; 
     } 
 
     r e t u r n   [ n e w S t a t e ,   d i s p a t c h ] ; 
 } 
 
 f u n c t i o n   m o u n t M u t a b l e S o u r c e ( s o u r c e ,   g e t S n a p s h o t ,   s u b s c r i b e )   { 
     { 
         r e t u r n   u n d e f i n e d ; 
     } 
 } 
 
 f u n c t i o n   u p d a t e M u t a b l e S o u r c e ( s o u r c e ,   g e t S n a p s h o t ,   s u b s c r i b e )   { 
     { 
         r e t u r n   u n d e f i n e d ; 
     } 
 } 
 
 f u n c t i o n   m o u n t S y n c E x t e r n a l S t o r e ( s u b s c r i b e ,   g e t S n a p s h o t ,   g e t S e r v e r S n a p s h o t )   { 
     v a r   f i b e r   =   c u r r e n t l y R e n d e r i n g F i b e r $ 1 ; 
     v a r   h o o k   =   m o u n t W o r k I n P r o g r e s s H o o k ( ) ; 
     v a r   n e x t S n a p s h o t ; 
     v a r   i s H y d r a t i n g   =   g e t I s H y d r a t i n g ( ) ; 
 
     i f   ( i s H y d r a t i n g )   { 
         i f   ( g e t S e r v e r S n a p s h o t   = = =   u n d e f i n e d )   { 
             t h r o w   n e w   E r r o r ( ' M i s s i n g   g e t S e r v e r S n a p s h o t ,   w h i c h   i s   r e q u i r e d   f o r   '   +   ' s e r v e r - r e n d e r e d   c o n t e n t .   W i l l   r e v e r t   t o   c l i e n t   r e n d e r i n g . ' ) ; 
         } 
 
         n e x t S n a p s h o t   =   g e t S e r v e r S n a p s h o t ( ) ; 
 
         { 
             i f   ( ! d i d W a r n U n c a c h e d G e t S n a p s h o t )   { 
                 i f   ( n e x t S n a p s h o t   ! = =   g e t S e r v e r S n a p s h o t ( ) )   { 
                     e r r o r ( ' T h e   r e s u l t   o f   g e t S e r v e r S n a p s h o t   s h o u l d   b e   c a c h e d   t o   a v o i d   a n   i n f i n i t e   l o o p ' ) ; 
 
                     d i d W a r n U n c a c h e d G e t S n a p s h o t   =   t r u e ; 
                 } 
             } 
         } 
     }   e l s e   { 
         n e x t S n a p s h o t   =   g e t S n a p s h o t ( ) ; 
 
         { 
             i f   ( ! d i d W a r n U n c a c h e d G e t S n a p s h o t )   { 
                 v a r   c a c h e d S n a p s h o t   =   g e t S n a p s h o t ( ) ; 
 
                 i f   ( ! o b j e c t I s ( n e x t S n a p s h o t ,   c a c h e d S n a p s h o t ) )   { 
                     e r r o r ( ' T h e   r e s u l t   o f   g e t S n a p s h o t   s h o u l d   b e   c a c h e d   t o   a v o i d   a n   i n f i n i t e   l o o p ' ) ; 
 
                     d i d W a r n U n c a c h e d G e t S n a p s h o t   =   t r u e ; 
                 } 
             } 
         }   / /   U n l e s s   w e ' r e   r e n d e r i n g   a   b l o c k i n g   l a n e ,   s c h e d u l e   a   c o n s i s t e n c y   c h e c k . 
         / /   R i g h t   b e f o r e   c o m m i t t i n g ,   w e   w i l l   w a l k   t h e   t r e e   a n d   c h e c k   i f   a n y   o f   t h e 
         / /   s t o r e s   w e r e   m u t a t e d . 
         / / 
         / /   W e   w o n ' t   d o   t h i s   i f   w e ' r e   h y d r a t i n g   s e r v e r - r e n d e r e d   c o n t e n t ,   b e c a u s e   i f 
         / /   t h e   c o n t e n t   i s   s t a l e ,   i t ' s   a l r e a d y   v i s i b l e   a n y w a y .   I n s t e a d   w e ' l l   p a t c h 
         / /   i t   u p   i n   a   p a s s i v e   e f f e c t . 
 
 
         v a r   r o o t   =   g e t W o r k I n P r o g r e s s R o o t ( ) ; 
 
         i f   ( r o o t   = = =   n u l l )   { 
             t h r o w   n e w   E r r o r ( ' E x p e c t e d   a   w o r k - i n - p r o g r e s s   r o o t .   T h i s   i s   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
         } 
 
         i f   ( ! i n c l u d e s B l o c k i n g L a n e ( r o o t ,   r e n d e r L a n e s ) )   { 
             p u s h S t o r e C o n s i s t e n c y C h e c k ( f i b e r ,   g e t S n a p s h o t ,   n e x t S n a p s h o t ) ; 
         } 
     }   / /   R e a d   t h e   c u r r e n t   s n a p s h o t   f r o m   t h e   s t o r e   o n   e v e r y   r e n d e r .   T h i s   b r e a k s   t h e 
     / /   n o r m a l   r u l e s   o f   R e a c t ,   a n d   o n l y   w o r k s   b e c a u s e   s t o r e   u p d a t e s   a r e 
     / /   a l w a y s   s y n c h r o n o u s . 
 
 
     h o o k . m e m o i z e d S t a t e   =   n e x t S n a p s h o t ; 
     v a r   i n s t   =   { 
         v a l u e :   n e x t S n a p s h o t , 
         g e t S n a p s h o t :   g e t S n a p s h o t 
     } ; 
     h o o k . q u e u e   =   i n s t ;   / /   S c h e d u l e   a n   e f f e c t   t o   s u b s c r i b e   t o   t h e   s t o r e . 
 
     m o u n t E f f e c t ( s u b s c r i b e T o S t o r e . b i n d ( n u l l ,   f i b e r ,   i n s t ,   s u b s c r i b e ) ,   [ s u b s c r i b e ] ) ;   / /   S c h e d u l e   a n   e f f e c t   t o   u p d a t e   t h e   m u t a b l e   i n s t a n c e   f i e l d s .   W e   w i l l   u p d a t e 
     / /   t h i s   w h e n e v e r   s u b s c r i b e ,   g e t S n a p s h o t ,   o r   v a l u e   c h a n g e s .   B e c a u s e   t h e r e ' s   n o 
     / /   c l e a n - u p   f u n c t i o n ,   a n d   w e   t r a c k   t h e   d e p s   c o r r e c t l y ,   w e   c a n   c a l l   p u s h E f f e c t 
     / /   d i r e c t l y ,   w i t h o u t   s t o r i n g   a n y   a d d i t i o n a l   s t a t e .   F o r   t h e   s a m e   r e a s o n ,   w e 
     / /   d o n ' t   n e e d   t o   s e t   a   s t a t i c   f l a g ,   e i t h e r . 
     / /   T O D O :   W e   c a n   m o v e   t h i s   t o   t h e   p a s s i v e   p h a s e   o n c e   w e   a d d   a   p r e - c o m m i t 
     / /   c o n s i s t e n c y   c h e c k .   S e e   t h e   n e x t   c o m m e n t . 
 
     f i b e r . f l a g s   | =   P a s s i v e ; 
     p u s h E f f e c t ( H a s E f f e c t   |   P a s s i v e $ 1 ,   u p d a t e S t o r e I n s t a n c e . b i n d ( n u l l ,   f i b e r ,   i n s t ,   n e x t S n a p s h o t ,   g e t S n a p s h o t ) ,   u n d e f i n e d ,   n u l l ) ; 
     r e t u r n   n e x t S n a p s h o t ; 
 } 
 
 f u n c t i o n   u p d a t e S y n c E x t e r n a l S t o r e ( s u b s c r i b e ,   g e t S n a p s h o t ,   g e t S e r v e r S n a p s h o t )   { 
     v a r   f i b e r   =   c u r r e n t l y R e n d e r i n g F i b e r $ 1 ; 
     v a r   h o o k   =   u p d a t e W o r k I n P r o g r e s s H o o k ( ) ;   / /   R e a d   t h e   c u r r e n t   s n a p s h o t   f r o m   t h e   s t o r e   o n   e v e r y   r e n d e r .   T h i s   b r e a k s   t h e 
     / /   n o r m a l   r u l e s   o f   R e a c t ,   a n d   o n l y   w o r k s   b e c a u s e   s t o r e   u p d a t e s   a r e 
     / /   a l w a y s   s y n c h r o n o u s . 
 
     v a r   n e x t S n a p s h o t   =   g e t S n a p s h o t ( ) ; 
 
     { 
         i f   ( ! d i d W a r n U n c a c h e d G e t S n a p s h o t )   { 
             v a r   c a c h e d S n a p s h o t   =   g e t S n a p s h o t ( ) ; 
 
             i f   ( ! o b j e c t I s ( n e x t S n a p s h o t ,   c a c h e d S n a p s h o t ) )   { 
                 e r r o r ( ' T h e   r e s u l t   o f   g e t S n a p s h o t   s h o u l d   b e   c a c h e d   t o   a v o i d   a n   i n f i n i t e   l o o p ' ) ; 
 
                 d i d W a r n U n c a c h e d G e t S n a p s h o t   =   t r u e ; 
             } 
         } 
     } 
 
     v a r   p r e v S n a p s h o t   =   h o o k . m e m o i z e d S t a t e ; 
     v a r   s n a p s h o t C h a n g e d   =   ! o b j e c t I s ( p r e v S n a p s h o t ,   n e x t S n a p s h o t ) ; 
 
     i f   ( s n a p s h o t C h a n g e d )   { 
         h o o k . m e m o i z e d S t a t e   =   n e x t S n a p s h o t ; 
         m a r k W o r k I n P r o g r e s s R e c e i v e d U p d a t e ( ) ; 
     } 
 
     v a r   i n s t   =   h o o k . q u e u e ; 
     u p d a t e E f f e c t ( s u b s c r i b e T o S t o r e . b i n d ( n u l l ,   f i b e r ,   i n s t ,   s u b s c r i b e ) ,   [ s u b s c r i b e ] ) ;   / /   W h e n e v e r   g e t S n a p s h o t   o r   s u b s c r i b e   c h a n g e s ,   w e   n e e d   t o   c h e c k   i n   t h e 
     / /   c o m m i t   p h a s e   i f   t h e r e   w a s   a n   i n t e r l e a v e d   m u t a t i o n .   I n   c o n c u r r e n t   m o d e 
     / /   t h i s   c a n   h a p p e n   a l l   t h e   t i m e ,   b u t   e v e n   i n   s y n c h r o n o u s   m o d e ,   a n   e a r l i e r 
     / /   e f f e c t   m a y   h a v e   m u t a t e d   t h e   s t o r e . 
 
     i f   ( i n s t . g e t S n a p s h o t   ! = =   g e t S n a p s h o t   | |   s n a p s h o t C h a n g e d   | |   / /   C h e c k   i f   t h e   s u s b c r i b e   f u n c t i o n   c h a n g e d .   W e   c a n   s a v e   s o m e   m e m o r y   b y 
     / /   c h e c k i n g   w h e t h e r   w e   s c h e d u l e d   a   s u b s c r i p t i o n   e f f e c t   a b o v e . 
     w o r k I n P r o g r e s s H o o k   ! = =   n u l l   & &   w o r k I n P r o g r e s s H o o k . m e m o i z e d S t a t e . t a g   &   H a s E f f e c t )   { 
         f i b e r . f l a g s   | =   P a s s i v e ; 
         p u s h E f f e c t ( H a s E f f e c t   |   P a s s i v e $ 1 ,   u p d a t e S t o r e I n s t a n c e . b i n d ( n u l l ,   f i b e r ,   i n s t ,   n e x t S n a p s h o t ,   g e t S n a p s h o t ) ,   u n d e f i n e d ,   n u l l ) ;   / /   U n l e s s   w e ' r e   r e n d e r i n g   a   b l o c k i n g   l a n e ,   s c h e d u l e   a   c o n s i s t e n c y   c h e c k . 
         / /   R i g h t   b e f o r e   c o m m i t t i n g ,   w e   w i l l   w a l k   t h e   t r e e   a n d   c h e c k   i f   a n y   o f   t h e 
         / /   s t o r e s   w e r e   m u t a t e d . 
 
         v a r   r o o t   =   g e t W o r k I n P r o g r e s s R o o t ( ) ; 
 
         i f   ( r o o t   = = =   n u l l )   { 
             t h r o w   n e w   E r r o r ( ' E x p e c t e d   a   w o r k - i n - p r o g r e s s   r o o t .   T h i s   i s   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
         } 
 
         i f   ( ! i n c l u d e s B l o c k i n g L a n e ( r o o t ,   r e n d e r L a n e s ) )   { 
             p u s h S t o r e C o n s i s t e n c y C h e c k ( f i b e r ,   g e t S n a p s h o t ,   n e x t S n a p s h o t ) ; 
         } 
     } 
 
     r e t u r n   n e x t S n a p s h o t ; 
 } 
 
 f u n c t i o n   p u s h S t o r e C o n s i s t e n c y C h e c k ( f i b e r ,   g e t S n a p s h o t ,   r e n d e r e d S n a p s h o t )   { 
     f i b e r . f l a g s   | =   S t o r e C o n s i s t e n c y ; 
     v a r   c h e c k   =   { 
         g e t S n a p s h o t :   g e t S n a p s h o t , 
         v a l u e :   r e n d e r e d S n a p s h o t 
     } ; 
     v a r   c o m p o n e n t U p d a t e Q u e u e   =   c u r r e n t l y R e n d e r i n g F i b e r $ 1 . u p d a t e Q u e u e ; 
 
     i f   ( c o m p o n e n t U p d a t e Q u e u e   = = =   n u l l )   { 
         c o m p o n e n t U p d a t e Q u e u e   =   c r e a t e F u n c t i o n C o m p o n e n t U p d a t e Q u e u e ( ) ; 
         c u r r e n t l y R e n d e r i n g F i b e r $ 1 . u p d a t e Q u e u e   =   c o m p o n e n t U p d a t e Q u e u e ; 
         c o m p o n e n t U p d a t e Q u e u e . s t o r e s   =   [ c h e c k ] ; 
     }   e l s e   { 
         v a r   s t o r e s   =   c o m p o n e n t U p d a t e Q u e u e . s t o r e s ; 
 
         i f   ( s t o r e s   = = =   n u l l )   { 
             c o m p o n e n t U p d a t e Q u e u e . s t o r e s   =   [ c h e c k ] ; 
         }   e l s e   { 
             s t o r e s . p u s h ( c h e c k ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   u p d a t e S t o r e I n s t a n c e ( f i b e r ,   i n s t ,   n e x t S n a p s h o t ,   g e t S n a p s h o t )   { 
     / /   T h e s e   a r e   u p d a t e d   i n   t h e   p a s s i v e   p h a s e 
     i n s t . v a l u e   =   n e x t S n a p s h o t ; 
     i n s t . g e t S n a p s h o t   =   g e t S n a p s h o t ;   / /   S o m e t h i n g   m a y   h a v e   b e e n   m u t a t e d   i n   b e t w e e n   r e n d e r   a n d   c o m m i t .   T h i s   c o u l d 
     / /   h a v e   b e e n   i n   a n   e v e n t   t h a t   f i r e d   b e f o r e   t h e   p a s s i v e   e f f e c t s ,   o r   i t   c o u l d 
     / /   h a v e   b e e n   i n   a   l a y o u t   e f f e c t .   I n   t h a t   c a s e ,   w e   w o u l d   h a v e   u s e d   t h e   o l d 
     / /   s n a p s h o   a n d   g e t S n a p s h o t   v a l u e s   t o   b a i l   o u t .   W e   n e e d   t o   c h e c k   o n e   m o r e   t i m e . 
 
     i f   ( c h e c k I f S n a p s h o t C h a n g e d ( i n s t ) )   { 
         / /   F o r c e   a   r e - r e n d e r . 
         f o r c e S t o r e R e r e n d e r ( f i b e r ) ; 
     } 
 } 
 
 f u n c t i o n   s u b s c r i b e T o S t o r e ( f i b e r ,   i n s t ,   s u b s c r i b e )   { 
     v a r   h a n d l e S t o r e C h a n g e   =   f u n c t i o n   ( )   { 
         / /   T h e   s t o r e   c h a n g e d .   C h e c k   i f   t h e   s n a p s h o t   c h a n g e d   s i n c e   t h e   l a s t   t i m e   w e 
         / /   r e a d   f r o m   t h e   s t o r e . 
         i f   ( c h e c k I f S n a p s h o t C h a n g e d ( i n s t ) )   { 
             / /   F o r c e   a   r e - r e n d e r . 
             f o r c e S t o r e R e r e n d e r ( f i b e r ) ; 
         } 
     } ;   / /   S u b s c r i b e   t o   t h e   s t o r e   a n d   r e t u r n   a   c l e a n - u p   f u n c t i o n . 
 
 
     r e t u r n   s u b s c r i b e ( h a n d l e S t o r e C h a n g e ) ; 
 } 
 
 f u n c t i o n   c h e c k I f S n a p s h o t C h a n g e d ( i n s t )   { 
     v a r   l a t e s t G e t S n a p s h o t   =   i n s t . g e t S n a p s h o t ; 
     v a r   p r e v V a l u e   =   i n s t . v a l u e ; 
 
     t r y   { 
         v a r   n e x t V a l u e   =   l a t e s t G e t S n a p s h o t ( ) ; 
         r e t u r n   ! o b j e c t I s ( p r e v V a l u e ,   n e x t V a l u e ) ; 
     }   c a t c h   ( e r r o r )   { 
         r e t u r n   t r u e ; 
     } 
 } 
 
 f u n c t i o n   f o r c e S t o r e R e r e n d e r ( f i b e r )   { 
     s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   S y n c L a n e ,   N o T i m e s t a m p ) ; 
 } 
 
 f u n c t i o n   m o u n t S t a t e ( i n i t i a l S t a t e )   { 
     v a r   h o o k   =   m o u n t W o r k I n P r o g r e s s H o o k ( ) ; 
 
     i f   ( t y p e o f   i n i t i a l S t a t e   = = =   ' f u n c t i o n ' )   { 
         / /   $ F l o w F i x M e :   F l o w   d o e s n ' t   l i k e   m i x e d   t y p e s 
         i n i t i a l S t a t e   =   i n i t i a l S t a t e ( ) ; 
     } 
 
     h o o k . m e m o i z e d S t a t e   =   h o o k . b a s e S t a t e   =   i n i t i a l S t a t e ; 
     v a r   q u e u e   =   { 
         p e n d i n g :   n u l l , 
         i n t e r l e a v e d :   n u l l , 
         l a n e s :   N o L a n e s , 
         d i s p a t c h :   n u l l , 
         l a s t R e n d e r e d R e d u c e r :   b a s i c S t a t e R e d u c e r , 
         l a s t R e n d e r e d S t a t e :   i n i t i a l S t a t e 
     } ; 
     h o o k . q u e u e   =   q u e u e ; 
     v a r   d i s p a t c h   =   q u e u e . d i s p a t c h   =   d i s p a t c h S e t S t a t e . b i n d ( n u l l ,   c u r r e n t l y R e n d e r i n g F i b e r $ 1 ,   q u e u e ) ; 
     r e t u r n   [ h o o k . m e m o i z e d S t a t e ,   d i s p a t c h ] ; 
 } 
 
 f u n c t i o n   u p d a t e S t a t e ( i n i t i a l S t a t e )   { 
     r e t u r n   u p d a t e R e d u c e r ( b a s i c S t a t e R e d u c e r ) ; 
 } 
 
 f u n c t i o n   r e r e n d e r S t a t e ( i n i t i a l S t a t e )   { 
     r e t u r n   r e r e n d e r R e d u c e r ( b a s i c S t a t e R e d u c e r ) ; 
 } 
 
 f u n c t i o n   p u s h E f f e c t ( t a g ,   c r e a t e ,   d e s t r o y ,   d e p s )   { 
     v a r   e f f e c t   =   { 
         t a g :   t a g , 
         c r e a t e :   c r e a t e , 
         d e s t r o y :   d e s t r o y , 
         d e p s :   d e p s , 
         / /   C i r c u l a r 
         n e x t :   n u l l 
     } ; 
     v a r   c o m p o n e n t U p d a t e Q u e u e   =   c u r r e n t l y R e n d e r i n g F i b e r $ 1 . u p d a t e Q u e u e ; 
 
     i f   ( c o m p o n e n t U p d a t e Q u e u e   = = =   n u l l )   { 
         c o m p o n e n t U p d a t e Q u e u e   =   c r e a t e F u n c t i o n C o m p o n e n t U p d a t e Q u e u e ( ) ; 
         c u r r e n t l y R e n d e r i n g F i b e r $ 1 . u p d a t e Q u e u e   =   c o m p o n e n t U p d a t e Q u e u e ; 
         c o m p o n e n t U p d a t e Q u e u e . l a s t E f f e c t   =   e f f e c t . n e x t   =   e f f e c t ; 
     }   e l s e   { 
         v a r   l a s t E f f e c t   =   c o m p o n e n t U p d a t e Q u e u e . l a s t E f f e c t ; 
 
         i f   ( l a s t E f f e c t   = = =   n u l l )   { 
             c o m p o n e n t U p d a t e Q u e u e . l a s t E f f e c t   =   e f f e c t . n e x t   =   e f f e c t ; 
         }   e l s e   { 
             v a r   f i r s t E f f e c t   =   l a s t E f f e c t . n e x t ; 
             l a s t E f f e c t . n e x t   =   e f f e c t ; 
             e f f e c t . n e x t   =   f i r s t E f f e c t ; 
             c o m p o n e n t U p d a t e Q u e u e . l a s t E f f e c t   =   e f f e c t ; 
         } 
     } 
 
     r e t u r n   e f f e c t ; 
 } 
 
 f u n c t i o n   m o u n t R e f ( i n i t i a l V a l u e )   { 
     v a r   h o o k   =   m o u n t W o r k I n P r o g r e s s H o o k ( ) ; 
 
     { 
         v a r   _ r e f 2   =   { 
             c u r r e n t :   i n i t i a l V a l u e 
         } ; 
         h o o k . m e m o i z e d S t a t e   =   _ r e f 2 ; 
         r e t u r n   _ r e f 2 ; 
     } 
 } 
 
 f u n c t i o n   u p d a t e R e f ( i n i t i a l V a l u e )   { 
     v a r   h o o k   =   u p d a t e W o r k I n P r o g r e s s H o o k ( ) ; 
     r e t u r n   h o o k . m e m o i z e d S t a t e ; 
 } 
 
 f u n c t i o n   m o u n t E f f e c t I m p l ( f i b e r F l a g s ,   h o o k F l a g s ,   c r e a t e ,   d e p s )   { 
     v a r   h o o k   =   m o u n t W o r k I n P r o g r e s s H o o k ( ) ; 
     v a r   n e x t D e p s   =   d e p s   = = =   u n d e f i n e d   ?   n u l l   :   d e p s ; 
     c u r r e n t l y R e n d e r i n g F i b e r $ 1 . f l a g s   | =   f i b e r F l a g s ; 
     h o o k . m e m o i z e d S t a t e   =   p u s h E f f e c t ( H a s E f f e c t   |   h o o k F l a g s ,   c r e a t e ,   u n d e f i n e d ,   n e x t D e p s ) ; 
 } 
 
 f u n c t i o n   u p d a t e E f f e c t I m p l ( f i b e r F l a g s ,   h o o k F l a g s ,   c r e a t e ,   d e p s )   { 
     v a r   h o o k   =   u p d a t e W o r k I n P r o g r e s s H o o k ( ) ; 
     v a r   n e x t D e p s   =   d e p s   = = =   u n d e f i n e d   ?   n u l l   :   d e p s ; 
     v a r   d e s t r o y   =   u n d e f i n e d ; 
 
     i f   ( c u r r e n t H o o k   ! = =   n u l l )   { 
         v a r   p r e v E f f e c t   =   c u r r e n t H o o k . m e m o i z e d S t a t e ; 
         d e s t r o y   =   p r e v E f f e c t . d e s t r o y ; 
 
         i f   ( n e x t D e p s   ! = =   n u l l )   { 
             v a r   p r e v D e p s   =   p r e v E f f e c t . d e p s ; 
 
             i f   ( a r e H o o k I n p u t s E q u a l ( n e x t D e p s ,   p r e v D e p s ) )   { 
                 h o o k . m e m o i z e d S t a t e   =   p u s h E f f e c t ( h o o k F l a g s ,   c r e a t e ,   d e s t r o y ,   n e x t D e p s ) ; 
                 r e t u r n ; 
             } 
         } 
     } 
 
     c u r r e n t l y R e n d e r i n g F i b e r $ 1 . f l a g s   | =   f i b e r F l a g s ; 
     h o o k . m e m o i z e d S t a t e   =   p u s h E f f e c t ( H a s E f f e c t   |   h o o k F l a g s ,   c r e a t e ,   d e s t r o y ,   n e x t D e p s ) ; 
 } 
 
 f u n c t i o n   m o u n t E f f e c t ( c r e a t e ,   d e p s )   { 
     i f   (   ( c u r r e n t l y R e n d e r i n g F i b e r $ 1 . m o d e   &   S t r i c t E f f e c t s M o d e )   ! = =   N o M o d e )   { 
         r e t u r n   m o u n t E f f e c t I m p l ( M o u n t P a s s i v e D e v   |   P a s s i v e   |   P a s s i v e S t a t i c ,   P a s s i v e $ 1 ,   c r e a t e ,   d e p s ) ; 
     }   e l s e   { 
         r e t u r n   m o u n t E f f e c t I m p l ( P a s s i v e   |   P a s s i v e S t a t i c ,   P a s s i v e $ 1 ,   c r e a t e ,   d e p s ) ; 
     } 
 } 
 
 f u n c t i o n   u p d a t e E f f e c t ( c r e a t e ,   d e p s )   { 
     r e t u r n   u p d a t e E f f e c t I m p l ( P a s s i v e ,   P a s s i v e $ 1 ,   c r e a t e ,   d e p s ) ; 
 } 
 
 f u n c t i o n   m o u n t I n s e r t i o n E f f e c t ( c r e a t e ,   d e p s )   { 
     r e t u r n   m o u n t E f f e c t I m p l ( U p d a t e ,   I n s e r t i o n ,   c r e a t e ,   d e p s ) ; 
 } 
 
 f u n c t i o n   u p d a t e I n s e r t i o n E f f e c t ( c r e a t e ,   d e p s )   { 
     r e t u r n   u p d a t e E f f e c t I m p l ( U p d a t e ,   I n s e r t i o n ,   c r e a t e ,   d e p s ) ; 
 } 
 
 f u n c t i o n   m o u n t L a y o u t E f f e c t ( c r e a t e ,   d e p s )   { 
     v a r   f i b e r F l a g s   =   U p d a t e ; 
 
     { 
         f i b e r F l a g s   | =   L a y o u t S t a t i c ; 
     } 
 
     i f   (   ( c u r r e n t l y R e n d e r i n g F i b e r $ 1 . m o d e   &   S t r i c t E f f e c t s M o d e )   ! = =   N o M o d e )   { 
         f i b e r F l a g s   | =   M o u n t L a y o u t D e v ; 
     } 
 
     r e t u r n   m o u n t E f f e c t I m p l ( f i b e r F l a g s ,   L a y o u t ,   c r e a t e ,   d e p s ) ; 
 } 
 
 f u n c t i o n   u p d a t e L a y o u t E f f e c t ( c r e a t e ,   d e p s )   { 
     r e t u r n   u p d a t e E f f e c t I m p l ( U p d a t e ,   L a y o u t ,   c r e a t e ,   d e p s ) ; 
 } 
 
 f u n c t i o n   i m p e r a t i v e H a n d l e E f f e c t ( c r e a t e ,   r e f )   { 
     i f   ( t y p e o f   r e f   = = =   ' f u n c t i o n ' )   { 
         v a r   r e f C a l l b a c k   =   r e f ; 
 
         v a r   _ i n s t   =   c r e a t e ( ) ; 
 
         r e f C a l l b a c k ( _ i n s t ) ; 
         r e t u r n   f u n c t i o n   ( )   { 
             r e f C a l l b a c k ( n u l l ) ; 
         } ; 
     }   e l s e   i f   ( r e f   ! = =   n u l l   & &   r e f   ! = =   u n d e f i n e d )   { 
         v a r   r e f O b j e c t   =   r e f ; 
 
         { 
             i f   ( ! r e f O b j e c t . h a s O w n P r o p e r t y ( ' c u r r e n t ' ) )   { 
                 e r r o r ( ' E x p e c t e d   u s e I m p e r a t i v e H a n d l e ( )   f i r s t   a r g u m e n t   t o   e i t h e r   b e   a   '   +   ' r e f   c a l l b a c k   o r   R e a c t . c r e a t e R e f ( )   o b j e c t .   I n s t e a d   r e c e i v e d :   % s . ' ,   ' a n   o b j e c t   w i t h   k e y s   { '   +   O b j e c t . k e y s ( r e f O b j e c t ) . j o i n ( ' ,   ' )   +   ' } ' ) ; 
             } 
         } 
 
         v a r   _ i n s t 2   =   c r e a t e ( ) ; 
 
         r e f O b j e c t . c u r r e n t   =   _ i n s t 2 ; 
         r e t u r n   f u n c t i o n   ( )   { 
             r e f O b j e c t . c u r r e n t   =   n u l l ; 
         } ; 
     } 
 } 
 
 f u n c t i o n   m o u n t I m p e r a t i v e H a n d l e ( r e f ,   c r e a t e ,   d e p s )   { 
     { 
         i f   ( t y p e o f   c r e a t e   ! = =   ' f u n c t i o n ' )   { 
             e r r o r ( ' E x p e c t e d   u s e I m p e r a t i v e H a n d l e ( )   s e c o n d   a r g u m e n t   t o   b e   a   f u n c t i o n   '   +   ' t h a t   c r e a t e s   a   h a n d l e .   I n s t e a d   r e c e i v e d :   % s . ' ,   c r e a t e   ! = =   n u l l   ?   t y p e o f   c r e a t e   :   ' n u l l ' ) ; 
         } 
     }   / /   T O D O :   I f   d e p s   a r e   p r o v i d e d ,   s h o u l d   w e   s k i p   c o m p a r i n g   t h e   r e f   i t s e l f ? 
 
 
     v a r   e f f e c t D e p s   =   d e p s   ! = =   n u l l   & &   d e p s   ! = =   u n d e f i n e d   ?   d e p s . c o n c a t ( [ r e f ] )   :   n u l l ; 
     v a r   f i b e r F l a g s   =   U p d a t e ; 
 
     { 
         f i b e r F l a g s   | =   L a y o u t S t a t i c ; 
     } 
 
     i f   (   ( c u r r e n t l y R e n d e r i n g F i b e r $ 1 . m o d e   &   S t r i c t E f f e c t s M o d e )   ! = =   N o M o d e )   { 
         f i b e r F l a g s   | =   M o u n t L a y o u t D e v ; 
     } 
 
     r e t u r n   m o u n t E f f e c t I m p l ( f i b e r F l a g s ,   L a y o u t ,   i m p e r a t i v e H a n d l e E f f e c t . b i n d ( n u l l ,   c r e a t e ,   r e f ) ,   e f f e c t D e p s ) ; 
 } 
 
 f u n c t i o n   u p d a t e I m p e r a t i v e H a n d l e ( r e f ,   c r e a t e ,   d e p s )   { 
     { 
         i f   ( t y p e o f   c r e a t e   ! = =   ' f u n c t i o n ' )   { 
             e r r o r ( ' E x p e c t e d   u s e I m p e r a t i v e H a n d l e ( )   s e c o n d   a r g u m e n t   t o   b e   a   f u n c t i o n   '   +   ' t h a t   c r e a t e s   a   h a n d l e .   I n s t e a d   r e c e i v e d :   % s . ' ,   c r e a t e   ! = =   n u l l   ?   t y p e o f   c r e a t e   :   ' n u l l ' ) ; 
         } 
     }   / /   T O D O :   I f   d e p s   a r e   p r o v i d e d ,   s h o u l d   w e   s k i p   c o m p a r i n g   t h e   r e f   i t s e l f ? 
 
 
     v a r   e f f e c t D e p s   =   d e p s   ! = =   n u l l   & &   d e p s   ! = =   u n d e f i n e d   ?   d e p s . c o n c a t ( [ r e f ] )   :   n u l l ; 
     r e t u r n   u p d a t e E f f e c t I m p l ( U p d a t e ,   L a y o u t ,   i m p e r a t i v e H a n d l e E f f e c t . b i n d ( n u l l ,   c r e a t e ,   r e f ) ,   e f f e c t D e p s ) ; 
 } 
 
 f u n c t i o n   m o u n t D e b u g V a l u e ( v a l u e ,   f o r m a t t e r F n )   { / /   T h i s   h o o k   i s   n o r m a l l y   a   n o - o p . 
     / /   T h e   r e a c t - d e b u g - h o o k s   p a c k a g e   i n j e c t s   i t s   o w n   i m p l e m e n t a t i o n 
     / /   s o   t h a t   e . g .   D e v T o o l s   c a n   d i s p l a y   c u s t o m   h o o k   v a l u e s . 
 } 
 
 v a r   u p d a t e D e b u g V a l u e   =   m o u n t D e b u g V a l u e ; 
 
 f u n c t i o n   m o u n t C a l l b a c k ( c a l l b a c k ,   d e p s )   { 
     v a r   h o o k   =   m o u n t W o r k I n P r o g r e s s H o o k ( ) ; 
     v a r   n e x t D e p s   =   d e p s   = = =   u n d e f i n e d   ?   n u l l   :   d e p s ; 
     h o o k . m e m o i z e d S t a t e   =   [ c a l l b a c k ,   n e x t D e p s ] ; 
     r e t u r n   c a l l b a c k ; 
 } 
 
 f u n c t i o n   u p d a t e C a l l b a c k ( c a l l b a c k ,   d e p s )   { 
     v a r   h o o k   =   u p d a t e W o r k I n P r o g r e s s H o o k ( ) ; 
     v a r   n e x t D e p s   =   d e p s   = = =   u n d e f i n e d   ?   n u l l   :   d e p s ; 
     v a r   p r e v S t a t e   =   h o o k . m e m o i z e d S t a t e ; 
 
     i f   ( p r e v S t a t e   ! = =   n u l l )   { 
         i f   ( n e x t D e p s   ! = =   n u l l )   { 
             v a r   p r e v D e p s   =   p r e v S t a t e [ 1 ] ; 
 
             i f   ( a r e H o o k I n p u t s E q u a l ( n e x t D e p s ,   p r e v D e p s ) )   { 
                 r e t u r n   p r e v S t a t e [ 0 ] ; 
             } 
         } 
     } 
 
     h o o k . m e m o i z e d S t a t e   =   [ c a l l b a c k ,   n e x t D e p s ] ; 
     r e t u r n   c a l l b a c k ; 
 } 
 
 f u n c t i o n   m o u n t M e m o ( n e x t C r e a t e ,   d e p s )   { 
     v a r   h o o k   =   m o u n t W o r k I n P r o g r e s s H o o k ( ) ; 
     v a r   n e x t D e p s   =   d e p s   = = =   u n d e f i n e d   ?   n u l l   :   d e p s ; 
     v a r   n e x t V a l u e   =   n e x t C r e a t e ( ) ; 
     h o o k . m e m o i z e d S t a t e   =   [ n e x t V a l u e ,   n e x t D e p s ] ; 
     r e t u r n   n e x t V a l u e ; 
 } 
 
 f u n c t i o n   u p d a t e M e m o ( n e x t C r e a t e ,   d e p s )   { 
     v a r   h o o k   =   u p d a t e W o r k I n P r o g r e s s H o o k ( ) ; 
     v a r   n e x t D e p s   =   d e p s   = = =   u n d e f i n e d   ?   n u l l   :   d e p s ; 
     v a r   p r e v S t a t e   =   h o o k . m e m o i z e d S t a t e ; 
 
     i f   ( p r e v S t a t e   ! = =   n u l l )   { 
         / /   A s s u m e   t h e s e   a r e   d e f i n e d .   I f   t h e y ' r e   n o t ,   a r e H o o k I n p u t s E q u a l   w i l l   w a r n . 
         i f   ( n e x t D e p s   ! = =   n u l l )   { 
             v a r   p r e v D e p s   =   p r e v S t a t e [ 1 ] ; 
 
             i f   ( a r e H o o k I n p u t s E q u a l ( n e x t D e p s ,   p r e v D e p s ) )   { 
                 r e t u r n   p r e v S t a t e [ 0 ] ; 
             } 
         } 
     } 
 
     v a r   n e x t V a l u e   =   n e x t C r e a t e ( ) ; 
     h o o k . m e m o i z e d S t a t e   =   [ n e x t V a l u e ,   n e x t D e p s ] ; 
     r e t u r n   n e x t V a l u e ; 
 } 
 
 f u n c t i o n   m o u n t D e f e r r e d V a l u e ( v a l u e )   { 
     v a r   h o o k   =   m o u n t W o r k I n P r o g r e s s H o o k ( ) ; 
     h o o k . m e m o i z e d S t a t e   =   v a l u e ; 
     r e t u r n   v a l u e ; 
 } 
 
 f u n c t i o n   u p d a t e D e f e r r e d V a l u e ( v a l u e )   { 
     v a r   h o o k   =   u p d a t e W o r k I n P r o g r e s s H o o k ( ) ; 
     v a r   r e s o l v e d C u r r e n t H o o k   =   c u r r e n t H o o k ; 
     v a r   p r e v V a l u e   =   r e s o l v e d C u r r e n t H o o k . m e m o i z e d S t a t e ; 
     r e t u r n   u p d a t e D e f e r r e d V a l u e I m p l ( h o o k ,   p r e v V a l u e ,   v a l u e ) ; 
 } 
 
 f u n c t i o n   r e r e n d e r D e f e r r e d V a l u e ( v a l u e )   { 
     v a r   h o o k   =   u p d a t e W o r k I n P r o g r e s s H o o k ( ) ; 
 
     i f   ( c u r r e n t H o o k   = = =   n u l l )   { 
         / /   T h i s   i s   a   r e r e n d e r   d u r i n g   a   m o u n t . 
         h o o k . m e m o i z e d S t a t e   =   v a l u e ; 
         r e t u r n   v a l u e ; 
     }   e l s e   { 
         / /   T h i s   i s   a   r e r e n d e r   d u r i n g   a n   u p d a t e . 
         v a r   p r e v V a l u e   =   c u r r e n t H o o k . m e m o i z e d S t a t e ; 
         r e t u r n   u p d a t e D e f e r r e d V a l u e I m p l ( h o o k ,   p r e v V a l u e ,   v a l u e ) ; 
     } 
 } 
 
 f u n c t i o n   u p d a t e D e f e r r e d V a l u e I m p l ( h o o k ,   p r e v V a l u e ,   v a l u e )   { 
     v a r   s h o u l d D e f e r V a l u e   =   ! i n c l u d e s O n l y N o n U r g e n t L a n e s ( r e n d e r L a n e s ) ; 
 
     i f   ( s h o u l d D e f e r V a l u e )   { 
         / /   T h i s   i s   a n   u r g e n t   u p d a t e .   I f   t h e   v a l u e   h a s   c h a n g e d ,   k e e p   u s i n g   t h e 
         / /   p r e v i o u s   v a l u e   a n d   s p a w n   a   d e f e r r e d   r e n d e r   t o   u p d a t e   i t   l a t e r . 
         i f   ( ! o b j e c t I s ( v a l u e ,   p r e v V a l u e ) )   { 
             / /   S c h e d u l e   a   d e f e r r e d   r e n d e r 
             v a r   d e f e r r e d L a n e   =   c l a i m N e x t T r a n s i t i o n L a n e ( ) ; 
             c u r r e n t l y R e n d e r i n g F i b e r $ 1 . l a n e s   =   m e r g e L a n e s ( c u r r e n t l y R e n d e r i n g F i b e r $ 1 . l a n e s ,   d e f e r r e d L a n e ) ; 
             m a r k S k i p p e d U p d a t e L a n e s ( d e f e r r e d L a n e ) ;   / /   S e t   t h i s   t o   t r u e   t o   i n d i c a t e   t h a t   t h e   r e n d e r e d   v a l u e   i s   i n c o n s i s t e n t 
             / /   f r o m   t h e   l a t e s t   v a l u e .   T h e   n a m e   " b a s e S t a t e "   d o e s n ' t   r e a l l y   m a t c h   h o w   w e 
             / /   u s e   i t   b e c a u s e   w e ' r e   r e u s i n g   a   s t a t e   h o o k   f i e l d   i n s t e a d   o f   c r e a t i n g   a 
             / /   n e w   o n e . 
 
             h o o k . b a s e S t a t e   =   t r u e ; 
         }   / /   R e u s e   t h e   p r e v i o u s   v a l u e 
 
 
         r e t u r n   p r e v V a l u e ; 
     }   e l s e   { 
         / /   T h i s   i s   n o t   a n   u r g e n t   u p d a t e ,   s o   w e   c a n   u s e   t h e   l a t e s t   v a l u e   r e g a r d l e s s 
         / /   o f   w h a t   i t   i s .   N o   n e e d   t o   d e f e r   i t . 
         / /   H o w e v e r ,   i f   w e ' r e   c u r r e n t l y   i n s i d e   a   s p a w n e d   r e n d e r ,   t h e n   w e   n e e d   t o   m a r k 
         / /   t h i s   a s   a n   u p d a t e   t o   p r e v e n t   t h e   f i b e r   f r o m   b a i l i n g   o u t . 
         / / 
         / /   ` b a s e S t a t e `   i s   t r u e   w h e n   t h e   c u r r e n t   v a l u e   i s   d i f f e r e n t   f r o m   t h e   r e n d e r e d 
         / /   v a l u e .   T h e   n a m e   d o e s n ' t   r e a l l y   m a t c h   h o w   w e   u s e   i t   b e c a u s e   w e ' r e   r e u s i n g 
         / /   a   s t a t e   h o o k   f i e l d   i n s t e a d   o f   c r e a t i n g   a   n e w   o n e . 
         i f   ( h o o k . b a s e S t a t e )   { 
             / /   F l i p   t h i s   b a c k   t o   f a l s e . 
             h o o k . b a s e S t a t e   =   f a l s e ; 
             m a r k W o r k I n P r o g r e s s R e c e i v e d U p d a t e ( ) ; 
         } 
 
         h o o k . m e m o i z e d S t a t e   =   v a l u e ; 
         r e t u r n   v a l u e ; 
     } 
 } 
 
 f u n c t i o n   s t a r t T r a n s i t i o n ( s e t P e n d i n g ,   c a l l b a c k ,   o p t i o n s )   { 
     v a r   p r e v i o u s P r i o r i t y   =   g e t C u r r e n t U p d a t e P r i o r i t y ( ) ; 
     s e t C u r r e n t U p d a t e P r i o r i t y ( h i g h e r E v e n t P r i o r i t y ( p r e v i o u s P r i o r i t y ,   C o n t i n u o u s E v e n t P r i o r i t y ) ) ; 
     s e t P e n d i n g ( t r u e ) ; 
     v a r   p r e v T r a n s i t i o n   =   R e a c t C u r r e n t B a t c h C o n f i g $ 2 . t r a n s i t i o n ; 
     R e a c t C u r r e n t B a t c h C o n f i g $ 2 . t r a n s i t i o n   =   { } ; 
     v a r   c u r r e n t T r a n s i t i o n   =   R e a c t C u r r e n t B a t c h C o n f i g $ 2 . t r a n s i t i o n ; 
 
     { 
         R e a c t C u r r e n t B a t c h C o n f i g $ 2 . t r a n s i t i o n . _ u p d a t e d F i b e r s   =   n e w   S e t ( ) ; 
     } 
 
     t r y   { 
         s e t P e n d i n g ( f a l s e ) ; 
         c a l l b a c k ( ) ; 
     }   f i n a l l y   { 
         s e t C u r r e n t U p d a t e P r i o r i t y ( p r e v i o u s P r i o r i t y ) ; 
         R e a c t C u r r e n t B a t c h C o n f i g $ 2 . t r a n s i t i o n   =   p r e v T r a n s i t i o n ; 
 
         { 
             i f   ( p r e v T r a n s i t i o n   = = =   n u l l   & &   c u r r e n t T r a n s i t i o n . _ u p d a t e d F i b e r s )   { 
                 v a r   u p d a t e d F i b e r s C o u n t   =   c u r r e n t T r a n s i t i o n . _ u p d a t e d F i b e r s . s i z e ; 
 
                 i f   ( u p d a t e d F i b e r s C o u n t   >   1 0 )   { 
                     w a r n ( ' D e t e c t e d   a   l a r g e   n u m b e r   o f   u p d a t e s   i n s i d e   s t a r t T r a n s i t i o n .   '   +   ' I f   t h i s   i s   d u e   t o   a   s u b s c r i p t i o n   p l e a s e   r e - w r i t e   i t   t o   u s e   R e a c t   p r o v i d e d   h o o k s .   '   +   ' O t h e r w i s e   c o n c u r r e n t   m o d e   g u a r a n t e e s   a r e   o f f   t h e   t a b l e . ' ) ; 
                 } 
 
                 c u r r e n t T r a n s i t i o n . _ u p d a t e d F i b e r s . c l e a r ( ) ; 
             } 
         } 
     } 
 } 
 
 f u n c t i o n   m o u n t T r a n s i t i o n ( )   { 
     v a r   _ m o u n t S t a t e   =   m o u n t S t a t e ( f a l s e ) , 
             i s P e n d i n g   =   _ m o u n t S t a t e [ 0 ] , 
             s e t P e n d i n g   =   _ m o u n t S t a t e [ 1 ] ;   / /   T h e   ` s t a r t `   m e t h o d   n e v e r   c h a n g e s . 
 
 
     v a r   s t a r t   =   s t a r t T r a n s i t i o n . b i n d ( n u l l ,   s e t P e n d i n g ) ; 
     v a r   h o o k   =   m o u n t W o r k I n P r o g r e s s H o o k ( ) ; 
     h o o k . m e m o i z e d S t a t e   =   s t a r t ; 
     r e t u r n   [ i s P e n d i n g ,   s t a r t ] ; 
 } 
 
 f u n c t i o n   u p d a t e T r a n s i t i o n ( )   { 
     v a r   _ u p d a t e S t a t e   =   u p d a t e S t a t e ( ) , 
             i s P e n d i n g   =   _ u p d a t e S t a t e [ 0 ] ; 
 
     v a r   h o o k   =   u p d a t e W o r k I n P r o g r e s s H o o k ( ) ; 
     v a r   s t a r t   =   h o o k . m e m o i z e d S t a t e ; 
     r e t u r n   [ i s P e n d i n g ,   s t a r t ] ; 
 } 
 
 f u n c t i o n   r e r e n d e r T r a n s i t i o n ( )   { 
     v a r   _ r e r e n d e r S t a t e   =   r e r e n d e r S t a t e ( ) , 
             i s P e n d i n g   =   _ r e r e n d e r S t a t e [ 0 ] ; 
 
     v a r   h o o k   =   u p d a t e W o r k I n P r o g r e s s H o o k ( ) ; 
     v a r   s t a r t   =   h o o k . m e m o i z e d S t a t e ; 
     r e t u r n   [ i s P e n d i n g ,   s t a r t ] ; 
 } 
 
 v a r   i s U p d a t i n g O p a q u e V a l u e I n R e n d e r P h a s e   =   f a l s e ; 
 f u n c t i o n   g e t I s U p d a t i n g O p a q u e V a l u e I n R e n d e r P h a s e I n D E V ( )   { 
     { 
         r e t u r n   i s U p d a t i n g O p a q u e V a l u e I n R e n d e r P h a s e ; 
     } 
 } 
 
 f u n c t i o n   m o u n t I d ( )   { 
     v a r   h o o k   =   m o u n t W o r k I n P r o g r e s s H o o k ( ) ; 
     v a r   r o o t   =   g e t W o r k I n P r o g r e s s R o o t ( ) ;   / /   T O D O :   I n   F i z z ,   i d   g e n e r a t i o n   i s   s p e c i f i c   t o   e a c h   s e r v e r   c o n f i g .   M a y b e   w e 
     / /   s h o u l d   d o   t h i s   i n   F i b e r ,   t o o ?   D e f e r r i n g   t h i s   d e c i s i o n   f o r   n o w   b e c a u s e 
     / /   t h e r e ' s   n o   o t h e r   p l a c e   t o   s t o r e   t h e   p r e f i x   e x c e p t   f o r   a n   i n t e r n a l   f i e l d   o n 
     / /   t h e   p u b l i c   c r e a t e R o o t   o b j e c t ,   w h i c h   t h e   f i b e r   t r e e   d o e s   n o t   c u r r e n t l y   h a v e 
     / /   a   r e f e r e n c e   t o . 
 
     v a r   i d e n t i f i e r P r e f i x   =   r o o t . i d e n t i f i e r P r e f i x ; 
     v a r   i d ; 
 
     i f   ( g e t I s H y d r a t i n g ( ) )   { 
         v a r   t r e e I d   =   g e t T r e e I d ( ) ;   / /   U s e   a   c a p t i a l   R   p r e f i x   f o r   s e r v e r - g e n e r a t e d   i d s . 
 
         i d   =   ' : '   +   i d e n t i f i e r P r e f i x   +   ' R '   +   t r e e I d ;   / /   U n l e s s   t h i s   i s   t h e   f i r s t   i d   a t   t h i s   l e v e l ,   a p p e n d   a   n u m b e r   a t   t h e   e n d 
         / /   t h a t   r e p r e s e n t s   t h e   p o s i t i o n   o f   t h i s   u s e I d   h o o k   a m o n g   a l l   t h e   u s e I d 
         / /   h o o k s   f o r   t h i s   f i b e r . 
 
         v a r   l o c a l I d   =   l o c a l I d C o u n t e r + + ; 
 
         i f   ( l o c a l I d   >   0 )   { 
             i d   + =   ' H '   +   l o c a l I d . t o S t r i n g ( 3 2 ) ; 
         } 
 
         i d   + =   ' : ' ; 
     }   e l s e   { 
         / /   U s e   a   l o w e r c a s e   r   p r e f i x   f o r   c l i e n t - g e n e r a t e d   i d s . 
         v a r   g l o b a l C l i e n t I d   =   g l o b a l C l i e n t I d C o u n t e r + + ; 
         i d   =   ' : '   +   i d e n t i f i e r P r e f i x   +   ' r '   +   g l o b a l C l i e n t I d . t o S t r i n g ( 3 2 )   +   ' : ' ; 
     } 
 
     h o o k . m e m o i z e d S t a t e   =   i d ; 
     r e t u r n   i d ; 
 } 
 
 f u n c t i o n   u p d a t e I d ( )   { 
     v a r   h o o k   =   u p d a t e W o r k I n P r o g r e s s H o o k ( ) ; 
     v a r   i d   =   h o o k . m e m o i z e d S t a t e ; 
     r e t u r n   i d ; 
 } 
 
 f u n c t i o n   d i s p a t c h R e d u c e r A c t i o n ( f i b e r ,   q u e u e ,   a c t i o n )   { 
     { 
         i f   ( t y p e o f   a r g u m e n t s [ 3 ]   = = =   ' f u n c t i o n ' )   { 
             e r r o r ( " S t a t e   u p d a t e s   f r o m   t h e   u s e S t a t e ( )   a n d   u s e R e d u c e r ( )   H o o k s   d o n ' t   s u p p o r t   t h e   "   +   ' s e c o n d   c a l l b a c k   a r g u m e n t .   T o   e x e c u t e   a   s i d e   e f f e c t   a f t e r   '   +   ' r e n d e r i n g ,   d e c l a r e   i t   i n   t h e   c o m p o n e n t   b o d y   w i t h   u s e E f f e c t ( ) . ' ) ; 
         } 
     } 
 
     v a r   l a n e   =   r e q u e s t U p d a t e L a n e ( f i b e r ) ; 
     v a r   u p d a t e   =   { 
         l a n e :   l a n e , 
         a c t i o n :   a c t i o n , 
         h a s E a g e r S t a t e :   f a l s e , 
         e a g e r S t a t e :   n u l l , 
         n e x t :   n u l l 
     } ; 
 
     i f   ( i s R e n d e r P h a s e U p d a t e ( f i b e r ) )   { 
         e n q u e u e R e n d e r P h a s e U p d a t e ( q u e u e ,   u p d a t e ) ; 
     }   e l s e   { 
         e n q u e u e U p d a t e $ 1 ( f i b e r ,   q u e u e ,   u p d a t e ) ; 
         v a r   e v e n t T i m e   =   r e q u e s t E v e n t T i m e ( ) ; 
         v a r   r o o t   =   s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   l a n e ,   e v e n t T i m e ) ; 
 
         i f   ( r o o t   ! = =   n u l l )   { 
             e n t a n g l e T r a n s i t i o n U p d a t e ( r o o t ,   q u e u e ,   l a n e ) ; 
         } 
     } 
 
     m a r k U p d a t e I n D e v T o o l s ( f i b e r ,   l a n e ) ; 
 } 
 
 f u n c t i o n   d i s p a t c h S e t S t a t e ( f i b e r ,   q u e u e ,   a c t i o n )   { 
     { 
         i f   ( t y p e o f   a r g u m e n t s [ 3 ]   = = =   ' f u n c t i o n ' )   { 
             e r r o r ( " S t a t e   u p d a t e s   f r o m   t h e   u s e S t a t e ( )   a n d   u s e R e d u c e r ( )   H o o k s   d o n ' t   s u p p o r t   t h e   "   +   ' s e c o n d   c a l l b a c k   a r g u m e n t .   T o   e x e c u t e   a   s i d e   e f f e c t   a f t e r   '   +   ' r e n d e r i n g ,   d e c l a r e   i t   i n   t h e   c o m p o n e n t   b o d y   w i t h   u s e E f f e c t ( ) . ' ) ; 
         } 
     } 
 
     v a r   l a n e   =   r e q u e s t U p d a t e L a n e ( f i b e r ) ; 
     v a r   u p d a t e   =   { 
         l a n e :   l a n e , 
         a c t i o n :   a c t i o n , 
         h a s E a g e r S t a t e :   f a l s e , 
         e a g e r S t a t e :   n u l l , 
         n e x t :   n u l l 
     } ; 
 
     i f   ( i s R e n d e r P h a s e U p d a t e ( f i b e r ) )   { 
         e n q u e u e R e n d e r P h a s e U p d a t e ( q u e u e ,   u p d a t e ) ; 
     }   e l s e   { 
         e n q u e u e U p d a t e $ 1 ( f i b e r ,   q u e u e ,   u p d a t e ) ; 
         v a r   a l t e r n a t e   =   f i b e r . a l t e r n a t e ; 
 
         i f   ( f i b e r . l a n e s   = = =   N o L a n e s   & &   ( a l t e r n a t e   = = =   n u l l   | |   a l t e r n a t e . l a n e s   = = =   N o L a n e s ) )   { 
             / /   T h e   q u e u e   i s   c u r r e n t l y   e m p t y ,   w h i c h   m e a n s   w e   c a n   e a g e r l y   c o m p u t e   t h e 
             / /   n e x t   s t a t e   b e f o r e   e n t e r i n g   t h e   r e n d e r   p h a s e .   I f   t h e   n e w   s t a t e   i s   t h e 
             / /   s a m e   a s   t h e   c u r r e n t   s t a t e ,   w e   m a y   b e   a b l e   t o   b a i l   o u t   e n t i r e l y . 
             v a r   l a s t R e n d e r e d R e d u c e r   =   q u e u e . l a s t R e n d e r e d R e d u c e r ; 
 
             i f   ( l a s t R e n d e r e d R e d u c e r   ! = =   n u l l )   { 
                 v a r   p r e v D i s p a t c h e r ; 
 
                 { 
                     p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
                     R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n U p d a t e I n D E V ; 
                 } 
 
                 t r y   { 
                     v a r   c u r r e n t S t a t e   =   q u e u e . l a s t R e n d e r e d S t a t e ; 
                     v a r   e a g e r S t a t e   =   l a s t R e n d e r e d R e d u c e r ( c u r r e n t S t a t e ,   a c t i o n ) ;   / /   S t a s h   t h e   e a g e r l y   c o m p u t e d   s t a t e ,   a n d   t h e   r e d u c e r   u s e d   t o   c o m p u t e 
                     / /   i t ,   o n   t h e   u p d a t e   o b j e c t .   I f   t h e   r e d u c e r   h a s n ' t   c h a n g e d   b y   t h e 
                     / /   t i m e   w e   e n t e r   t h e   r e n d e r   p h a s e ,   t h e n   t h e   e a g e r   s t a t e   c a n   b e   u s e d 
                     / /   w i t h o u t   c a l l i n g   t h e   r e d u c e r   a g a i n . 
 
                     u p d a t e . h a s E a g e r S t a t e   =   t r u e ; 
                     u p d a t e . e a g e r S t a t e   =   e a g e r S t a t e ; 
 
                     i f   ( o b j e c t I s ( e a g e r S t a t e ,   c u r r e n t S t a t e ) )   { 
                         / /   F a s t   p a t h .   W e   c a n   b a i l   o u t   w i t h o u t   s c h e d u l i n g   R e a c t   t o   r e - r e n d e r . 
                         / /   I t ' s   s t i l l   p o s s i b l e   t h a t   w e ' l l   n e e d   t o   r e b a s e   t h i s   u p d a t e   l a t e r , 
                         / /   i f   t h e   c o m p o n e n t   r e - r e n d e r s   f o r   a   d i f f e r e n t   r e a s o n   a n d   b y   t h a t 
                         / /   t i m e   t h e   r e d u c e r   h a s   c h a n g e d . 
                         r e t u r n ; 
                     } 
                 }   c a t c h   ( e r r o r )   { / /   S u p p r e s s   t h e   e r r o r .   I t   w i l l   t h r o w   a g a i n   i n   t h e   r e n d e r   p h a s e . 
                 }   f i n a l l y   { 
                     { 
                         R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
                     } 
                 } 
             } 
         } 
 
         v a r   e v e n t T i m e   =   r e q u e s t E v e n t T i m e ( ) ; 
         v a r   r o o t   =   s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   l a n e ,   e v e n t T i m e ) ; 
 
         i f   ( r o o t   ! = =   n u l l )   { 
             e n t a n g l e T r a n s i t i o n U p d a t e ( r o o t ,   q u e u e ,   l a n e ) ; 
         } 
     } 
 
     m a r k U p d a t e I n D e v T o o l s ( f i b e r ,   l a n e ) ; 
 } 
 
 f u n c t i o n   i s R e n d e r P h a s e U p d a t e ( f i b e r )   { 
     v a r   a l t e r n a t e   =   f i b e r . a l t e r n a t e ; 
     r e t u r n   f i b e r   = = =   c u r r e n t l y R e n d e r i n g F i b e r $ 1   | |   a l t e r n a t e   ! = =   n u l l   & &   a l t e r n a t e   = = =   c u r r e n t l y R e n d e r i n g F i b e r $ 1 ; 
 } 
 
 f u n c t i o n   e n q u e u e R e n d e r P h a s e U p d a t e ( q u e u e ,   u p d a t e )   { 
     / /   T h i s   i s   a   r e n d e r   p h a s e   u p d a t e .   S t a s h   i t   i n   a   l a z i l y - c r e a t e d   m a p   o f 
     / /   q u e u e   - >   l i n k e d   l i s t   o f   u p d a t e s .   A f t e r   t h i s   r e n d e r   p a s s ,   w e ' l l   r e s t a r t 
     / /   a n d   a p p l y   t h e   s t a s h e d   u p d a t e s   o n   t o p   o f   t h e   w o r k - i n - p r o g r e s s   h o o k . 
     d i d S c h e d u l e R e n d e r P h a s e U p d a t e D u r i n g T h i s P a s s   =   d i d S c h e d u l e R e n d e r P h a s e U p d a t e   =   t r u e ; 
     v a r   p e n d i n g   =   q u e u e . p e n d i n g ; 
 
     i f   ( p e n d i n g   = = =   n u l l )   { 
         / /   T h i s   i s   t h e   f i r s t   u p d a t e .   C r e a t e   a   c i r c u l a r   l i s t . 
         u p d a t e . n e x t   =   u p d a t e ; 
     }   e l s e   { 
         u p d a t e . n e x t   =   p e n d i n g . n e x t ; 
         p e n d i n g . n e x t   =   u p d a t e ; 
     } 
 
     q u e u e . p e n d i n g   =   u p d a t e ; 
 } 
 
 f u n c t i o n   e n q u e u e U p d a t e $ 1 ( f i b e r ,   q u e u e ,   u p d a t e ,   l a n e )   { 
     i f   ( i s I n t e r l e a v e d U p d a t e ( f i b e r ) )   { 
         v a r   i n t e r l e a v e d   =   q u e u e . i n t e r l e a v e d ; 
 
         i f   ( i n t e r l e a v e d   = = =   n u l l )   { 
             / /   T h i s   i s   t h e   f i r s t   u p d a t e .   C r e a t e   a   c i r c u l a r   l i s t . 
             u p d a t e . n e x t   =   u p d a t e ;   / /   A t   t h e   e n d   o f   t h e   c u r r e n t   r e n d e r ,   t h i s   q u e u e ' s   i n t e r l e a v e d   u p d a t e s   w i l l 
             / /   b e   t r a n s f e r r e d   t o   t h e   p e n d i n g   q u e u e . 
 
             p u s h I n t e r l e a v e d Q u e u e ( q u e u e ) ; 
         }   e l s e   { 
             u p d a t e . n e x t   =   i n t e r l e a v e d . n e x t ; 
             i n t e r l e a v e d . n e x t   =   u p d a t e ; 
         } 
 
         q u e u e . i n t e r l e a v e d   =   u p d a t e ; 
     }   e l s e   { 
         v a r   p e n d i n g   =   q u e u e . p e n d i n g ; 
 
         i f   ( p e n d i n g   = = =   n u l l )   { 
             / /   T h i s   i s   t h e   f i r s t   u p d a t e .   C r e a t e   a   c i r c u l a r   l i s t . 
             u p d a t e . n e x t   =   u p d a t e ; 
         }   e l s e   { 
             u p d a t e . n e x t   =   p e n d i n g . n e x t ; 
             p e n d i n g . n e x t   =   u p d a t e ; 
         } 
 
         q u e u e . p e n d i n g   =   u p d a t e ; 
     } 
 } 
 
 f u n c t i o n   e n t a n g l e T r a n s i t i o n U p d a t e ( r o o t ,   q u e u e ,   l a n e )   { 
     i f   ( i s T r a n s i t i o n L a n e ( l a n e ) )   { 
         v a r   q u e u e L a n e s   =   q u e u e . l a n e s ;   / /   I f   a n y   e n t a n g l e d   l a n e s   a r e   n o   l o n g e r   p e n d i n g   o n   t h e   r o o t ,   t h e n   t h e y 
         / /   m u s t   h a v e   f i n i s h e d .   W e   c a n   r e m o v e   t h e m   f r o m   t h e   s h a r e d   q u e u e ,   w h i c h 
         / /   r e p r e s e n t s   a   s u p e r s e t   o f   t h e   a c t u a l l y   p e n d i n g   l a n e s .   I n   s o m e   c a s e s   w e 
         / /   m a y   e n t a n g l e   m o r e   t h a n   w e   n e e d   t o ,   b u t   t h a t ' s   O K .   I n   f a c t   i t ' s   w o r s e   i f 
         / /   w e   * d o n ' t *   e n t a n g l e   w h e n   w e   s h o u l d . 
 
         q u e u e L a n e s   =   i n t e r s e c t L a n e s ( q u e u e L a n e s ,   r o o t . p e n d i n g L a n e s ) ;   / /   E n t a n g l e   t h e   n e w   t r a n s i t i o n   l a n e   w i t h   t h e   o t h e r   t r a n s i t i o n   l a n e s . 
 
         v a r   n e w Q u e u e L a n e s   =   m e r g e L a n e s ( q u e u e L a n e s ,   l a n e ) ; 
         q u e u e . l a n e s   =   n e w Q u e u e L a n e s ;   / /   E v e n   i f   q u e u e . l a n e s   a l r e a d y   i n c l u d e   l a n e ,   w e   d o n ' t   k n o w   f o r   c e r t a i n   i f 
         / /   t h e   l a n e   f i n i s h e d   s i n c e   t h e   l a s t   t i m e   w e   e n t a n g l e d   i t .   S o   w e   n e e d   t o 
         / /   e n t a n g l e   i t   a g a i n ,   j u s t   t o   b e   s u r e . 
 
         m a r k R o o t E n t a n g l e d ( r o o t ,   n e w Q u e u e L a n e s ) ; 
     } 
 } 
 
 f u n c t i o n   m a r k U p d a t e I n D e v T o o l s ( f i b e r ,   l a n e ,   a c t i o n )   { 
 
     { 
         m a r k S t a t e U p d a t e S c h e d u l e d ( f i b e r ,   l a n e ) ; 
     } 
 } 
 
 v a r   C o n t e x t O n l y D i s p a t c h e r   =   { 
     r e a d C o n t e x t :   r e a d C o n t e x t , 
     u s e C a l l b a c k :   t h r o w I n v a l i d H o o k E r r o r , 
     u s e C o n t e x t :   t h r o w I n v a l i d H o o k E r r o r , 
     u s e E f f e c t :   t h r o w I n v a l i d H o o k E r r o r , 
     u s e I m p e r a t i v e H a n d l e :   t h r o w I n v a l i d H o o k E r r o r , 
     u s e I n s e r t i o n E f f e c t :   t h r o w I n v a l i d H o o k E r r o r , 
     u s e L a y o u t E f f e c t :   t h r o w I n v a l i d H o o k E r r o r , 
     u s e M e m o :   t h r o w I n v a l i d H o o k E r r o r , 
     u s e R e d u c e r :   t h r o w I n v a l i d H o o k E r r o r , 
     u s e R e f :   t h r o w I n v a l i d H o o k E r r o r , 
     u s e S t a t e :   t h r o w I n v a l i d H o o k E r r o r , 
     u s e D e b u g V a l u e :   t h r o w I n v a l i d H o o k E r r o r , 
     u s e D e f e r r e d V a l u e :   t h r o w I n v a l i d H o o k E r r o r , 
     u s e T r a n s i t i o n :   t h r o w I n v a l i d H o o k E r r o r , 
     u s e M u t a b l e S o u r c e :   t h r o w I n v a l i d H o o k E r r o r , 
     u s e S y n c E x t e r n a l S t o r e :   t h r o w I n v a l i d H o o k E r r o r , 
     u s e I d :   t h r o w I n v a l i d H o o k E r r o r , 
     u n s t a b l e _ i s N e w R e c o n c i l e r :   e n a b l e N e w R e c o n c i l e r 
 } ; 
 
 v a r   H o o k s D i s p a t c h e r O n M o u n t I n D E V   =   n u l l ; 
 v a r   H o o k s D i s p a t c h e r O n M o u n t W i t h H o o k T y p e s I n D E V   =   n u l l ; 
 v a r   H o o k s D i s p a t c h e r O n U p d a t e I n D E V   =   n u l l ; 
 v a r   H o o k s D i s p a t c h e r O n R e r e n d e r I n D E V   =   n u l l ; 
 v a r   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n M o u n t I n D E V   =   n u l l ; 
 v a r   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n U p d a t e I n D E V   =   n u l l ; 
 v a r   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n R e r e n d e r I n D E V   =   n u l l ; 
 
 { 
     v a r   w a r n I n v a l i d C o n t e x t A c c e s s   =   f u n c t i o n   ( )   { 
         e r r o r ( ' C o n t e x t   c a n   o n l y   b e   r e a d   w h i l e   R e a c t   i s   r e n d e r i n g .   '   +   ' I n   c l a s s e s ,   y o u   c a n   r e a d   i t   i n   t h e   r e n d e r   m e t h o d   o r   g e t D e r i v e d S t a t e F r o m P r o p s .   '   +   ' I n   f u n c t i o n   c o m p o n e n t s ,   y o u   c a n   r e a d   i t   d i r e c t l y   i n   t h e   f u n c t i o n   b o d y ,   b u t   n o t   '   +   ' i n s i d e   H o o k s   l i k e   u s e R e d u c e r ( )   o r   u s e M e m o ( ) . ' ) ; 
     } ; 
 
     v a r   w a r n I n v a l i d H o o k A c c e s s   =   f u n c t i o n   ( )   { 
         e r r o r ( ' D o   n o t   c a l l   H o o k s   i n s i d e   u s e E f f e c t ( . . . ) ,   u s e M e m o ( . . . ) ,   o r   o t h e r   b u i l t - i n   H o o k s .   '   +   ' Y o u   c a n   o n l y   c a l l   H o o k s   a t   t h e   t o p   l e v e l   o f   y o u r   R e a c t   f u n c t i o n .   '   +   ' F o r   m o r e   i n f o r m a t i o n ,   s e e   '   +   ' h t t p s : / / r e a c t j s . o r g / l i n k / r u l e s - o f - h o o k s ' ) ; 
     } ; 
 
     H o o k s D i s p a t c h e r O n M o u n t I n D E V   =   { 
         r e a d C o n t e x t :   f u n c t i o n   ( c o n t e x t )   { 
             r e t u r n   r e a d C o n t e x t ( c o n t e x t ) ; 
         } , 
         u s e C a l l b a c k :   f u n c t i o n   ( c a l l b a c k ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e C a l l b a c k ' ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             c h e c k D e p s A r e A r r a y D e v ( d e p s ) ; 
             r e t u r n   m o u n t C a l l b a c k ( c a l l b a c k ,   d e p s ) ; 
         } , 
         u s e C o n t e x t :   f u n c t i o n   ( c o n t e x t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e C o n t e x t ' ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   r e a d C o n t e x t ( c o n t e x t ) ; 
         } , 
         u s e E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e E f f e c t ' ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             c h e c k D e p s A r e A r r a y D e v ( d e p s ) ; 
             r e t u r n   m o u n t E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e I m p e r a t i v e H a n d l e :   f u n c t i o n   ( r e f ,   c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I m p e r a t i v e H a n d l e ' ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             c h e c k D e p s A r e A r r a y D e v ( d e p s ) ; 
             r e t u r n   m o u n t I m p e r a t i v e H a n d l e ( r e f ,   c r e a t e ,   d e p s ) ; 
         } , 
         u s e I n s e r t i o n E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I n s e r t i o n E f f e c t ' ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             c h e c k D e p s A r e A r r a y D e v ( d e p s ) ; 
             r e t u r n   m o u n t I n s e r t i o n E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e L a y o u t E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e L a y o u t E f f e c t ' ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             c h e c k D e p s A r e A r r a y D e v ( d e p s ) ; 
             r e t u r n   m o u n t L a y o u t E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e M e m o :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e M e m o ' ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             c h e c k D e p s A r e A r r a y D e v ( d e p s ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n M o u n t I n D E V ; 
 
             t r y   { 
                 r e t u r n   m o u n t M e m o ( c r e a t e ,   d e p s ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e R e d u c e r :   f u n c t i o n   ( r e d u c e r ,   i n i t i a l A r g ,   i n i t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e R e d u c e r ' ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n M o u n t I n D E V ; 
 
             t r y   { 
                 r e t u r n   m o u n t R e d u c e r ( r e d u c e r ,   i n i t i a l A r g ,   i n i t ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e R e f :   f u n c t i o n   ( i n i t i a l V a l u e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e R e f ' ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t R e f ( i n i t i a l V a l u e ) ; 
         } , 
         u s e S t a t e :   f u n c t i o n   ( i n i t i a l S t a t e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e S t a t e ' ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n M o u n t I n D E V ; 
 
             t r y   { 
                 r e t u r n   m o u n t S t a t e ( i n i t i a l S t a t e ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e D e b u g V a l u e :   f u n c t i o n   ( v a l u e ,   f o r m a t t e r F n )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e D e b u g V a l u e ' ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t D e b u g V a l u e ( ) ; 
         } , 
         u s e D e f e r r e d V a l u e :   f u n c t i o n   ( v a l u e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e D e f e r r e d V a l u e ' ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t D e f e r r e d V a l u e ( v a l u e ) ; 
         } , 
         u s e T r a n s i t i o n :   f u n c t i o n   ( )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e T r a n s i t i o n ' ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t T r a n s i t i o n ( ) ; 
         } , 
         u s e M u t a b l e S o u r c e :   f u n c t i o n   ( s o u r c e ,   g e t S n a p s h o t ,   s u b s c r i b e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e M u t a b l e S o u r c e ' ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t M u t a b l e S o u r c e ( ) ; 
         } , 
         u s e S y n c E x t e r n a l S t o r e :   f u n c t i o n   ( s u b s c r i b e ,   g e t S n a p s h o t ,   g e t S e r v e r S n a p s h o t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e S y n c E x t e r n a l S t o r e ' ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t S y n c E x t e r n a l S t o r e ( s u b s c r i b e ,   g e t S n a p s h o t ,   g e t S e r v e r S n a p s h o t ) ; 
         } , 
         u s e I d :   f u n c t i o n   ( )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I d ' ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t I d ( ) ; 
         } , 
         u n s t a b l e _ i s N e w R e c o n c i l e r :   e n a b l e N e w R e c o n c i l e r 
     } ; 
 
     H o o k s D i s p a t c h e r O n M o u n t W i t h H o o k T y p e s I n D E V   =   { 
         r e a d C o n t e x t :   f u n c t i o n   ( c o n t e x t )   { 
             r e t u r n   r e a d C o n t e x t ( c o n t e x t ) ; 
         } , 
         u s e C a l l b a c k :   f u n c t i o n   ( c a l l b a c k ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e C a l l b a c k ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t C a l l b a c k ( c a l l b a c k ,   d e p s ) ; 
         } , 
         u s e C o n t e x t :   f u n c t i o n   ( c o n t e x t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e C o n t e x t ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   r e a d C o n t e x t ( c o n t e x t ) ; 
         } , 
         u s e E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e E f f e c t ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e I m p e r a t i v e H a n d l e :   f u n c t i o n   ( r e f ,   c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I m p e r a t i v e H a n d l e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t I m p e r a t i v e H a n d l e ( r e f ,   c r e a t e ,   d e p s ) ; 
         } , 
         u s e I n s e r t i o n E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I n s e r t i o n E f f e c t ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t I n s e r t i o n E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e L a y o u t E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e L a y o u t E f f e c t ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t L a y o u t E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e M e m o :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e M e m o ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n M o u n t I n D E V ; 
 
             t r y   { 
                 r e t u r n   m o u n t M e m o ( c r e a t e ,   d e p s ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e R e d u c e r :   f u n c t i o n   ( r e d u c e r ,   i n i t i a l A r g ,   i n i t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e R e d u c e r ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n M o u n t I n D E V ; 
 
             t r y   { 
                 r e t u r n   m o u n t R e d u c e r ( r e d u c e r ,   i n i t i a l A r g ,   i n i t ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e R e f :   f u n c t i o n   ( i n i t i a l V a l u e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e R e f ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t R e f ( i n i t i a l V a l u e ) ; 
         } , 
         u s e S t a t e :   f u n c t i o n   ( i n i t i a l S t a t e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e S t a t e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n M o u n t I n D E V ; 
 
             t r y   { 
                 r e t u r n   m o u n t S t a t e ( i n i t i a l S t a t e ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e D e b u g V a l u e :   f u n c t i o n   ( v a l u e ,   f o r m a t t e r F n )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e D e b u g V a l u e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t D e b u g V a l u e ( ) ; 
         } , 
         u s e D e f e r r e d V a l u e :   f u n c t i o n   ( v a l u e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e D e f e r r e d V a l u e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t D e f e r r e d V a l u e ( v a l u e ) ; 
         } , 
         u s e T r a n s i t i o n :   f u n c t i o n   ( )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e T r a n s i t i o n ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t T r a n s i t i o n ( ) ; 
         } , 
         u s e M u t a b l e S o u r c e :   f u n c t i o n   ( s o u r c e ,   g e t S n a p s h o t ,   s u b s c r i b e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e M u t a b l e S o u r c e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t M u t a b l e S o u r c e ( ) ; 
         } , 
         u s e S y n c E x t e r n a l S t o r e :   f u n c t i o n   ( s u b s c r i b e ,   g e t S n a p s h o t ,   g e t S e r v e r S n a p s h o t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e S y n c E x t e r n a l S t o r e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t S y n c E x t e r n a l S t o r e ( s u b s c r i b e ,   g e t S n a p s h o t ,   g e t S e r v e r S n a p s h o t ) ; 
         } , 
         u s e I d :   f u n c t i o n   ( )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I d ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t I d ( ) ; 
         } , 
         u n s t a b l e _ i s N e w R e c o n c i l e r :   e n a b l e N e w R e c o n c i l e r 
     } ; 
 
     H o o k s D i s p a t c h e r O n U p d a t e I n D E V   =   { 
         r e a d C o n t e x t :   f u n c t i o n   ( c o n t e x t )   { 
             r e t u r n   r e a d C o n t e x t ( c o n t e x t ) ; 
         } , 
         u s e C a l l b a c k :   f u n c t i o n   ( c a l l b a c k ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e C a l l b a c k ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e C a l l b a c k ( c a l l b a c k ,   d e p s ) ; 
         } , 
         u s e C o n t e x t :   f u n c t i o n   ( c o n t e x t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e C o n t e x t ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   r e a d C o n t e x t ( c o n t e x t ) ; 
         } , 
         u s e E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e E f f e c t ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e I m p e r a t i v e H a n d l e :   f u n c t i o n   ( r e f ,   c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I m p e r a t i v e H a n d l e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e I m p e r a t i v e H a n d l e ( r e f ,   c r e a t e ,   d e p s ) ; 
         } , 
         u s e I n s e r t i o n E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I n s e r t i o n E f f e c t ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e I n s e r t i o n E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e L a y o u t E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e L a y o u t E f f e c t ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e L a y o u t E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e M e m o :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e M e m o ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n U p d a t e I n D E V ; 
 
             t r y   { 
                 r e t u r n   u p d a t e M e m o ( c r e a t e ,   d e p s ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e R e d u c e r :   f u n c t i o n   ( r e d u c e r ,   i n i t i a l A r g ,   i n i t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e R e d u c e r ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n U p d a t e I n D E V ; 
 
             t r y   { 
                 r e t u r n   u p d a t e R e d u c e r ( r e d u c e r ,   i n i t i a l A r g ,   i n i t ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e R e f :   f u n c t i o n   ( i n i t i a l V a l u e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e R e f ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e R e f ( ) ; 
         } , 
         u s e S t a t e :   f u n c t i o n   ( i n i t i a l S t a t e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e S t a t e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n U p d a t e I n D E V ; 
 
             t r y   { 
                 r e t u r n   u p d a t e S t a t e ( i n i t i a l S t a t e ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e D e b u g V a l u e :   f u n c t i o n   ( v a l u e ,   f o r m a t t e r F n )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e D e b u g V a l u e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e D e b u g V a l u e ( ) ; 
         } , 
         u s e D e f e r r e d V a l u e :   f u n c t i o n   ( v a l u e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e D e f e r r e d V a l u e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e D e f e r r e d V a l u e ( v a l u e ) ; 
         } , 
         u s e T r a n s i t i o n :   f u n c t i o n   ( )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e T r a n s i t i o n ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e T r a n s i t i o n ( ) ; 
         } , 
         u s e M u t a b l e S o u r c e :   f u n c t i o n   ( s o u r c e ,   g e t S n a p s h o t ,   s u b s c r i b e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e M u t a b l e S o u r c e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e M u t a b l e S o u r c e ( ) ; 
         } , 
         u s e S y n c E x t e r n a l S t o r e :   f u n c t i o n   ( s u b s c r i b e ,   g e t S n a p s h o t ,   g e t S e r v e r S n a p s h o t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e S y n c E x t e r n a l S t o r e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e S y n c E x t e r n a l S t o r e ( s u b s c r i b e ,   g e t S n a p s h o t ) ; 
         } , 
         u s e I d :   f u n c t i o n   ( )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I d ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e I d ( ) ; 
         } , 
         u n s t a b l e _ i s N e w R e c o n c i l e r :   e n a b l e N e w R e c o n c i l e r 
     } ; 
 
     H o o k s D i s p a t c h e r O n R e r e n d e r I n D E V   =   { 
         r e a d C o n t e x t :   f u n c t i o n   ( c o n t e x t )   { 
             r e t u r n   r e a d C o n t e x t ( c o n t e x t ) ; 
         } , 
         u s e C a l l b a c k :   f u n c t i o n   ( c a l l b a c k ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e C a l l b a c k ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e C a l l b a c k ( c a l l b a c k ,   d e p s ) ; 
         } , 
         u s e C o n t e x t :   f u n c t i o n   ( c o n t e x t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e C o n t e x t ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   r e a d C o n t e x t ( c o n t e x t ) ; 
         } , 
         u s e E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e E f f e c t ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e I m p e r a t i v e H a n d l e :   f u n c t i o n   ( r e f ,   c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I m p e r a t i v e H a n d l e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e I m p e r a t i v e H a n d l e ( r e f ,   c r e a t e ,   d e p s ) ; 
         } , 
         u s e I n s e r t i o n E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I n s e r t i o n E f f e c t ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e I n s e r t i o n E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e L a y o u t E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e L a y o u t E f f e c t ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e L a y o u t E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e M e m o :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e M e m o ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n R e r e n d e r I n D E V ; 
 
             t r y   { 
                 r e t u r n   u p d a t e M e m o ( c r e a t e ,   d e p s ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e R e d u c e r :   f u n c t i o n   ( r e d u c e r ,   i n i t i a l A r g ,   i n i t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e R e d u c e r ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n R e r e n d e r I n D E V ; 
 
             t r y   { 
                 r e t u r n   r e r e n d e r R e d u c e r ( r e d u c e r ,   i n i t i a l A r g ,   i n i t ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e R e f :   f u n c t i o n   ( i n i t i a l V a l u e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e R e f ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e R e f ( ) ; 
         } , 
         u s e S t a t e :   f u n c t i o n   ( i n i t i a l S t a t e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e S t a t e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n R e r e n d e r I n D E V ; 
 
             t r y   { 
                 r e t u r n   r e r e n d e r S t a t e ( i n i t i a l S t a t e ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e D e b u g V a l u e :   f u n c t i o n   ( v a l u e ,   f o r m a t t e r F n )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e D e b u g V a l u e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e D e b u g V a l u e ( ) ; 
         } , 
         u s e D e f e r r e d V a l u e :   f u n c t i o n   ( v a l u e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e D e f e r r e d V a l u e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   r e r e n d e r D e f e r r e d V a l u e ( v a l u e ) ; 
         } , 
         u s e T r a n s i t i o n :   f u n c t i o n   ( )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e T r a n s i t i o n ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   r e r e n d e r T r a n s i t i o n ( ) ; 
         } , 
         u s e M u t a b l e S o u r c e :   f u n c t i o n   ( s o u r c e ,   g e t S n a p s h o t ,   s u b s c r i b e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e M u t a b l e S o u r c e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e M u t a b l e S o u r c e ( ) ; 
         } , 
         u s e S y n c E x t e r n a l S t o r e :   f u n c t i o n   ( s u b s c r i b e ,   g e t S n a p s h o t ,   g e t S e r v e r S n a p s h o t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e S y n c E x t e r n a l S t o r e ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e S y n c E x t e r n a l S t o r e ( s u b s c r i b e ,   g e t S n a p s h o t ) ; 
         } , 
         u s e I d :   f u n c t i o n   ( )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I d ' ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e I d ( ) ; 
         } , 
         u n s t a b l e _ i s N e w R e c o n c i l e r :   e n a b l e N e w R e c o n c i l e r 
     } ; 
 
     I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n M o u n t I n D E V   =   { 
         r e a d C o n t e x t :   f u n c t i o n   ( c o n t e x t )   { 
             w a r n I n v a l i d C o n t e x t A c c e s s ( ) ; 
             r e t u r n   r e a d C o n t e x t ( c o n t e x t ) ; 
         } , 
         u s e C a l l b a c k :   f u n c t i o n   ( c a l l b a c k ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e C a l l b a c k ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t C a l l b a c k ( c a l l b a c k ,   d e p s ) ; 
         } , 
         u s e C o n t e x t :   f u n c t i o n   ( c o n t e x t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e C o n t e x t ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   r e a d C o n t e x t ( c o n t e x t ) ; 
         } , 
         u s e E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e E f f e c t ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e I m p e r a t i v e H a n d l e :   f u n c t i o n   ( r e f ,   c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I m p e r a t i v e H a n d l e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t I m p e r a t i v e H a n d l e ( r e f ,   c r e a t e ,   d e p s ) ; 
         } , 
         u s e I n s e r t i o n E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I n s e r t i o n E f f e c t ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t I n s e r t i o n E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e L a y o u t E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e L a y o u t E f f e c t ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t L a y o u t E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e M e m o :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e M e m o ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n M o u n t I n D E V ; 
 
             t r y   { 
                 r e t u r n   m o u n t M e m o ( c r e a t e ,   d e p s ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e R e d u c e r :   f u n c t i o n   ( r e d u c e r ,   i n i t i a l A r g ,   i n i t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e R e d u c e r ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n M o u n t I n D E V ; 
 
             t r y   { 
                 r e t u r n   m o u n t R e d u c e r ( r e d u c e r ,   i n i t i a l A r g ,   i n i t ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e R e f :   f u n c t i o n   ( i n i t i a l V a l u e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e R e f ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t R e f ( i n i t i a l V a l u e ) ; 
         } , 
         u s e S t a t e :   f u n c t i o n   ( i n i t i a l S t a t e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e S t a t e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n M o u n t I n D E V ; 
 
             t r y   { 
                 r e t u r n   m o u n t S t a t e ( i n i t i a l S t a t e ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e D e b u g V a l u e :   f u n c t i o n   ( v a l u e ,   f o r m a t t e r F n )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e D e b u g V a l u e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t D e b u g V a l u e ( ) ; 
         } , 
         u s e D e f e r r e d V a l u e :   f u n c t i o n   ( v a l u e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e D e f e r r e d V a l u e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t D e f e r r e d V a l u e ( v a l u e ) ; 
         } , 
         u s e T r a n s i t i o n :   f u n c t i o n   ( )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e T r a n s i t i o n ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t T r a n s i t i o n ( ) ; 
         } , 
         u s e M u t a b l e S o u r c e :   f u n c t i o n   ( s o u r c e ,   g e t S n a p s h o t ,   s u b s c r i b e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e M u t a b l e S o u r c e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t M u t a b l e S o u r c e ( ) ; 
         } , 
         u s e S y n c E x t e r n a l S t o r e :   f u n c t i o n   ( s u b s c r i b e ,   g e t S n a p s h o t ,   g e t S e r v e r S n a p s h o t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e S y n c E x t e r n a l S t o r e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t S y n c E x t e r n a l S t o r e ( s u b s c r i b e ,   g e t S n a p s h o t ,   g e t S e r v e r S n a p s h o t ) ; 
         } , 
         u s e I d :   f u n c t i o n   ( )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I d ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             m o u n t H o o k T y p e s D e v ( ) ; 
             r e t u r n   m o u n t I d ( ) ; 
         } , 
         u n s t a b l e _ i s N e w R e c o n c i l e r :   e n a b l e N e w R e c o n c i l e r 
     } ; 
 
     I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n U p d a t e I n D E V   =   { 
         r e a d C o n t e x t :   f u n c t i o n   ( c o n t e x t )   { 
             w a r n I n v a l i d C o n t e x t A c c e s s ( ) ; 
             r e t u r n   r e a d C o n t e x t ( c o n t e x t ) ; 
         } , 
         u s e C a l l b a c k :   f u n c t i o n   ( c a l l b a c k ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e C a l l b a c k ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e C a l l b a c k ( c a l l b a c k ,   d e p s ) ; 
         } , 
         u s e C o n t e x t :   f u n c t i o n   ( c o n t e x t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e C o n t e x t ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   r e a d C o n t e x t ( c o n t e x t ) ; 
         } , 
         u s e E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e E f f e c t ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e I m p e r a t i v e H a n d l e :   f u n c t i o n   ( r e f ,   c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I m p e r a t i v e H a n d l e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e I m p e r a t i v e H a n d l e ( r e f ,   c r e a t e ,   d e p s ) ; 
         } , 
         u s e I n s e r t i o n E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I n s e r t i o n E f f e c t ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e I n s e r t i o n E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e L a y o u t E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e L a y o u t E f f e c t ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e L a y o u t E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e M e m o :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e M e m o ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n U p d a t e I n D E V ; 
 
             t r y   { 
                 r e t u r n   u p d a t e M e m o ( c r e a t e ,   d e p s ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e R e d u c e r :   f u n c t i o n   ( r e d u c e r ,   i n i t i a l A r g ,   i n i t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e R e d u c e r ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n U p d a t e I n D E V ; 
 
             t r y   { 
                 r e t u r n   u p d a t e R e d u c e r ( r e d u c e r ,   i n i t i a l A r g ,   i n i t ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e R e f :   f u n c t i o n   ( i n i t i a l V a l u e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e R e f ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e R e f ( ) ; 
         } , 
         u s e S t a t e :   f u n c t i o n   ( i n i t i a l S t a t e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e S t a t e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n U p d a t e I n D E V ; 
 
             t r y   { 
                 r e t u r n   u p d a t e S t a t e ( i n i t i a l S t a t e ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e D e b u g V a l u e :   f u n c t i o n   ( v a l u e ,   f o r m a t t e r F n )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e D e b u g V a l u e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e D e b u g V a l u e ( ) ; 
         } , 
         u s e D e f e r r e d V a l u e :   f u n c t i o n   ( v a l u e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e D e f e r r e d V a l u e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e D e f e r r e d V a l u e ( v a l u e ) ; 
         } , 
         u s e T r a n s i t i o n :   f u n c t i o n   ( )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e T r a n s i t i o n ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e T r a n s i t i o n ( ) ; 
         } , 
         u s e M u t a b l e S o u r c e :   f u n c t i o n   ( s o u r c e ,   g e t S n a p s h o t ,   s u b s c r i b e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e M u t a b l e S o u r c e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e M u t a b l e S o u r c e ( ) ; 
         } , 
         u s e S y n c E x t e r n a l S t o r e :   f u n c t i o n   ( s u b s c r i b e ,   g e t S n a p s h o t ,   g e t S e r v e r S n a p s h o t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e S y n c E x t e r n a l S t o r e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e S y n c E x t e r n a l S t o r e ( s u b s c r i b e ,   g e t S n a p s h o t ) ; 
         } , 
         u s e I d :   f u n c t i o n   ( )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I d ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e I d ( ) ; 
         } , 
         u n s t a b l e _ i s N e w R e c o n c i l e r :   e n a b l e N e w R e c o n c i l e r 
     } ; 
 
     I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n R e r e n d e r I n D E V   =   { 
         r e a d C o n t e x t :   f u n c t i o n   ( c o n t e x t )   { 
             w a r n I n v a l i d C o n t e x t A c c e s s ( ) ; 
             r e t u r n   r e a d C o n t e x t ( c o n t e x t ) ; 
         } , 
         u s e C a l l b a c k :   f u n c t i o n   ( c a l l b a c k ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e C a l l b a c k ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e C a l l b a c k ( c a l l b a c k ,   d e p s ) ; 
         } , 
         u s e C o n t e x t :   f u n c t i o n   ( c o n t e x t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e C o n t e x t ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   r e a d C o n t e x t ( c o n t e x t ) ; 
         } , 
         u s e E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e E f f e c t ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e I m p e r a t i v e H a n d l e :   f u n c t i o n   ( r e f ,   c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I m p e r a t i v e H a n d l e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e I m p e r a t i v e H a n d l e ( r e f ,   c r e a t e ,   d e p s ) ; 
         } , 
         u s e I n s e r t i o n E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I n s e r t i o n E f f e c t ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e I n s e r t i o n E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e L a y o u t E f f e c t :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e L a y o u t E f f e c t ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e L a y o u t E f f e c t ( c r e a t e ,   d e p s ) ; 
         } , 
         u s e M e m o :   f u n c t i o n   ( c r e a t e ,   d e p s )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e M e m o ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n U p d a t e I n D E V ; 
 
             t r y   { 
                 r e t u r n   u p d a t e M e m o ( c r e a t e ,   d e p s ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e R e d u c e r :   f u n c t i o n   ( r e d u c e r ,   i n i t i a l A r g ,   i n i t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e R e d u c e r ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n U p d a t e I n D E V ; 
 
             t r y   { 
                 r e t u r n   r e r e n d e r R e d u c e r ( r e d u c e r ,   i n i t i a l A r g ,   i n i t ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e R e f :   f u n c t i o n   ( i n i t i a l V a l u e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e R e f ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e R e f ( ) ; 
         } , 
         u s e S t a t e :   f u n c t i o n   ( i n i t i a l S t a t e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e S t a t e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t ; 
             R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   I n v a l i d N e s t e d H o o k s D i s p a t c h e r O n U p d a t e I n D E V ; 
 
             t r y   { 
                 r e t u r n   r e r e n d e r S t a t e ( i n i t i a l S t a t e ) ; 
             }   f i n a l l y   { 
                 R e a c t C u r r e n t D i s p a t c h e r $ 1 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
             } 
         } , 
         u s e D e b u g V a l u e :   f u n c t i o n   ( v a l u e ,   f o r m a t t e r F n )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e D e b u g V a l u e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e D e b u g V a l u e ( ) ; 
         } , 
         u s e D e f e r r e d V a l u e :   f u n c t i o n   ( v a l u e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e D e f e r r e d V a l u e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   r e r e n d e r D e f e r r e d V a l u e ( v a l u e ) ; 
         } , 
         u s e T r a n s i t i o n :   f u n c t i o n   ( )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e T r a n s i t i o n ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   r e r e n d e r T r a n s i t i o n ( ) ; 
         } , 
         u s e M u t a b l e S o u r c e :   f u n c t i o n   ( s o u r c e ,   g e t S n a p s h o t ,   s u b s c r i b e )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e M u t a b l e S o u r c e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e M u t a b l e S o u r c e ( ) ; 
         } , 
         u s e S y n c E x t e r n a l S t o r e :   f u n c t i o n   ( s u b s c r i b e ,   g e t S n a p s h o t ,   g e t S e r v e r S n a p s h o t )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e S y n c E x t e r n a l S t o r e ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e S y n c E x t e r n a l S t o r e ( s u b s c r i b e ,   g e t S n a p s h o t ) ; 
         } , 
         u s e I d :   f u n c t i o n   ( )   { 
             c u r r e n t H o o k N a m e I n D e v   =   ' u s e I d ' ; 
             w a r n I n v a l i d H o o k A c c e s s ( ) ; 
             u p d a t e H o o k T y p e s D e v ( ) ; 
             r e t u r n   u p d a t e I d ( ) ; 
         } , 
         u n s t a b l e _ i s N e w R e c o n c i l e r :   e n a b l e N e w R e c o n c i l e r 
     } ; 
 } 
 
 v a r   n o w $ 1   =   S c h e d u l e r . u n s t a b l e _ n o w ; 
 v a r   c o m m i t T i m e   =   0 ; 
 v a r   l a y o u t E f f e c t S t a r t T i m e   =   - 1 ; 
 v a r   p r o f i l e r S t a r t T i m e   =   - 1 ; 
 v a r   p a s s i v e E f f e c t S t a r t T i m e   =   - 1 ; 
 / * * 
   *   T r a c k s   w h e t h e r   t h e   c u r r e n t   u p d a t e   w a s   a   n e s t e d / c a s c a d i n g   u p d a t e   ( s c h e d u l e d   f r o m   a   l a y o u t   e f f e c t ) . 
   * 
   *   T h e   o v e r a l l   s e q u e n c e   i s : 
   *       1 .   r e n d e r 
   *       2 .   c o m m i t   ( a n d   c a l l   ` o n R e n d e r ` ,   ` o n C o m m i t ` ) 
   *       3 .   c h e c k   f o r   n e s t e d   u p d a t e s 
   *       4 .   f l u s h   p a s s i v e   e f f e c t s   ( a n d   c a l l   ` o n P o s t C o m m i t ` ) 
   * 
   *   N e s t e d   u p d a t e s   a r e   i d e n t i f i e d   i n   s t e p   3   a b o v e , 
   *   b u t   s t e p   4   s t i l l   a p p l i e s   t o   t h e   w o r k   t h a t   w a s   j u s t   c o m m i t t e d . 
   *   W e   u s e   t w o   f l a g s   t o   t r a c k   n e s t e d   u p d a t e s   t h e n : 
   *   o n e   t r a c k s   w h e t h e r   t h e   u p c o m i n g   u p d a t e   i s   a   n e s t e d   u p d a t e , 
   *   a n d   t h e   o t h e r   t r a c k s   w h e t h e r   t h e   c u r r e n t   u p d a t e   w a s   a   n e s t e d   u p d a t e . 
   *   T h e   f i r s t   v a l u e   g e t s   s y n c e d   t o   t h e   s e c o n d   a t   t h e   s t a r t   o f   t h e   r e n d e r   p h a s e . 
   * / 
 
 v a r   c u r r e n t U p d a t e I s N e s t e d   =   f a l s e ; 
 v a r   n e s t e d U p d a t e S c h e d u l e d   =   f a l s e ; 
 
 f u n c t i o n   i s C u r r e n t U p d a t e N e s t e d ( )   { 
     r e t u r n   c u r r e n t U p d a t e I s N e s t e d ; 
 } 
 
 f u n c t i o n   m a r k N e s t e d U p d a t e S c h e d u l e d ( )   { 
     { 
         n e s t e d U p d a t e S c h e d u l e d   =   t r u e ; 
     } 
 } 
 
 f u n c t i o n   r e s e t N e s t e d U p d a t e F l a g ( )   { 
     { 
         c u r r e n t U p d a t e I s N e s t e d   =   f a l s e ; 
         n e s t e d U p d a t e S c h e d u l e d   =   f a l s e ; 
     } 
 } 
 
 f u n c t i o n   s y n c N e s t e d U p d a t e F l a g ( )   { 
     { 
         c u r r e n t U p d a t e I s N e s t e d   =   n e s t e d U p d a t e S c h e d u l e d ; 
         n e s t e d U p d a t e S c h e d u l e d   =   f a l s e ; 
     } 
 } 
 
 f u n c t i o n   g e t C o m m i t T i m e ( )   { 
     r e t u r n   c o m m i t T i m e ; 
 } 
 
 f u n c t i o n   r e c o r d C o m m i t T i m e ( )   { 
 
     c o m m i t T i m e   =   n o w $ 1 ( ) ; 
 } 
 
 f u n c t i o n   s t a r t P r o f i l e r T i m e r ( f i b e r )   { 
 
     p r o f i l e r S t a r t T i m e   =   n o w $ 1 ( ) ; 
 
     i f   ( f i b e r . a c t u a l S t a r t T i m e   <   0 )   { 
         f i b e r . a c t u a l S t a r t T i m e   =   n o w $ 1 ( ) ; 
     } 
 } 
 
 f u n c t i o n   s t o p P r o f i l e r T i m e r I f R u n n i n g ( f i b e r )   { 
 
     p r o f i l e r S t a r t T i m e   =   - 1 ; 
 } 
 
 f u n c t i o n   s t o p P r o f i l e r T i m e r I f R u n n i n g A n d R e c o r d D e l t a ( f i b e r ,   o v e r r i d e B a s e T i m e )   { 
 
     i f   ( p r o f i l e r S t a r t T i m e   > =   0 )   { 
         v a r   e l a p s e d T i m e   =   n o w $ 1 ( )   -   p r o f i l e r S t a r t T i m e ; 
         f i b e r . a c t u a l D u r a t i o n   + =   e l a p s e d T i m e ; 
 
         i f   ( o v e r r i d e B a s e T i m e )   { 
             f i b e r . s e l f B a s e D u r a t i o n   =   e l a p s e d T i m e ; 
         } 
 
         p r o f i l e r S t a r t T i m e   =   - 1 ; 
     } 
 } 
 
 f u n c t i o n   r e c o r d L a y o u t E f f e c t D u r a t i o n ( f i b e r )   { 
 
     i f   ( l a y o u t E f f e c t S t a r t T i m e   > =   0 )   { 
         v a r   e l a p s e d T i m e   =   n o w $ 1 ( )   -   l a y o u t E f f e c t S t a r t T i m e ; 
         l a y o u t E f f e c t S t a r t T i m e   =   - 1 ;   / /   S t o r e   d u r a t i o n   o n   t h e   n e x t   n e a r e s t   P r o f i l e r   a n c e s t o r 
         / /   O r   t h e   r o o t   ( f o r   t h e   D e v T o o l s   P r o f i l e r   t o   r e a d ) 
 
         v a r   p a r e n t F i b e r   =   f i b e r . r e t u r n ; 
 
         w h i l e   ( p a r e n t F i b e r   ! = =   n u l l )   { 
             s w i t c h   ( p a r e n t F i b e r . t a g )   { 
                 c a s e   H o s t R o o t : 
                     v a r   r o o t   =   p a r e n t F i b e r . s t a t e N o d e ; 
                     r o o t . e f f e c t D u r a t i o n   + =   e l a p s e d T i m e ; 
                     r e t u r n ; 
 
                 c a s e   P r o f i l e r : 
                     v a r   p a r e n t S t a t e N o d e   =   p a r e n t F i b e r . s t a t e N o d e ; 
                     p a r e n t S t a t e N o d e . e f f e c t D u r a t i o n   + =   e l a p s e d T i m e ; 
                     r e t u r n ; 
             } 
 
             p a r e n t F i b e r   =   p a r e n t F i b e r . r e t u r n ; 
         } 
     } 
 } 
 
 f u n c t i o n   r e c o r d P a s s i v e E f f e c t D u r a t i o n ( f i b e r )   { 
 
     i f   ( p a s s i v e E f f e c t S t a r t T i m e   > =   0 )   { 
         v a r   e l a p s e d T i m e   =   n o w $ 1 ( )   -   p a s s i v e E f f e c t S t a r t T i m e ; 
         p a s s i v e E f f e c t S t a r t T i m e   =   - 1 ;   / /   S t o r e   d u r a t i o n   o n   t h e   n e x t   n e a r e s t   P r o f i l e r   a n c e s t o r 
         / /   O r   t h e   r o o t   ( f o r   t h e   D e v T o o l s   P r o f i l e r   t o   r e a d ) 
 
         v a r   p a r e n t F i b e r   =   f i b e r . r e t u r n ; 
 
         w h i l e   ( p a r e n t F i b e r   ! = =   n u l l )   { 
             s w i t c h   ( p a r e n t F i b e r . t a g )   { 
                 c a s e   H o s t R o o t : 
                     v a r   r o o t   =   p a r e n t F i b e r . s t a t e N o d e ; 
 
                     i f   ( r o o t   ! = =   n u l l )   { 
                         r o o t . p a s s i v e E f f e c t D u r a t i o n   + =   e l a p s e d T i m e ; 
                     } 
 
                     r e t u r n ; 
 
                 c a s e   P r o f i l e r : 
                     v a r   p a r e n t S t a t e N o d e   =   p a r e n t F i b e r . s t a t e N o d e ; 
 
                     i f   ( p a r e n t S t a t e N o d e   ! = =   n u l l )   { 
                         / /   D e t a c h e d   f i b e r s   h a v e   t h e i r   s t a t e   n o d e   c l e a r e d   o u t . 
                         / /   I n   t h i s   c a s e ,   t h e   r e t u r n   p o i n t e r   i s   a l s o   c l e a r e d   o u t , 
                         / /   s o   w e   w o n ' t   b e   a b l e   t o   r e p o r t   t h e   t i m e   s p e n t   i n   t h i s   P r o f i l e r ' s   s u b t r e e . 
                         p a r e n t S t a t e N o d e . p a s s i v e E f f e c t D u r a t i o n   + =   e l a p s e d T i m e ; 
                     } 
 
                     r e t u r n ; 
             } 
 
             p a r e n t F i b e r   =   p a r e n t F i b e r . r e t u r n ; 
         } 
     } 
 } 
 
 f u n c t i o n   s t a r t L a y o u t E f f e c t T i m e r ( )   { 
 
     l a y o u t E f f e c t S t a r t T i m e   =   n o w $ 1 ( ) ; 
 } 
 
 f u n c t i o n   s t a r t P a s s i v e E f f e c t T i m e r ( )   { 
 
     p a s s i v e E f f e c t S t a r t T i m e   =   n o w $ 1 ( ) ; 
 } 
 
 f u n c t i o n   t r a n s f e r A c t u a l D u r a t i o n ( f i b e r )   { 
     / /   T r a n s f e r   t i m e   s p e n t   r e n d e r i n g   t h e s e   c h i l d r e n   s o   w e   d o n ' t   l o s e   i t 
     / /   a f t e r   w e   r e r e n d e r .   T h i s   i s   u s e d   a s   a   h e l p e r   i n   s p e c i a l   c a s e s 
     / /   w h e r e   w e   s h o u l d   c o u n t   t h e   w o r k   o f   m u l t i p l e   p a s s e s . 
     v a r   c h i l d   =   f i b e r . c h i l d ; 
 
     w h i l e   ( c h i l d )   { 
         f i b e r . a c t u a l D u r a t i o n   + =   c h i l d . a c t u a l D u r a t i o n ; 
         c h i l d   =   c h i l d . s i b l i n g ; 
     } 
 } 
 
 f u n c t i o n   c r e a t e C a p t u r e d V a l u e ( v a l u e ,   s o u r c e )   { 
     / /   I f   t h e   v a l u e   i s   a n   e r r o r ,   c a l l   t h i s   f u n c t i o n   i m m e d i a t e l y   a f t e r   i t   i s   t h r o w n 
     / /   s o   t h e   s t a c k   i s   a c c u r a t e . 
     r e t u r n   { 
         v a l u e :   v a l u e , 
         s o u r c e :   s o u r c e , 
         s t a c k :   g e t S t a c k B y F i b e r I n D e v A n d P r o d ( s o u r c e ) 
     } ; 
 } 
 
 / /   T h i s   m o d u l e   i s   f o r k e d   i n   d i f f e r e n t   e n v i r o n m e n t s . 
 / /   B y   d e f a u l t ,   r e t u r n   ` t r u e `   t o   l o g   e r r o r s   t o   t h e   c o n s o l e . 
 / /   F o r k s   c a n   r e t u r n   ` f a l s e `   i f   t h i s   i s n ' t   d e s i r a b l e . 
 f u n c t i o n   s h o w E r r o r D i a l o g ( b o u n d a r y ,   e r r o r I n f o )   { 
     r e t u r n   t r u e ; 
 } 
 
 f u n c t i o n   l o g C a p t u r e d E r r o r ( b o u n d a r y ,   e r r o r I n f o )   { 
     t r y   { 
         v a r   l o g E r r o r   =   s h o w E r r o r D i a l o g ( b o u n d a r y ,   e r r o r I n f o ) ;   / /   A l l o w   i n j e c t e d   s h o w E r r o r D i a l o g ( )   t o   p r e v e n t   d e f a u l t   c o n s o l e . e r r o r   l o g g i n g . 
         / /   T h i s   e n a b l e s   r e n d e r e r s   l i k e   R e a c t N a t i v e   t o   b e t t e r   m a n a g e   r e d b o x   b e h a v i o r . 
 
         i f   ( l o g E r r o r   = = =   f a l s e )   { 
             r e t u r n ; 
         } 
 
         v a r   e r r o r   =   e r r o r I n f o . v a l u e ; 
 
         i f   ( t r u e )   { 
             v a r   s o u r c e   =   e r r o r I n f o . s o u r c e ; 
             v a r   s t a c k   =   e r r o r I n f o . s t a c k ; 
             v a r   c o m p o n e n t S t a c k   =   s t a c k   ! = =   n u l l   ?   s t a c k   :   ' ' ;   / /   B r o w s e r s   s u p p o r t   s i l e n c i n g   u n c a u g h t   e r r o r s   b y   c a l l i n g 
             / /   ` p r e v e n t D e f a u l t ( ) `   i n   w i n d o w   ` e r r o r `   h a n d l e r . 
             / /   W e   r e c o r d   t h i s   i n f o r m a t i o n   a s   a n   e x p a n d o   o n   t h e   e r r o r . 
 
             i f   ( e r r o r   ! =   n u l l   & &   e r r o r . _ s u p p r e s s L o g g i n g )   { 
                 i f   ( b o u n d a r y . t a g   = = =   C l a s s C o m p o n e n t )   { 
                     / /   T h e   e r r o r   i s   r e c o v e r a b l e   a n d   w a s   s i l e n c e d . 
                     / /   I g n o r e   i t   a n d   d o n ' t   p r i n t   t h e   s t a c k   a d d e n d u m . 
                     / /   T h i s   i s   h a n d y   f o r   t e s t i n g   e r r o r   b o u n d a r i e s   w i t h o u t   n o i s e . 
                     r e t u r n ; 
                 }   / /   T h e   e r r o r   i s   f a t a l .   S i n c e   t h e   s i l e n c i n g   m i g h t   h a v e 
                 / /   b e e n   a c c i d e n t a l ,   w e ' l l   s u r f a c e   i t   a n y w a y . 
                 / /   H o w e v e r ,   t h e   b r o w s e r   w o u l d   h a v e   s i l e n c e d   t h e   o r i g i n a l   e r r o r 
                 / /   s o   w e ' l l   p r i n t   i t   f i r s t ,   a n d   t h e n   p r i n t   t h e   s t a c k   a d d e n d u m . 
 
 
                 c o n s o l e [ ' e r r o r ' ] ( e r r o r ) ;   / /   D o n ' t   t r a n s f o r m   t o   o u r   w r a p p e r 
                 / /   F o r   a   m o r e   d e t a i l e d   d e s c r i p t i o n   o f   t h i s   b l o c k ,   s e e : 
                 / /   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / p u l l / 1 3 3 8 4 
             } 
 
             v a r   c o m p o n e n t N a m e   =   s o u r c e   ?   g e t C o m p o n e n t N a m e F r o m F i b e r ( s o u r c e )   :   n u l l ; 
             v a r   c o m p o n e n t N a m e M e s s a g e   =   c o m p o n e n t N a m e   ?   " T h e   a b o v e   e r r o r   o c c u r r e d   i n   t h e   < "   +   c o m p o n e n t N a m e   +   " >   c o m p o n e n t : "   :   ' T h e   a b o v e   e r r o r   o c c u r r e d   i n   o n e   o f   y o u r   R e a c t   c o m p o n e n t s : ' ; 
             v a r   e r r o r B o u n d a r y M e s s a g e ; 
 
             i f   ( b o u n d a r y . t a g   = = =   H o s t R o o t )   { 
                 e r r o r B o u n d a r y M e s s a g e   =   ' C o n s i d e r   a d d i n g   a n   e r r o r   b o u n d a r y   t o   y o u r   t r e e   t o   c u s t o m i z e   e r r o r   h a n d l i n g   b e h a v i o r . \ n '   +   ' V i s i t   h t t p s : / / r e a c t j s . o r g / l i n k / e r r o r - b o u n d a r i e s   t o   l e a r n   m o r e   a b o u t   e r r o r   b o u n d a r i e s . ' ; 
             }   e l s e   { 
                 v a r   e r r o r B o u n d a r y N a m e   =   g e t C o m p o n e n t N a m e F r o m F i b e r ( b o u n d a r y )   | |   ' A n o n y m o u s ' ; 
                 e r r o r B o u n d a r y M e s s a g e   =   " R e a c t   w i l l   t r y   t o   r e c r e a t e   t h i s   c o m p o n e n t   t r e e   f r o m   s c r a t c h   "   +   ( " u s i n g   t h e   e r r o r   b o u n d a r y   y o u   p r o v i d e d ,   "   +   e r r o r B o u n d a r y N a m e   +   " . " ) ; 
             } 
 
             v a r   c o m b i n e d M e s s a g e   =   c o m p o n e n t N a m e M e s s a g e   +   " \ n "   +   c o m p o n e n t S t a c k   +   " \ n \ n "   +   ( " "   +   e r r o r B o u n d a r y M e s s a g e ) ;   / /   I n   d e v e l o p m e n t ,   w e   p r o v i d e   o u r   o w n   m e s s a g e   w i t h   j u s t   t h e   c o m p o n e n t   s t a c k . 
             / /   W e   d o n ' t   i n c l u d e   t h e   o r i g i n a l   e r r o r   m e s s a g e   a n d   J S   s t a c k   b e c a u s e   t h e   b r o w s e r 
             / /   h a s   a l r e a d y   p r i n t e d   i t .   E v e n   i f   t h e   a p p l i c a t i o n   s w a l l o w s   t h e   e r r o r ,   i t   i s   s t i l l 
             / /   d i s p l a y e d   b y   t h e   b r o w s e r   t h a n k s   t o   t h e   D E V - o n l y   f a k e   e v e n t   t r i c k   i n   R e a c t E r r o r U t i l s . 
 
             c o n s o l e [ ' e r r o r ' ] ( c o m b i n e d M e s s a g e ) ;   / /   D o n ' t   t r a n s f o r m   t o   o u r   w r a p p e r 
         }   e l s e   { 
             / /   I n   p r o d u c t i o n ,   w e   p r i n t   t h e   e r r o r   d i r e c t l y . 
             / /   T h i s   w i l l   i n c l u d e   t h e   m e s s a g e ,   t h e   J S   s t a c k ,   a n d   a n y t h i n g   t h e   b r o w s e r   w a n t s   t o   s h o w . 
             / /   W e   p a s s   t h e   e r r o r   o b j e c t   i n s t e a d   o f   c u s t o m   m e s s a g e   s o   t h a t   t h e   b r o w s e r   d i s p l a y s   t h e   e r r o r   n a t i v e l y . 
             c o n s o l e [ ' e r r o r ' ] ( e r r o r ) ;   / /   D o n ' t   t r a n s f o r m   t o   o u r   w r a p p e r 
         } 
     }   c a t c h   ( e )   { 
         / /   T h i s   m e t h o d   m u s t   n o t   t h r o w ,   o r   R e a c t   i n t e r n a l   s t a t e   w i l l   g e t   m e s s e d   u p . 
         / /   I f   c o n s o l e . e r r o r   i s   o v e r r i d d e n ,   o r   l o g C a p t u r e d E r r o r ( )   s h o w s   a   d i a l o g   t h a t   t h r o w s , 
         / /   w e   w a n t   t o   r e p o r t   t h i s   e r r o r   o u t s i d e   o f   t h e   n o r m a l   s t a c k   a s   a   l a s t   r e s o r t . 
         / /   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 3 1 8 8 
         s e t T i m e o u t ( f u n c t i o n   ( )   { 
             t h r o w   e ; 
         } ) ; 
     } 
 } 
 
 v a r   P o s s i b l y W e a k M a p $ 1   =   t y p e o f   W e a k M a p   = = =   ' f u n c t i o n '   ?   W e a k M a p   :   M a p ; 
 
 f u n c t i o n   c r e a t e R o o t E r r o r U p d a t e ( f i b e r ,   e r r o r I n f o ,   l a n e )   { 
     v a r   u p d a t e   =   c r e a t e U p d a t e ( N o T i m e s t a m p ,   l a n e ) ;   / /   U n m o u n t   t h e   r o o t   b y   r e n d e r i n g   n u l l . 
 
     u p d a t e . t a g   =   C a p t u r e U p d a t e ;   / /   C a u t i o n :   R e a c t   D e v T o o l s   c u r r e n t l y   d e p e n d s   o n   t h i s   p r o p e r t y 
     / /   b e i n g   c a l l e d   " e l e m e n t " . 
 
     u p d a t e . p a y l o a d   =   { 
         e l e m e n t :   n u l l 
     } ; 
     v a r   e r r o r   =   e r r o r I n f o . v a l u e ; 
 
     u p d a t e . c a l l b a c k   =   f u n c t i o n   ( )   { 
         o n U n c a u g h t E r r o r ( e r r o r ) ; 
         l o g C a p t u r e d E r r o r ( f i b e r ,   e r r o r I n f o ) ; 
     } ; 
 
     r e t u r n   u p d a t e ; 
 } 
 
 f u n c t i o n   c r e a t e C l a s s E r r o r U p d a t e ( f i b e r ,   e r r o r I n f o ,   l a n e )   { 
     v a r   u p d a t e   =   c r e a t e U p d a t e ( N o T i m e s t a m p ,   l a n e ) ; 
     u p d a t e . t a g   =   C a p t u r e U p d a t e ; 
     v a r   g e t D e r i v e d S t a t e F r o m E r r o r   =   f i b e r . t y p e . g e t D e r i v e d S t a t e F r o m E r r o r ; 
 
     i f   ( t y p e o f   g e t D e r i v e d S t a t e F r o m E r r o r   = = =   ' f u n c t i o n ' )   { 
         v a r   e r r o r $ 1   =   e r r o r I n f o . v a l u e ; 
 
         u p d a t e . p a y l o a d   =   f u n c t i o n   ( )   { 
             r e t u r n   g e t D e r i v e d S t a t e F r o m E r r o r ( e r r o r $ 1 ) ; 
         } ; 
 
         u p d a t e . c a l l b a c k   =   f u n c t i o n   ( )   { 
             { 
                 m a r k F a i l e d E r r o r B o u n d a r y F o r H o t R e l o a d i n g ( f i b e r ) ; 
             } 
 
             l o g C a p t u r e d E r r o r ( f i b e r ,   e r r o r I n f o ) ; 
         } ; 
     } 
 
     v a r   i n s t   =   f i b e r . s t a t e N o d e ; 
 
     i f   ( i n s t   ! = =   n u l l   & &   t y p e o f   i n s t . c o m p o n e n t D i d C a t c h   = = =   ' f u n c t i o n ' )   { 
         u p d a t e . c a l l b a c k   =   f u n c t i o n   c a l l b a c k ( )   { 
             { 
                 m a r k F a i l e d E r r o r B o u n d a r y F o r H o t R e l o a d i n g ( f i b e r ) ; 
             } 
 
             l o g C a p t u r e d E r r o r ( f i b e r ,   e r r o r I n f o ) ; 
 
             i f   ( t y p e o f   g e t D e r i v e d S t a t e F r o m E r r o r   ! = =   ' f u n c t i o n ' )   { 
                 / /   T o   p r e s e r v e   t h e   p r e e x i s t i n g   r e t r y   b e h a v i o r   o f   e r r o r   b o u n d a r i e s , 
                 / /   w e   k e e p   t r a c k   o f   w h i c h   o n e s   a l r e a d y   f a i l e d   d u r i n g   t h i s   b a t c h . 
                 / /   T h i s   g e t s   r e s e t   b e f o r e   w e   y i e l d   b a c k   t o   t h e   b r o w s e r . 
                 / /   T O D O :   W a r n   i n   s t r i c t   m o d e   i f   g e t D e r i v e d S t a t e F r o m E r r o r   i s 
                 / /   n o t   d e f i n e d . 
                 m a r k L e g a c y E r r o r B o u n d a r y A s F a i l e d ( t h i s ) ; 
             } 
 
             v a r   e r r o r $ 1   =   e r r o r I n f o . v a l u e ; 
             v a r   s t a c k   =   e r r o r I n f o . s t a c k ; 
             t h i s . c o m p o n e n t D i d C a t c h ( e r r o r $ 1 ,   { 
                 c o m p o n e n t S t a c k :   s t a c k   ! = =   n u l l   ?   s t a c k   :   ' ' 
             } ) ; 
 
             { 
                 i f   ( t y p e o f   g e t D e r i v e d S t a t e F r o m E r r o r   ! = =   ' f u n c t i o n ' )   { 
                     / /   I f   c o m p o n e n t D i d C a t c h   i s   t h e   o n l y   e r r o r   b o u n d a r y   m e t h o d   d e f i n e d , 
                     / /   t h e n   i t   n e e d s   t o   c a l l   s e t S t a t e   t o   r e c o v e r   f r o m   e r r o r s . 
                     / /   I f   n o   s t a t e   u p d a t e   i s   s c h e d u l e d   t h e n   t h e   b o u n d a r y   w i l l   s w a l l o w   t h e   e r r o r . 
                     i f   ( ! i n c l u d e s S o m e L a n e ( f i b e r . l a n e s ,   S y n c L a n e ) )   { 
                         e r r o r ( ' % s :   E r r o r   b o u n d a r i e s   s h o u l d   i m p l e m e n t   g e t D e r i v e d S t a t e F r o m E r r o r ( ) .   '   +   ' I n   t h a t   m e t h o d ,   r e t u r n   a   s t a t e   u p d a t e   t o   d i s p l a y   a n   e r r o r   m e s s a g e   o r   f a l l b a c k   U I . ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i b e r )   | |   ' U n k n o w n ' ) ; 
                     } 
                 } 
             } 
         } ; 
     } 
 
     r e t u r n   u p d a t e ; 
 } 
 
 f u n c t i o n   a t t a c h P i n g L i s t e n e r ( r o o t ,   w a k e a b l e ,   l a n e s )   { 
     / /   A t t a c h   a   p i n g   l i s t e n e r 
     / / 
     / /   T h e   d a t a   m i g h t   r e s o l v e   b e f o r e   w e   h a v e   a   c h a n c e   t o   c o m m i t   t h e   f a l l b a c k .   O r , 
     / /   i n   t h e   c a s e   o f   a   r e f r e s h ,   w e ' l l   n e v e r   c o m m i t   a   f a l l b a c k .   S o   w e   n e e d   t o 
     / /   a t t a c h   a   l i s t e n e r   n o w .   W h e n   i t   r e s o l v e s   ( " p i n g s " ) ,   w e   c a n   d e c i d e   w h e t h e r   t o 
     / /   t r y   r e n d e r i n g   t h e   t r e e   a g a i n . 
     / / 
     / /   O n l y   a t t a c h   a   l i s t e n e r   i f   o n e   d o e s   n o t   a l r e a d y   e x i s t   f o r   t h e   l a n e s 
     / /   w e ' r e   c u r r e n t l y   r e n d e r i n g   ( w h i c h   a c t s   l i k e   a   " t h r e a d   I D "   h e r e ) . 
     / / 
     / /   W e   o n l y   n e e d   t o   d o   t h i s   i n   c o n c u r r e n t   m o d e .   L e g a c y   S u s p e n s e   a l w a y s 
     / /   c o m m i t s   f a l l b a c k s   s y n c h r o n o u s l y ,   s o   t h e r e   a r e   n o   p i n g s . 
     v a r   p i n g C a c h e   =   r o o t . p i n g C a c h e ; 
     v a r   t h r e a d I D s ; 
 
     i f   ( p i n g C a c h e   = = =   n u l l )   { 
         p i n g C a c h e   =   r o o t . p i n g C a c h e   =   n e w   P o s s i b l y W e a k M a p $ 1 ( ) ; 
         t h r e a d I D s   =   n e w   S e t ( ) ; 
         p i n g C a c h e . s e t ( w a k e a b l e ,   t h r e a d I D s ) ; 
     }   e l s e   { 
         t h r e a d I D s   =   p i n g C a c h e . g e t ( w a k e a b l e ) ; 
 
         i f   ( t h r e a d I D s   = = =   u n d e f i n e d )   { 
             t h r e a d I D s   =   n e w   S e t ( ) ; 
             p i n g C a c h e . s e t ( w a k e a b l e ,   t h r e a d I D s ) ; 
         } 
     } 
 
     i f   ( ! t h r e a d I D s . h a s ( l a n e s ) )   { 
         / /   M e m o i z e   u s i n g   t h e   t h r e a d   I D   t o   p r e v e n t   r e d u n d a n t   l i s t e n e r s . 
         t h r e a d I D s . a d d ( l a n e s ) ; 
         v a r   p i n g   =   p i n g S u s p e n d e d R o o t . b i n d ( n u l l ,   r o o t ,   w a k e a b l e ,   l a n e s ) ; 
 
         { 
             i f   ( i s D e v T o o l s P r e s e n t )   { 
                 / /   I f   w e   h a v e   p e n d i n g   w o r k   s t i l l ,   r e s t o r e   t h e   o r i g i n a l   u p d a t e r s 
                 r e s t o r e P e n d i n g U p d a t e r s ( r o o t ,   l a n e s ) ; 
             } 
         } 
 
         w a k e a b l e . t h e n ( p i n g ,   p i n g ) ; 
     } 
 } 
 
 f u n c t i o n   a t t a c h R e t r y L i s t e n e r ( s u s p e n s e B o u n d a r y ,   r o o t ,   w a k e a b l e ,   l a n e s )   { 
     / /   R e t r y   l i s t e n e r 
     / / 
     / /   I f   t h e   f a l l b a c k   d o e s   c o m m i t ,   w e   n e e d   t o   a t t a c h   a   d i f f e r e n t   t y p e   o f 
     / /   l i s t e n e r .   T h i s   o n e   s c h e d u l e s   a n   u p d a t e   o n   t h e   S u s p e n s e   b o u n d a r y   t o   t u r n 
     / /   t h e   f a l l b a c k   s t a t e   o f f . 
     / / 
     / /   S t a s h   t h e   w a k e a b l e   o n   t h e   b o u n d a r y   f i b e r   s o   w e   c a n   a c c e s s   i t   i n   t h e 
     / /   c o m m i t   p h a s e . 
     / / 
     / /   W h e n   t h e   w a k e a b l e   r e s o l v e s ,   w e ' l l   a t t e m p t   t o   r e n d e r   t h e   b o u n d a r y 
     / /   a g a i n   ( " r e t r y " ) . 
     v a r   w a k e a b l e s   =   s u s p e n s e B o u n d a r y . u p d a t e Q u e u e ; 
 
     i f   ( w a k e a b l e s   = = =   n u l l )   { 
         v a r   u p d a t e Q u e u e   =   n e w   S e t ( ) ; 
         u p d a t e Q u e u e . a d d ( w a k e a b l e ) ; 
         s u s p e n s e B o u n d a r y . u p d a t e Q u e u e   =   u p d a t e Q u e u e ; 
     }   e l s e   { 
         w a k e a b l e s . a d d ( w a k e a b l e ) ; 
     } 
 } 
 
 f u n c t i o n   r e s e t S u s p e n d e d C o m p o n e n t ( s o u r c e F i b e r ,   r o o t R e n d e r L a n e s )   { 
     / /   A   l e g a c y   m o d e   S u s p e n s e   q u i r k ,   o n l y   r e l e v a n t   t o   h o o k   c o m p o n e n t s . 
 
 
     v a r   t a g   =   s o u r c e F i b e r . t a g ; 
 
     i f   ( ( s o u r c e F i b e r . m o d e   &   C o n c u r r e n t M o d e )   = = =   N o M o d e   & &   ( t a g   = = =   F u n c t i o n C o m p o n e n t   | |   t a g   = = =   F o r w a r d R e f   | |   t a g   = = =   S i m p l e M e m o C o m p o n e n t ) )   { 
         v a r   c u r r e n t S o u r c e   =   s o u r c e F i b e r . a l t e r n a t e ; 
 
         i f   ( c u r r e n t S o u r c e )   { 
             s o u r c e F i b e r . u p d a t e Q u e u e   =   c u r r e n t S o u r c e . u p d a t e Q u e u e ; 
             s o u r c e F i b e r . m e m o i z e d S t a t e   =   c u r r e n t S o u r c e . m e m o i z e d S t a t e ; 
             s o u r c e F i b e r . l a n e s   =   c u r r e n t S o u r c e . l a n e s ; 
         }   e l s e   { 
             s o u r c e F i b e r . u p d a t e Q u e u e   =   n u l l ; 
             s o u r c e F i b e r . m e m o i z e d S t a t e   =   n u l l ; 
         } 
     } 
 } 
 
 f u n c t i o n   g e t N e a r e s t S u s p e n s e B o u n d a r y T o C a p t u r e ( r e t u r n F i b e r )   { 
     v a r   n o d e   =   r e t u r n F i b e r ; 
 
     d o   { 
         i f   ( n o d e . t a g   = = =   S u s p e n s e C o m p o n e n t   & &   s h o u l d C a p t u r e S u s p e n s e ( n o d e ) )   { 
             r e t u r n   n o d e ; 
         }   / /   T h i s   b o u n d a r y   a l r e a d y   c a p t u r e d   d u r i n g   t h i s   r e n d e r .   C o n t i n u e   t o   t h e   n e x t 
         / /   b o u n d a r y . 
 
 
         n o d e   =   n o d e . r e t u r n ; 
     }   w h i l e   ( n o d e   ! = =   n u l l ) ; 
 
     r e t u r n   n u l l ; 
 } 
 
 f u n c t i o n   m a r k S u s p e n s e B o u n d a r y S h o u l d C a p t u r e ( s u s p e n s e B o u n d a r y ,   r e t u r n F i b e r ,   s o u r c e F i b e r ,   r o o t ,   r o o t R e n d e r L a n e s )   { 
     / /   T h i s   m a r k s   a   S u s p e n s e   b o u n d a r y   s o   t h a t   w h e n   w e ' r e   u n w i n d i n g   t h e   s t a c k , 
     / /   i t   c a p t u r e s   t h e   s u s p e n d e d   " e x c e p t i o n "   a n d   d o e s   a   s e c o n d   ( f a l l b a c k )   p a s s . 
     i f   ( ( s u s p e n s e B o u n d a r y . m o d e   &   C o n c u r r e n t M o d e )   = = =   N o M o d e )   { 
         / /   L e g a c y   M o d e   S u s p e n s e 
         / / 
         / /   I f   t h e   b o u n d a r y   i s   i n   l e g a c y   m o d e ,   w e   s h o u l d   * n o t * 
         / /   s u s p e n d   t h e   c o m m i t .   P r e t e n d   a s   i f   t h e   s u s p e n d e d   c o m p o n e n t   r e n d e r e d 
         / /   n u l l   a n d   k e e p   r e n d e r i n g .   W h e n   t h e   S u s p e n s e   b o u n d a r y   c o m p l e t e s , 
         / /   w e ' l l   d o   a   s e c o n d   p a s s   t o   r e n d e r   t h e   f a l l b a c k . 
         i f   ( s u s p e n s e B o u n d a r y   = = =   r e t u r n F i b e r )   { 
             / /   S p e c i a l   c a s e   w h e r e   w e   s u s p e n d e d   w h i l e   r e c o n c i l i n g   t h e   c h i l d r e n   o f 
             / /   a   S u s p e n s e   b o u n d a r y ' s   i n n e r   O f f s c r e e n   w r a p p e r   f i b e r .   T h i s   h a p p e n s 
             / /   w h e n   a   R e a c t . l a z y   c o m p o n e n t   i s   a   d i r e c t   c h i l d   o f   a 
             / /   S u s p e n s e   b o u n d a r y . 
             / / 
             / /   S u s p e n s e   b o u n d a r i e s   a r e   i m p l e m e n t e d   a s   m u l t i p l e   f i b e r s ,   b u t   t h e y 
             / /   a r e   a   s i n g l e   c o n c e p t u a l   u n i t .   T h e   l e g a c y   m o d e   b e h a v i o r   w h e r e   w e 
             / /   p r e t e n d   t h e   s u s p e n d e d   f i b e r   c o m m i t t e d   a s   ` n u l l `   w o n ' t   w o r k , 
             / /   b e c a u s e   i n   t h i s   c a s e   t h e   " s u s p e n d e d "   f i b e r   i s   t h e   i n n e r 
             / /   O f f s c r e e n   w r a p p e r . 
             / / 
             / /   B e c a u s e   t h e   c o n t e n t s   o f   t h e   b o u n d a r y   h a v e n ' t   s t a r t e d   r e n d e r i n g 
             / /   y e t   ( i . e .   n o t h i n g   i n   t h e   t r e e   h a s   p a r t i a l l y   r e n d e r e d )   w e   c a n 
             / /   s w i t c h   t o   t h e   r e g u l a r ,   c o n c u r r e n t   m o d e   b e h a v i o r :   m a r k   t h e 
             / /   b o u n d a r y   w i t h   S h o u l d C a p t u r e   a n d   e n t e r   t h e   u n w i n d   p h a s e . 
             s u s p e n s e B o u n d a r y . f l a g s   | =   S h o u l d C a p t u r e ; 
         }   e l s e   { 
             s u s p e n s e B o u n d a r y . f l a g s   | =   D i d C a p t u r e ; 
             s o u r c e F i b e r . f l a g s   | =   F o r c e U p d a t e F o r L e g a c y S u s p e n s e ;   / /   W e ' r e   g o i n g   t o   c o m m i t   t h i s   f i b e r   e v e n   t h o u g h   i t   d i d n ' t   c o m p l e t e . 
             / /   B u t   w e   s h o u l d n ' t   c a l l   a n y   l i f e c y c l e   m e t h o d s   o r   c a l l b a c k s .   R e m o v e 
             / /   a l l   l i f e c y c l e   e f f e c t   t a g s . 
 
             s o u r c e F i b e r . f l a g s   & =   ~ ( L i f e c y c l e E f f e c t M a s k   |   I n c o m p l e t e ) ; 
 
             i f   ( s o u r c e F i b e r . t a g   = = =   C l a s s C o m p o n e n t )   { 
                 v a r   c u r r e n t S o u r c e F i b e r   =   s o u r c e F i b e r . a l t e r n a t e ; 
 
                 i f   ( c u r r e n t S o u r c e F i b e r   = = =   n u l l )   { 
                     / /   T h i s   i s   a   n e w   m o u n t .   C h a n g e   t h e   t a g   s o   i t ' s   n o t   m i s t a k e n   f o r   a 
                     / /   c o m p l e t e d   c l a s s   c o m p o n e n t .   F o r   e x a m p l e ,   w e   s h o u l d   n o t   c a l l 
                     / /   c o m p o n e n t W i l l U n m o u n t   i f   i t   i s   d e l e t e d . 
                     s o u r c e F i b e r . t a g   =   I n c o m p l e t e C l a s s C o m p o n e n t ; 
                 }   e l s e   { 
                     / /   W h e n   w e   t r y   r e n d e r i n g   a g a i n ,   w e   s h o u l d   n o t   r e u s e   t h e   c u r r e n t   f i b e r , 
                     / /   s i n c e   i t ' s   k n o w n   t o   b e   i n   a n   i n c o n s i s t e n t   s t a t e .   U s e   a   f o r c e   u p d a t e   t o 
                     / /   p r e v e n t   a   b a i l   o u t . 
                     v a r   u p d a t e   =   c r e a t e U p d a t e ( N o T i m e s t a m p ,   S y n c L a n e ) ; 
                     u p d a t e . t a g   =   F o r c e U p d a t e ; 
                     e n q u e u e U p d a t e ( s o u r c e F i b e r ,   u p d a t e ) ; 
                 } 
             }   / /   T h e   s o u r c e   f i b e r   d i d   n o t   c o m p l e t e .   M a r k   i t   w i t h   S y n c   p r i o r i t y   t o 
             / /   i n d i c a t e   t h a t   i t   s t i l l   h a s   p e n d i n g   w o r k . 
 
 
             s o u r c e F i b e r . l a n e s   =   m e r g e L a n e s ( s o u r c e F i b e r . l a n e s ,   S y n c L a n e ) ; 
         } 
 
         r e t u r n   s u s p e n s e B o u n d a r y ; 
     }   / /   C o n f i r m e d   t h a t   t h e   b o u n d a r y   i s   i n   a   c o n c u r r e n t   m o d e   t r e e .   C o n t i n u e 
     / /   w i t h   t h e   n o r m a l   s u s p e n d   p a t h . 
     / / 
     / /   A f t e r   t h i s   w e ' l l   u s e   a   s e t   o f   h e u r i s t i c s   t o   d e t e r m i n e   w h e t h e r   t h i s 
     / /   r e n d e r   p a s s   w i l l   r u n   t o   c o m p l e t i o n   o r   r e s t a r t   o r   " s u s p e n d "   t h e   c o m m i t . 
     / /   T h e   a c t u a l   l o g i c   f o r   t h i s   i s   s p r e a d   o u t   i n   d i f f e r e n t   p l a c e s . 
     / / 
     / /   T h i s   f i r s t   p r i n c i p l e   i s   t h a t   i f   w e ' r e   g o i n g   t o   s u s p e n d   w h e n   w e   c o m p l e t e 
     / /   a   r o o t ,   t h e n   w e   s h o u l d   a l s o   r e s t a r t   i f   w e   g e t   a n   u p d a t e   o r   p i n g   t h a t 
     / /   m i g h t   u n s u s p e n d   i t ,   a n d   v i c e   v e r s a .   T h e   o n l y   r e a s o n   t o   s u s p e n d   i s 
     / /   b e c a u s e   y o u   t h i n k   y o u   m i g h t   w a n t   t o   r e s t a r t   b e f o r e   c o m m i t t i n g .   H o w e v e r , 
     / /   i t   d o e s n ' t   m a k e   s e n s e   t o   r e s t a r t   o n l y   w h i l e   i n   t h e   p e r i o d   w e ' r e   s u s p e n d e d . 
     / / 
     / /   R e s t a r t i n g   t o o   a g g r e s s i v e l y   i s   a l s o   n o t   g o o d   b e c a u s e   i t   s t a r v e s   o u t   a n y 
     / /   i n t e r m e d i a t e   l o a d i n g   s t a t e .   S o   w e   u s e   h e u r i s t i c s   t o   d e t e r m i n e   w h e n . 
     / /   S u s p e n s e   H e u r i s t i c s 
     / / 
     / /   I f   n o t h i n g   t h r e w   a   P r o m i s e   o r   a l l   t h e   s a m e   f a l l b a c k s   a r e   a l r e a d y   s h o w i n g , 
     / /   t h e n   d o n ' t   s u s p e n d / r e s t a r t . 
     / / 
     / /   I f   t h i s   i s   a n   i n i t i a l   r e n d e r   o f   a   n e w   t r e e   o f   S u s p e n s e   b o u n d a r i e s   a n d 
     / /   t h o s e   t r i g g e r   a   f a l l b a c k ,   t h e n   d o n ' t   s u s p e n d / r e s t a r t .   W e   w a n t   t o   e n s u r e 
     / /   t h a t   w e   c a n   s h o w   t h e   i n i t i a l   l o a d i n g   s t a t e   a s   q u i c k l y   a s   p o s s i b l e . 
     / / 
     / /   I f   w e   h i t   a   " D e l a y e d "   c a s e ,   s u c h   a s   w h e n   w e ' d   s w i t c h   f r o m   c o n t e n t   b a c k   i n t o 
     / /   a   f a l l b a c k ,   t h e n   w e   s h o u l d   a l w a y s   s u s p e n d / r e s t a r t .   T r a n s i t i o n s   a p p l y 
     / /   t o   t h i s   c a s e .   I f   n o n e   i s   d e f i n e d ,   J N D   i s   u s e d   i n s t e a d . 
     / / 
     / /   I f   w e ' r e   a l r e a d y   s h o w i n g   a   f a l l b a c k   a n d   i t   g e t s   " r e t r i e d " ,   a l l o w i n g   u s   t o   s h o w 
     / /   a n o t h e r   l e v e l ,   b u t   t h e r e ' s   s t i l l   a n   i n n e r   b o u n d a r y   t h a t   w o u l d   s h o w   a   f a l l b a c k , 
     / /   t h e n   w e   s u s p e n d / r e s t a r t   f o r   5 0 0 m s   s i n c e   t h e   l a s t   t i m e   w e   s h o w e d   a   f a l l b a c k 
     / /   a n y w h e r e   i n   t h e   t r e e .   T h i s   e f f e c t i v e l y   t h r o t t l e s   p r o g r e s s i v e   l o a d i n g   i n t o   a 
     / /   c o n s i s t e n t   t r a i n   o f   c o m m i t s .   T h i s   a l s o   g i v e s   u s   a n   o p p o r t u n i t y   t o   r e s t a r t   t o 
     / /   g e t   t o   t h e   c o m p l e t e d   s t a t e   s l i g h t l y   e a r l i e r . 
     / / 
     / /   I f   t h e r e ' s   a m b i g u i t y   d u e   t o   b a t c h i n g   i t ' s   r e s o l v e d   i n   p r e f e r e n c e   o f : 
     / /   1 )   " d e l a y e d " ,   2 )   " i n i t i a l   r e n d e r " ,   3 )   " r e t r y " . 
     / / 
     / /   W e   w a n t   t o   e n s u r e   t h a t   a   " b u s y "   s t a t e   d o e s n ' t   g e t   f o r c e   c o m m i t t e d .   W e   w a n t   t o 
     / /   e n s u r e   t h a t   n e w   i n i t i a l   l o a d i n g   s t a t e s   c a n   c o m m i t   a s   s o o n   a s   p o s s i b l e . 
 
 
     s u s p e n s e B o u n d a r y . f l a g s   | =   S h o u l d C a p t u r e ;   / /   T O D O :   I   t h i n k   w e   c a n   r e m o v e   t h i s ,   s i n c e   w e   n o w   u s e   ` D i d C a p t u r e `   i n 
     / /   t h e   b e g i n   p h a s e   t o   p r e v e n t   a n   e a r l y   b a i l o u t . 
 
     s u s p e n s e B o u n d a r y . l a n e s   =   r o o t R e n d e r L a n e s ; 
     r e t u r n   s u s p e n s e B o u n d a r y ; 
 } 
 
 f u n c t i o n   t h r o w E x c e p t i o n ( r o o t ,   r e t u r n F i b e r ,   s o u r c e F i b e r ,   v a l u e ,   r o o t R e n d e r L a n e s )   { 
     / /   T h e   s o u r c e   f i b e r   d i d   n o t   c o m p l e t e . 
     s o u r c e F i b e r . f l a g s   | =   I n c o m p l e t e ; 
 
     { 
         i f   ( i s D e v T o o l s P r e s e n t )   { 
             / /   I f   w e   h a v e   p e n d i n g   w o r k   s t i l l ,   r e s t o r e   t h e   o r i g i n a l   u p d a t e r s 
             r e s t o r e P e n d i n g U p d a t e r s ( r o o t ,   r o o t R e n d e r L a n e s ) ; 
         } 
     } 
 
     i f   ( v a l u e   ! = =   n u l l   & &   t y p e o f   v a l u e   = = =   ' o b j e c t '   & &   t y p e o f   v a l u e . t h e n   = = =   ' f u n c t i o n ' )   { 
         / /   T h i s   i s   a   w a k e a b l e .   T h e   c o m p o n e n t   s u s p e n d e d . 
         v a r   w a k e a b l e   =   v a l u e ; 
         r e s e t S u s p e n d e d C o m p o n e n t ( s o u r c e F i b e r ) ; 
 
         { 
             i f   ( g e t I s H y d r a t i n g ( )   & &   s o u r c e F i b e r . m o d e   &   C o n c u r r e n t M o d e )   { 
                 m a r k D i d T h r o w W h i l e H y d r a t i n g D E V ( ) ; 
             } 
         } 
 
 
         v a r   s u s p e n s e B o u n d a r y   =   g e t N e a r e s t S u s p e n s e B o u n d a r y T o C a p t u r e ( r e t u r n F i b e r ) ; 
 
         i f   ( s u s p e n s e B o u n d a r y   ! = =   n u l l )   { 
             s u s p e n s e B o u n d a r y . f l a g s   & =   ~ F o r c e C l i e n t R e n d e r ; 
             m a r k S u s p e n s e B o u n d a r y S h o u l d C a p t u r e ( s u s p e n s e B o u n d a r y ,   r e t u r n F i b e r ,   s o u r c e F i b e r ,   r o o t ,   r o o t R e n d e r L a n e s ) ;   / /   W e   o n l y   a t t a c h   p i n g   l i s t e n e r s   i n   c o n c u r r e n t   m o d e .   L e g a c y   S u s p e n s e   a l w a y s 
             / /   c o m m i t s   f a l l b a c k s   s y n c h r o n o u s l y ,   s o   t h e r e   a r e   n o   p i n g s . 
 
             i f   ( s u s p e n s e B o u n d a r y . m o d e   &   C o n c u r r e n t M o d e )   { 
                 a t t a c h P i n g L i s t e n e r ( r o o t ,   w a k e a b l e ,   r o o t R e n d e r L a n e s ) ; 
             } 
 
             a t t a c h R e t r y L i s t e n e r ( s u s p e n s e B o u n d a r y ,   r o o t ,   w a k e a b l e ) ; 
             r e t u r n ; 
         }   e l s e   { 
             / /   N o   b o u n d a r y   w a s   f o u n d .   U n l e s s   t h i s   i s   a   s y n c   u p d a t e ,   t h i s   i s   O K . 
             / /   W e   c a n   s u s p e n d   a n d   w a i t   f o r   m o r e   d a t a   t o   a r r i v e . 
             i f   ( ! i n c l u d e s S y n c L a n e ( r o o t R e n d e r L a n e s ) )   { 
                 / /   T h i s   i s   n o t   a   s y n c   u p d a t e .   S u s p e n d .   S i n c e   w e ' r e   n o t   a c t i v a t i n g   a 
                 / /   S u s p e n s e   b o u n d a r y ,   t h i s   w i l l   u n w i n d   a l l   t h e   w a y   t o   t h e   r o o t   w i t h o u t 
                 / /   p e r f o r m i n g   a   s e c o n d   p a s s   t o   r e n d e r   a   f a l l b a c k .   ( T h i s   i s   a r g u a b l y   h o w 
                 / /   r e f r e s h   t r a n s i t i o n s   s h o u l d   w o r k ,   t o o ,   s i n c e   w e ' r e   n o t   g o i n g   t o   c o m m i t 
                 / /   t h e   f a l l b a c k s   a n y w a y . ) 
                 / / 
                 / /   T h i s   c a s e   a l s o   a p p l i e s   t o   i n i t i a l   h y d r a t i o n . 
                 a t t a c h P i n g L i s t e n e r ( r o o t ,   w a k e a b l e ,   r o o t R e n d e r L a n e s ) ; 
                 r e n d e r D i d S u s p e n d D e l a y I f P o s s i b l e ( ) ; 
                 r e t u r n ; 
             }   / /   T h i s   i s   a   s y n c / d i s c r e t e   u p d a t e .   W e   t r e a t   t h i s   c a s e   l i k e   a n   e r r o r 
             / /   b e c a u s e   d i s c r e t e   r e n d e r s   a r e   e x p e c t e d   t o   p r o d u c e   a   c o m p l e t e   t r e e 
             / /   s y n c h r o n o u s l y   t o   m a i n t a i n   c o n s i s t e n c y   w i t h   e x t e r n a l   s t a t e . 
 
 
             v a r   u n c a u g h t S u s p e n s e E r r o r   =   n e w   E r r o r ( ' A   c o m p o n e n t   s u s p e n d e d   w h i l e   r e s p o n d i n g   t o   s y n c h r o n o u s   i n p u t .   T h i s   '   +   ' w i l l   c a u s e   t h e   U I   t o   b e   r e p l a c e d   w i t h   a   l o a d i n g   i n d i c a t o r .   T o   '   +   ' f i x ,   u p d a t e s   t h a t   s u s p e n d   s h o u l d   b e   w r a p p e d   '   +   ' w i t h   s t a r t T r a n s i t i o n . ' ) ;   / /   I f   w e ' r e   o u t s i d e   a   t r a n s i t i o n ,   f a l l   t h r o u g h   t o   t h e   r e g u l a r   e r r o r   p a t h . 
             / /   T h e   e r r o r   w i l l   b e   c a u g h t   b y   t h e   n e a r e s t   s u s p e n s e   b o u n d a r y . 
 
             v a l u e   =   u n c a u g h t S u s p e n s e E r r o r ; 
         } 
     }   e l s e   { 
         / /   T h i s   i s   a   r e g u l a r   e r r o r ,   n o t   a   S u s p e n s e   w a k e a b l e . 
         i f   ( g e t I s H y d r a t i n g ( )   & &   s o u r c e F i b e r . m o d e   &   C o n c u r r e n t M o d e )   { 
             m a r k D i d T h r o w W h i l e H y d r a t i n g D E V ( ) ; 
 
             v a r   _ s u s p e n s e B o u n d a r y   =   g e t N e a r e s t S u s p e n s e B o u n d a r y T o C a p t u r e ( r e t u r n F i b e r ) ;   / /   I f   t h e   e r r o r   w a s   t h r o w n   d u r i n g   h y d r a t i o n ,   w e   m a y   b e   a b l e   t o   r e c o v e r   b y 
             / /   d i s c a r d i n g   t h e   d e h y d r a t e d   c o n t e n t   a n d   s w i t c h i n g   t o   a   c l i e n t   r e n d e r . 
             / /   I n s t e a d   o f   s u r f a c i n g   t h e   e r r o r ,   f i n d   t h e   n e a r e s t   S u s p e n s e   b o u n d a r y 
             / /   a n d   r e n d e r   i t   a g a i n   w i t h o u t   h y d r a t i o n . 
 
 
             i f   ( _ s u s p e n s e B o u n d a r y   ! = =   n u l l )   { 
                 i f   ( ( _ s u s p e n s e B o u n d a r y . f l a g s   &   S h o u l d C a p t u r e )   = = =   N o F l a g s )   { 
                     / /   S e t   a   f l a g   t o   i n d i c a t e   t h a t   w e   s h o u l d   t r y   r e n d e r i n g   t h e   n o r m a l 
                     / /   c h i l d r e n   a g a i n ,   n o t   t h e   f a l l b a c k . 
                     _ s u s p e n s e B o u n d a r y . f l a g s   | =   F o r c e C l i e n t R e n d e r ; 
                 } 
 
                 m a r k S u s p e n s e B o u n d a r y S h o u l d C a p t u r e ( _ s u s p e n s e B o u n d a r y ,   r e t u r n F i b e r ,   s o u r c e F i b e r ,   r o o t ,   r o o t R e n d e r L a n e s ) ;   / /   E v e n   t h o u g h   t h e   u s e r   m a y   n o t   b e   a f f e c t e d   b y   t h i s   e r r o r ,   w e   s h o u l d 
                 / /   s t i l l   l o g   i t   s o   i t   c a n   b e   f i x e d . 
 
                 q u e u e H y d r a t i o n E r r o r ( v a l u e ) ; 
                 r e t u r n ; 
             } 
         } 
     }   / /   W e   d i d n ' t   f i n d   a   b o u n d a r y   t h a t   c o u l d   h a n d l e   t h i s   t y p e   o f   e x c e p t i o n .   S t a r t 
     / /   o v e r   a n d   t r a v e r s e   p a r e n t   p a t h   a g a i n ,   t h i s   t i m e   t r e a t i n g   t h e   e x c e p t i o n 
     / /   a s   a n   e r r o r . 
 
 
     r e n d e r D i d E r r o r ( v a l u e ) ; 
     v a l u e   =   c r e a t e C a p t u r e d V a l u e ( v a l u e ,   s o u r c e F i b e r ) ; 
     v a r   w o r k I n P r o g r e s s   =   r e t u r n F i b e r ; 
 
     d o   { 
         s w i t c h   ( w o r k I n P r o g r e s s . t a g )   { 
             c a s e   H o s t R o o t : 
                 { 
                     v a r   _ e r r o r I n f o   =   v a l u e ; 
                     w o r k I n P r o g r e s s . f l a g s   | =   S h o u l d C a p t u r e ; 
                     v a r   l a n e   =   p i c k A r b i t r a r y L a n e ( r o o t R e n d e r L a n e s ) ; 
                     w o r k I n P r o g r e s s . l a n e s   =   m e r g e L a n e s ( w o r k I n P r o g r e s s . l a n e s ,   l a n e ) ; 
                     v a r   u p d a t e   =   c r e a t e R o o t E r r o r U p d a t e ( w o r k I n P r o g r e s s ,   _ e r r o r I n f o ,   l a n e ) ; 
                     e n q u e u e C a p t u r e d U p d a t e ( w o r k I n P r o g r e s s ,   u p d a t e ) ; 
                     r e t u r n ; 
                 } 
 
             c a s e   C l a s s C o m p o n e n t : 
                 / /   C a p t u r e   a n d   r e t r y 
                 v a r   e r r o r I n f o   =   v a l u e ; 
                 v a r   c t o r   =   w o r k I n P r o g r e s s . t y p e ; 
                 v a r   i n s t a n c e   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
 
                 i f   ( ( w o r k I n P r o g r e s s . f l a g s   &   D i d C a p t u r e )   = = =   N o F l a g s   & &   ( t y p e o f   c t o r . g e t D e r i v e d S t a t e F r o m E r r o r   = = =   ' f u n c t i o n '   | |   i n s t a n c e   ! = =   n u l l   & &   t y p e o f   i n s t a n c e . c o m p o n e n t D i d C a t c h   = = =   ' f u n c t i o n '   & &   ! i s A l r e a d y F a i l e d L e g a c y E r r o r B o u n d a r y ( i n s t a n c e ) ) )   { 
                     w o r k I n P r o g r e s s . f l a g s   | =   S h o u l d C a p t u r e ; 
 
                     v a r   _ l a n e   =   p i c k A r b i t r a r y L a n e ( r o o t R e n d e r L a n e s ) ; 
 
                     w o r k I n P r o g r e s s . l a n e s   =   m e r g e L a n e s ( w o r k I n P r o g r e s s . l a n e s ,   _ l a n e ) ;   / /   S c h e d u l e   t h e   e r r o r   b o u n d a r y   t o   r e - r e n d e r   u s i n g   u p d a t e d   s t a t e 
 
                     v a r   _ u p d a t e   =   c r e a t e C l a s s E r r o r U p d a t e ( w o r k I n P r o g r e s s ,   e r r o r I n f o ,   _ l a n e ) ; 
 
                     e n q u e u e C a p t u r e d U p d a t e ( w o r k I n P r o g r e s s ,   _ u p d a t e ) ; 
                     r e t u r n ; 
                 } 
 
                 b r e a k ; 
         } 
 
         w o r k I n P r o g r e s s   =   w o r k I n P r o g r e s s . r e t u r n ; 
     }   w h i l e   ( w o r k I n P r o g r e s s   ! = =   n u l l ) ; 
 } 
 
 f u n c t i o n   g e t S u s p e n d e d C a c h e ( )   { 
     { 
         r e t u r n   n u l l ; 
     }   / /   T h i s   f u n c t i o n   i s   c a l l e d   w h e n   a   S u s p e n s e   b o u n d a r y   s u s p e n d s .   I t   r e t u r n s   t h e 
 } 
 
 f u n c t i o n   m a r k U p d a t e ( w o r k I n P r o g r e s s )   { 
     / /   T a g   t h e   f i b e r   w i t h   a n   u p d a t e   e f f e c t .   T h i s   t u r n s   a   P l a c e m e n t   i n t o 
     / /   a   P l a c e m e n t A n d U p d a t e . 
     w o r k I n P r o g r e s s . f l a g s   | =   U p d a t e ; 
 } 
 
 f u n c t i o n   m a r k R e f ( w o r k I n P r o g r e s s )   { 
     w o r k I n P r o g r e s s . f l a g s   | =   R e f ; 
 
     { 
         w o r k I n P r o g r e s s . f l a g s   | =   R e f S t a t i c ; 
     } 
 } 
 
 v a r   a p p e n d A l l C h i l d r e n ; 
 v a r   u p d a t e H o s t C o n t a i n e r ; 
 v a r   u p d a t e H o s t C o m p o n e n t ; 
 v a r   u p d a t e H o s t T e x t ; 
 
 { 
     / /   M u t a t i o n   m o d e 
     a p p e n d A l l C h i l d r e n   =   f u n c t i o n   ( p a r e n t ,   w o r k I n P r o g r e s s ,   n e e d s V i s i b i l i t y T o g g l e ,   i s H i d d e n )   { 
         / /   W e   o n l y   h a v e   t h e   t o p   F i b e r   t h a t   w a s   c r e a t e d   b u t   w e   n e e d   r e c u r s e   d o w n   i t s 
         / /   c h i l d r e n   t o   f i n d   a l l   t h e   t e r m i n a l   n o d e s . 
         v a r   n o d e   =   w o r k I n P r o g r e s s . c h i l d ; 
 
         w h i l e   ( n o d e   ! = =   n u l l )   { 
             i f   ( n o d e . t a g   = = =   H o s t C o m p o n e n t   | |   n o d e . t a g   = = =   H o s t T e x t )   { 
                 a p p e n d I n i t i a l C h i l d ( p a r e n t ,   n o d e . s t a t e N o d e ) ; 
             }   e l s e   i f   ( n o d e . t a g   = = =   H o s t P o r t a l )   ;   e l s e   i f   ( n o d e . c h i l d   ! = =   n u l l )   { 
                 n o d e . c h i l d . r e t u r n   =   n o d e ; 
                 n o d e   =   n o d e . c h i l d ; 
                 c o n t i n u e ; 
             } 
 
             i f   ( n o d e   = = =   w o r k I n P r o g r e s s )   { 
                 r e t u r n ; 
             } 
 
             w h i l e   ( n o d e . s i b l i n g   = = =   n u l l )   { 
                 i f   ( n o d e . r e t u r n   = = =   n u l l   | |   n o d e . r e t u r n   = = =   w o r k I n P r o g r e s s )   { 
                     r e t u r n ; 
                 } 
 
                 n o d e   =   n o d e . r e t u r n ; 
             } 
 
             n o d e . s i b l i n g . r e t u r n   =   n o d e . r e t u r n ; 
             n o d e   =   n o d e . s i b l i n g ; 
         } 
     } ; 
 
     u p d a t e H o s t C o n t a i n e r   =   f u n c t i o n   ( c u r r e n t ,   w o r k I n P r o g r e s s )   { / /   N o o p 
     } ; 
 
     u p d a t e H o s t C o m p o n e n t   =   f u n c t i o n   ( c u r r e n t ,   w o r k I n P r o g r e s s ,   t y p e ,   n e w P r o p s ,   r o o t C o n t a i n e r I n s t a n c e )   { 
         / /   I f   w e   h a v e   a n   a l t e r n a t e ,   t h a t   m e a n s   t h i s   i s   a n   u p d a t e   a n d   w e   n e e d   t o 
         / /   s c h e d u l e   a   s i d e - e f f e c t   t o   d o   t h e   u p d a t e s . 
         v a r   o l d P r o p s   =   c u r r e n t . m e m o i z e d P r o p s ; 
 
         i f   ( o l d P r o p s   = = =   n e w P r o p s )   { 
             / /   I n   m u t a t i o n   m o d e ,   t h i s   i s   s u f f i c i e n t   f o r   a   b a i l o u t   b e c a u s e 
             / /   w e   w o n ' t   t o u c h   t h i s   n o d e   e v e n   i f   c h i l d r e n   c h a n g e d . 
             r e t u r n ; 
         }   / /   I f   w e   g e t   u p d a t e d   b e c a u s e   o n e   o f   o u r   c h i l d r e n   u p d a t e d ,   w e   d o n ' t 
         / /   h a v e   n e w P r o p s   s o   w e ' l l   h a v e   t o   r e u s e   t h e m . 
         / /   T O D O :   S p l i t   t h e   u p d a t e   A P I   a s   s e p a r a t e   f o r   t h e   p r o p s   v s .   c h i l d r e n . 
         / /   E v e n   b e t t e r   w o u l d   b e   i f   c h i l d r e n   w e r e n ' t   s p e c i a l   c a s e d   a t   a l l   t h o . 
 
 
         v a r   i n s t a n c e   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
         v a r   c u r r e n t H o s t C o n t e x t   =   g e t H o s t C o n t e x t ( ) ;   / /   T O D O :   E x p e r i e n c i n g   a n   e r r o r   w h e r e   o l d P r o p s   i s   n u l l .   S u g g e s t s   a   h o s t 
         / /   c o m p o n e n t   i s   h i t t i n g   t h e   r e s u m e   p a t h .   F i g u r e   o u t   w h y .   P o s s i b l y 
         / /   r e l a t e d   t o   ` h i d d e n ` . 
 
         v a r   u p d a t e P a y l o a d   =   p r e p a r e U p d a t e ( i n s t a n c e ,   t y p e ,   o l d P r o p s ,   n e w P r o p s ,   r o o t C o n t a i n e r I n s t a n c e ,   c u r r e n t H o s t C o n t e x t ) ;   / /   T O D O :   T y p e   t h i s   s p e c i f i c   t o   t h i s   t y p e   o f   c o m p o n e n t . 
 
         w o r k I n P r o g r e s s . u p d a t e Q u e u e   =   u p d a t e P a y l o a d ;   / /   I f   t h e   u p d a t e   p a y l o a d   i n d i c a t e s   t h a t   t h e r e   i s   a   c h a n g e   o r   i f   t h e r e 
         / /   i s   a   n e w   r e f   w e   m a r k   t h i s   a s   a n   u p d a t e .   A l l   t h e   w o r k   i s   d o n e   i n   c o m m i t W o r k . 
 
         i f   ( u p d a t e P a y l o a d )   { 
             m a r k U p d a t e ( w o r k I n P r o g r e s s ) ; 
         } 
     } ; 
 
     u p d a t e H o s t T e x t   =   f u n c t i o n   ( c u r r e n t ,   w o r k I n P r o g r e s s ,   o l d T e x t ,   n e w T e x t )   { 
         / /   I f   t h e   t e x t   d i f f e r s ,   m a r k   i t   a s   a n   u p d a t e .   A l l   t h e   w o r k   i n   d o n e   i n   c o m m i t W o r k . 
         i f   ( o l d T e x t   ! = =   n e w T e x t )   { 
             m a r k U p d a t e ( w o r k I n P r o g r e s s ) ; 
         } 
     } ; 
 } 
 
 f u n c t i o n   c u t O f f T a i l I f N e e d e d ( r e n d e r S t a t e ,   h a s R e n d e r e d A T a i l F a l l b a c k )   { 
     i f   ( g e t I s H y d r a t i n g ( ) )   { 
         / /   I f   w e ' r e   h y d r a t i n g ,   w e   s h o u l d   c o n s u m e   a s   m a n y   i t e m s   a s   w e   c a n 
         / /   s o   w e   d o n ' t   l e a v e   a n y   b e h i n d . 
         r e t u r n ; 
     } 
 
     s w i t c h   ( r e n d e r S t a t e . t a i l M o d e )   { 
         c a s e   ' h i d d e n ' : 
             { 
                 / /   A n y   i n s e r t i o n s   a t   t h e   e n d   o f   t h e   t a i l   l i s t   a f t e r   t h i s   p o i n t 
                 / /   s h o u l d   b e   i n v i s i b l e .   I f   t h e r e   a r e   a l r e a d y   m o u n t e d   b o u n d a r i e s 
                 / /   a n y t h i n g   b e f o r e   t h e m   a r e   n o t   c o n s i d e r e d   f o r   c o l l a p s i n g . 
                 / /   T h e r e f o r e   w e   n e e d   t o   g o   t h r o u g h   t h e   w h o l e   t a i l   t o   f i n d   i f 
                 / /   t h e r e   a r e   a n y . 
                 v a r   t a i l N o d e   =   r e n d e r S t a t e . t a i l ; 
                 v a r   l a s t T a i l N o d e   =   n u l l ; 
 
                 w h i l e   ( t a i l N o d e   ! = =   n u l l )   { 
                     i f   ( t a i l N o d e . a l t e r n a t e   ! = =   n u l l )   { 
                         l a s t T a i l N o d e   =   t a i l N o d e ; 
                     } 
 
                     t a i l N o d e   =   t a i l N o d e . s i b l i n g ; 
                 }   / /   N e x t   w e ' r e   s i m p l y   g o i n g   t o   d e l e t e   a l l   i n s e r t i o n s   a f t e r   t h e 
                 / /   l a s t   r e n d e r e d   i t e m . 
 
 
                 i f   ( l a s t T a i l N o d e   = = =   n u l l )   { 
                     / /   A l l   r e m a i n i n g   i t e m s   i n   t h e   t a i l   a r e   i n s e r t i o n s . 
                     r e n d e r S t a t e . t a i l   =   n u l l ; 
                 }   e l s e   { 
                     / /   D e t a c h   t h e   i n s e r t i o n   a f t e r   t h e   l a s t   n o d e   t h a t   w a s   a l r e a d y 
                     / /   i n s e r t e d . 
                     l a s t T a i l N o d e . s i b l i n g   =   n u l l ; 
                 } 
 
                 b r e a k ; 
             } 
 
         c a s e   ' c o l l a p s e d ' : 
             { 
                 / /   A n y   i n s e r t i o n s   a t   t h e   e n d   o f   t h e   t a i l   l i s t   a f t e r   t h i s   p o i n t 
                 / /   s h o u l d   b e   i n v i s i b l e .   I f   t h e r e   a r e   a l r e a d y   m o u n t e d   b o u n d a r i e s 
                 / /   a n y t h i n g   b e f o r e   t h e m   a r e   n o t   c o n s i d e r e d   f o r   c o l l a p s i n g . 
                 / /   T h e r e f o r e   w e   n e e d   t o   g o   t h r o u g h   t h e   w h o l e   t a i l   t o   f i n d   i f 
                 / /   t h e r e   a r e   a n y . 
                 v a r   _ t a i l N o d e   =   r e n d e r S t a t e . t a i l ; 
                 v a r   _ l a s t T a i l N o d e   =   n u l l ; 
 
                 w h i l e   ( _ t a i l N o d e   ! = =   n u l l )   { 
                     i f   ( _ t a i l N o d e . a l t e r n a t e   ! = =   n u l l )   { 
                         _ l a s t T a i l N o d e   =   _ t a i l N o d e ; 
                     } 
 
                     _ t a i l N o d e   =   _ t a i l N o d e . s i b l i n g ; 
                 }   / /   N e x t   w e ' r e   s i m p l y   g o i n g   t o   d e l e t e   a l l   i n s e r t i o n s   a f t e r   t h e 
                 / /   l a s t   r e n d e r e d   i t e m . 
 
 
                 i f   ( _ l a s t T a i l N o d e   = = =   n u l l )   { 
                     / /   A l l   r e m a i n i n g   i t e m s   i n   t h e   t a i l   a r e   i n s e r t i o n s . 
                     i f   ( ! h a s R e n d e r e d A T a i l F a l l b a c k   & &   r e n d e r S t a t e . t a i l   ! = =   n u l l )   { 
                         / /   W e   s u s p e n d e d   d u r i n g   t h e   h e a d .   W e   w a n t   t o   s h o w   a t   l e a s t   o n e 
                         / /   r o w   a t   t h e   t a i l .   S o   w e ' l l   k e e p   o n   a n d   c u t   o f f   t h e   r e s t . 
                         r e n d e r S t a t e . t a i l . s i b l i n g   =   n u l l ; 
                     }   e l s e   { 
                         r e n d e r S t a t e . t a i l   =   n u l l ; 
                     } 
                 }   e l s e   { 
                     / /   D e t a c h   t h e   i n s e r t i o n   a f t e r   t h e   l a s t   n o d e   t h a t   w a s   a l r e a d y 
                     / /   i n s e r t e d . 
                     _ l a s t T a i l N o d e . s i b l i n g   =   n u l l ; 
                 } 
 
                 b r e a k ; 
             } 
     } 
 } 
 
 f u n c t i o n   b u b b l e P r o p e r t i e s ( c o m p l e t e d W o r k )   { 
     v a r   d i d B a i l o u t   =   c o m p l e t e d W o r k . a l t e r n a t e   ! = =   n u l l   & &   c o m p l e t e d W o r k . a l t e r n a t e . c h i l d   = = =   c o m p l e t e d W o r k . c h i l d ; 
     v a r   n e w C h i l d L a n e s   =   N o L a n e s ; 
     v a r   s u b t r e e F l a g s   =   N o F l a g s ; 
 
     i f   ( ! d i d B a i l o u t )   { 
         / /   B u b b l e   u p   t h e   e a r l i e s t   e x p i r a t i o n   t i m e . 
         i f   (   ( c o m p l e t e d W o r k . m o d e   &   P r o f i l e M o d e )   ! = =   N o M o d e )   { 
             / /   I n   p r o f i l i n g   m o d e ,   r e s e t C h i l d E x p i r a t i o n T i m e   i s   a l s o   u s e d   t o   r e s e t 
             / /   p r o f i l e r   d u r a t i o n s . 
             v a r   a c t u a l D u r a t i o n   =   c o m p l e t e d W o r k . a c t u a l D u r a t i o n ; 
             v a r   t r e e B a s e D u r a t i o n   =   c o m p l e t e d W o r k . s e l f B a s e D u r a t i o n ; 
             v a r   c h i l d   =   c o m p l e t e d W o r k . c h i l d ; 
 
             w h i l e   ( c h i l d   ! = =   n u l l )   { 
                 n e w C h i l d L a n e s   =   m e r g e L a n e s ( n e w C h i l d L a n e s ,   m e r g e L a n e s ( c h i l d . l a n e s ,   c h i l d . c h i l d L a n e s ) ) ; 
                 s u b t r e e F l a g s   | =   c h i l d . s u b t r e e F l a g s ; 
                 s u b t r e e F l a g s   | =   c h i l d . f l a g s ;   / /   W h e n   a   f i b e r   i s   c l o n e d ,   i t s   a c t u a l D u r a t i o n   i s   r e s e t   t o   0 .   T h i s   v a l u e   w i l l 
                 / /   o n l y   b e   u p d a t e d   i f   w o r k   i s   d o n e   o n   t h e   f i b e r   ( i . e .   i t   d o e s n ' t   b a i l o u t ) . 
                 / /   W h e n   w o r k   i s   d o n e ,   i t   s h o u l d   b u b b l e   t o   t h e   p a r e n t ' s   a c t u a l D u r a t i o n .   I f 
                 / /   t h e   f i b e r   h a s   n o t   b e e n   c l o n e d   t h o u g h ,   ( m e a n i n g   n o   w o r k   w a s   d o n e ) ,   t h e n 
                 / /   t h i s   v a l u e   w i l l   r e f l e c t   t h e   a m o u n t   o f   t i m e   s p e n t   w o r k i n g   o n   a   p r e v i o u s 
                 / /   r e n d e r .   I n   t h a t   c a s e   i t   s h o u l d   n o t   b u b b l e .   W e   d e t e r m i n e   w h e t h e r   i t   w a s 
                 / /   c l o n e d   b y   c o m p a r i n g   t h e   c h i l d   p o i n t e r . 
 
                 a c t u a l D u r a t i o n   + =   c h i l d . a c t u a l D u r a t i o n ; 
                 t r e e B a s e D u r a t i o n   + =   c h i l d . t r e e B a s e D u r a t i o n ; 
                 c h i l d   =   c h i l d . s i b l i n g ; 
             } 
 
             c o m p l e t e d W o r k . a c t u a l D u r a t i o n   =   a c t u a l D u r a t i o n ; 
             c o m p l e t e d W o r k . t r e e B a s e D u r a t i o n   =   t r e e B a s e D u r a t i o n ; 
         }   e l s e   { 
             v a r   _ c h i l d   =   c o m p l e t e d W o r k . c h i l d ; 
 
             w h i l e   ( _ c h i l d   ! = =   n u l l )   { 
                 n e w C h i l d L a n e s   =   m e r g e L a n e s ( n e w C h i l d L a n e s ,   m e r g e L a n e s ( _ c h i l d . l a n e s ,   _ c h i l d . c h i l d L a n e s ) ) ; 
                 s u b t r e e F l a g s   | =   _ c h i l d . s u b t r e e F l a g s ; 
                 s u b t r e e F l a g s   | =   _ c h i l d . f l a g s ;   / /   U p d a t e   t h e   r e t u r n   p o i n t e r   s o   t h e   t r e e   i s   c o n s i s t e n t .   T h i s   i s   a   c o d e 
                 / /   s m e l l   b e c a u s e   i t   a s s u m e s   t h e   c o m m i t   p h a s e   i s   n e v e r   c o n c u r r e n t   w i t h 
                 / /   t h e   r e n d e r   p h a s e .   W i l l   a d d r e s s   d u r i n g   r e f a c t o r   t o   a l t e r n a t e   m o d e l . 
 
                 _ c h i l d . r e t u r n   =   c o m p l e t e d W o r k ; 
                 _ c h i l d   =   _ c h i l d . s i b l i n g ; 
             } 
         } 
 
         c o m p l e t e d W o r k . s u b t r e e F l a g s   | =   s u b t r e e F l a g s ; 
     }   e l s e   { 
         / /   B u b b l e   u p   t h e   e a r l i e s t   e x p i r a t i o n   t i m e . 
         i f   (   ( c o m p l e t e d W o r k . m o d e   &   P r o f i l e M o d e )   ! = =   N o M o d e )   { 
             / /   I n   p r o f i l i n g   m o d e ,   r e s e t C h i l d E x p i r a t i o n T i m e   i s   a l s o   u s e d   t o   r e s e t 
             / /   p r o f i l e r   d u r a t i o n s . 
             v a r   _ t r e e B a s e D u r a t i o n   =   c o m p l e t e d W o r k . s e l f B a s e D u r a t i o n ; 
             v a r   _ c h i l d 2   =   c o m p l e t e d W o r k . c h i l d ; 
 
             w h i l e   ( _ c h i l d 2   ! = =   n u l l )   { 
                 n e w C h i l d L a n e s   =   m e r g e L a n e s ( n e w C h i l d L a n e s ,   m e r g e L a n e s ( _ c h i l d 2 . l a n e s ,   _ c h i l d 2 . c h i l d L a n e s ) ) ;   / /   " S t a t i c "   f l a g s   s h a r e   t h e   l i f e t i m e   o f   t h e   f i b e r / h o o k   t h e y   b e l o n g   t o , 
                 / /   s o   w e   s h o u l d   b u b b l e   t h o s e   u p   e v e n   d u r i n g   a   b a i l o u t .   A l l   t h e   o t h e r 
                 / /   f l a g s   h a v e   a   l i f e t i m e   o n l y   o f   a   s i n g l e   r e n d e r   +   c o m m i t ,   s o   w e   s h o u l d 
                 / /   i g n o r e   t h e m . 
 
                 s u b t r e e F l a g s   | =   _ c h i l d 2 . s u b t r e e F l a g s   &   S t a t i c M a s k ; 
                 s u b t r e e F l a g s   | =   _ c h i l d 2 . f l a g s   &   S t a t i c M a s k ; 
                 _ t r e e B a s e D u r a t i o n   + =   _ c h i l d 2 . t r e e B a s e D u r a t i o n ; 
                 _ c h i l d 2   =   _ c h i l d 2 . s i b l i n g ; 
             } 
 
             c o m p l e t e d W o r k . t r e e B a s e D u r a t i o n   =   _ t r e e B a s e D u r a t i o n ; 
         }   e l s e   { 
             v a r   _ c h i l d 3   =   c o m p l e t e d W o r k . c h i l d ; 
 
             w h i l e   ( _ c h i l d 3   ! = =   n u l l )   { 
                 n e w C h i l d L a n e s   =   m e r g e L a n e s ( n e w C h i l d L a n e s ,   m e r g e L a n e s ( _ c h i l d 3 . l a n e s ,   _ c h i l d 3 . c h i l d L a n e s ) ) ;   / /   " S t a t i c "   f l a g s   s h a r e   t h e   l i f e t i m e   o f   t h e   f i b e r / h o o k   t h e y   b e l o n g   t o , 
                 / /   s o   w e   s h o u l d   b u b b l e   t h o s e   u p   e v e n   d u r i n g   a   b a i l o u t .   A l l   t h e   o t h e r 
                 / /   f l a g s   h a v e   a   l i f e t i m e   o n l y   o f   a   s i n g l e   r e n d e r   +   c o m m i t ,   s o   w e   s h o u l d 
                 / /   i g n o r e   t h e m . 
 
                 s u b t r e e F l a g s   | =   _ c h i l d 3 . s u b t r e e F l a g s   &   S t a t i c M a s k ; 
                 s u b t r e e F l a g s   | =   _ c h i l d 3 . f l a g s   &   S t a t i c M a s k ;   / /   U p d a t e   t h e   r e t u r n   p o i n t e r   s o   t h e   t r e e   i s   c o n s i s t e n t .   T h i s   i s   a   c o d e 
                 / /   s m e l l   b e c a u s e   i t   a s s u m e s   t h e   c o m m i t   p h a s e   i s   n e v e r   c o n c u r r e n t   w i t h 
                 / /   t h e   r e n d e r   p h a s e .   W i l l   a d d r e s s   d u r i n g   r e f a c t o r   t o   a l t e r n a t e   m o d e l . 
 
                 _ c h i l d 3 . r e t u r n   =   c o m p l e t e d W o r k ; 
                 _ c h i l d 3   =   _ c h i l d 3 . s i b l i n g ; 
             } 
         } 
 
         c o m p l e t e d W o r k . s u b t r e e F l a g s   | =   s u b t r e e F l a g s ; 
     } 
 
     c o m p l e t e d W o r k . c h i l d L a n e s   =   n e w C h i l d L a n e s ; 
     r e t u r n   d i d B a i l o u t ; 
 } 
 
 f u n c t i o n   c o m p l e t e W o r k ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     v a r   n e w P r o p s   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ;   / /   N o t e :   T h i s   i n t e n t i o n a l l y   d o e s n ' t   c h e c k   i f   w e ' r e   h y d r a t i n g   b e c a u s e   c o m p a r i n g 
     / /   t o   t h e   c u r r e n t   t r e e   p r o v i d e r   f i b e r   i s   j u s t   a s   f a s t   a n d   l e s s   e r r o r - p r o n e . 
     / /   I d e a l l y   w e   w o u l d   h a v e   a   s p e c i a l   v e r s i o n   o f   t h e   w o r k   l o o p   o n l y 
     / /   f o r   h y d r a t i o n . 
 
     p o p T r e e C o n t e x t ( w o r k I n P r o g r e s s ) ; 
 
     s w i t c h   ( w o r k I n P r o g r e s s . t a g )   { 
         c a s e   I n d e t e r m i n a t e C o m p o n e n t : 
         c a s e   L a z y C o m p o n e n t : 
         c a s e   S i m p l e M e m o C o m p o n e n t : 
         c a s e   F u n c t i o n C o m p o n e n t : 
         c a s e   F o r w a r d R e f : 
         c a s e   F r a g m e n t : 
         c a s e   M o d e : 
         c a s e   P r o f i l e r : 
         c a s e   C o n t e x t C o n s u m e r : 
         c a s e   M e m o C o m p o n e n t : 
             b u b b l e P r o p e r t i e s ( w o r k I n P r o g r e s s ) ; 
             r e t u r n   n u l l ; 
 
         c a s e   C l a s s C o m p o n e n t : 
             { 
                 v a r   C o m p o n e n t   =   w o r k I n P r o g r e s s . t y p e ; 
 
                 i f   ( i s C o n t e x t P r o v i d e r ( C o m p o n e n t ) )   { 
                     p o p C o n t e x t ( w o r k I n P r o g r e s s ) ; 
                 } 
 
                 b u b b l e P r o p e r t i e s ( w o r k I n P r o g r e s s ) ; 
                 r e t u r n   n u l l ; 
             } 
 
         c a s e   H o s t R o o t : 
             { 
                 v a r   f i b e r R o o t   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
                 p o p H o s t C o n t a i n e r ( w o r k I n P r o g r e s s ) ; 
                 p o p T o p L e v e l C o n t e x t O b j e c t ( w o r k I n P r o g r e s s ) ; 
                 r e s e t W o r k I n P r o g r e s s V e r s i o n s ( ) ; 
 
                 i f   ( f i b e r R o o t . p e n d i n g C o n t e x t )   { 
                     f i b e r R o o t . c o n t e x t   =   f i b e r R o o t . p e n d i n g C o n t e x t ; 
                     f i b e r R o o t . p e n d i n g C o n t e x t   =   n u l l ; 
                 } 
 
                 i f   ( c u r r e n t   = = =   n u l l   | |   c u r r e n t . c h i l d   = = =   n u l l )   { 
                     / /   I f   w e   h y d r a t e d ,   p o p   s o   t h a t   w e   c a n   d e l e t e   a n y   r e m a i n i n g   c h i l d r e n 
                     / /   t h a t   w e r e n ' t   h y d r a t e d . 
                     v a r   w a s H y d r a t e d   =   p o p H y d r a t i o n S t a t e ( w o r k I n P r o g r e s s ) ; 
 
                     i f   ( w a s H y d r a t e d )   { 
                         / /   I f   w e   h y d r a t e d ,   t h e n   w e ' l l   n e e d   t o   s c h e d u l e   a n   u p d a t e   f o r 
                         / /   t h e   c o m m i t   s i d e - e f f e c t s   o n   t h e   r o o t . 
                         m a r k U p d a t e ( w o r k I n P r o g r e s s ) ; 
                     }   e l s e   { 
                         i f   ( c u r r e n t   ! = =   n u l l )   { 
                             v a r   p r e v S t a t e   =   c u r r e n t . m e m o i z e d S t a t e ; 
 
                             i f   (   / /   C h e c k   i f   t h i s   i s   a   c l i e n t   r o o t 
                             ! p r e v S t a t e . i s D e h y d r a t e d   | |   / /   C h e c k   i f   w e   r e v e r t e d   t o   c l i e n t   r e n d e r i n g   ( e . g .   d u e   t o   a n   e r r o r ) 
                             ( w o r k I n P r o g r e s s . f l a g s   &   F o r c e C l i e n t R e n d e r )   ! = =   N o F l a g s )   { 
                                 / /   S c h e d u l e   a n   e f f e c t   t o   c l e a r   t h i s   c o n t a i n e r   a t   t h e   s t a r t   o f   t h e 
                                 / /   n e x t   c o m m i t .   T h i s   h a n d l e s   t h e   c a s e   o f   R e a c t   r e n d e r i n g   i n t o   a 
                                 / /   c o n t a i n e r   w i t h   p r e v i o u s   c h i l d r e n .   I t ' s   a l s o   s a f e   t o   d o   f o r 
                                 / /   u p d a t e s   t o o ,   b e c a u s e   c u r r e n t . c h i l d   w o u l d   o n l y   b e   n u l l   i f   t h e 
                                 / /   p r e v i o u s   r e n d e r   w a s   n u l l   ( s o   t h e   c o n t a i n e r   w o u l d   a l r e a d y 
                                 / /   b e   e m p t y ) . 
                                 w o r k I n P r o g r e s s . f l a g s   | =   S n a p s h o t ;   / /   I f   t h i s   w a s   a   f o r c e d   c l i e n t   r e n d e r ,   t h e r e   m a y   h a v e   b e e n 
                                 / /   r e c o v e r a b l e   e r r o r s   d u r i n g   f i r s t   h y d r a t i o n   a t t e m p t .   I f   s o ,   a d d 
                                 / /   t h e m   t o   a   q u e u e   s o   w e   c a n   l o g   t h e m   i n   t h e   c o m m i t   p h a s e . 
 
                                 u p g r a d e H y d r a t i o n E r r o r s T o R e c o v e r a b l e ( ) ; 
                             } 
                         } 
                     } 
                 } 
 
                 u p d a t e H o s t C o n t a i n e r ( c u r r e n t ,   w o r k I n P r o g r e s s ) ; 
                 b u b b l e P r o p e r t i e s ( w o r k I n P r o g r e s s ) ; 
 
                 r e t u r n   n u l l ; 
             } 
 
         c a s e   H o s t C o m p o n e n t : 
             { 
                 p o p H o s t C o n t e x t ( w o r k I n P r o g r e s s ) ; 
                 v a r   r o o t C o n t a i n e r I n s t a n c e   =   g e t R o o t H o s t C o n t a i n e r ( ) ; 
                 v a r   t y p e   =   w o r k I n P r o g r e s s . t y p e ; 
 
                 i f   ( c u r r e n t   ! = =   n u l l   & &   w o r k I n P r o g r e s s . s t a t e N o d e   ! =   n u l l )   { 
                     u p d a t e H o s t C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   t y p e ,   n e w P r o p s ,   r o o t C o n t a i n e r I n s t a n c e ) ; 
 
                     i f   ( c u r r e n t . r e f   ! = =   w o r k I n P r o g r e s s . r e f )   { 
                         m a r k R e f ( w o r k I n P r o g r e s s ) ; 
                     } 
                 }   e l s e   { 
                     i f   ( ! n e w P r o p s )   { 
                         i f   ( w o r k I n P r o g r e s s . s t a t e N o d e   = = =   n u l l )   { 
                             t h r o w   n e w   E r r o r ( ' W e   m u s t   h a v e   n e w   p r o p s   f o r   n e w   m o u n t s .   T h i s   e r r o r   i s   l i k e l y   '   +   ' c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
                         }   / /   T h i s   c a n   h a p p e n   w h e n   w e   a b o r t   w o r k . 
 
 
                         b u b b l e P r o p e r t i e s ( w o r k I n P r o g r e s s ) ; 
                         r e t u r n   n u l l ; 
                     } 
 
                     v a r   c u r r e n t H o s t C o n t e x t   =   g e t H o s t C o n t e x t ( ) ;   / /   T O D O :   M o v e   c r e a t e I n s t a n c e   t o   b e g i n W o r k   a n d   k e e p   i t   o n   a   c o n t e x t 
                     / /   " s t a c k "   a s   t h e   p a r e n t .   T h e n   a p p e n d   c h i l d r e n   a s   w e   g o   i n   b e g i n W o r k 
                     / /   o r   c o m p l e t e W o r k   d e p e n d i n g   o n   w h e t h e r   w e   w a n t   t o   a d d   t h e m   t o p - > d o w n   o r 
                     / /   b o t t o m - > u p .   T o p - > d o w n   i s   f a s t e r   i n   I E 1 1 . 
 
                     v a r   _ w a s H y d r a t e d   =   p o p H y d r a t i o n S t a t e ( w o r k I n P r o g r e s s ) ; 
 
                     i f   ( _ w a s H y d r a t e d )   { 
                         / /   T O D O :   M o v e   t h i s   a n d   c r e a t e I n s t a n c e   s t e p   i n t o   t h e   b e g i n P h a s e 
                         / /   t o   c o n s o l i d a t e . 
                         i f   ( p r e p a r e T o H y d r a t e H o s t I n s t a n c e ( w o r k I n P r o g r e s s ,   r o o t C o n t a i n e r I n s t a n c e ,   c u r r e n t H o s t C o n t e x t ) )   { 
                             / /   I f   c h a n g e s   t o   t h e   h y d r a t e d   n o d e   n e e d   t o   b e   a p p l i e d   a t   t h e 
                             / /   c o m m i t - p h a s e   w e   m a r k   t h i s   a s   s u c h . 
                             m a r k U p d a t e ( w o r k I n P r o g r e s s ) ; 
                         } 
                     }   e l s e   { 
                         v a r   i n s t a n c e   =   c r e a t e I n s t a n c e ( t y p e ,   n e w P r o p s ,   r o o t C o n t a i n e r I n s t a n c e ,   c u r r e n t H o s t C o n t e x t ,   w o r k I n P r o g r e s s ) ; 
                         a p p e n d A l l C h i l d r e n ( i n s t a n c e ,   w o r k I n P r o g r e s s ,   f a l s e ,   f a l s e ) ; 
                         w o r k I n P r o g r e s s . s t a t e N o d e   =   i n s t a n c e ;   / /   C e r t a i n   r e n d e r e r s   r e q u i r e   c o m m i t - t i m e   e f f e c t s   f o r   i n i t i a l   m o u n t . 
                         / /   ( e g   D O M   r e n d e r e r   s u p p o r t s   a u t o - f o c u s   f o r   c e r t a i n   e l e m e n t s ) . 
                         / /   M a k e   s u r e   s u c h   r e n d e r e r s   g e t   s c h e d u l e d   f o r   l a t e r   w o r k . 
 
                         i f   ( f i n a l i z e I n i t i a l C h i l d r e n ( i n s t a n c e ,   t y p e ,   n e w P r o p s ,   r o o t C o n t a i n e r I n s t a n c e ) )   { 
                             m a r k U p d a t e ( w o r k I n P r o g r e s s ) ; 
                         } 
                     } 
 
                     i f   ( w o r k I n P r o g r e s s . r e f   ! = =   n u l l )   { 
                         / /   I f   t h e r e   i s   a   r e f   o n   a   h o s t   n o d e   w e   n e e d   t o   s c h e d u l e   a   c a l l b a c k 
                         m a r k R e f ( w o r k I n P r o g r e s s ) ; 
                     } 
                 } 
 
                 b u b b l e P r o p e r t i e s ( w o r k I n P r o g r e s s ) ; 
                 r e t u r n   n u l l ; 
             } 
 
         c a s e   H o s t T e x t : 
             { 
                 v a r   n e w T e x t   =   n e w P r o p s ; 
 
                 i f   ( c u r r e n t   & &   w o r k I n P r o g r e s s . s t a t e N o d e   ! =   n u l l )   { 
                     v a r   o l d T e x t   =   c u r r e n t . m e m o i z e d P r o p s ;   / /   I f   w e   h a v e   a n   a l t e r n a t e ,   t h a t   m e a n s   t h i s   i s   a n   u p d a t e   a n d   w e   n e e d 
                     / /   t o   s c h e d u l e   a   s i d e - e f f e c t   t o   d o   t h e   u p d a t e s . 
 
                     u p d a t e H o s t T e x t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   o l d T e x t ,   n e w T e x t ) ; 
                 }   e l s e   { 
                     i f   ( t y p e o f   n e w T e x t   ! = =   ' s t r i n g ' )   { 
                         i f   ( w o r k I n P r o g r e s s . s t a t e N o d e   = = =   n u l l )   { 
                             t h r o w   n e w   E r r o r ( ' W e   m u s t   h a v e   n e w   p r o p s   f o r   n e w   m o u n t s .   T h i s   e r r o r   i s   l i k e l y   '   +   ' c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
                         }   / /   T h i s   c a n   h a p p e n   w h e n   w e   a b o r t   w o r k . 
 
                     } 
 
                     v a r   _ r o o t C o n t a i n e r I n s t a n c e   =   g e t R o o t H o s t C o n t a i n e r ( ) ; 
 
                     v a r   _ c u r r e n t H o s t C o n t e x t   =   g e t H o s t C o n t e x t ( ) ; 
 
                     v a r   _ w a s H y d r a t e d 2   =   p o p H y d r a t i o n S t a t e ( w o r k I n P r o g r e s s ) ; 
 
                     i f   ( _ w a s H y d r a t e d 2 )   { 
                         i f   ( p r e p a r e T o H y d r a t e H o s t T e x t I n s t a n c e ( w o r k I n P r o g r e s s ) )   { 
                             m a r k U p d a t e ( w o r k I n P r o g r e s s ) ; 
                         } 
                     }   e l s e   { 
                         w o r k I n P r o g r e s s . s t a t e N o d e   =   c r e a t e T e x t I n s t a n c e ( n e w T e x t ,   _ r o o t C o n t a i n e r I n s t a n c e ,   _ c u r r e n t H o s t C o n t e x t ,   w o r k I n P r o g r e s s ) ; 
                     } 
                 } 
 
                 b u b b l e P r o p e r t i e s ( w o r k I n P r o g r e s s ) ; 
                 r e t u r n   n u l l ; 
             } 
 
         c a s e   S u s p e n s e C o m p o n e n t : 
             { 
                 p o p S u s p e n s e C o n t e x t ( w o r k I n P r o g r e s s ) ; 
                 v a r   n e x t S t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
 
                 i f   ( h a s U n h y d r a t e d T a i l N o d e s ( )   & &   ( w o r k I n P r o g r e s s . m o d e   &   C o n c u r r e n t M o d e )   ! = =   N o M o d e   & &   ( w o r k I n P r o g r e s s . f l a g s   &   D i d C a p t u r e )   = = =   N o F l a g s )   { 
                     w a r n I f U n h y d r a t e d T a i l N o d e s ( w o r k I n P r o g r e s s ) ; 
                     r e s e t H y d r a t i o n S t a t e ( ) ; 
                     w o r k I n P r o g r e s s . f l a g s   | =   F o r c e C l i e n t R e n d e r   |   I n c o m p l e t e   |   S h o u l d C a p t u r e ; 
                     r e t u r n   w o r k I n P r o g r e s s ; 
                 } 
 
                 i f   ( n e x t S t a t e   ! = =   n u l l   & &   n e x t S t a t e . d e h y d r a t e d   ! = =   n u l l )   { 
                     / /   W e   m i g h t   b e   i n s i d e   a   h y d r a t i o n   s t a t e   t h e   f i r s t   t i m e   w e ' r e   p i c k i n g   u p   t h i s 
                     / /   S u s p e n s e   b o u n d a r y ,   a n d   a l s o   a f t e r   w e ' v e   r e e n t e r e d   i t   f o r   f u r t h e r   h y d r a t i o n . 
                     v a r   _ w a s H y d r a t e d 3   =   p o p H y d r a t i o n S t a t e ( w o r k I n P r o g r e s s ) ; 
 
                     i f   ( c u r r e n t   = = =   n u l l )   { 
                         i f   ( ! _ w a s H y d r a t e d 3 )   { 
                             t h r o w   n e w   E r r o r ( ' A   d e h y d r a t e d   s u s p e n s e   c o m p o n e n t   w a s   c o m p l e t e d   w i t h o u t   a   h y d r a t e d   n o d e .   '   +   ' T h i s   i s   p r o b a b l y   a   b u g   i n   R e a c t . ' ) ; 
                         } 
 
                         p r e p a r e T o H y d r a t e H o s t S u s p e n s e I n s t a n c e ( w o r k I n P r o g r e s s ) ; 
                         b u b b l e P r o p e r t i e s ( w o r k I n P r o g r e s s ) ; 
 
                         { 
                             i f   ( ( w o r k I n P r o g r e s s . m o d e   &   P r o f i l e M o d e )   ! = =   N o M o d e )   { 
                                 v a r   i s T i m e d O u t S u s p e n s e   =   n e x t S t a t e   ! = =   n u l l ; 
 
                                 i f   ( i s T i m e d O u t S u s p e n s e )   { 
                                     / /   D o n ' t   c o u n t   t i m e   s p e n t   i n   a   t i m e d   o u t   S u s p e n s e   s u b t r e e   a s   p a r t   o f   t h e   b a s e   d u r a t i o n . 
                                     v a r   p r i m a r y C h i l d F r a g m e n t   =   w o r k I n P r o g r e s s . c h i l d ; 
 
                                     i f   ( p r i m a r y C h i l d F r a g m e n t   ! = =   n u l l )   { 
                                         / /   $ F l o w F i x M e   F l o w   d o e s n ' t   s u p p o r t   t y p e   c a s t i n g   i n   c o m b i n a t i o n   w i t h   t h e   - =   o p e r a t o r 
                                         w o r k I n P r o g r e s s . t r e e B a s e D u r a t i o n   - =   p r i m a r y C h i l d F r a g m e n t . t r e e B a s e D u r a t i o n ; 
                                     } 
                                 } 
                             } 
                         } 
 
                         r e t u r n   n u l l ; 
                     }   e l s e   { 
                         / /   W e   m i g h t   h a v e   r e e n t e r e d   t h i s   b o u n d a r y   t o   h y d r a t e   i t .   I f   s o ,   w e   n e e d   t o   r e s e t   t h e   h y d r a t i o n 
                         / /   s t a t e   s i n c e   w e ' r e   n o w   e x i t i n g   o u t   o f   i t .   p o p H y d r a t i o n S t a t e   d o e s n ' t   d o   t h a t   f o r   u s . 
                         r e s e t H y d r a t i o n S t a t e ( ) ; 
 
                         i f   ( ( w o r k I n P r o g r e s s . f l a g s   &   D i d C a p t u r e )   = = =   N o F l a g s )   { 
                             / /   T h i s   b o u n d a r y   d i d   n o t   s u s p e n d   s o   i t ' s   n o w   h y d r a t e d   a n d   u n s u s p e n d e d . 
                             w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   n u l l ; 
                         }   / /   I f   n o t h i n g   s u s p e n d e d ,   w e   n e e d   t o   s c h e d u l e   a n   e f f e c t   t o   m a r k   t h i s   b o u n d a r y 
                         / /   a s   h a v i n g   h y d r a t e d   s o   e v e n t s   k n o w   t h a t   t h e y ' r e   f r e e   t o   b e   i n v o k e d . 
                         / /   I t ' s   a l s o   a   s i g n a l   t o   r e p l a y   e v e n t s   a n d   t h e   s u s p e n s e   c a l l b a c k . 
                         / /   I f   s o m e t h i n g   s u s p e n d e d ,   s c h e d u l e   a n   e f f e c t   t o   a t t a c h   r e t r y   l i s t e n e r s . 
                         / /   S o   w e   m i g h t   a s   w e l l   a l w a y s   m a r k   t h i s . 
 
 
                         w o r k I n P r o g r e s s . f l a g s   | =   U p d a t e ; 
                         b u b b l e P r o p e r t i e s ( w o r k I n P r o g r e s s ) ; 
 
                         { 
                             i f   ( ( w o r k I n P r o g r e s s . m o d e   &   P r o f i l e M o d e )   ! = =   N o M o d e )   { 
                                 v a r   _ i s T i m e d O u t S u s p e n s e   =   n e x t S t a t e   ! = =   n u l l ; 
 
                                 i f   ( _ i s T i m e d O u t S u s p e n s e )   { 
                                     / /   D o n ' t   c o u n t   t i m e   s p e n t   i n   a   t i m e d   o u t   S u s p e n s e   s u b t r e e   a s   p a r t   o f   t h e   b a s e   d u r a t i o n . 
                                     v a r   _ p r i m a r y C h i l d F r a g m e n t   =   w o r k I n P r o g r e s s . c h i l d ; 
 
                                     i f   ( _ p r i m a r y C h i l d F r a g m e n t   ! = =   n u l l )   { 
                                         / /   $ F l o w F i x M e   F l o w   d o e s n ' t   s u p p o r t   t y p e   c a s t i n g   i n   c o m b i n a t i o n   w i t h   t h e   - =   o p e r a t o r 
                                         w o r k I n P r o g r e s s . t r e e B a s e D u r a t i o n   - =   _ p r i m a r y C h i l d F r a g m e n t . t r e e B a s e D u r a t i o n ; 
                                     } 
                                 } 
                             } 
                         } 
 
                         r e t u r n   n u l l ; 
                     } 
                 }   / /   S u c c e s s f u l l y   c o m p l e t e d   t h i s   t r e e .   I f   t h i s   w a s   a   f o r c e d   c l i e n t   r e n d e r , 
                 / /   t h e r e   m a y   h a v e   b e e n   r e c o v e r a b l e   e r r o r s   d u r i n g   f i r s t   h y d r a t i o n 
                 / /   a t t e m p t .   I f   s o ,   a d d   t h e m   t o   a   q u e u e   s o   w e   c a n   l o g   t h e m   i n   t h e 
                 / /   c o m m i t   p h a s e . 
 
 
                 u p g r a d e H y d r a t i o n E r r o r s T o R e c o v e r a b l e ( ) ; 
 
                 i f   ( ( w o r k I n P r o g r e s s . f l a g s   &   D i d C a p t u r e )   ! = =   N o F l a g s )   { 
                     / /   S o m e t h i n g   s u s p e n d e d .   R e - r e n d e r   w i t h   t h e   f a l l b a c k   c h i l d r e n . 
                     w o r k I n P r o g r e s s . l a n e s   =   r e n d e r L a n e s ;   / /   D o   n o t   r e s e t   t h e   e f f e c t   l i s t . 
 
                     i f   (   ( w o r k I n P r o g r e s s . m o d e   &   P r o f i l e M o d e )   ! = =   N o M o d e )   { 
                         t r a n s f e r A c t u a l D u r a t i o n ( w o r k I n P r o g r e s s ) ; 
                     }   / /   D o n ' t   b u b b l e   p r o p e r t i e s   i n   t h i s   c a s e . 
 
 
                     r e t u r n   w o r k I n P r o g r e s s ; 
                 } 
 
                 v a r   n e x t D i d T i m e o u t   =   n e x t S t a t e   ! = =   n u l l ; 
                 v a r   p r e v D i d T i m e o u t   =   f a l s e ; 
 
                 i f   ( c u r r e n t   = = =   n u l l )   { 
                     p o p H y d r a t i o n S t a t e ( w o r k I n P r o g r e s s ) ; 
                 }   e l s e   { 
                     v a r   _ p r e v S t a t e   =   c u r r e n t . m e m o i z e d S t a t e ; 
                     p r e v D i d T i m e o u t   =   _ p r e v S t a t e   ! = =   n u l l ; 
                 } 
                 / /   a   p a s s i v e   e f f e c t ,   w h i c h   i s   w h e n   w e   p r o c e s s   t h e   t r a n s i t i o n s 
 
 
                 i f   ( n e x t D i d T i m e o u t   ! = =   p r e v D i d T i m e o u t )   { 
                     / /   a n   e f f e c t   t o   t o g g l e   t h e   s u b t r e e ' s   v i s i b i l i t y .   W h e n   w e   s w i t c h   f r o m 
                     / /   f a l l b a c k   - >   p r i m a r y ,   t h e   i n n e r   O f f s c r e e n   f i b e r   s c h e d u l e s   t h i s   e f f e c t 
                     / /   a s   p a r t   o f   i t s   n o r m a l   c o m p l e t e   p h a s e .   B u t   w h e n   w e   s w i t c h   f r o m 
                     / /   p r i m a r y   - >   f a l l b a c k ,   t h e   i n n e r   O f f s c r e e n   f i b e r   d o e s   n o t   h a v e   a   c o m p l e t e 
                     / /   p h a s e .   S o   w e   n e e d   t o   s c h e d u l e   i t s   e f f e c t   h e r e . 
                     / / 
                     / /   W e   a l s o   u s e   t h i s   f l a g   t o   c o n n e c t / d i s c o n n e c t   t h e   e f f e c t s ,   b u t   t h e   s a m e 
                     / /   l o g i c   a p p l i e s :   w h e n   r e - c o n n e c t i n g ,   t h e   O f f s c r e e n   f i b e r ' s   c o m p l e t e 
                     / /   p h a s e   w i l l   h a n d l e   s c h e d u l i n g   t h e   e f f e c t .   I t ' s   o n l y   w h e n   t h e   f a l l b a c k 
                     / /   i s   a c t i v e   t h a t   w e   h a v e   t o   d o   a n y t h i n g   s p e c i a l . 
 
 
                     i f   ( n e x t D i d T i m e o u t )   { 
                         v a r   _ o f f s c r e e n F i b e r 2   =   w o r k I n P r o g r e s s . c h i l d ; 
                         _ o f f s c r e e n F i b e r 2 . f l a g s   | =   V i s i b i l i t y ;   / /   T O D O :   T h i s   w i l l   s t i l l   s u s p e n d   a   s y n c h r o n o u s   t r e e   i f   a n y t h i n g 
                         / /   i n   t h e   c o n c u r r e n t   t r e e   a l r e a d y   s u s p e n d e d   d u r i n g   t h i s   r e n d e r . 
                         / /   T h i s   i s   a   k n o w n   b u g . 
 
                         i f   ( ( w o r k I n P r o g r e s s . m o d e   &   C o n c u r r e n t M o d e )   ! = =   N o M o d e )   { 
                             / /   T O D O :   M o v e   t h i s   b a c k   t o   t h r o w E x c e p t i o n   b e c a u s e   t h i s   i s   t o o   l a t e 
                             / /   i f   t h i s   i s   a   l a r g e   t r e e   w h i c h   i s   c o m m o n   f o r   i n i t i a l   l o a d s .   W e 
                             / /   d o n ' t   k n o w   i f   w e   s h o u l d   r e s t a r t   a   r e n d e r   o r   n o t   u n t i l   w e   g e t 
                             / /   t h i s   m a r k e r ,   a n d   t h i s   i s   t o o   l a t e . 
                             / /   I f   t h i s   r e n d e r   a l r e a d y   h a d   a   p i n g   o r   l o w e r   p r i   u p d a t e s , 
                             / /   a n d   t h i s   i s   t h e   f i r s t   t i m e   w e   k n o w   w e ' r e   g o i n g   t o   s u s p e n d   w e 
                             / /   s h o u l d   b e   a b l e   t o   i m m e d i a t e l y   r e s t a r t   f r o m   w i t h i n   t h r o w E x c e p t i o n . 
                             v a r   h a s I n v i s i b l e C h i l d C o n t e x t   =   c u r r e n t   = = =   n u l l   & &   ( w o r k I n P r o g r e s s . m e m o i z e d P r o p s . u n s t a b l e _ a v o i d T h i s F a l l b a c k   ! = =   t r u e   | |   ! e n a b l e S u s p e n s e A v o i d T h i s F a l l b a c k ) ; 
 
                             i f   ( h a s I n v i s i b l e C h i l d C o n t e x t   | |   h a s S u s p e n s e C o n t e x t ( s u s p e n s e S t a c k C u r s o r . c u r r e n t ,   I n v i s i b l e P a r e n t S u s p e n s e C o n t e x t ) )   { 
                                 / /   I f   t h i s   w a s   i n   a n   i n v i s i b l e   t r e e   o r   a   n e w   r e n d e r ,   t h e n   s h o w i n g 
                                 / /   t h i s   b o u n d a r y   i s   o k . 
                                 r e n d e r D i d S u s p e n d ( ) ; 
                             }   e l s e   { 
                                 / /   O t h e r w i s e ,   w e ' r e   g o i n g   t o   h a v e   t o   h i d e   c o n t e n t   s o   w e   s h o u l d 
                                 / /   s u s p e n d   f o r   l o n g e r   i f   p o s s i b l e . 
                                 r e n d e r D i d S u s p e n d D e l a y I f P o s s i b l e ( ) ; 
                             } 
                         } 
                     } 
                 } 
 
                 v a r   w a k e a b l e s   =   w o r k I n P r o g r e s s . u p d a t e Q u e u e ; 
 
                 i f   ( w a k e a b l e s   ! = =   n u l l )   { 
                     / /   S c h e d u l e   a n   e f f e c t   t o   a t t a c h   a   r e t r y   l i s t e n e r   t o   t h e   p r o m i s e . 
                     / /   T O D O :   M o v e   t o   p a s s i v e   p h a s e 
                     w o r k I n P r o g r e s s . f l a g s   | =   U p d a t e ; 
                 } 
 
                 b u b b l e P r o p e r t i e s ( w o r k I n P r o g r e s s ) ; 
 
                 { 
                     i f   ( ( w o r k I n P r o g r e s s . m o d e   &   P r o f i l e M o d e )   ! = =   N o M o d e )   { 
                         i f   ( n e x t D i d T i m e o u t )   { 
                             / /   D o n ' t   c o u n t   t i m e   s p e n t   i n   a   t i m e d   o u t   S u s p e n s e   s u b t r e e   a s   p a r t   o f   t h e   b a s e   d u r a t i o n . 
                             v a r   _ p r i m a r y C h i l d F r a g m e n t 2   =   w o r k I n P r o g r e s s . c h i l d ; 
 
                             i f   ( _ p r i m a r y C h i l d F r a g m e n t 2   ! = =   n u l l )   { 
                                 / /   $ F l o w F i x M e   F l o w   d o e s n ' t   s u p p o r t   t y p e   c a s t i n g   i n   c o m b i n a t i o n   w i t h   t h e   - =   o p e r a t o r 
                                 w o r k I n P r o g r e s s . t r e e B a s e D u r a t i o n   - =   _ p r i m a r y C h i l d F r a g m e n t 2 . t r e e B a s e D u r a t i o n ; 
                             } 
                         } 
                     } 
                 } 
 
                 r e t u r n   n u l l ; 
             } 
 
         c a s e   H o s t P o r t a l : 
             p o p H o s t C o n t a i n e r ( w o r k I n P r o g r e s s ) ; 
             u p d a t e H o s t C o n t a i n e r ( c u r r e n t ,   w o r k I n P r o g r e s s ) ; 
 
             i f   ( c u r r e n t   = = =   n u l l )   { 
                 p r e p a r e P o r t a l M o u n t ( w o r k I n P r o g r e s s . s t a t e N o d e . c o n t a i n e r I n f o ) ; 
             } 
 
             b u b b l e P r o p e r t i e s ( w o r k I n P r o g r e s s ) ; 
             r e t u r n   n u l l ; 
 
         c a s e   C o n t e x t P r o v i d e r : 
             / /   P o p   p r o v i d e r   f i b e r 
             v a r   c o n t e x t   =   w o r k I n P r o g r e s s . t y p e . _ c o n t e x t ; 
             p o p P r o v i d e r ( c o n t e x t ,   w o r k I n P r o g r e s s ) ; 
             b u b b l e P r o p e r t i e s ( w o r k I n P r o g r e s s ) ; 
             r e t u r n   n u l l ; 
 
         c a s e   I n c o m p l e t e C l a s s C o m p o n e n t : 
             { 
                 / /   S a m e   a s   c l a s s   c o m p o n e n t   c a s e .   I   p u t   i t   d o w n   h e r e   s o   t h a t   t h e   t a g s   a r e 
                 / /   s e q u e n t i a l   t o   e n s u r e   t h i s   s w i t c h   i s   c o m p i l e d   t o   a   j u m p   t a b l e . 
                 v a r   _ C o m p o n e n t   =   w o r k I n P r o g r e s s . t y p e ; 
 
                 i f   ( i s C o n t e x t P r o v i d e r ( _ C o m p o n e n t ) )   { 
                     p o p C o n t e x t ( w o r k I n P r o g r e s s ) ; 
                 } 
 
                 b u b b l e P r o p e r t i e s ( w o r k I n P r o g r e s s ) ; 
                 r e t u r n   n u l l ; 
             } 
 
         c a s e   S u s p e n s e L i s t C o m p o n e n t : 
             { 
                 p o p S u s p e n s e C o n t e x t ( w o r k I n P r o g r e s s ) ; 
                 v a r   r e n d e r S t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
 
                 i f   ( r e n d e r S t a t e   = = =   n u l l )   { 
                     / /   W e ' r e   r u n n i n g   i n   t h e   d e f a u l t ,   " i n d e p e n d e n t "   m o d e . 
                     / /   W e   d o n ' t   d o   a n y t h i n g   i n   t h i s   m o d e . 
                     b u b b l e P r o p e r t i e s ( w o r k I n P r o g r e s s ) ; 
                     r e t u r n   n u l l ; 
                 } 
 
                 v a r   d i d S u s p e n d A l r e a d y   =   ( w o r k I n P r o g r e s s . f l a g s   &   D i d C a p t u r e )   ! = =   N o F l a g s ; 
                 v a r   r e n d e r e d T a i l   =   r e n d e r S t a t e . r e n d e r i n g ; 
 
                 i f   ( r e n d e r e d T a i l   = = =   n u l l )   { 
                     / /   W e   j u s t   r e n d e r e d   t h e   h e a d . 
                     i f   ( ! d i d S u s p e n d A l r e a d y )   { 
                         / /   T h i s   i s   t h e   f i r s t   p a s s .   W e   n e e d   t o   f i g u r e   o u t   i f   a n y t h i n g   i s   s t i l l 
                         / /   s u s p e n d e d   i n   t h e   r e n d e r e d   s e t . 
                         / /   I f   n e w   c o n t e n t   u n s u s p e n d e d ,   b u t   t h e r e ' s   s t i l l   s o m e   c o n t e n t   t h a t 
                         / /   d i d n ' t .   T h e n   w e   n e e d   t o   d o   a   s e c o n d   p a s s   t h a t   f o r c e s   e v e r y t h i n g 
                         / /   t o   k e e p   s h o w i n g   t h e i r   f a l l b a c k s . 
                         / /   W e   m i g h t   b e   s u s p e n d e d   i f   s o m e t h i n g   i n   t h i s   r e n d e r   p a s s   s u s p e n d e d ,   o r 
                         / /   s o m e t h i n g   i n   t h e   p r e v i o u s   c o m m i t t e d   p a s s   s u s p e n d e d .   O t h e r w i s e , 
                         / /   t h e r e ' s   n o   c h a n c e   s o   w e   c a n   s k i p   t h e   e x p e n s i v e   c a l l   t o 
                         / /   f i n d F i r s t S u s p e n d e d . 
                         v a r   c a n n o t B e S u s p e n d e d   =   r e n d e r H a s N o t S u s p e n d e d Y e t ( )   & &   ( c u r r e n t   = = =   n u l l   | |   ( c u r r e n t . f l a g s   &   D i d C a p t u r e )   = = =   N o F l a g s ) ; 
 
                         i f   ( ! c a n n o t B e S u s p e n d e d )   { 
                             v a r   r o w   =   w o r k I n P r o g r e s s . c h i l d ; 
 
                             w h i l e   ( r o w   ! = =   n u l l )   { 
                                 v a r   s u s p e n d e d   =   f i n d F i r s t S u s p e n d e d ( r o w ) ; 
 
                                 i f   ( s u s p e n d e d   ! = =   n u l l )   { 
                                     d i d S u s p e n d A l r e a d y   =   t r u e ; 
                                     w o r k I n P r o g r e s s . f l a g s   | =   D i d C a p t u r e ; 
                                     c u t O f f T a i l I f N e e d e d ( r e n d e r S t a t e ,   f a l s e ) ;   / /   I f   t h i s   i s   a   n e w l y   s u s p e n d e d   t r e e ,   i t   m i g h t   n o t   g e t   c o m m i t t e d   a s 
                                     / /   p a r t   o f   t h e   s e c o n d   p a s s .   I n   t h a t   c a s e   n o t h i n g   w i l l   s u b s c r i b e   t o 
                                     / /   i t s   t h e n a b l e s .   I n s t e a d ,   w e ' l l   t r a n s f e r   i t s   t h e n a b l e s   t o   t h e 
                                     / /   S u s p e n s e L i s t   s o   t h a t   i t   c a n   r e t r y   i f   t h e y   r e s o l v e . 
                                     / /   T h e r e   m i g h t   b e   m u l t i p l e   o f   t h e s e   i n   t h e   l i s t   b u t   s i n c e   w e ' r e 
                                     / /   g o i n g   t o   w a i t   f o r   a l l   o f   t h e m   a n y w a y ,   i t   d o e s n ' t   r e a l l y   m a t t e r 
                                     / /   w h i c h   o n e s   g e t s   t o   p i n g .   I n   t h e o r y   w e   c o u l d   g e t   c l e v e r   a n d   k e e p 
                                     / /   t r a c k   o f   h o w   m a n y   d e p e n d e n c i e s   r e m a i n   b u t   i t   g e t s   t r i c k y   b e c a u s e 
                                     / /   i n   t h e   m e a n t i m e ,   w e   c a n   a d d / r e m o v e / c h a n g e   i t e m s   a n d   d e p e n d e n c i e s . 
                                     / /   W e   m i g h t   b a i l   o u t   o f   t h e   l o o p   b e f o r e   f i n d i n g   a n y   b u t   t h a t 
                                     / /   d o e s n ' t   m a t t e r   s i n c e   t h a t   m e a n s   t h a t   t h e   o t h e r   b o u n d a r i e s   t h a t 
                                     / /   w e   d i d   f i n d   a l r e a d y   h a s   t h e i r   l i s t e n e r s   a t t a c h e d . 
 
                                     v a r   n e w T h e n a b l e s   =   s u s p e n d e d . u p d a t e Q u e u e ; 
 
                                     i f   ( n e w T h e n a b l e s   ! = =   n u l l )   { 
                                         w o r k I n P r o g r e s s . u p d a t e Q u e u e   =   n e w T h e n a b l e s ; 
                                         w o r k I n P r o g r e s s . f l a g s   | =   U p d a t e ; 
                                     }   / /   R e r e n d e r   t h e   w h o l e   l i s t ,   b u t   t h i s   t i m e ,   w e ' l l   f o r c e   f a l l b a c k s 
                                     / /   t o   s t a y   i n   p l a c e . 
                                     / /   R e s e t   t h e   e f f e c t   f l a g s   b e f o r e   d o i n g   t h e   s e c o n d   p a s s   s i n c e   t h a t ' s   n o w   i n v a l i d . 
                                     / /   R e s e t   t h e   c h i l d   f i b e r s   t o   t h e i r   o r i g i n a l   s t a t e . 
 
 
                                     w o r k I n P r o g r e s s . s u b t r e e F l a g s   =   N o F l a g s ; 
                                     r e s e t C h i l d F i b e r s ( w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ;   / /   S e t   u p   t h e   S u s p e n s e   C o n t e x t   t o   f o r c e   s u s p e n s e   a n d   i m m e d i a t e l y 
                                     / /   r e r e n d e r   t h e   c h i l d r e n . 
 
                                     p u s h S u s p e n s e C o n t e x t ( w o r k I n P r o g r e s s ,   s e t S h a l l o w S u s p e n s e C o n t e x t ( s u s p e n s e S t a c k C u r s o r . c u r r e n t ,   F o r c e S u s p e n s e F a l l b a c k ) ) ;   / /   D o n ' t   b u b b l e   p r o p e r t i e s   i n   t h i s   c a s e . 
 
                                     r e t u r n   w o r k I n P r o g r e s s . c h i l d ; 
                                 } 
 
                                 r o w   =   r o w . s i b l i n g ; 
                             } 
                         } 
 
                         i f   ( r e n d e r S t a t e . t a i l   ! = =   n u l l   & &   n o w ( )   >   g e t R e n d e r T a r g e t T i m e ( ) )   { 
                             / /   W e   h a v e   a l r e a d y   p a s s e d   o u r   C P U   d e a d l i n e   b u t   w e   s t i l l   h a v e   r o w s 
                             / /   l e f t   i n   t h e   t a i l .   W e ' l l   j u s t   g i v e   u p   f u r t h e r   a t t e m p t s   t o   r e n d e r 
                             / /   t h e   m a i n   c o n t e n t   a n d   o n l y   r e n d e r   f a l l b a c k s . 
                             w o r k I n P r o g r e s s . f l a g s   | =   D i d C a p t u r e ; 
                             d i d S u s p e n d A l r e a d y   =   t r u e ; 
                             c u t O f f T a i l I f N e e d e d ( r e n d e r S t a t e ,   f a l s e ) ;   / /   S i n c e   n o t h i n g   a c t u a l l y   s u s p e n d e d ,   t h e r e   w i l l   n o t h i n g   t o   p i n g   t h i s 
                             / /   t o   g e t   i t   s t a r t e d   b a c k   u p   t o   a t t e m p t   t h e   n e x t   i t e m .   W h i l e   i n   t e r m s 
                             / /   o f   p r i o r i t y   t h i s   w o r k   h a s   t h e   s a m e   p r i o r i t y   a s   t h i s   c u r r e n t   r e n d e r , 
                             / /   i t ' s   n o t   p a r t   o f   t h e   s a m e   t r a n s i t i o n   o n c e   t h e   t r a n s i t i o n   h a s 
                             / /   c o m m i t t e d .   I f   i t ' s   s y n c ,   w e   s t i l l   w a n t   t o   y i e l d   s o   t h a t   i t   c a n   b e 
                             / /   p a i n t e d .   C o n c e p t u a l l y ,   t h i s   i s   r e a l l y   t h e   s a m e   a s   p i n g i n g . 
                             / /   W e   c a n   u s e   a n y   R e t r y L a n e   e v e n   i f   i t ' s   t h e   o n e   c u r r e n t l y   r e n d e r i n g 
                             / /   s i n c e   w e ' r e   l e a v i n g   i t   b e h i n d   o n   t h i s   n o d e . 
 
                             w o r k I n P r o g r e s s . l a n e s   =   S o m e R e t r y L a n e ; 
                         } 
                     }   e l s e   { 
                         c u t O f f T a i l I f N e e d e d ( r e n d e r S t a t e ,   f a l s e ) ; 
                     }   / /   N e x t   w e ' r e   g o i n g   t o   r e n d e r   t h e   t a i l . 
 
                 }   e l s e   { 
                     / /   A p p e n d   t h e   r e n d e r e d   r o w   t o   t h e   c h i l d   l i s t . 
                     i f   ( ! d i d S u s p e n d A l r e a d y )   { 
                         v a r   _ s u s p e n d e d   =   f i n d F i r s t S u s p e n d e d ( r e n d e r e d T a i l ) ; 
 
                         i f   ( _ s u s p e n d e d   ! = =   n u l l )   { 
                             w o r k I n P r o g r e s s . f l a g s   | =   D i d C a p t u r e ; 
                             d i d S u s p e n d A l r e a d y   =   t r u e ;   / /   E n s u r e   w e   t r a n s f e r   t h e   u p d a t e   q u e u e   t o   t h e   p a r e n t   s o   t h a t   i t   d o e s n ' t 
                             / /   g e t   l o s t   i f   t h i s   r o w   e n d s   u p   d r o p p e d   d u r i n g   a   s e c o n d   p a s s . 
 
                             v a r   _ n e w T h e n a b l e s   =   _ s u s p e n d e d . u p d a t e Q u e u e ; 
 
                             i f   ( _ n e w T h e n a b l e s   ! = =   n u l l )   { 
                                 w o r k I n P r o g r e s s . u p d a t e Q u e u e   =   _ n e w T h e n a b l e s ; 
                                 w o r k I n P r o g r e s s . f l a g s   | =   U p d a t e ; 
                             } 
 
                             c u t O f f T a i l I f N e e d e d ( r e n d e r S t a t e ,   t r u e ) ;   / /   T h i s   m i g h t   h a v e   b e e n   m o d i f i e d . 
 
                             i f   ( r e n d e r S t a t e . t a i l   = = =   n u l l   & &   r e n d e r S t a t e . t a i l M o d e   = = =   ' h i d d e n '   & &   ! r e n d e r e d T a i l . a l t e r n a t e   & &   ! g e t I s H y d r a t i n g ( )   / /   W e   d o n ' t   c u t   i t   i f   w e ' r e   h y d r a t i n g . 
                             )   { 
                                     / /   W e ' r e   d o n e . 
                                     b u b b l e P r o p e r t i e s ( w o r k I n P r o g r e s s ) ; 
                                     r e t u r n   n u l l ; 
                                 } 
                         }   e l s e   i f   (   / /   T h e   t i m e   i t   t o o k   t o   r e n d e r   l a s t   r o w   i s   g r e a t e r   t h a n   t h e   r e m a i n i n g 
                         / /   t i m e   w e   h a v e   t o   r e n d e r .   S o   r e n d e r i n g   o n e   m o r e   r o w   w o u l d   l i k e l y 
                         / /   e x c e e d   i t . 
                         n o w ( )   *   2   -   r e n d e r S t a t e . r e n d e r i n g S t a r t T i m e   >   g e t R e n d e r T a r g e t T i m e ( )   & &   r e n d e r L a n e s   ! = =   O f f s c r e e n L a n e )   { 
                             / /   W e   h a v e   n o w   p a s s e d   o u r   C P U   d e a d l i n e   a n d   w e ' l l   j u s t   g i v e   u p   f u r t h e r 
                             / /   a t t e m p t s   t o   r e n d e r   t h e   m a i n   c o n t e n t   a n d   o n l y   r e n d e r   f a l l b a c k s . 
                             / /   T h e   a s s u m p t i o n   i s   t h a t   t h i s   i s   u s u a l l y   f a s t e r . 
                             w o r k I n P r o g r e s s . f l a g s   | =   D i d C a p t u r e ; 
                             d i d S u s p e n d A l r e a d y   =   t r u e ; 
                             c u t O f f T a i l I f N e e d e d ( r e n d e r S t a t e ,   f a l s e ) ;   / /   S i n c e   n o t h i n g   a c t u a l l y   s u s p e n d e d ,   t h e r e   w i l l   n o t h i n g   t o   p i n g   t h i s 
                             / /   t o   g e t   i t   s t a r t e d   b a c k   u p   t o   a t t e m p t   t h e   n e x t   i t e m .   W h i l e   i n   t e r m s 
                             / /   o f   p r i o r i t y   t h i s   w o r k   h a s   t h e   s a m e   p r i o r i t y   a s   t h i s   c u r r e n t   r e n d e r , 
                             / /   i t ' s   n o t   p a r t   o f   t h e   s a m e   t r a n s i t i o n   o n c e   t h e   t r a n s i t i o n   h a s 
                             / /   c o m m i t t e d .   I f   i t ' s   s y n c ,   w e   s t i l l   w a n t   t o   y i e l d   s o   t h a t   i t   c a n   b e 
                             / /   p a i n t e d .   C o n c e p t u a l l y ,   t h i s   i s   r e a l l y   t h e   s a m e   a s   p i n g i n g . 
                             / /   W e   c a n   u s e   a n y   R e t r y L a n e   e v e n   i f   i t ' s   t h e   o n e   c u r r e n t l y   r e n d e r i n g 
                             / /   s i n c e   w e ' r e   l e a v i n g   i t   b e h i n d   o n   t h i s   n o d e . 
 
                             w o r k I n P r o g r e s s . l a n e s   =   S o m e R e t r y L a n e ; 
                         } 
                     } 
 
                     i f   ( r e n d e r S t a t e . i s B a c k w a r d s )   { 
                         / /   T h e   e f f e c t   l i s t   o f   t h e   b a c k w a r d s   t a i l   w i l l   h a v e   b e e n   a d d e d 
                         / /   t o   t h e   e n d .   T h i s   b r e a k s   t h e   g u a r a n t e e   t h a t   l i f e - c y c l e s   f i r e   i n 
                         / /   s i b l i n g   o r d e r   b u t   t h a t   i s n ' t   a   s t r o n g   g u a r a n t e e   p r o m i s e d   b y   R e a c t . 
                         / /   E s p e c i a l l y   s i n c e   t h e s e   m i g h t   a l s o   j u s t   p o p   i n   d u r i n g   f u t u r e   c o m m i t s . 
                         / /   A p p e n d   t o   t h e   b e g i n n i n g   o f   t h e   l i s t . 
                         r e n d e r e d T a i l . s i b l i n g   =   w o r k I n P r o g r e s s . c h i l d ; 
                         w o r k I n P r o g r e s s . c h i l d   =   r e n d e r e d T a i l ; 
                     }   e l s e   { 
                         v a r   p r e v i o u s S i b l i n g   =   r e n d e r S t a t e . l a s t ; 
 
                         i f   ( p r e v i o u s S i b l i n g   ! = =   n u l l )   { 
                             p r e v i o u s S i b l i n g . s i b l i n g   =   r e n d e r e d T a i l ; 
                         }   e l s e   { 
                             w o r k I n P r o g r e s s . c h i l d   =   r e n d e r e d T a i l ; 
                         } 
 
                         r e n d e r S t a t e . l a s t   =   r e n d e r e d T a i l ; 
                     } 
                 } 
 
                 i f   ( r e n d e r S t a t e . t a i l   ! = =   n u l l )   { 
                     / /   W e   s t i l l   h a v e   t a i l   r o w s   t o   r e n d e r . 
                     / /   P o p   a   r o w . 
                     v a r   n e x t   =   r e n d e r S t a t e . t a i l ; 
                     r e n d e r S t a t e . r e n d e r i n g   =   n e x t ; 
                     r e n d e r S t a t e . t a i l   =   n e x t . s i b l i n g ; 
                     r e n d e r S t a t e . r e n d e r i n g S t a r t T i m e   =   n o w ( ) ; 
                     n e x t . s i b l i n g   =   n u l l ;   / /   R e s t o r e   t h e   c o n t e x t . 
                     / /   T O D O :   W e   c a n   p r o b a b l y   j u s t   a v o i d   p o p p i n g   i t   i n s t e a d   a n d   o n l y 
                     / /   s e t t i n g   i t   t h e   f i r s t   t i m e   w e   g o   f r o m   n o t   s u s p e n d e d   t o   s u s p e n d e d . 
 
                     v a r   s u s p e n s e C o n t e x t   =   s u s p e n s e S t a c k C u r s o r . c u r r e n t ; 
 
                     i f   ( d i d S u s p e n d A l r e a d y )   { 
                         s u s p e n s e C o n t e x t   =   s e t S h a l l o w S u s p e n s e C o n t e x t ( s u s p e n s e C o n t e x t ,   F o r c e S u s p e n s e F a l l b a c k ) ; 
                     }   e l s e   { 
                         s u s p e n s e C o n t e x t   =   s e t D e f a u l t S h a l l o w S u s p e n s e C o n t e x t ( s u s p e n s e C o n t e x t ) ; 
                     } 
 
                     p u s h S u s p e n s e C o n t e x t ( w o r k I n P r o g r e s s ,   s u s p e n s e C o n t e x t ) ;   / /   D o   a   p a s s   o v e r   t h e   n e x t   r o w . 
                     / /   D o n ' t   b u b b l e   p r o p e r t i e s   i n   t h i s   c a s e . 
 
                     r e t u r n   n e x t ; 
                 } 
 
                 b u b b l e P r o p e r t i e s ( w o r k I n P r o g r e s s ) ; 
                 r e t u r n   n u l l ; 
             } 
 
         c a s e   S c o p e C o m p o n e n t : 
             { 
 
                 b r e a k ; 
             } 
 
         c a s e   O f f s c r e e n C o m p o n e n t : 
         c a s e   L e g a c y H i d d e n C o m p o n e n t : 
             { 
                 p o p R e n d e r L a n e s ( w o r k I n P r o g r e s s ) ; 
                 v a r   _ n e x t S t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
                 v a r   n e x t I s H i d d e n   =   _ n e x t S t a t e   ! = =   n u l l ; 
 
                 i f   ( c u r r e n t   ! = =   n u l l )   { 
                     v a r   _ p r e v S t a t e 2   =   c u r r e n t . m e m o i z e d S t a t e ; 
                     v a r   p r e v I s H i d d e n   =   _ p r e v S t a t e 2   ! = =   n u l l ; 
 
                     i f   ( p r e v I s H i d d e n   ! = =   n e x t I s H i d d e n   & &   (   / /   L e g a c y H i d d e n   d o e s n ' t   d o   a n y   h i d i n g      i t   o n l y   p r e - r e n d e r s . 
                     ! e n a b l e L e g a c y H i d d e n   ) )   { 
                         w o r k I n P r o g r e s s . f l a g s   | =   V i s i b i l i t y ; 
                     } 
                 } 
 
                 i f   ( ! n e x t I s H i d d e n   | |   ( w o r k I n P r o g r e s s . m o d e   &   C o n c u r r e n t M o d e )   = = =   N o M o d e )   { 
                     b u b b l e P r o p e r t i e s ( w o r k I n P r o g r e s s ) ; 
                 }   e l s e   { 
                     / /   D o n ' t   b u b b l e   p r o p e r t i e s   f o r   h i d d e n   c h i l d r e n   u n l e s s   w e ' r e   r e n d e r i n g 
                     / /   a t   o f f s c r e e n   p r i o r i t y . 
                     i f   ( i n c l u d e s S o m e L a n e ( s u b t r e e R e n d e r L a n e s ,   O f f s c r e e n L a n e ) )   { 
                         b u b b l e P r o p e r t i e s ( w o r k I n P r o g r e s s ) ; 
 
                         { 
                             / /   C h e c k   i f   t h e r e   w a s   a n   i n s e r t i o n   o r   u p d a t e   i n   t h e   h i d d e n   s u b t r e e . 
                             / /   I f   s o ,   w e   n e e d   t o   h i d e   t h o s e   n o d e s   i n   t h e   c o m m i t   p h a s e ,   s o 
                             / /   s c h e d u l e   a   v i s i b i l i t y   e f f e c t . 
                             i f   (   w o r k I n P r o g r e s s . s u b t r e e F l a g s   &   ( P l a c e m e n t   |   U p d a t e ) )   { 
                                 w o r k I n P r o g r e s s . f l a g s   | =   V i s i b i l i t y ; 
                             } 
                         } 
                     } 
                 } 
                 r e t u r n   n u l l ; 
             } 
 
         c a s e   C a c h e C o m p o n e n t : 
             { 
 
                 r e t u r n   n u l l ; 
             } 
 
         c a s e   T r a c i n g M a r k e r C o m p o n e n t : 
             { 
 
                 r e t u r n   n u l l ; 
             } 
     } 
 
     t h r o w   n e w   E r r o r ( " U n k n o w n   u n i t   o f   w o r k   t a g   ( "   +   w o r k I n P r o g r e s s . t a g   +   " ) .   T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   i n   "   +   ' R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
 } 
 
 v a r   R e a c t C u r r e n t O w n e r $ 1   =   R e a c t S h a r e d I n t e r n a l s . R e a c t C u r r e n t O w n e r ; 
 v a r   d i d R e c e i v e U p d a t e   =   f a l s e ; 
 v a r   d i d W a r n A b o u t B a d C l a s s ; 
 v a r   d i d W a r n A b o u t M o d u l e P a t t e r n C o m p o n e n t ; 
 v a r   d i d W a r n A b o u t C o n t e x t T y p e O n F u n c t i o n C o m p o n e n t ; 
 v a r   d i d W a r n A b o u t G e t D e r i v e d S t a t e O n F u n c t i o n C o m p o n e n t ; 
 v a r   d i d W a r n A b o u t F u n c t i o n R e f s ; 
 v a r   d i d W a r n A b o u t R e a s s i g n i n g P r o p s ; 
 v a r   d i d W a r n A b o u t R e v e a l O r d e r ; 
 v a r   d i d W a r n A b o u t T a i l O p t i o n s ; 
 
 { 
     d i d W a r n A b o u t B a d C l a s s   =   { } ; 
     d i d W a r n A b o u t M o d u l e P a t t e r n C o m p o n e n t   =   { } ; 
     d i d W a r n A b o u t C o n t e x t T y p e O n F u n c t i o n C o m p o n e n t   =   { } ; 
     d i d W a r n A b o u t G e t D e r i v e d S t a t e O n F u n c t i o n C o m p o n e n t   =   { } ; 
     d i d W a r n A b o u t F u n c t i o n R e f s   =   { } ; 
     d i d W a r n A b o u t R e a s s i g n i n g P r o p s   =   f a l s e ; 
     d i d W a r n A b o u t R e v e a l O r d e r   =   { } ; 
     d i d W a r n A b o u t T a i l O p t i o n s   =   { } ; 
 } 
 
 f u n c t i o n   r e c o n c i l e C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e x t C h i l d r e n ,   r e n d e r L a n e s )   { 
     i f   ( c u r r e n t   = = =   n u l l )   { 
         / /   I f   t h i s   i s   a   f r e s h   n e w   c o m p o n e n t   t h a t   h a s n ' t   b e e n   r e n d e r e d   y e t ,   w e 
         / /   w o n ' t   u p d a t e   i t s   c h i l d   s e t   b y   a p p l y i n g   m i n i m a l   s i d e - e f f e c t s .   I n s t e a d , 
         / /   w e   w i l l   a d d   t h e m   a l l   t o   t h e   c h i l d   b e f o r e   i t   g e t s   r e n d e r e d .   T h a t   m e a n s 
         / /   w e   c a n   o p t i m i z e   t h i s   r e c o n c i l i a t i o n   p a s s   b y   n o t   t r a c k i n g   s i d e - e f f e c t s . 
         w o r k I n P r o g r e s s . c h i l d   =   m o u n t C h i l d F i b e r s ( w o r k I n P r o g r e s s ,   n u l l ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ) ; 
     }   e l s e   { 
         / /   I f   t h e   c u r r e n t   c h i l d   i s   t h e   s a m e   a s   t h e   w o r k   i n   p r o g r e s s ,   i t   m e a n s   t h a t 
         / /   w e   h a v e n ' t   y e t   s t a r t e d   a n y   w o r k   o n   t h e s e   c h i l d r e n .   T h e r e f o r e ,   w e   u s e 
         / /   t h e   c l o n e   a l g o r i t h m   t o   c r e a t e   a   c o p y   o f   a l l   t h e   c u r r e n t   c h i l d r e n . 
         / /   I f   w e   h a d   a n y   p r o g r e s s e d   w o r k   a l r e a d y ,   t h a t   i s   i n v a l i d   a t   t h i s   p o i n t   s o 
         / /   l e t ' s   t h r o w   i t   o u t . 
         w o r k I n P r o g r e s s . c h i l d   =   r e c o n c i l e C h i l d F i b e r s ( w o r k I n P r o g r e s s ,   c u r r e n t . c h i l d ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ) ; 
     } 
 } 
 
 f u n c t i o n   f o r c e U n m o u n t C u r r e n t A n d R e c o n c i l e ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e x t C h i l d r e n ,   r e n d e r L a n e s )   { 
     / /   T h i s   f u n c t i o n   i s   f o r k   o f   r e c o n c i l e C h i l d r e n .   I t ' s   u s e d   i n   c a s e s   w h e r e   w e 
     / /   w a n t   t o   r e c o n c i l e   w i t h o u t   m a t c h i n g   a g a i n s t   t h e   e x i s t i n g   s e t .   T h i s   h a s   t h e 
     / /   e f f e c t   o f   a l l   c u r r e n t   c h i l d r e n   b e i n g   u n m o u n t e d ;   e v e n   i f   t h e   t y p e   a n d   k e y 
     / /   a r e   t h e   s a m e ,   t h e   o l d   c h i l d   i s   u n m o u n t e d   a n d   a   n e w   c h i l d   i s   c r e a t e d . 
     / / 
     / /   T o   d o   t h i s ,   w e ' r e   g o i n g   t o   g o   t h r o u g h   t h e   r e c o n c i l e   a l g o r i t h m   t w i c e .   I n 
     / /   t h e   f i r s t   p a s s ,   w e   s c h e d u l e   a   d e l e t i o n   f o r   a l l   t h e   c u r r e n t   c h i l d r e n   b y 
     / /   p a s s i n g   n u l l . 
     w o r k I n P r o g r e s s . c h i l d   =   r e c o n c i l e C h i l d F i b e r s ( w o r k I n P r o g r e s s ,   c u r r e n t . c h i l d ,   n u l l ,   r e n d e r L a n e s ) ;   / /   I n   t h e   s e c o n d   p a s s ,   w e   m o u n t   t h e   n e w   c h i l d r e n .   T h e   t r i c k   h e r e   i s   t h a t   w e 
     / /   p a s s   n u l l   i n   p l a c e   o f   w h e r e   w e   u s u a l l y   p a s s   t h e   c u r r e n t   c h i l d   s e t .   T h i s   h a s 
     / /   t h e   e f f e c t   o f   r e m o u n t i n g   a l l   c h i l d r e n   r e g a r d l e s s   o f   w h e t h e r   t h e i r 
     / /   i d e n t i t i e s   m a t c h . 
 
     w o r k I n P r o g r e s s . c h i l d   =   r e c o n c i l e C h i l d F i b e r s ( w o r k I n P r o g r e s s ,   n u l l ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ) ; 
 } 
 
 f u n c t i o n   u p d a t e F o r w a r d R e f ( c u r r e n t ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   n e x t P r o p s ,   r e n d e r L a n e s )   { 
     / /   T O D O :   c u r r e n t   c a n   b e   n o n - n u l l   h e r e   e v e n   i f   t h e   c o m p o n e n t 
     / /   h a s n ' t   y e t   m o u n t e d .   T h i s   h a p p e n s   a f t e r   t h e   f i r s t   r e n d e r   s u s p e n d s . 
     / /   W e ' l l   n e e d   t o   f i g u r e   o u t   i f   t h i s   i s   f i n e   o r   c a n   c a u s e   i s s u e s . 
     { 
         i f   ( w o r k I n P r o g r e s s . t y p e   ! = =   w o r k I n P r o g r e s s . e l e m e n t T y p e )   { 
             / /   L a z y   c o m p o n e n t   p r o p s   c a n ' t   b e   v a l i d a t e d   i n   c r e a t e E l e m e n t 
             / /   b e c a u s e   t h e y ' r e   o n l y   g u a r a n t e e d   t o   b e   r e s o l v e d   h e r e . 
             v a r   i n n e r P r o p T y p e s   =   C o m p o n e n t . p r o p T y p e s ; 
 
             i f   ( i n n e r P r o p T y p e s )   { 
                 c h e c k P r o p T y p e s ( i n n e r P r o p T y p e s ,   n e x t P r o p s ,   / /   R e s o l v e d   p r o p s 
                 ' p r o p ' ,   g e t C o m p o n e n t N a m e F r o m T y p e ( C o m p o n e n t ) ) ; 
             } 
         } 
     } 
 
     v a r   r e n d e r   =   C o m p o n e n t . r e n d e r ; 
     v a r   r e f   =   w o r k I n P r o g r e s s . r e f ;   / /   T h e   r e s t   i s   a   f o r k   o f   u p d a t e F u n c t i o n C o m p o n e n t 
 
     v a r   n e x t C h i l d r e n ; 
     v a r   h a s I d ; 
     p r e p a r e T o R e a d C o n t e x t ( w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
 
     { 
         m a r k C o m p o n e n t R e n d e r S t a r t e d ( w o r k I n P r o g r e s s ) ; 
     } 
 
     { 
         R e a c t C u r r e n t O w n e r $ 1 . c u r r e n t   =   w o r k I n P r o g r e s s ; 
         s e t I s R e n d e r i n g ( t r u e ) ; 
         n e x t C h i l d r e n   =   r e n d e r W i t h H o o k s ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r ,   n e x t P r o p s ,   r e f ,   r e n d e r L a n e s ) ; 
         h a s I d   =   c h e c k D i d R e n d e r I d H o o k ( ) ; 
 
         i f   (   w o r k I n P r o g r e s s . m o d e   &   S t r i c t L e g a c y M o d e )   { 
             s e t I s S t r i c t M o d e F o r D e v t o o l s ( t r u e ) ; 
 
             t r y   { 
                 n e x t C h i l d r e n   =   r e n d e r W i t h H o o k s ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r ,   n e x t P r o p s ,   r e f ,   r e n d e r L a n e s ) ; 
                 h a s I d   =   c h e c k D i d R e n d e r I d H o o k ( ) ; 
             }   f i n a l l y   { 
                 s e t I s S t r i c t M o d e F o r D e v t o o l s ( f a l s e ) ; 
             } 
         } 
 
         s e t I s R e n d e r i n g ( f a l s e ) ; 
     } 
 
     { 
         m a r k C o m p o n e n t R e n d e r S t o p p e d ( ) ; 
     } 
 
     i f   ( c u r r e n t   ! = =   n u l l   & &   ! d i d R e c e i v e U p d a t e )   { 
         b a i l o u t H o o k s ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
         r e t u r n   b a i l o u t O n A l r e a d y F i n i s h e d W o r k ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
     } 
 
     i f   ( g e t I s H y d r a t i n g ( )   & &   h a s I d )   { 
         p u s h M a t e r i a l i z e d T r e e I d ( w o r k I n P r o g r e s s ) ; 
     }   / /   R e a c t   D e v T o o l s   r e a d s   t h i s   f l a g . 
 
 
     w o r k I n P r o g r e s s . f l a g s   | =   P e r f o r m e d W o r k ; 
     r e c o n c i l e C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ) ; 
     r e t u r n   w o r k I n P r o g r e s s . c h i l d ; 
 } 
 
 f u n c t i o n   u p d a t e M e m o C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   n e x t P r o p s ,   r e n d e r L a n e s )   { 
     i f   ( c u r r e n t   = = =   n u l l )   { 
         v a r   t y p e   =   C o m p o n e n t . t y p e ; 
 
         i f   ( i s S i m p l e F u n c t i o n C o m p o n e n t ( t y p e )   & &   C o m p o n e n t . c o m p a r e   = = =   n u l l   & &   / /   S i m p l e M e m o C o m p o n e n t   c o d e p a t h   d o e s n ' t   r e s o l v e   o u t e r   p r o p s   e i t h e r . 
         C o m p o n e n t . d e f a u l t P r o p s   = = =   u n d e f i n e d )   { 
             v a r   r e s o l v e d T y p e   =   t y p e ; 
 
             { 
                 r e s o l v e d T y p e   =   r e s o l v e F u n c t i o n F o r H o t R e l o a d i n g ( t y p e ) ; 
             }   / /   I f   t h i s   i s   a   p l a i n   f u n c t i o n   c o m p o n e n t   w i t h o u t   d e f a u l t   p r o p s , 
             / /   a n d   w i t h   o n l y   t h e   d e f a u l t   s h a l l o w   c o m p a r i s o n ,   w e   u p g r a d e   i t 
             / /   t o   a   S i m p l e M e m o C o m p o n e n t   t o   a l l o w   f a s t   p a t h   u p d a t e s . 
 
 
             w o r k I n P r o g r e s s . t a g   =   S i m p l e M e m o C o m p o n e n t ; 
             w o r k I n P r o g r e s s . t y p e   =   r e s o l v e d T y p e ; 
 
             { 
                 v a l i d a t e F u n c t i o n C o m p o n e n t I n D e v ( w o r k I n P r o g r e s s ,   t y p e ) ; 
             } 
 
             r e t u r n   u p d a t e S i m p l e M e m o C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e s o l v e d T y p e ,   n e x t P r o p s ,   r e n d e r L a n e s ) ; 
         } 
 
         { 
             v a r   i n n e r P r o p T y p e s   =   t y p e . p r o p T y p e s ; 
 
             i f   ( i n n e r P r o p T y p e s )   { 
                 / /   I n n e r   m e m o   c o m p o n e n t   p r o p s   a r e n ' t   c u r r e n t l y   v a l i d a t e d   i n   c r e a t e E l e m e n t . 
                 / /   W e   c o u l d   m o v e   i t   t h e r e ,   b u t   w e ' d   s t i l l   n e e d   t h i s   f o r   l a z y   c o d e   p a t h . 
                 c h e c k P r o p T y p e s ( i n n e r P r o p T y p e s ,   n e x t P r o p s ,   / /   R e s o l v e d   p r o p s 
                 ' p r o p ' ,   g e t C o m p o n e n t N a m e F r o m T y p e ( t y p e ) ) ; 
             } 
         } 
 
         v a r   c h i l d   =   c r e a t e F i b e r F r o m T y p e A n d P r o p s ( C o m p o n e n t . t y p e ,   n u l l ,   n e x t P r o p s ,   w o r k I n P r o g r e s s ,   w o r k I n P r o g r e s s . m o d e ,   r e n d e r L a n e s ) ; 
         c h i l d . r e f   =   w o r k I n P r o g r e s s . r e f ; 
         c h i l d . r e t u r n   =   w o r k I n P r o g r e s s ; 
         w o r k I n P r o g r e s s . c h i l d   =   c h i l d ; 
         r e t u r n   c h i l d ; 
     } 
 
     { 
         v a r   _ t y p e   =   C o m p o n e n t . t y p e ; 
         v a r   _ i n n e r P r o p T y p e s   =   _ t y p e . p r o p T y p e s ; 
 
         i f   ( _ i n n e r P r o p T y p e s )   { 
             / /   I n n e r   m e m o   c o m p o n e n t   p r o p s   a r e n ' t   c u r r e n t l y   v a l i d a t e d   i n   c r e a t e E l e m e n t . 
             / /   W e   c o u l d   m o v e   i t   t h e r e ,   b u t   w e ' d   s t i l l   n e e d   t h i s   f o r   l a z y   c o d e   p a t h . 
             c h e c k P r o p T y p e s ( _ i n n e r P r o p T y p e s ,   n e x t P r o p s ,   / /   R e s o l v e d   p r o p s 
             ' p r o p ' ,   g e t C o m p o n e n t N a m e F r o m T y p e ( _ t y p e ) ) ; 
         } 
     } 
 
     v a r   c u r r e n t C h i l d   =   c u r r e n t . c h i l d ;   / /   T h i s   i s   a l w a y s   e x a c t l y   o n e   c h i l d 
 
     v a r   h a s S c h e d u l e d U p d a t e O r C o n t e x t   =   c h e c k S c h e d u l e d U p d a t e O r C o n t e x t ( c u r r e n t ,   r e n d e r L a n e s ) ; 
 
     i f   ( ! h a s S c h e d u l e d U p d a t e O r C o n t e x t )   { 
         / /   T h i s   w i l l   b e   t h e   p r o p s   w i t h   r e s o l v e d   d e f a u l t P r o p s , 
         / /   u n l i k e   c u r r e n t . m e m o i z e d P r o p s   w h i c h   w i l l   b e   t h e   u n r e s o l v e d   o n e s . 
         v a r   p r e v P r o p s   =   c u r r e n t C h i l d . m e m o i z e d P r o p s ;   / /   D e f a u l t   t o   s h a l l o w   c o m p a r i s o n 
 
         v a r   c o m p a r e   =   C o m p o n e n t . c o m p a r e ; 
         c o m p a r e   =   c o m p a r e   ! = =   n u l l   ?   c o m p a r e   :   s h a l l o w E q u a l ; 
 
         i f   ( c o m p a r e ( p r e v P r o p s ,   n e x t P r o p s )   & &   c u r r e n t . r e f   = = =   w o r k I n P r o g r e s s . r e f )   { 
             r e t u r n   b a i l o u t O n A l r e a d y F i n i s h e d W o r k ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
         } 
     }   / /   R e a c t   D e v T o o l s   r e a d s   t h i s   f l a g . 
 
 
     w o r k I n P r o g r e s s . f l a g s   | =   P e r f o r m e d W o r k ; 
     v a r   n e w C h i l d   =   c r e a t e W o r k I n P r o g r e s s ( c u r r e n t C h i l d ,   n e x t P r o p s ) ; 
     n e w C h i l d . r e f   =   w o r k I n P r o g r e s s . r e f ; 
     n e w C h i l d . r e t u r n   =   w o r k I n P r o g r e s s ; 
     w o r k I n P r o g r e s s . c h i l d   =   n e w C h i l d ; 
     r e t u r n   n e w C h i l d ; 
 } 
 
 f u n c t i o n   u p d a t e S i m p l e M e m o C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   n e x t P r o p s ,   r e n d e r L a n e s )   { 
     / /   T O D O :   c u r r e n t   c a n   b e   n o n - n u l l   h e r e   e v e n   i f   t h e   c o m p o n e n t 
     / /   h a s n ' t   y e t   m o u n t e d .   T h i s   h a p p e n s   w h e n   t h e   i n n e r   r e n d e r   s u s p e n d s . 
     / /   W e ' l l   n e e d   t o   f i g u r e   o u t   i f   t h i s   i s   f i n e   o r   c a n   c a u s e   i s s u e s . 
     { 
         i f   ( w o r k I n P r o g r e s s . t y p e   ! = =   w o r k I n P r o g r e s s . e l e m e n t T y p e )   { 
             / /   L a z y   c o m p o n e n t   p r o p s   c a n ' t   b e   v a l i d a t e d   i n   c r e a t e E l e m e n t 
             / /   b e c a u s e   t h e y ' r e   o n l y   g u a r a n t e e d   t o   b e   r e s o l v e d   h e r e . 
             v a r   o u t e r M e m o T y p e   =   w o r k I n P r o g r e s s . e l e m e n t T y p e ; 
 
             i f   ( o u t e r M e m o T y p e . $ $ t y p e o f   = = =   R E A C T _ L A Z Y _ T Y P E )   { 
                 / /   W e   w a r n   w h e n   y o u   d e f i n e   p r o p T y p e s   o n   l a z y ( ) 
                 / /   s o   l e t ' s   j u s t   s k i p   o v e r   i t   t o   f i n d   m e m o ( )   o u t e r   w r a p p e r . 
                 / /   I n n e r   p r o p s   f o r   m e m o   a r e   v a l i d a t e d   l a t e r . 
                 v a r   l a z y C o m p o n e n t   =   o u t e r M e m o T y p e ; 
                 v a r   p a y l o a d   =   l a z y C o m p o n e n t . _ p a y l o a d ; 
                 v a r   i n i t   =   l a z y C o m p o n e n t . _ i n i t ; 
 
                 t r y   { 
                     o u t e r M e m o T y p e   =   i n i t ( p a y l o a d ) ; 
                 }   c a t c h   ( x )   { 
                     o u t e r M e m o T y p e   =   n u l l ; 
                 }   / /   I n n e r   p r o p T y p e s   w i l l   b e   v a l i d a t e d   i n   t h e   f u n c t i o n   c o m p o n e n t   p a t h . 
 
 
                 v a r   o u t e r P r o p T y p e s   =   o u t e r M e m o T y p e   & &   o u t e r M e m o T y p e . p r o p T y p e s ; 
 
                 i f   ( o u t e r P r o p T y p e s )   { 
                     c h e c k P r o p T y p e s ( o u t e r P r o p T y p e s ,   n e x t P r o p s ,   / /   R e s o l v e d   ( S i m p l e M e m o C o m p o n e n t   h a s   n o   d e f a u l t P r o p s ) 
                     ' p r o p ' ,   g e t C o m p o n e n t N a m e F r o m T y p e ( o u t e r M e m o T y p e ) ) ; 
                 } 
             } 
         } 
     } 
 
     i f   ( c u r r e n t   ! = =   n u l l )   { 
         v a r   p r e v P r o p s   =   c u r r e n t . m e m o i z e d P r o p s ; 
 
         i f   ( s h a l l o w E q u a l ( p r e v P r o p s ,   n e x t P r o p s )   & &   c u r r e n t . r e f   = = =   w o r k I n P r o g r e s s . r e f   & &   (   / /   P r e v e n t   b a i l o u t   i f   t h e   i m p l e m e n t a t i o n   c h a n g e d   d u e   t o   h o t   r e l o a d . 
           w o r k I n P r o g r e s s . t y p e   = = =   c u r r e n t . t y p e   ) )   { 
             d i d R e c e i v e U p d a t e   =   f a l s e ;   / /   T h e   p r o p s   a r e   s h a l l o w l y   e q u a l .   R e u s e   t h e   p r e v i o u s   p r o p s   o b j e c t ,   l i k e   w e 
             / /   w o u l d   d u r i n g   a   n o r m a l   f i b e r   b a i l o u t . 
             / / 
             / /   W e   d o n ' t   h a v e   s t r o n g   g u a r a n t e e s   t h a t   t h e   p r o p s   o b j e c t   i s   r e f e r e n t i a l l y 
             / /   e q u a l   d u r i n g   u p d a t e s   w h e r e   w e   c a n ' t   b a i l   o u t   a n y w a y      l i k e   i f   t h e   p r o p s 
             / /   a r e   s h a l l o w l y   e q u a l ,   b u t   t h e r e ' s   a   l o c a l   s t a t e   o r   c o n t e x t   u p d a t e   i n   t h e 
             / /   s a m e   b a t c h . 
             / / 
             / /   H o w e v e r ,   a s   a   p r i n c i p l e ,   w e   s h o u l d   a i m   t o   m a k e   t h e   b e h a v i o r   c o n s i s t e n t 
             / /   a c r o s s   d i f f e r e n t   w a y s   o f   m e m o i z i n g   a   c o m p o n e n t .   F o r   e x a m p l e ,   R e a c t . m e m o 
             / /   h a s   a   d i f f e r e n t   i n t e r n a l   F i b e r   l a y o u t   i f   y o u   p a s s   a   n o r m a l   f u n c t i o n 
             / /   c o m p o n e n t   ( S i m p l e M e m o C o m p o n e n t )   v e r s u s   i f   y o u   p a s s   a   d i f f e r e n t   t y p e 
             / /   l i k e   f o r w a r d R e f   ( M e m o C o m p o n e n t ) .   B u t   t h i s   i s   a n   i m p l e m e n t a t i o n   d e t a i l . 
             / /   W r a p p i n g   a   c o m p o n e n t   i n   f o r w a r d R e f   ( o r   R e a c t . l a z y ,   e t c )   s h o u l d n ' t 
             / /   a f f e c t   w h e t h e r   t h e   p r o p s   o b j e c t   i s   r e u s e d   d u r i n g   a   b a i l o u t . 
 
             w o r k I n P r o g r e s s . p e n d i n g P r o p s   =   n e x t P r o p s   =   p r e v P r o p s ; 
 
             i f   ( ! c h e c k S c h e d u l e d U p d a t e O r C o n t e x t ( c u r r e n t ,   r e n d e r L a n e s ) )   { 
                 / /   T h e   p e n d i n g   l a n e s   w e r e   c l e a r e d   a t   t h e   b e g i n n i n g   o f   b e g i n W o r k .   W e ' r e 
                 / /   a b o u t   t o   b a i l   o u t ,   b u t   t h e r e   m i g h t   b e   o t h e r   l a n e s   t h a t   w e r e n ' t 
                 / /   i n c l u d e d   i n   t h e   c u r r e n t   r e n d e r .   U s u a l l y ,   t h e   p r i o r i t y   l e v e l   o f   t h e 
                 / /   r e m a i n i n g   u p d a t e s   i s   a c c u m u l a t e d   d u r i n g   t h e   e v a l u a t i o n   o f   t h e 
                 / /   c o m p o n e n t   ( i . e .   w h e n   p r o c e s s i n g   t h e   u p d a t e   q u e u e ) .   B u t   s i n c e   s i n c e 
                 / /   w e ' r e   b a i l i n g   o u t   e a r l y   * w i t h o u t *   e v a l u a t i n g   t h e   c o m p o n e n t ,   w e   n e e d 
                 / /   t o   a c c o u n t   f o r   i t   h e r e ,   t o o .   R e s e t   t o   t h e   v a l u e   o f   t h e   c u r r e n t   f i b e r . 
                 / /   N O T E :   T h i s   o n l y   a p p l i e s   t o   S i m p l e M e m o C o m p o n e n t ,   n o t   M e m o C o m p o n e n t , 
                 / /   b e c a u s e   a   M e m o C o m p o n e n t   f i b e r   d o e s   n o t   h a v e   h o o k s   o r   a n   u p d a t e   q u e u e ; 
                 / /   r a t h e r ,   i t   w r a p s   a r o u n d   a n   i n n e r   c o m p o n e n t ,   w h i c h   m a y   o r   m a y   n o t 
                 / /   c o n t a i n s   h o o k s . 
                 / /   T O D O :   M o v e   t h e   r e s e t   a t   i n   b e g i n W o r k   o u t   o f   t h e   c o m m o n   p a t h   s o   t h a t 
                 / /   t h i s   i s   n o   l o n g e r   n e c e s s a r y . 
                 w o r k I n P r o g r e s s . l a n e s   =   c u r r e n t . l a n e s ; 
                 r e t u r n   b a i l o u t O n A l r e a d y F i n i s h e d W o r k ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
             }   e l s e   i f   ( ( c u r r e n t . f l a g s   &   F o r c e U p d a t e F o r L e g a c y S u s p e n s e )   ! = =   N o F l a g s )   { 
                 / /   T h i s   i s   a   s p e c i a l   c a s e   t h a t   o n l y   e x i s t s   f o r   l e g a c y   m o d e . 
                 / /   S e e   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / p u l l / 1 9 2 1 6 . 
                 d i d R e c e i v e U p d a t e   =   t r u e ; 
             } 
         } 
     } 
 
     r e t u r n   u p d a t e F u n c t i o n C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   n e x t P r o p s ,   r e n d e r L a n e s ) ; 
 } 
 
 f u n c t i o n   u p d a t e O f f s c r e e n C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     v a r   n e x t P r o p s   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
     v a r   n e x t C h i l d r e n   =   n e x t P r o p s . c h i l d r e n ; 
     v a r   p r e v S t a t e   =   c u r r e n t   ! = =   n u l l   ?   c u r r e n t . m e m o i z e d S t a t e   :   n u l l ; 
 
     i f   ( n e x t P r o p s . m o d e   = = =   ' h i d d e n '   | |   e n a b l e L e g a c y H i d d e n   )   { 
         / /   R e n d e r i n g   a   h i d d e n   t r e e . 
         i f   ( ( w o r k I n P r o g r e s s . m o d e   &   C o n c u r r e n t M o d e )   = = =   N o M o d e )   { 
             / /   I n   l e g a c y   s y n c   m o d e ,   d o n ' t   d e f e r   t h e   s u b t r e e .   R e n d e r   i t   n o w . 
             / /   T O D O :   C o n s i d e r   h o w   O f f s c r e e n   s h o u l d   w o r k   w i t h   t r a n s i t i o n s   i n   t h e   f u t u r e 
             v a r   n e x t S t a t e   =   { 
                 b a s e L a n e s :   N o L a n e s , 
                 c a c h e P o o l :   n u l l , 
                 t r a n s i t i o n s :   n u l l 
             } ; 
             w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   n e x t S t a t e ; 
 
             p u s h R e n d e r L a n e s ( w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
         }   e l s e   i f   ( ! i n c l u d e s S o m e L a n e ( r e n d e r L a n e s ,   O f f s c r e e n L a n e ) )   { 
             v a r   s p a w n e d C a c h e P o o l   =   n u l l ;   / /   W e ' r e   h i d d e n ,   a n d   w e ' r e   n o t   r e n d e r i n g   a t   O f f s c r e e n .   W e   w i l l   b a i l   o u t 
             / /   a n d   r e s u m e   t h i s   t r e e   l a t e r . 
 
             v a r   n e x t B a s e L a n e s ; 
 
             i f   ( p r e v S t a t e   ! = =   n u l l )   { 
                 v a r   p r e v B a s e L a n e s   =   p r e v S t a t e . b a s e L a n e s ; 
                 n e x t B a s e L a n e s   =   m e r g e L a n e s ( p r e v B a s e L a n e s ,   r e n d e r L a n e s ) ; 
             }   e l s e   { 
                 n e x t B a s e L a n e s   =   r e n d e r L a n e s ; 
             }   / /   S c h e d u l e   t h i s   f i b e r   t o   r e - r e n d e r   a t   o f f s c r e e n   p r i o r i t y .   T h e n   b a i l o u t . 
 
 
             w o r k I n P r o g r e s s . l a n e s   =   w o r k I n P r o g r e s s . c h i l d L a n e s   =   l a n e T o L a n e s ( O f f s c r e e n L a n e ) ; 
             v a r   _ n e x t S t a t e   =   { 
                 b a s e L a n e s :   n e x t B a s e L a n e s , 
                 c a c h e P o o l :   s p a w n e d C a c h e P o o l , 
                 t r a n s i t i o n s :   n u l l 
             } ; 
             w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   _ n e x t S t a t e ; 
             w o r k I n P r o g r e s s . u p d a t e Q u e u e   =   n u l l ; 
             / /   t o   a v o i d   a   p u s h / p o p   m i s a l i g n m e n t . 
 
 
             p u s h R e n d e r L a n e s ( w o r k I n P r o g r e s s ,   n e x t B a s e L a n e s ) ; 
 
             r e t u r n   n u l l ; 
         }   e l s e   { 
             / /   T h i s   i s   t h e   s e c o n d   r e n d e r .   T h e   s u r r o u n d i n g   v i s i b l e   c o n t e n t   h a s   a l r e a d y 
             / /   c o m m i t t e d .   N o w   w e   r e s u m e   r e n d e r i n g   t h e   h i d d e n   t r e e . 
             / /   R e n d e r i n g   a t   o f f s c r e e n ,   s o   w e   c a n   c l e a r   t h e   b a s e   l a n e s . 
             v a r   _ n e x t S t a t e 2   =   { 
                 b a s e L a n e s :   N o L a n e s , 
                 c a c h e P o o l :   n u l l , 
                 t r a n s i t i o n s :   n u l l 
             } ; 
             w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   _ n e x t S t a t e 2 ;   / /   P u s h   t h e   l a n e s   t h a t   w e r e   s k i p p e d   w h e n   w e   b a i l e d   o u t . 
 
             v a r   s u b t r e e R e n d e r L a n e s   =   p r e v S t a t e   ! = =   n u l l   ?   p r e v S t a t e . b a s e L a n e s   :   r e n d e r L a n e s ; 
 
             p u s h R e n d e r L a n e s ( w o r k I n P r o g r e s s ,   s u b t r e e R e n d e r L a n e s ) ; 
         } 
     }   e l s e   { 
         / /   R e n d e r i n g   a   v i s i b l e   t r e e . 
         v a r   _ s u b t r e e R e n d e r L a n e s ; 
 
         i f   ( p r e v S t a t e   ! = =   n u l l )   { 
             / /   W e ' r e   g o i n g   f r o m   h i d d e n   - >   v i s i b l e . 
             _ s u b t r e e R e n d e r L a n e s   =   m e r g e L a n e s ( p r e v S t a t e . b a s e L a n e s ,   r e n d e r L a n e s ) ; 
 
             w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   n u l l ; 
         }   e l s e   { 
             / /   W e   w e r e n ' t   p r e v i o u s l y   h i d d e n ,   a n d   w e   s t i l l   a r e n ' t ,   s o   t h e r e ' s   n o t h i n g 
             / /   s p e c i a l   t o   d o .   N e e d   t o   p u s h   t o   t h e   s t a c k   r e g a r d l e s s ,   t h o u g h ,   t o   a v o i d 
             / /   a   p u s h / p o p   m i s a l i g n m e n t . 
             _ s u b t r e e R e n d e r L a n e s   =   r e n d e r L a n e s ; 
         } 
 
         p u s h R e n d e r L a n e s ( w o r k I n P r o g r e s s ,   _ s u b t r e e R e n d e r L a n e s ) ; 
     } 
 
     { 
         r e c o n c i l e C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ) ; 
         r e t u r n   w o r k I n P r o g r e s s . c h i l d ; 
     } 
 } 
 
 f u n c t i o n   u p d a t e F r a g m e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     v a r   n e x t C h i l d r e n   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
     r e c o n c i l e C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ) ; 
     r e t u r n   w o r k I n P r o g r e s s . c h i l d ; 
 } 
 
 f u n c t i o n   u p d a t e M o d e ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     v a r   n e x t C h i l d r e n   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s . c h i l d r e n ; 
     r e c o n c i l e C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ) ; 
     r e t u r n   w o r k I n P r o g r e s s . c h i l d ; 
 } 
 
 f u n c t i o n   u p d a t e P r o f i l e r ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     { 
         w o r k I n P r o g r e s s . f l a g s   | =   U p d a t e ; 
 
         { 
             / /   R e s e t   e f f e c t   d u r a t i o n s   f o r   t h e   n e x t   e v e n t u a l   e f f e c t   p h a s e . 
             / /   T h e s e   a r e   r e s e t   d u r i n g   r e n d e r   t o   a l l o w   t h e   D e v T o o l s   c o m m i t   h o o k   a   c h a n c e   t o   r e a d   t h e m , 
             v a r   s t a t e N o d e   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
             s t a t e N o d e . e f f e c t D u r a t i o n   =   0 ; 
             s t a t e N o d e . p a s s i v e E f f e c t D u r a t i o n   =   0 ; 
         } 
     } 
 
     v a r   n e x t P r o p s   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
     v a r   n e x t C h i l d r e n   =   n e x t P r o p s . c h i l d r e n ; 
     r e c o n c i l e C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ) ; 
     r e t u r n   w o r k I n P r o g r e s s . c h i l d ; 
 } 
 
 f u n c t i o n   m a r k R e f $ 1 ( c u r r e n t ,   w o r k I n P r o g r e s s )   { 
     v a r   r e f   =   w o r k I n P r o g r e s s . r e f ; 
 
     i f   ( c u r r e n t   = = =   n u l l   & &   r e f   ! = =   n u l l   | |   c u r r e n t   ! = =   n u l l   & &   c u r r e n t . r e f   ! = =   r e f )   { 
         / /   S c h e d u l e   a   R e f   e f f e c t 
         w o r k I n P r o g r e s s . f l a g s   | =   R e f ; 
 
         { 
             w o r k I n P r o g r e s s . f l a g s   | =   R e f S t a t i c ; 
         } 
     } 
 } 
 
 f u n c t i o n   u p d a t e F u n c t i o n C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   n e x t P r o p s ,   r e n d e r L a n e s )   { 
     { 
         i f   ( w o r k I n P r o g r e s s . t y p e   ! = =   w o r k I n P r o g r e s s . e l e m e n t T y p e )   { 
             / /   L a z y   c o m p o n e n t   p r o p s   c a n ' t   b e   v a l i d a t e d   i n   c r e a t e E l e m e n t 
             / /   b e c a u s e   t h e y ' r e   o n l y   g u a r a n t e e d   t o   b e   r e s o l v e d   h e r e . 
             v a r   i n n e r P r o p T y p e s   =   C o m p o n e n t . p r o p T y p e s ; 
 
             i f   ( i n n e r P r o p T y p e s )   { 
                 c h e c k P r o p T y p e s ( i n n e r P r o p T y p e s ,   n e x t P r o p s ,   / /   R e s o l v e d   p r o p s 
                 ' p r o p ' ,   g e t C o m p o n e n t N a m e F r o m T y p e ( C o m p o n e n t ) ) ; 
             } 
         } 
     } 
 
     v a r   c o n t e x t ; 
 
     { 
         v a r   u n m a s k e d C o n t e x t   =   g e t U n m a s k e d C o n t e x t ( w o r k I n P r o g r e s s ,   C o m p o n e n t ,   t r u e ) ; 
         c o n t e x t   =   g e t M a s k e d C o n t e x t ( w o r k I n P r o g r e s s ,   u n m a s k e d C o n t e x t ) ; 
     } 
 
     v a r   n e x t C h i l d r e n ; 
     v a r   h a s I d ; 
     p r e p a r e T o R e a d C o n t e x t ( w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
 
     { 
         m a r k C o m p o n e n t R e n d e r S t a r t e d ( w o r k I n P r o g r e s s ) ; 
     } 
 
     { 
         R e a c t C u r r e n t O w n e r $ 1 . c u r r e n t   =   w o r k I n P r o g r e s s ; 
         s e t I s R e n d e r i n g ( t r u e ) ; 
         n e x t C h i l d r e n   =   r e n d e r W i t h H o o k s ( c u r r e n t ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   n e x t P r o p s ,   c o n t e x t ,   r e n d e r L a n e s ) ; 
         h a s I d   =   c h e c k D i d R e n d e r I d H o o k ( ) ; 
 
         i f   (   w o r k I n P r o g r e s s . m o d e   &   S t r i c t L e g a c y M o d e )   { 
             s e t I s S t r i c t M o d e F o r D e v t o o l s ( t r u e ) ; 
 
             t r y   { 
                 n e x t C h i l d r e n   =   r e n d e r W i t h H o o k s ( c u r r e n t ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   n e x t P r o p s ,   c o n t e x t ,   r e n d e r L a n e s ) ; 
                 h a s I d   =   c h e c k D i d R e n d e r I d H o o k ( ) ; 
             }   f i n a l l y   { 
                 s e t I s S t r i c t M o d e F o r D e v t o o l s ( f a l s e ) ; 
             } 
         } 
 
         s e t I s R e n d e r i n g ( f a l s e ) ; 
     } 
 
     { 
         m a r k C o m p o n e n t R e n d e r S t o p p e d ( ) ; 
     } 
 
     i f   ( c u r r e n t   ! = =   n u l l   & &   ! d i d R e c e i v e U p d a t e )   { 
         b a i l o u t H o o k s ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
         r e t u r n   b a i l o u t O n A l r e a d y F i n i s h e d W o r k ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
     } 
 
     i f   ( g e t I s H y d r a t i n g ( )   & &   h a s I d )   { 
         p u s h M a t e r i a l i z e d T r e e I d ( w o r k I n P r o g r e s s ) ; 
     }   / /   R e a c t   D e v T o o l s   r e a d s   t h i s   f l a g . 
 
 
     w o r k I n P r o g r e s s . f l a g s   | =   P e r f o r m e d W o r k ; 
     r e c o n c i l e C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ) ; 
     r e t u r n   w o r k I n P r o g r e s s . c h i l d ; 
 } 
 
 f u n c t i o n   u p d a t e C l a s s C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   n e x t P r o p s ,   r e n d e r L a n e s )   { 
     { 
         / /   T h i s   i s   u s e d   b y   D e v T o o l s   t o   f o r c e   a   b o u n d a r y   t o   e r r o r . 
         s w i t c h   ( s h o u l d E r r o r ( w o r k I n P r o g r e s s ) )   { 
             c a s e   f a l s e : 
                 { 
                     v a r   _ i n s t a n c e   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
                     v a r   c t o r   =   w o r k I n P r o g r e s s . t y p e ;   / /   T O D O   T h i s   w a y   o f   r e s e t t i n g   t h e   e r r o r   b o u n d a r y   s t a t e   i s   a   h a c k . 
                     / /   I s   t h e r e   a   b e t t e r   w a y   t o   d o   t h i s ? 
 
                     v a r   t e m p I n s t a n c e   =   n e w   c t o r ( w o r k I n P r o g r e s s . m e m o i z e d P r o p s ,   _ i n s t a n c e . c o n t e x t ) ; 
                     v a r   s t a t e   =   t e m p I n s t a n c e . s t a t e ; 
 
                     _ i n s t a n c e . u p d a t e r . e n q u e u e S e t S t a t e ( _ i n s t a n c e ,   s t a t e ,   n u l l ) ; 
 
                     b r e a k ; 
                 } 
 
             c a s e   t r u e : 
                 { 
                     w o r k I n P r o g r e s s . f l a g s   | =   D i d C a p t u r e ; 
                     w o r k I n P r o g r e s s . f l a g s   | =   S h o u l d C a p t u r e ;   / /   e s l i n t - d i s a b l e - n e x t - l i n e   r e a c t - i n t e r n a l / p r o d - e r r o r - c o d e s 
 
                     v a r   e r r o r $ 1   =   n e w   E r r o r ( ' S i m u l a t e d   e r r o r   c o m i n g   f r o m   D e v T o o l s ' ) ; 
                     v a r   l a n e   =   p i c k A r b i t r a r y L a n e ( r e n d e r L a n e s ) ; 
                     w o r k I n P r o g r e s s . l a n e s   =   m e r g e L a n e s ( w o r k I n P r o g r e s s . l a n e s ,   l a n e ) ;   / /   S c h e d u l e   t h e   e r r o r   b o u n d a r y   t o   r e - r e n d e r   u s i n g   u p d a t e d   s t a t e 
 
                     v a r   u p d a t e   =   c r e a t e C l a s s E r r o r U p d a t e ( w o r k I n P r o g r e s s ,   c r e a t e C a p t u r e d V a l u e ( e r r o r $ 1 ,   w o r k I n P r o g r e s s ) ,   l a n e ) ; 
                     e n q u e u e C a p t u r e d U p d a t e ( w o r k I n P r o g r e s s ,   u p d a t e ) ; 
                     b r e a k ; 
                 } 
         } 
 
         i f   ( w o r k I n P r o g r e s s . t y p e   ! = =   w o r k I n P r o g r e s s . e l e m e n t T y p e )   { 
             / /   L a z y   c o m p o n e n t   p r o p s   c a n ' t   b e   v a l i d a t e d   i n   c r e a t e E l e m e n t 
             / /   b e c a u s e   t h e y ' r e   o n l y   g u a r a n t e e d   t o   b e   r e s o l v e d   h e r e . 
             v a r   i n n e r P r o p T y p e s   =   C o m p o n e n t . p r o p T y p e s ; 
 
             i f   ( i n n e r P r o p T y p e s )   { 
                 c h e c k P r o p T y p e s ( i n n e r P r o p T y p e s ,   n e x t P r o p s ,   / /   R e s o l v e d   p r o p s 
                 ' p r o p ' ,   g e t C o m p o n e n t N a m e F r o m T y p e ( C o m p o n e n t ) ) ; 
             } 
         } 
     }   / /   P u s h   c o n t e x t   p r o v i d e r s   e a r l y   t o   p r e v e n t   c o n t e x t   s t a c k   m i s m a t c h e s . 
     / /   D u r i n g   m o u n t i n g   w e   d o n ' t   k n o w   t h e   c h i l d   c o n t e x t   y e t   a s   t h e   i n s t a n c e   d o e s n ' t   e x i s t . 
     / /   W e   w i l l   i n v a l i d a t e   t h e   c h i l d   c o n t e x t   i n   f i n i s h C l a s s C o m p o n e n t ( )   r i g h t   a f t e r   r e n d e r i n g . 
 
 
     v a r   h a s C o n t e x t ; 
 
     i f   ( i s C o n t e x t P r o v i d e r ( C o m p o n e n t ) )   { 
         h a s C o n t e x t   =   t r u e ; 
         p u s h C o n t e x t P r o v i d e r ( w o r k I n P r o g r e s s ) ; 
     }   e l s e   { 
         h a s C o n t e x t   =   f a l s e ; 
     } 
 
     p r e p a r e T o R e a d C o n t e x t ( w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
     v a r   i n s t a n c e   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
     v a r   s h o u l d U p d a t e ; 
 
     i f   ( i n s t a n c e   = = =   n u l l )   { 
         i f   ( c u r r e n t   ! = =   n u l l )   { 
             / /   A   c l a s s   c o m p o n e n t   w i t h o u t   a n   i n s t a n c e   o n l y   m o u n t s   i f   i t   s u s p e n d e d 
             / /   i n s i d e   a   n o n - c o n c u r r e n t   t r e e ,   i n   a n   i n c o n s i s t e n t   s t a t e .   W e   w a n t   t o 
             / /   t r e a t   i t   l i k e   a   n e w   m o u n t ,   e v e n   t h o u g h   a n   e m p t y   v e r s i o n   o f   i t   a l r e a d y 
             / /   c o m m i t t e d .   D i s c o n n e c t   t h e   a l t e r n a t e   p o i n t e r s . 
             c u r r e n t . a l t e r n a t e   =   n u l l ; 
             w o r k I n P r o g r e s s . a l t e r n a t e   =   n u l l ;   / /   S i n c e   t h i s   i s   c o n c e p t u a l l y   a   n e w   f i b e r ,   s c h e d u l e   a   P l a c e m e n t   e f f e c t 
 
             w o r k I n P r o g r e s s . f l a g s   | =   P l a c e m e n t ; 
         }   / /   I n   t h e   i n i t i a l   p a s s   w e   m i g h t   n e e d   t o   c o n s t r u c t   t h e   i n s t a n c e . 
 
 
         c o n s t r u c t C l a s s I n s t a n c e ( w o r k I n P r o g r e s s ,   C o m p o n e n t ,   n e x t P r o p s ) ; 
         m o u n t C l a s s I n s t a n c e ( w o r k I n P r o g r e s s ,   C o m p o n e n t ,   n e x t P r o p s ,   r e n d e r L a n e s ) ; 
         s h o u l d U p d a t e   =   t r u e ; 
     }   e l s e   i f   ( c u r r e n t   = = =   n u l l )   { 
         / /   I n   a   r e s u m e ,   w e ' l l   a l r e a d y   h a v e   a n   i n s t a n c e   w e   c a n   r e u s e . 
         s h o u l d U p d a t e   =   r e s u m e M o u n t C l a s s I n s t a n c e ( w o r k I n P r o g r e s s ,   C o m p o n e n t ,   n e x t P r o p s ,   r e n d e r L a n e s ) ; 
     }   e l s e   { 
         s h o u l d U p d a t e   =   u p d a t e C l a s s I n s t a n c e ( c u r r e n t ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   n e x t P r o p s ,   r e n d e r L a n e s ) ; 
     } 
 
     v a r   n e x t U n i t O f W o r k   =   f i n i s h C l a s s C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   s h o u l d U p d a t e ,   h a s C o n t e x t ,   r e n d e r L a n e s ) ; 
 
     { 
         v a r   i n s t   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
 
         i f   ( s h o u l d U p d a t e   & &   i n s t . p r o p s   ! = =   n e x t P r o p s )   { 
             i f   ( ! d i d W a r n A b o u t R e a s s i g n i n g P r o p s )   { 
                 e r r o r ( ' I t   l o o k s   l i k e   % s   i s   r e a s s i g n i n g   i t s   o w n   ` t h i s . p r o p s `   w h i l e   r e n d e r i n g .   '   +   ' T h i s   i s   n o t   s u p p o r t e d   a n d   c a n   l e a d   t o   c o n f u s i n g   b u g s . ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( w o r k I n P r o g r e s s )   | |   ' a   c o m p o n e n t ' ) ; 
             } 
 
             d i d W a r n A b o u t R e a s s i g n i n g P r o p s   =   t r u e ; 
         } 
     } 
 
     r e t u r n   n e x t U n i t O f W o r k ; 
 } 
 
 f u n c t i o n   f i n i s h C l a s s C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   s h o u l d U p d a t e ,   h a s C o n t e x t ,   r e n d e r L a n e s )   { 
     / /   R e f s   s h o u l d   u p d a t e   e v e n   i f   s h o u l d C o m p o n e n t U p d a t e   r e t u r n s   f a l s e 
     m a r k R e f $ 1 ( c u r r e n t ,   w o r k I n P r o g r e s s ) ; 
     v a r   d i d C a p t u r e E r r o r   =   ( w o r k I n P r o g r e s s . f l a g s   &   D i d C a p t u r e )   ! = =   N o F l a g s ; 
 
     i f   ( ! s h o u l d U p d a t e   & &   ! d i d C a p t u r e E r r o r )   { 
         / /   C o n t e x t   p r o v i d e r s   s h o u l d   d e f e r   t o   s C U   f o r   r e n d e r i n g 
         i f   ( h a s C o n t e x t )   { 
             i n v a l i d a t e C o n t e x t P r o v i d e r ( w o r k I n P r o g r e s s ,   C o m p o n e n t ,   f a l s e ) ; 
         } 
 
         r e t u r n   b a i l o u t O n A l r e a d y F i n i s h e d W o r k ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
     } 
 
     v a r   i n s t a n c e   =   w o r k I n P r o g r e s s . s t a t e N o d e ;   / /   R e r e n d e r 
 
     R e a c t C u r r e n t O w n e r $ 1 . c u r r e n t   =   w o r k I n P r o g r e s s ; 
     v a r   n e x t C h i l d r e n ; 
 
     i f   ( d i d C a p t u r e E r r o r   & &   t y p e o f   C o m p o n e n t . g e t D e r i v e d S t a t e F r o m E r r o r   ! = =   ' f u n c t i o n ' )   { 
         / /   I f   w e   c a p t u r e d   a n   e r r o r ,   b u t   g e t D e r i v e d S t a t e F r o m E r r o r   i s   n o t   d e f i n e d , 
         / /   u n m o u n t   a l l   t h e   c h i l d r e n .   c o m p o n e n t D i d C a t c h   w i l l   s c h e d u l e   a n   u p d a t e   t o 
         / /   r e - r e n d e r   a   f a l l b a c k .   T h i s   i s   t e m p o r a r y   u n t i l   w e   m i g r a t e   e v e r y o n e   t o 
         / /   t h e   n e w   A P I . 
         / /   T O D O :   W a r n   i n   a   f u t u r e   r e l e a s e . 
         n e x t C h i l d r e n   =   n u l l ; 
 
         { 
             s t o p P r o f i l e r T i m e r I f R u n n i n g ( ) ; 
         } 
     }   e l s e   { 
         { 
             m a r k C o m p o n e n t R e n d e r S t a r t e d ( w o r k I n P r o g r e s s ) ; 
         } 
 
         { 
             s e t I s R e n d e r i n g ( t r u e ) ; 
             n e x t C h i l d r e n   =   i n s t a n c e . r e n d e r ( ) ; 
 
             i f   (   w o r k I n P r o g r e s s . m o d e   &   S t r i c t L e g a c y M o d e )   { 
                 s e t I s S t r i c t M o d e F o r D e v t o o l s ( t r u e ) ; 
 
                 t r y   { 
                     i n s t a n c e . r e n d e r ( ) ; 
                 }   f i n a l l y   { 
                     s e t I s S t r i c t M o d e F o r D e v t o o l s ( f a l s e ) ; 
                 } 
             } 
 
             s e t I s R e n d e r i n g ( f a l s e ) ; 
         } 
 
         { 
             m a r k C o m p o n e n t R e n d e r S t o p p e d ( ) ; 
         } 
     }   / /   R e a c t   D e v T o o l s   r e a d s   t h i s   f l a g . 
 
 
     w o r k I n P r o g r e s s . f l a g s   | =   P e r f o r m e d W o r k ; 
 
     i f   ( c u r r e n t   ! = =   n u l l   & &   d i d C a p t u r e E r r o r )   { 
         / /   I f   w e ' r e   r e c o v e r i n g   f r o m   a n   e r r o r ,   r e c o n c i l e   w i t h o u t   r e u s i n g   a n y   o f 
         / /   t h e   e x i s t i n g   c h i l d r e n .   C o n c e p t u a l l y ,   t h e   n o r m a l   c h i l d r e n   a n d   t h e   c h i l d r e n 
         / /   t h a t   a r e   s h o w n   o n   e r r o r   a r e   t w o   d i f f e r e n t   s e t s ,   s o   w e   s h o u l d n ' t   r e u s e 
         / /   n o r m a l   c h i l d r e n   e v e n   i f   t h e i r   i d e n t i t i e s   m a t c h . 
         f o r c e U n m o u n t C u r r e n t A n d R e c o n c i l e ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ) ; 
     }   e l s e   { 
         r e c o n c i l e C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ) ; 
     }   / /   M e m o i z e   s t a t e   u s i n g   t h e   v a l u e s   w e   j u s t   u s e d   t o   r e n d e r . 
     / /   T O D O :   R e s t r u c t u r e   s o   w e   n e v e r   r e a d   v a l u e s   f r o m   t h e   i n s t a n c e . 
 
 
     w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   i n s t a n c e . s t a t e ;   / /   T h e   c o n t e x t   m i g h t   h a v e   c h a n g e d   s o   w e   n e e d   t o   r e c a l c u l a t e   i t . 
 
     i f   ( h a s C o n t e x t )   { 
         i n v a l i d a t e C o n t e x t P r o v i d e r ( w o r k I n P r o g r e s s ,   C o m p o n e n t ,   t r u e ) ; 
     } 
 
     r e t u r n   w o r k I n P r o g r e s s . c h i l d ; 
 } 
 
 f u n c t i o n   p u s h H o s t R o o t C o n t e x t ( w o r k I n P r o g r e s s )   { 
     v a r   r o o t   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
 
     i f   ( r o o t . p e n d i n g C o n t e x t )   { 
         p u s h T o p L e v e l C o n t e x t O b j e c t ( w o r k I n P r o g r e s s ,   r o o t . p e n d i n g C o n t e x t ,   r o o t . p e n d i n g C o n t e x t   ! = =   r o o t . c o n t e x t ) ; 
     }   e l s e   i f   ( r o o t . c o n t e x t )   { 
         / /   S h o u l d   a l w a y s   b e   s e t 
         p u s h T o p L e v e l C o n t e x t O b j e c t ( w o r k I n P r o g r e s s ,   r o o t . c o n t e x t ,   f a l s e ) ; 
     } 
 
     p u s h H o s t C o n t a i n e r ( w o r k I n P r o g r e s s ,   r o o t . c o n t a i n e r I n f o ) ; 
 } 
 
 f u n c t i o n   u p d a t e H o s t R o o t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     p u s h H o s t R o o t C o n t e x t ( w o r k I n P r o g r e s s ) ; 
 
     i f   ( c u r r e n t   = = =   n u l l )   { 
         t h r o w   n e w   E r r o r ( ' S h o u l d   h a v e   a   c u r r e n t   f i b e r .   T h i s   i s   a   b u g   i n   R e a c t . ' ) ; 
     } 
 
     v a r   n e x t P r o p s   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
     v a r   p r e v S t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
     v a r   p r e v C h i l d r e n   =   p r e v S t a t e . e l e m e n t ; 
     c l o n e U p d a t e Q u e u e ( c u r r e n t ,   w o r k I n P r o g r e s s ) ; 
     p r o c e s s U p d a t e Q u e u e ( w o r k I n P r o g r e s s ,   n e x t P r o p s ,   n u l l ,   r e n d e r L a n e s ) ; 
     v a r   n e x t S t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
     v a r   r o o t   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
     / /   b e i n g   c a l l e d   " e l e m e n t " . 
 
 
     v a r   n e x t C h i l d r e n   =   n e x t S t a t e . e l e m e n t ; 
 
     i f   (   p r e v S t a t e . i s D e h y d r a t e d )   { 
         / /   T h i s   i s   a   h y d r a t i o n   r o o t   w h o s e   s h e l l   h a s   n o t   y e t   h y d r a t e d .   W e   s h o u l d 
         / /   a t t e m p t   t o   h y d r a t e . 
         / /   F l i p   i s D e h y d r a t e d   t o   f a l s e   t o   i n d i c a t e   t h a t   w h e n   t h i s   r e n d e r 
         / /   f i n i s h e s ,   t h e   r o o t   w i l l   n o   l o n g e r   b e   d e h y d r a t e d . 
         v a r   o v e r r i d e S t a t e   =   { 
             e l e m e n t :   n e x t C h i l d r e n , 
             i s D e h y d r a t e d :   f a l s e , 
             c a c h e :   n e x t S t a t e . c a c h e , 
             p e n d i n g S u s p e n s e B o u n d a r i e s :   n e x t S t a t e . p e n d i n g S u s p e n s e B o u n d a r i e s , 
             t r a n s i t i o n s :   n e x t S t a t e . t r a n s i t i o n s 
         } ; 
         v a r   u p d a t e Q u e u e   =   w o r k I n P r o g r e s s . u p d a t e Q u e u e ;   / /   ` b a s e S t a t e `   c a n   a l w a y s   b e   t h e   l a s t   s t a t e   b e c a u s e   t h e   r o o t   d o e s n ' t 
         / /   h a v e   r e d u c e r   f u n c t i o n s   s o   i t   d o e s n ' t   n e e d   r e b a s i n g . 
 
         u p d a t e Q u e u e . b a s e S t a t e   =   o v e r r i d e S t a t e ; 
         w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   o v e r r i d e S t a t e ; 
 
         i f   ( w o r k I n P r o g r e s s . f l a g s   &   F o r c e C l i e n t R e n d e r )   { 
             / /   S o m e t h i n g   e r r o r e d   d u r i n g   a   p r e v i o u s   a t t e m p t   t o   h y d r a t e   t h e   s h e l l ,   s o   w e 
             / /   f o r c e d   a   c l i e n t   r e n d e r . 
             v a r   r e c o v e r a b l e E r r o r   =   n e w   E r r o r ( ' T h e r e   w a s   a n   e r r o r   w h i l e   h y d r a t i n g .   B e c a u s e   t h e   e r r o r   h a p p e n e d   o u t s i d e   '   +   ' o f   a   S u s p e n s e   b o u n d a r y ,   t h e   e n t i r e   r o o t   w i l l   s w i t c h   t o   '   +   ' c l i e n t   r e n d e r i n g . ' ) ; 
             r e t u r n   m o u n t H o s t R o o t W i t h o u t H y d r a t i n g ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ,   r e c o v e r a b l e E r r o r ) ; 
         }   e l s e   i f   ( n e x t C h i l d r e n   ! = =   p r e v C h i l d r e n )   { 
             v a r   _ r e c o v e r a b l e E r r o r   =   n e w   E r r o r ( ' T h i s   r o o t   r e c e i v e d   a n   e a r l y   u p d a t e ,   b e f o r e   a n y t h i n g   w a s   a b l e   '   +   ' h y d r a t e .   S w i t c h e d   t h e   e n t i r e   r o o t   t o   c l i e n t   r e n d e r i n g . ' ) ; 
 
             r e t u r n   m o u n t H o s t R o o t W i t h o u t H y d r a t i n g ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ,   _ r e c o v e r a b l e E r r o r ) ; 
         }   e l s e   { 
             / /   T h e   o u t e r m o s t   s h e l l   h a s   n o t   h y d r a t e d   y e t .   S t a r t   h y d r a t i n g . 
             e n t e r H y d r a t i o n S t a t e ( w o r k I n P r o g r e s s ) ; 
 
             v a r   c h i l d   =   m o u n t C h i l d F i b e r s ( w o r k I n P r o g r e s s ,   n u l l ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ) ; 
             w o r k I n P r o g r e s s . c h i l d   =   c h i l d ; 
             v a r   n o d e   =   c h i l d ; 
 
             w h i l e   ( n o d e )   { 
                 / /   M a r k   e a c h   c h i l d   a s   h y d r a t i n g .   T h i s   i s   a   f a s t   p a t h   t o   k n o w   w h e t h e r   t h i s 
                 / /   t r e e   i s   p a r t   o f   a   h y d r a t i n g   t r e e .   T h i s   i s   u s e d   t o   d e t e r m i n e   i f   a   c h i l d 
                 / /   n o d e   h a s   f u l l y   m o u n t e d   y e t ,   a n d   f o r   s c h e d u l i n g   e v e n t   r e p l a y i n g . 
                 / /   C o n c e p t u a l l y   t h i s   i s   s i m i l a r   t o   P l a c e m e n t   i n   t h a t   a   n e w   s u b t r e e   i s 
                 / /   i n s e r t e d   i n t o   t h e   R e a c t   t r e e   h e r e .   I t   j u s t   h a p p e n s   t o   n o t   n e e d   D O M 
                 / /   m u t a t i o n s   b e c a u s e   i t   a l r e a d y   e x i s t s . 
                 n o d e . f l a g s   =   n o d e . f l a g s   &   ~ P l a c e m e n t   |   H y d r a t i n g ; 
                 n o d e   =   n o d e . s i b l i n g ; 
             } 
         } 
     }   e l s e   { 
         / /   R o o t   i s   n o t   d e h y d r a t e d .   E i t h e r   t h i s   i s   a   c l i e n t - o n l y   r o o t ,   o r   i t 
         / /   a l r e a d y   h y d r a t e d . 
         r e s e t H y d r a t i o n S t a t e ( ) ; 
 
         i f   ( n e x t C h i l d r e n   = = =   p r e v C h i l d r e n )   { 
             r e t u r n   b a i l o u t O n A l r e a d y F i n i s h e d W o r k ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
         } 
 
         r e c o n c i l e C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ) ; 
     } 
 
     r e t u r n   w o r k I n P r o g r e s s . c h i l d ; 
 } 
 
 f u n c t i o n   m o u n t H o s t R o o t W i t h o u t H y d r a t i n g ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ,   r e c o v e r a b l e E r r o r )   { 
     / /   R e v e r t   t o   c l i e n t   r e n d e r i n g . 
     r e s e t H y d r a t i o n S t a t e ( ) ; 
     q u e u e H y d r a t i o n E r r o r ( r e c o v e r a b l e E r r o r ) ; 
     w o r k I n P r o g r e s s . f l a g s   | =   F o r c e C l i e n t R e n d e r ; 
     r e c o n c i l e C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ) ; 
     r e t u r n   w o r k I n P r o g r e s s . c h i l d ; 
 } 
 
 f u n c t i o n   u p d a t e H o s t C o m p o n e n t $ 1 ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     p u s h H o s t C o n t e x t ( w o r k I n P r o g r e s s ) ; 
 
     i f   ( c u r r e n t   = = =   n u l l )   { 
         t r y T o C l a i m N e x t H y d r a t a b l e I n s t a n c e ( w o r k I n P r o g r e s s ) ; 
     } 
 
     v a r   t y p e   =   w o r k I n P r o g r e s s . t y p e ; 
     v a r   n e x t P r o p s   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
     v a r   p r e v P r o p s   =   c u r r e n t   ! = =   n u l l   ?   c u r r e n t . m e m o i z e d P r o p s   :   n u l l ; 
     v a r   n e x t C h i l d r e n   =   n e x t P r o p s . c h i l d r e n ; 
     v a r   i s D i r e c t T e x t C h i l d   =   s h o u l d S e t T e x t C o n t e n t ( t y p e ,   n e x t P r o p s ) ; 
 
     i f   ( i s D i r e c t T e x t C h i l d )   { 
         / /   W e   s p e c i a l   c a s e   a   d i r e c t   t e x t   c h i l d   o f   a   h o s t   n o d e .   T h i s   i s   a   c o m m o n 
         / /   c a s e .   W e   w o n ' t   h a n d l e   i t   a s   a   r e i f i e d   c h i l d .   W e   w i l l   i n s t e a d   h a n d l e 
         / /   t h i s   i n   t h e   h o s t   e n v i r o n m e n t   t h a t   a l s o   h a s   a c c e s s   t o   t h i s   p r o p .   T h a t 
         / /   a v o i d s   a l l o c a t i n g   a n o t h e r   H o s t T e x t   f i b e r   a n d   t r a v e r s i n g   i t . 
         n e x t C h i l d r e n   =   n u l l ; 
     }   e l s e   i f   ( p r e v P r o p s   ! = =   n u l l   & &   s h o u l d S e t T e x t C o n t e n t ( t y p e ,   p r e v P r o p s ) )   { 
         / /   I f   w e ' r e   s w i t c h i n g   f r o m   a   d i r e c t   t e x t   c h i l d   t o   a   n o r m a l   c h i l d ,   o r   t o 
         / /   e m p t y ,   w e   n e e d   t o   s c h e d u l e   t h e   t e x t   c o n t e n t   t o   b e   r e s e t . 
         w o r k I n P r o g r e s s . f l a g s   | =   C o n t e n t R e s e t ; 
     } 
 
     m a r k R e f $ 1 ( c u r r e n t ,   w o r k I n P r o g r e s s ) ; 
     r e c o n c i l e C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ) ; 
     r e t u r n   w o r k I n P r o g r e s s . c h i l d ; 
 } 
 
 f u n c t i o n   u p d a t e H o s t T e x t $ 1 ( c u r r e n t ,   w o r k I n P r o g r e s s )   { 
     i f   ( c u r r e n t   = = =   n u l l )   { 
         t r y T o C l a i m N e x t H y d r a t a b l e I n s t a n c e ( w o r k I n P r o g r e s s ) ; 
     }   / /   N o t h i n g   t o   d o   h e r e .   T h i s   i s   t e r m i n a l .   W e ' l l   d o   t h e   c o m p l e t i o n   s t e p 
     / /   i m m e d i a t e l y   a f t e r . 
 
 
     r e t u r n   n u l l ; 
 } 
 
 f u n c t i o n   m o u n t L a z y C o m p o n e n t ( _ c u r r e n t ,   w o r k I n P r o g r e s s ,   e l e m e n t T y p e ,   r e n d e r L a n e s )   { 
     i f   ( _ c u r r e n t   ! = =   n u l l )   { 
         / /   A   l a z y   c o m p o n e n t   o n l y   m o u n t s   i f   i t   s u s p e n d e d   i n s i d e   a   n o n - 
         / /   c o n c u r r e n t   t r e e ,   i n   a n   i n c o n s i s t e n t   s t a t e .   W e   w a n t   t o   t r e a t   i t   l i k e 
         / /   a   n e w   m o u n t ,   e v e n   t h o u g h   a n   e m p t y   v e r s i o n   o f   i t   a l r e a d y   c o m m i t t e d . 
         / /   D i s c o n n e c t   t h e   a l t e r n a t e   p o i n t e r s . 
         _ c u r r e n t . a l t e r n a t e   =   n u l l ; 
         w o r k I n P r o g r e s s . a l t e r n a t e   =   n u l l ;   / /   S i n c e   t h i s   i s   c o n c e p t u a l l y   a   n e w   f i b e r ,   s c h e d u l e   a   P l a c e m e n t   e f f e c t 
 
         w o r k I n P r o g r e s s . f l a g s   | =   P l a c e m e n t ; 
     } 
 
     v a r   p r o p s   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
     v a r   l a z y C o m p o n e n t   =   e l e m e n t T y p e ; 
     v a r   p a y l o a d   =   l a z y C o m p o n e n t . _ p a y l o a d ; 
     v a r   i n i t   =   l a z y C o m p o n e n t . _ i n i t ; 
     v a r   C o m p o n e n t   =   i n i t ( p a y l o a d ) ;   / /   S t o r e   t h e   u n w r a p p e d   c o m p o n e n t   i n   t h e   t y p e . 
 
     w o r k I n P r o g r e s s . t y p e   =   C o m p o n e n t ; 
     v a r   r e s o l v e d T a g   =   w o r k I n P r o g r e s s . t a g   =   r e s o l v e L a z y C o m p o n e n t T a g ( C o m p o n e n t ) ; 
     v a r   r e s o l v e d P r o p s   =   r e s o l v e D e f a u l t P r o p s ( C o m p o n e n t ,   p r o p s ) ; 
     v a r   c h i l d ; 
 
     s w i t c h   ( r e s o l v e d T a g )   { 
         c a s e   F u n c t i o n C o m p o n e n t : 
             { 
                 { 
                     v a l i d a t e F u n c t i o n C o m p o n e n t I n D e v ( w o r k I n P r o g r e s s ,   C o m p o n e n t ) ; 
                     w o r k I n P r o g r e s s . t y p e   =   C o m p o n e n t   =   r e s o l v e F u n c t i o n F o r H o t R e l o a d i n g ( C o m p o n e n t ) ; 
                 } 
 
                 c h i l d   =   u p d a t e F u n c t i o n C o m p o n e n t ( n u l l ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   r e s o l v e d P r o p s ,   r e n d e r L a n e s ) ; 
                 r e t u r n   c h i l d ; 
             } 
 
         c a s e   C l a s s C o m p o n e n t : 
             { 
                 { 
                     w o r k I n P r o g r e s s . t y p e   =   C o m p o n e n t   =   r e s o l v e C l a s s F o r H o t R e l o a d i n g ( C o m p o n e n t ) ; 
                 } 
 
                 c h i l d   =   u p d a t e C l a s s C o m p o n e n t ( n u l l ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   r e s o l v e d P r o p s ,   r e n d e r L a n e s ) ; 
                 r e t u r n   c h i l d ; 
             } 
 
         c a s e   F o r w a r d R e f : 
             { 
                 { 
                     w o r k I n P r o g r e s s . t y p e   =   C o m p o n e n t   =   r e s o l v e F o r w a r d R e f F o r H o t R e l o a d i n g ( C o m p o n e n t ) ; 
                 } 
 
                 c h i l d   =   u p d a t e F o r w a r d R e f ( n u l l ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   r e s o l v e d P r o p s ,   r e n d e r L a n e s ) ; 
                 r e t u r n   c h i l d ; 
             } 
 
         c a s e   M e m o C o m p o n e n t : 
             { 
                 { 
                     i f   ( w o r k I n P r o g r e s s . t y p e   ! = =   w o r k I n P r o g r e s s . e l e m e n t T y p e )   { 
                         v a r   o u t e r P r o p T y p e s   =   C o m p o n e n t . p r o p T y p e s ; 
 
                         i f   ( o u t e r P r o p T y p e s )   { 
                             c h e c k P r o p T y p e s ( o u t e r P r o p T y p e s ,   r e s o l v e d P r o p s ,   / /   R e s o l v e d   f o r   o u t e r   o n l y 
                             ' p r o p ' ,   g e t C o m p o n e n t N a m e F r o m T y p e ( C o m p o n e n t ) ) ; 
                         } 
                     } 
                 } 
 
                 c h i l d   =   u p d a t e M e m o C o m p o n e n t ( n u l l ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   r e s o l v e D e f a u l t P r o p s ( C o m p o n e n t . t y p e ,   r e s o l v e d P r o p s ) ,   / /   T h e   i n n e r   t y p e   c a n   h a v e   d e f a u l t s   t o o 
                 r e n d e r L a n e s ) ; 
                 r e t u r n   c h i l d ; 
             } 
     } 
 
     v a r   h i n t   =   ' ' ; 
 
     { 
         i f   ( C o m p o n e n t   ! = =   n u l l   & &   t y p e o f   C o m p o n e n t   = = =   ' o b j e c t '   & &   C o m p o n e n t . $ $ t y p e o f   = = =   R E A C T _ L A Z Y _ T Y P E )   { 
             h i n t   =   '   D i d   y o u   w r a p   a   c o m p o n e n t   i n   R e a c t . l a z y ( )   m o r e   t h a n   o n c e ? ' ; 
         } 
     }   / /   T h i s   m e s s a g e   i n t e n t i o n a l l y   d o e s n ' t   m e n t i o n   F o r w a r d R e f   o r   M e m o C o m p o n e n t 
     / /   b e c a u s e   t h e   f a c t   t h a t   i t ' s   a   s e p a r a t e   t y p e   o f   w o r k   i s   a n 
     / /   i m p l e m e n t a t i o n   d e t a i l . 
 
 
     t h r o w   n e w   E r r o r ( " E l e m e n t   t y p e   i s   i n v a l i d .   R e c e i v e d   a   p r o m i s e   t h a t   r e s o l v e s   t o :   "   +   C o m p o n e n t   +   " .   "   +   ( " L a z y   e l e m e n t   t y p e   m u s t   r e s o l v e   t o   a   c l a s s   o r   f u n c t i o n . "   +   h i n t ) ) ; 
 } 
 
 f u n c t i o n   m o u n t I n c o m p l e t e C l a s s C o m p o n e n t ( _ c u r r e n t ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   n e x t P r o p s ,   r e n d e r L a n e s )   { 
     i f   ( _ c u r r e n t   ! = =   n u l l )   { 
         / /   A n   i n c o m p l e t e   c o m p o n e n t   o n l y   m o u n t s   i f   i t   s u s p e n d e d   i n s i d e   a   n o n - 
         / /   c o n c u r r e n t   t r e e ,   i n   a n   i n c o n s i s t e n t   s t a t e .   W e   w a n t   t o   t r e a t   i t   l i k e 
         / /   a   n e w   m o u n t ,   e v e n   t h o u g h   a n   e m p t y   v e r s i o n   o f   i t   a l r e a d y   c o m m i t t e d . 
         / /   D i s c o n n e c t   t h e   a l t e r n a t e   p o i n t e r s . 
         _ c u r r e n t . a l t e r n a t e   =   n u l l ; 
         w o r k I n P r o g r e s s . a l t e r n a t e   =   n u l l ;   / /   S i n c e   t h i s   i s   c o n c e p t u a l l y   a   n e w   f i b e r ,   s c h e d u l e   a   P l a c e m e n t   e f f e c t 
 
         w o r k I n P r o g r e s s . f l a g s   | =   P l a c e m e n t ; 
     }   / /   P r o m o t e   t h e   f i b e r   t o   a   c l a s s   a n d   t r y   r e n d e r i n g   a g a i n . 
 
 
     w o r k I n P r o g r e s s . t a g   =   C l a s s C o m p o n e n t ;   / /   T h e   r e s t   o f   t h i s   f u n c t i o n   i s   a   f o r k   o f   ` u p d a t e C l a s s C o m p o n e n t ` 
     / /   P u s h   c o n t e x t   p r o v i d e r s   e a r l y   t o   p r e v e n t   c o n t e x t   s t a c k   m i s m a t c h e s . 
     / /   D u r i n g   m o u n t i n g   w e   d o n ' t   k n o w   t h e   c h i l d   c o n t e x t   y e t   a s   t h e   i n s t a n c e   d o e s n ' t   e x i s t . 
     / /   W e   w i l l   i n v a l i d a t e   t h e   c h i l d   c o n t e x t   i n   f i n i s h C l a s s C o m p o n e n t ( )   r i g h t   a f t e r   r e n d e r i n g . 
 
     v a r   h a s C o n t e x t ; 
 
     i f   ( i s C o n t e x t P r o v i d e r ( C o m p o n e n t ) )   { 
         h a s C o n t e x t   =   t r u e ; 
         p u s h C o n t e x t P r o v i d e r ( w o r k I n P r o g r e s s ) ; 
     }   e l s e   { 
         h a s C o n t e x t   =   f a l s e ; 
     } 
 
     p r e p a r e T o R e a d C o n t e x t ( w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
     c o n s t r u c t C l a s s I n s t a n c e ( w o r k I n P r o g r e s s ,   C o m p o n e n t ,   n e x t P r o p s ) ; 
     m o u n t C l a s s I n s t a n c e ( w o r k I n P r o g r e s s ,   C o m p o n e n t ,   n e x t P r o p s ,   r e n d e r L a n e s ) ; 
     r e t u r n   f i n i s h C l a s s C o m p o n e n t ( n u l l ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   t r u e ,   h a s C o n t e x t ,   r e n d e r L a n e s ) ; 
 } 
 
 f u n c t i o n   m o u n t I n d e t e r m i n a t e C o m p o n e n t ( _ c u r r e n t ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   r e n d e r L a n e s )   { 
     i f   ( _ c u r r e n t   ! = =   n u l l )   { 
         / /   A n   i n d e t e r m i n a t e   c o m p o n e n t   o n l y   m o u n t s   i f   i t   s u s p e n d e d   i n s i d e   a   n o n - 
         / /   c o n c u r r e n t   t r e e ,   i n   a n   i n c o n s i s t e n t   s t a t e .   W e   w a n t   t o   t r e a t   i t   l i k e 
         / /   a   n e w   m o u n t ,   e v e n   t h o u g h   a n   e m p t y   v e r s i o n   o f   i t   a l r e a d y   c o m m i t t e d . 
         / /   D i s c o n n e c t   t h e   a l t e r n a t e   p o i n t e r s . 
         _ c u r r e n t . a l t e r n a t e   =   n u l l ; 
         w o r k I n P r o g r e s s . a l t e r n a t e   =   n u l l ;   / /   S i n c e   t h i s   i s   c o n c e p t u a l l y   a   n e w   f i b e r ,   s c h e d u l e   a   P l a c e m e n t   e f f e c t 
 
         w o r k I n P r o g r e s s . f l a g s   | =   P l a c e m e n t ; 
     } 
 
     v a r   p r o p s   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
     v a r   c o n t e x t ; 
 
     { 
         v a r   u n m a s k e d C o n t e x t   =   g e t U n m a s k e d C o n t e x t ( w o r k I n P r o g r e s s ,   C o m p o n e n t ,   f a l s e ) ; 
         c o n t e x t   =   g e t M a s k e d C o n t e x t ( w o r k I n P r o g r e s s ,   u n m a s k e d C o n t e x t ) ; 
     } 
 
     p r e p a r e T o R e a d C o n t e x t ( w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
     v a r   v a l u e ; 
     v a r   h a s I d ; 
 
     { 
         m a r k C o m p o n e n t R e n d e r S t a r t e d ( w o r k I n P r o g r e s s ) ; 
     } 
 
     { 
         i f   ( C o m p o n e n t . p r o t o t y p e   & &   t y p e o f   C o m p o n e n t . p r o t o t y p e . r e n d e r   = = =   ' f u n c t i o n ' )   { 
             v a r   c o m p o n e n t N a m e   =   g e t C o m p o n e n t N a m e F r o m T y p e ( C o m p o n e n t )   | |   ' U n k n o w n ' ; 
 
             i f   ( ! d i d W a r n A b o u t B a d C l a s s [ c o m p o n e n t N a m e ] )   { 
                 e r r o r ( " T h e   < % s   / >   c o m p o n e n t   a p p e a r s   t o   h a v e   a   r e n d e r   m e t h o d ,   b u t   d o e s n ' t   e x t e n d   R e a c t . C o m p o n e n t .   "   +   ' T h i s   i s   l i k e l y   t o   c a u s e   e r r o r s .   C h a n g e   % s   t o   e x t e n d   R e a c t . C o m p o n e n t   i n s t e a d . ' ,   c o m p o n e n t N a m e ,   c o m p o n e n t N a m e ) ; 
 
                 d i d W a r n A b o u t B a d C l a s s [ c o m p o n e n t N a m e ]   =   t r u e ; 
             } 
         } 
 
         i f   ( w o r k I n P r o g r e s s . m o d e   &   S t r i c t L e g a c y M o d e )   { 
             R e a c t S t r i c t M o d e W a r n i n g s . r e c o r d L e g a c y C o n t e x t W a r n i n g ( w o r k I n P r o g r e s s ,   n u l l ) ; 
         } 
 
         s e t I s R e n d e r i n g ( t r u e ) ; 
         R e a c t C u r r e n t O w n e r $ 1 . c u r r e n t   =   w o r k I n P r o g r e s s ; 
         v a l u e   =   r e n d e r W i t h H o o k s ( n u l l ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   p r o p s ,   c o n t e x t ,   r e n d e r L a n e s ) ; 
         h a s I d   =   c h e c k D i d R e n d e r I d H o o k ( ) ; 
         s e t I s R e n d e r i n g ( f a l s e ) ; 
     } 
 
     { 
         m a r k C o m p o n e n t R e n d e r S t o p p e d ( ) ; 
     }   / /   R e a c t   D e v T o o l s   r e a d s   t h i s   f l a g . 
 
 
     w o r k I n P r o g r e s s . f l a g s   | =   P e r f o r m e d W o r k ; 
 
     { 
         / /   S u p p o r t   f o r   m o d u l e   c o m p o n e n t s   i s   d e p r e c a t e d   a n d   i s   r e m o v e d   b e h i n d   a   f l a g . 
         / /   W h e t h e r   o r   n o t   i t   w o u l d   c r a s h   l a t e r ,   w e   w a n t   t o   s h o w   a   g o o d   m e s s a g e   i n   D E V   f i r s t . 
         i f   ( t y p e o f   v a l u e   = = =   ' o b j e c t '   & &   v a l u e   ! = =   n u l l   & &   t y p e o f   v a l u e . r e n d e r   = = =   ' f u n c t i o n '   & &   v a l u e . $ $ t y p e o f   = = =   u n d e f i n e d )   { 
             v a r   _ c o m p o n e n t N a m e   =   g e t C o m p o n e n t N a m e F r o m T y p e ( C o m p o n e n t )   | |   ' U n k n o w n ' ; 
 
             i f   ( ! d i d W a r n A b o u t M o d u l e P a t t e r n C o m p o n e n t [ _ c o m p o n e n t N a m e ] )   { 
                 e r r o r ( ' T h e   < % s   / >   c o m p o n e n t   a p p e a r s   t o   b e   a   f u n c t i o n   c o m p o n e n t   t h a t   r e t u r n s   a   c l a s s   i n s t a n c e .   '   +   ' C h a n g e   % s   t o   a   c l a s s   t h a t   e x t e n d s   R e a c t . C o m p o n e n t   i n s t e a d .   '   +   " I f   y o u   c a n ' t   u s e   a   c l a s s   t r y   a s s i g n i n g   t h e   p r o t o t y p e   o n   t h e   f u n c t i o n   a s   a   w o r k a r o u n d .   "   +   " ` % s . p r o t o t y p e   =   R e a c t . C o m p o n e n t . p r o t o t y p e ` .   D o n ' t   u s e   a n   a r r o w   f u n c t i o n   s i n c e   i t   "   +   ' c a n n o t   b e   c a l l e d   w i t h   ` n e w `   b y   R e a c t . ' ,   _ c o m p o n e n t N a m e ,   _ c o m p o n e n t N a m e ,   _ c o m p o n e n t N a m e ) ; 
 
                 d i d W a r n A b o u t M o d u l e P a t t e r n C o m p o n e n t [ _ c o m p o n e n t N a m e ]   =   t r u e ; 
             } 
         } 
     } 
 
     i f   (   / /   R u n   t h e s e   c h e c k s   i n   p r o d u c t i o n   o n l y   i f   t h e   f l a g   i s   o f f . 
     / /   E v e n t u a l l y   w e ' l l   d e l e t e   t h i s   b r a n c h   a l t o g e t h e r . 
       t y p e o f   v a l u e   = = =   ' o b j e c t '   & &   v a l u e   ! = =   n u l l   & &   t y p e o f   v a l u e . r e n d e r   = = =   ' f u n c t i o n '   & &   v a l u e . $ $ t y p e o f   = = =   u n d e f i n e d )   { 
         { 
             v a r   _ c o m p o n e n t N a m e 2   =   g e t C o m p o n e n t N a m e F r o m T y p e ( C o m p o n e n t )   | |   ' U n k n o w n ' ; 
 
             i f   ( ! d i d W a r n A b o u t M o d u l e P a t t e r n C o m p o n e n t [ _ c o m p o n e n t N a m e 2 ] )   { 
                 e r r o r ( ' T h e   < % s   / >   c o m p o n e n t   a p p e a r s   t o   b e   a   f u n c t i o n   c o m p o n e n t   t h a t   r e t u r n s   a   c l a s s   i n s t a n c e .   '   +   ' C h a n g e   % s   t o   a   c l a s s   t h a t   e x t e n d s   R e a c t . C o m p o n e n t   i n s t e a d .   '   +   " I f   y o u   c a n ' t   u s e   a   c l a s s   t r y   a s s i g n i n g   t h e   p r o t o t y p e   o n   t h e   f u n c t i o n   a s   a   w o r k a r o u n d .   "   +   " ` % s . p r o t o t y p e   =   R e a c t . C o m p o n e n t . p r o t o t y p e ` .   D o n ' t   u s e   a n   a r r o w   f u n c t i o n   s i n c e   i t   "   +   ' c a n n o t   b e   c a l l e d   w i t h   ` n e w `   b y   R e a c t . ' ,   _ c o m p o n e n t N a m e 2 ,   _ c o m p o n e n t N a m e 2 ,   _ c o m p o n e n t N a m e 2 ) ; 
 
                 d i d W a r n A b o u t M o d u l e P a t t e r n C o m p o n e n t [ _ c o m p o n e n t N a m e 2 ]   =   t r u e ; 
             } 
         }   / /   P r o c e e d   u n d e r   t h e   a s s u m p t i o n   t h a t   t h i s   i s   a   c l a s s   i n s t a n c e 
 
 
         w o r k I n P r o g r e s s . t a g   =   C l a s s C o m p o n e n t ;   / /   T h r o w   o u t   a n y   h o o k s   t h a t   w e r e   u s e d . 
 
         w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   n u l l ; 
         w o r k I n P r o g r e s s . u p d a t e Q u e u e   =   n u l l ;   / /   P u s h   c o n t e x t   p r o v i d e r s   e a r l y   t o   p r e v e n t   c o n t e x t   s t a c k   m i s m a t c h e s . 
         / /   D u r i n g   m o u n t i n g   w e   d o n ' t   k n o w   t h e   c h i l d   c o n t e x t   y e t   a s   t h e   i n s t a n c e   d o e s n ' t   e x i s t . 
         / /   W e   w i l l   i n v a l i d a t e   t h e   c h i l d   c o n t e x t   i n   f i n i s h C l a s s C o m p o n e n t ( )   r i g h t   a f t e r   r e n d e r i n g . 
 
         v a r   h a s C o n t e x t   =   f a l s e ; 
 
         i f   ( i s C o n t e x t P r o v i d e r ( C o m p o n e n t ) )   { 
             h a s C o n t e x t   =   t r u e ; 
             p u s h C o n t e x t P r o v i d e r ( w o r k I n P r o g r e s s ) ; 
         }   e l s e   { 
             h a s C o n t e x t   =   f a l s e ; 
         } 
 
         w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   v a l u e . s t a t e   ! = =   n u l l   & &   v a l u e . s t a t e   ! = =   u n d e f i n e d   ?   v a l u e . s t a t e   :   n u l l ; 
         i n i t i a l i z e U p d a t e Q u e u e ( w o r k I n P r o g r e s s ) ; 
         a d o p t C l a s s I n s t a n c e ( w o r k I n P r o g r e s s ,   v a l u e ) ; 
         m o u n t C l a s s I n s t a n c e ( w o r k I n P r o g r e s s ,   C o m p o n e n t ,   p r o p s ,   r e n d e r L a n e s ) ; 
         r e t u r n   f i n i s h C l a s s C o m p o n e n t ( n u l l ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   t r u e ,   h a s C o n t e x t ,   r e n d e r L a n e s ) ; 
     }   e l s e   { 
         / /   P r o c e e d   u n d e r   t h e   a s s u m p t i o n   t h a t   t h i s   i s   a   f u n c t i o n   c o m p o n e n t 
         w o r k I n P r o g r e s s . t a g   =   F u n c t i o n C o m p o n e n t ; 
 
         { 
 
             i f   (   w o r k I n P r o g r e s s . m o d e   &   S t r i c t L e g a c y M o d e )   { 
                 s e t I s S t r i c t M o d e F o r D e v t o o l s ( t r u e ) ; 
 
                 t r y   { 
                     v a l u e   =   r e n d e r W i t h H o o k s ( n u l l ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   p r o p s ,   c o n t e x t ,   r e n d e r L a n e s ) ; 
                     h a s I d   =   c h e c k D i d R e n d e r I d H o o k ( ) ; 
                 }   f i n a l l y   { 
                     s e t I s S t r i c t M o d e F o r D e v t o o l s ( f a l s e ) ; 
                 } 
             } 
         } 
 
         i f   ( g e t I s H y d r a t i n g ( )   & &   h a s I d )   { 
             p u s h M a t e r i a l i z e d T r e e I d ( w o r k I n P r o g r e s s ) ; 
         } 
 
         r e c o n c i l e C h i l d r e n ( n u l l ,   w o r k I n P r o g r e s s ,   v a l u e ,   r e n d e r L a n e s ) ; 
 
         { 
             v a l i d a t e F u n c t i o n C o m p o n e n t I n D e v ( w o r k I n P r o g r e s s ,   C o m p o n e n t ) ; 
         } 
 
         r e t u r n   w o r k I n P r o g r e s s . c h i l d ; 
     } 
 } 
 
 f u n c t i o n   v a l i d a t e F u n c t i o n C o m p o n e n t I n D e v ( w o r k I n P r o g r e s s ,   C o m p o n e n t )   { 
     { 
         i f   ( C o m p o n e n t )   { 
             i f   ( C o m p o n e n t . c h i l d C o n t e x t T y p e s )   { 
                 e r r o r ( ' % s ( . . . ) :   c h i l d C o n t e x t T y p e s   c a n n o t   b e   d e f i n e d   o n   a   f u n c t i o n   c o m p o n e n t . ' ,   C o m p o n e n t . d i s p l a y N a m e   | |   C o m p o n e n t . n a m e   | |   ' C o m p o n e n t ' ) ; 
             } 
         } 
 
         i f   ( w o r k I n P r o g r e s s . r e f   ! = =   n u l l )   { 
             v a r   i n f o   =   ' ' ; 
             v a r   o w n e r N a m e   =   g e t C u r r e n t F i b e r O w n e r N a m e I n D e v O r N u l l ( ) ; 
 
             i f   ( o w n e r N a m e )   { 
                 i n f o   + =   ' \ n \ n C h e c k   t h e   r e n d e r   m e t h o d   o f   ` '   +   o w n e r N a m e   +   ' ` . ' ; 
             } 
 
             v a r   w a r n i n g K e y   =   o w n e r N a m e   | |   ' ' ; 
             v a r   d e b u g S o u r c e   =   w o r k I n P r o g r e s s . _ d e b u g S o u r c e ; 
 
             i f   ( d e b u g S o u r c e )   { 
                 w a r n i n g K e y   =   d e b u g S o u r c e . f i l e N a m e   +   ' : '   +   d e b u g S o u r c e . l i n e N u m b e r ; 
             } 
 
             i f   ( ! d i d W a r n A b o u t F u n c t i o n R e f s [ w a r n i n g K e y ] )   { 
                 d i d W a r n A b o u t F u n c t i o n R e f s [ w a r n i n g K e y ]   =   t r u e ; 
 
                 e r r o r ( ' F u n c t i o n   c o m p o n e n t s   c a n n o t   b e   g i v e n   r e f s .   '   +   ' A t t e m p t s   t o   a c c e s s   t h i s   r e f   w i l l   f a i l .   '   +   ' D i d   y o u   m e a n   t o   u s e   R e a c t . f o r w a r d R e f ( ) ? % s ' ,   i n f o ) ; 
             } 
         } 
 
         i f   ( t y p e o f   C o m p o n e n t . g e t D e r i v e d S t a t e F r o m P r o p s   = = =   ' f u n c t i o n ' )   { 
             v a r   _ c o m p o n e n t N a m e 3   =   g e t C o m p o n e n t N a m e F r o m T y p e ( C o m p o n e n t )   | |   ' U n k n o w n ' ; 
 
             i f   ( ! d i d W a r n A b o u t G e t D e r i v e d S t a t e O n F u n c t i o n C o m p o n e n t [ _ c o m p o n e n t N a m e 3 ] )   { 
                 e r r o r ( ' % s :   F u n c t i o n   c o m p o n e n t s   d o   n o t   s u p p o r t   g e t D e r i v e d S t a t e F r o m P r o p s . ' ,   _ c o m p o n e n t N a m e 3 ) ; 
 
                 d i d W a r n A b o u t G e t D e r i v e d S t a t e O n F u n c t i o n C o m p o n e n t [ _ c o m p o n e n t N a m e 3 ]   =   t r u e ; 
             } 
         } 
 
         i f   ( t y p e o f   C o m p o n e n t . c o n t e x t T y p e   = = =   ' o b j e c t '   & &   C o m p o n e n t . c o n t e x t T y p e   ! = =   n u l l )   { 
             v a r   _ c o m p o n e n t N a m e 4   =   g e t C o m p o n e n t N a m e F r o m T y p e ( C o m p o n e n t )   | |   ' U n k n o w n ' ; 
 
             i f   ( ! d i d W a r n A b o u t C o n t e x t T y p e O n F u n c t i o n C o m p o n e n t [ _ c o m p o n e n t N a m e 4 ] )   { 
                 e r r o r ( ' % s :   F u n c t i o n   c o m p o n e n t s   d o   n o t   s u p p o r t   c o n t e x t T y p e . ' ,   _ c o m p o n e n t N a m e 4 ) ; 
 
                 d i d W a r n A b o u t C o n t e x t T y p e O n F u n c t i o n C o m p o n e n t [ _ c o m p o n e n t N a m e 4 ]   =   t r u e ; 
             } 
         } 
     } 
 } 
 
 v a r   S U S P E N D E D _ M A R K E R   =   { 
     d e h y d r a t e d :   n u l l , 
     t r e e C o n t e x t :   n u l l , 
     r e t r y L a n e :   N o L a n e 
 } ; 
 
 f u n c t i o n   m o u n t S u s p e n s e O f f s c r e e n S t a t e ( r e n d e r L a n e s )   { 
     r e t u r n   { 
         b a s e L a n e s :   r e n d e r L a n e s , 
         c a c h e P o o l :   g e t S u s p e n d e d C a c h e ( ) , 
         t r a n s i t i o n s :   n u l l 
     } ; 
 } 
 
 f u n c t i o n   u p d a t e S u s p e n s e O f f s c r e e n S t a t e ( p r e v O f f s c r e e n S t a t e ,   r e n d e r L a n e s )   { 
     v a r   c a c h e P o o l   =   n u l l ; 
 
     r e t u r n   { 
         b a s e L a n e s :   m e r g e L a n e s ( p r e v O f f s c r e e n S t a t e . b a s e L a n e s ,   r e n d e r L a n e s ) , 
         c a c h e P o o l :   c a c h e P o o l , 
         t r a n s i t i o n s :   p r e v O f f s c r e e n S t a t e . t r a n s i t i o n s 
     } ; 
 }   / /   T O D O :   P r o b a b l y   s h o u l d   i n l i n e   t h i s   b a c k 
 
 
 f u n c t i o n   s h o u l d R e m a i n O n F a l l b a c k ( s u s p e n s e C o n t e x t ,   c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     / /   I f   w e ' r e   a l r e a d y   s h o w i n g   a   f a l l b a c k ,   t h e r e   a r e   c a s e s   w h e r e   w e   n e e d   t o 
     / /   r e m a i n   o n   t h a t   f a l l b a c k   r e g a r d l e s s   o f   w h e t h e r   t h e   c o n t e n t   h a s   r e s o l v e d . 
     / /   F o r   e x a m p l e ,   S u s p e n s e L i s t   c o o r d i n a t e s   w h e n   n e s t e d   c o n t e n t   a p p e a r s . 
     i f   ( c u r r e n t   ! = =   n u l l )   { 
         v a r   s u s p e n s e S t a t e   =   c u r r e n t . m e m o i z e d S t a t e ; 
 
         i f   ( s u s p e n s e S t a t e   = = =   n u l l )   { 
             / /   C u r r e n t l y   s h o w i n g   c o n t e n t .   D o n ' t   h i d e   i t ,   e v e n   i f   F o r c e S u s p e n s e F a l l b a c k 
             / /   i s   t r u e .   M o r e   p r e c i s e   n a m e   m i g h t   b e   " F o r c e R e m a i n S u s p e n s e F a l l b a c k " . 
             / /   N o t e :   T h i s   i s   a   f a c t o r i n g   s m e l l .   C a n ' t   r e m a i n   o n   a   f a l l b a c k   i f   t h e r e ' s 
             / /   n o   f a l l b a c k   t o   r e m a i n   o n . 
             r e t u r n   f a l s e ; 
         } 
     }   / /   N o t   c u r r e n t l y   s h o w i n g   c o n t e n t .   C o n s u l t   t h e   S u s p e n s e   c o n t e x t . 
 
 
     r e t u r n   h a s S u s p e n s e C o n t e x t ( s u s p e n s e C o n t e x t ,   F o r c e S u s p e n s e F a l l b a c k ) ; 
 } 
 
 f u n c t i o n   g e t R e m a i n i n g W o r k I n P r i m a r y T r e e ( c u r r e n t ,   r e n d e r L a n e s )   { 
     / /   T O D O :   S h o u l d   n o t   r e m o v e   r e n d e r   l a n e s   t h a t   w e r e   p i n g e d   d u r i n g   t h i s   r e n d e r 
     r e t u r n   r e m o v e L a n e s ( c u r r e n t . c h i l d L a n e s ,   r e n d e r L a n e s ) ; 
 } 
 
 f u n c t i o n   u p d a t e S u s p e n s e C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     v a r   n e x t P r o p s   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ;   / /   T h i s   i s   u s e d   b y   D e v T o o l s   t o   f o r c e   a   b o u n d a r y   t o   s u s p e n d . 
 
     { 
         i f   ( s h o u l d S u s p e n d ( w o r k I n P r o g r e s s ) )   { 
             w o r k I n P r o g r e s s . f l a g s   | =   D i d C a p t u r e ; 
         } 
     } 
 
     v a r   s u s p e n s e C o n t e x t   =   s u s p e n s e S t a c k C u r s o r . c u r r e n t ; 
     v a r   s h o w F a l l b a c k   =   f a l s e ; 
     v a r   d i d S u s p e n d   =   ( w o r k I n P r o g r e s s . f l a g s   &   D i d C a p t u r e )   ! = =   N o F l a g s ; 
 
     i f   ( d i d S u s p e n d   | |   s h o u l d R e m a i n O n F a l l b a c k ( s u s p e n s e C o n t e x t ,   c u r r e n t ) )   { 
         / /   S o m e t h i n g   i n   t h i s   b o u n d a r y ' s   s u b t r e e   a l r e a d y   s u s p e n d e d .   S w i t c h   t o 
         / /   r e n d e r i n g   t h e   f a l l b a c k   c h i l d r e n . 
         s h o w F a l l b a c k   =   t r u e ; 
         w o r k I n P r o g r e s s . f l a g s   & =   ~ D i d C a p t u r e ; 
     }   e l s e   { 
         / /   A t t e m p t i n g   t h e   m a i n   c o n t e n t 
         i f   ( c u r r e n t   = = =   n u l l   | |   c u r r e n t . m e m o i z e d S t a t e   ! = =   n u l l )   { 
             / /   T h i s   i s   a   n e w   m o u n t   o r   t h i s   b o u n d a r y   i s   a l r e a d y   s h o w i n g   a   f a l l b a c k   s t a t e . 
             / /   M a r k   t h i s   s u b t r e e   c o n t e x t   a s   h a v i n g   a t   l e a s t   o n e   i n v i s i b l e   p a r e n t   t h a t   c o u l d 
             / /   h a n d l e   t h e   f a l l b a c k   s t a t e . 
             / /   A v o i d e d   b o u n d a r i e s   a r e   n o t   c o n s i d e r e d   s i n c e   t h e y   c a n n o t   h a n d l e   p r e f e r r e d   f a l l b a c k   s t a t e s . 
             { 
                 s u s p e n s e C o n t e x t   =   a d d S u b t r e e S u s p e n s e C o n t e x t ( s u s p e n s e C o n t e x t ,   I n v i s i b l e P a r e n t S u s p e n s e C o n t e x t ) ; 
             } 
         } 
     } 
 
     s u s p e n s e C o n t e x t   =   s e t D e f a u l t S h a l l o w S u s p e n s e C o n t e x t ( s u s p e n s e C o n t e x t ) ; 
     p u s h S u s p e n s e C o n t e x t ( w o r k I n P r o g r e s s ,   s u s p e n s e C o n t e x t ) ;   / /   O K ,   t h e   n e x t   p a r t   i s   c o n f u s i n g .   W e ' r e   a b o u t   t o   r e c o n c i l e   t h e   S u s p e n s e 
     / /   b o u n d a r y ' s   c h i l d r e n .   T h i s   i n v o l v e s   s o m e   c u s t o m   r e c o n c i l i a t i o n   l o g i c .   T w o 
     / /   m a i n   r e a s o n s   t h i s   i s   s o   c o m p l i c a t e d . 
     / / 
     / /   F i r s t ,   L e g a c y   M o d e   h a s   d i f f e r e n t   s e m a n t i c s   f o r   b a c k w a r d s   c o m p a t i b i l i t y .   T h e 
     / /   p r i m a r y   t r e e   w i l l   c o m m i t   i n   a n   i n c o n s i s t e n t   s t a t e ,   s o   w h e n   w e   d o   t h e 
     / /   s e c o n d   p a s s   t o   r e n d e r   t h e   f a l l b a c k ,   w e   d o   s o m e   e x c e e d i n g l y ,   u h ,   c l e v e r 
     / /   h a c k s   t o   m a k e   t h a t   n o t   t o t a l l y   b r e a k .   L i k e   t r a n s f e r r i n g   e f f e c t s   a n d 
     / /   d e l e t i o n s   f r o m   h i d d e n   t r e e .   I n   C o n c u r r e n t   M o d e ,   i t ' s   m u c h   s i m p l e r , 
     / /   b e c a u s e   w e   b a i l o u t   o n   t h e   p r i m a r y   t r e e   c o m p l e t e l y   a n d   l e a v e   i t   i n   i t s   o l d 
     / /   s t a t e ,   n o   e f f e c t s .   S a m e   a s   w h a t   w e   d o   f o r   O f f s c r e e n   ( e x c e p t   t h a t 
     / /   O f f s c r e e n   d o e s n ' t   h a v e   t h e   f i r s t   r e n d e r   p a s s ) . 
     / / 
     / /   S e c o n d   i s   h y d r a t i o n .   D u r i n g   h y d r a t i o n ,   t h e   S u s p e n s e   f i b e r   h a s   a   s l i g h t l y 
     / /   d i f f e r e n t   l a y o u t ,   w h e r e   t h e   c h i l d   p o i n t s   t o   a   d e h y d r a t e d   f r a g m e n t ,   w h i c h 
     / /   c o n t a i n s   t h e   D O M   r e n d e r e d   b y   t h e   s e r v e r . 
     / / 
     / /   T h i r d ,   e v e n   i f   y o u   s e t   a l l   t h a t   a s i d e ,   S u s p e n s e   i s   l i k e   e r r o r   b o u n d a r i e s   i n 
     / /   t h a t   w e   f i r s t   w e   t r y   t o   r e n d e r   o n e   t r e e ,   a n d   i f   t h a t   f a i l s ,   w e   r e n d e r   a g a i n 
     / /   a n d   s w i t c h   t o   a   d i f f e r e n t   t r e e .   L i k e   a   t r y / c a t c h   b l o c k .   S o   w e   h a v e   t o   t r a c k 
     / /   w h i c h   b r a n c h   w e ' r e   c u r r e n t l y   r e n d e r i n g .   I d e a l l y   w e   w o u l d   m o d e l   t h i s   u s i n g 
     / /   a   s t a c k . 
 
     i f   ( c u r r e n t   = = =   n u l l )   { 
         / /   I n i t i a l   m o u n t 
         / /   I f   w e ' r e   c u r r e n t l y   h y d r a t i n g ,   t r y   t o   h y d r a t e   t h i s   b o u n d a r y . 
         t r y T o C l a i m N e x t H y d r a t a b l e I n s t a n c e ( w o r k I n P r o g r e s s ) ;   / /   T h i s   c o u l d ' v e   b e e n   a   d e h y d r a t e d   s u s p e n s e   c o m p o n e n t . 
 
         v a r   s u s p e n s e S t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
 
         i f   ( s u s p e n s e S t a t e   ! = =   n u l l )   { 
             v a r   d e h y d r a t e d   =   s u s p e n s e S t a t e . d e h y d r a t e d ; 
 
             i f   ( d e h y d r a t e d   ! = =   n u l l )   { 
                 r e t u r n   m o u n t D e h y d r a t e d S u s p e n s e C o m p o n e n t ( w o r k I n P r o g r e s s ,   d e h y d r a t e d ) ; 
             } 
         } 
 
         v a r   n e x t P r i m a r y C h i l d r e n   =   n e x t P r o p s . c h i l d r e n ; 
         v a r   n e x t F a l l b a c k C h i l d r e n   =   n e x t P r o p s . f a l l b a c k ; 
 
         i f   ( s h o w F a l l b a c k )   { 
             v a r   f a l l b a c k F r a g m e n t   =   m o u n t S u s p e n s e F a l l b a c k C h i l d r e n ( w o r k I n P r o g r e s s ,   n e x t P r i m a r y C h i l d r e n ,   n e x t F a l l b a c k C h i l d r e n ,   r e n d e r L a n e s ) ; 
             v a r   p r i m a r y C h i l d F r a g m e n t   =   w o r k I n P r o g r e s s . c h i l d ; 
             p r i m a r y C h i l d F r a g m e n t . m e m o i z e d S t a t e   =   m o u n t S u s p e n s e O f f s c r e e n S t a t e ( r e n d e r L a n e s ) ; 
             w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   S U S P E N D E D _ M A R K E R ; 
 
             r e t u r n   f a l l b a c k F r a g m e n t ; 
         }   e l s e   { 
             r e t u r n   m o u n t S u s p e n s e P r i m a r y C h i l d r e n ( w o r k I n P r o g r e s s ,   n e x t P r i m a r y C h i l d r e n ) ; 
         } 
     }   e l s e   { 
         / /   T h i s   i s   a n   u p d a t e . 
         / /   I f   t h e   c u r r e n t   f i b e r   h a s   a   S u s p e n s e S t a t e ,   t h a t   m e a n s   i t ' s   a l r e a d y   s h o w i n g 
         / /   a   f a l l b a c k . 
         v a r   p r e v S t a t e   =   c u r r e n t . m e m o i z e d S t a t e ; 
 
         i f   ( p r e v S t a t e   ! = =   n u l l )   { 
             / /   T h e   c u r r e n t   t r e e   i s   a l r e a d y   s h o w i n g   a   f a l l b a c k 
             / /   S p e c i a l   p a t h   f o r   h y d r a t i o n 
             v a r   _ d e h y d r a t e d   =   p r e v S t a t e . d e h y d r a t e d ; 
 
             i f   ( _ d e h y d r a t e d   ! = =   n u l l )   { 
                 i f   ( ! d i d S u s p e n d )   { 
                     r e t u r n   u p d a t e D e h y d r a t e d S u s p e n s e C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   _ d e h y d r a t e d ,   p r e v S t a t e ,   r e n d e r L a n e s ) ; 
                 }   e l s e   i f   ( w o r k I n P r o g r e s s . f l a g s   &   F o r c e C l i e n t R e n d e r )   { 
                     / /   S o m e t h i n g   e r r o r e d   d u r i n g   h y d r a t i o n .   T r y   a g a i n   w i t h o u t   h y d r a t i n g . 
                     w o r k I n P r o g r e s s . f l a g s   & =   ~ F o r c e C l i e n t R e n d e r ; 
                     r e t u r n   r e t r y S u s p e n s e C o m p o n e n t W i t h o u t H y d r a t i n g ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ,   n e w   E r r o r ( ' T h e r e   w a s   a n   e r r o r   w h i l e   h y d r a t i n g   t h i s   S u s p e n s e   b o u n d a r y .   '   +   ' S w i t c h e d   t o   c l i e n t   r e n d e r i n g . ' ) ) ; 
                 }   e l s e   i f   ( w o r k I n P r o g r e s s . m e m o i z e d S t a t e   ! = =   n u l l )   { 
                     / /   S o m e t h i n g   s u s p e n d e d   a n d   w e   s h o u l d   s t i l l   b e   i n   d e h y d r a t e d   m o d e . 
                     / /   L e a v e   t h e   e x i s t i n g   c h i l d   i n   p l a c e . 
                     w o r k I n P r o g r e s s . c h i l d   =   c u r r e n t . c h i l d ;   / /   T h e   d e h y d r a t e d   c o m p l e t i o n   p a s s   e x p e c t s   t h i s   f l a g   t o   b e   t h e r e 
                     / /   b u t   t h e   n o r m a l   s u s p e n s e   p a s s   d o e s n ' t . 
 
                     w o r k I n P r o g r e s s . f l a g s   | =   D i d C a p t u r e ; 
                     r e t u r n   n u l l ; 
                 }   e l s e   { 
                     / /   S u s p e n d e d   b u t   w e   s h o u l d   n o   l o n g e r   b e   i n   d e h y d r a t e d   m o d e . 
                     / /   T h e r e f o r e   w e   n o w   h a v e   t o   r e n d e r   t h e   f a l l b a c k . 
                     v a r   _ n e x t P r i m a r y C h i l d r e n   =   n e x t P r o p s . c h i l d r e n ; 
                     v a r   _ n e x t F a l l b a c k C h i l d r e n   =   n e x t P r o p s . f a l l b a c k ; 
                     v a r   f a l l b a c k C h i l d F r a g m e n t   =   m o u n t S u s p e n s e F a l l b a c k A f t e r R e t r y W i t h o u t H y d r a t i n g ( c u r r e n t ,   w o r k I n P r o g r e s s ,   _ n e x t P r i m a r y C h i l d r e n ,   _ n e x t F a l l b a c k C h i l d r e n ,   r e n d e r L a n e s ) ; 
                     v a r   _ p r i m a r y C h i l d F r a g m e n t 2   =   w o r k I n P r o g r e s s . c h i l d ; 
                     _ p r i m a r y C h i l d F r a g m e n t 2 . m e m o i z e d S t a t e   =   m o u n t S u s p e n s e O f f s c r e e n S t a t e ( r e n d e r L a n e s ) ; 
                     w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   S U S P E N D E D _ M A R K E R ; 
                     r e t u r n   f a l l b a c k C h i l d F r a g m e n t ; 
                 } 
             } 
 
             i f   ( s h o w F a l l b a c k )   { 
                 v a r   _ n e x t F a l l b a c k C h i l d r e n 2   =   n e x t P r o p s . f a l l b a c k ; 
                 v a r   _ n e x t P r i m a r y C h i l d r e n 2   =   n e x t P r o p s . c h i l d r e n ; 
 
                 v a r   _ f a l l b a c k C h i l d F r a g m e n t   =   u p d a t e S u s p e n s e F a l l b a c k C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   _ n e x t P r i m a r y C h i l d r e n 2 ,   _ n e x t F a l l b a c k C h i l d r e n 2 ,   r e n d e r L a n e s ) ; 
 
                 v a r   _ p r i m a r y C h i l d F r a g m e n t 3   =   w o r k I n P r o g r e s s . c h i l d ; 
                 v a r   p r e v O f f s c r e e n S t a t e   =   c u r r e n t . c h i l d . m e m o i z e d S t a t e ; 
                 _ p r i m a r y C h i l d F r a g m e n t 3 . m e m o i z e d S t a t e   =   p r e v O f f s c r e e n S t a t e   = = =   n u l l   ?   m o u n t S u s p e n s e O f f s c r e e n S t a t e ( r e n d e r L a n e s )   :   u p d a t e S u s p e n s e O f f s c r e e n S t a t e ( p r e v O f f s c r e e n S t a t e ,   r e n d e r L a n e s ) ; 
 
                 _ p r i m a r y C h i l d F r a g m e n t 3 . c h i l d L a n e s   =   g e t R e m a i n i n g W o r k I n P r i m a r y T r e e ( c u r r e n t ,   r e n d e r L a n e s ) ; 
                 w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   S U S P E N D E D _ M A R K E R ; 
                 r e t u r n   _ f a l l b a c k C h i l d F r a g m e n t ; 
             }   e l s e   { 
                 v a r   _ n e x t P r i m a r y C h i l d r e n 3   =   n e x t P r o p s . c h i l d r e n ; 
 
                 v a r   _ p r i m a r y C h i l d F r a g m e n t 4   =   u p d a t e S u s p e n s e P r i m a r y C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   _ n e x t P r i m a r y C h i l d r e n 3 ,   r e n d e r L a n e s ) ; 
 
                 w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   n u l l ; 
                 r e t u r n   _ p r i m a r y C h i l d F r a g m e n t 4 ; 
             } 
         }   e l s e   { 
             / /   T h e   c u r r e n t   t r e e   i s   n o t   a l r e a d y   s h o w i n g   a   f a l l b a c k . 
             i f   ( s h o w F a l l b a c k )   { 
                 / /   T i m e d   o u t . 
                 v a r   _ n e x t F a l l b a c k C h i l d r e n 3   =   n e x t P r o p s . f a l l b a c k ; 
                 v a r   _ n e x t P r i m a r y C h i l d r e n 4   =   n e x t P r o p s . c h i l d r e n ; 
 
                 v a r   _ f a l l b a c k C h i l d F r a g m e n t 2   =   u p d a t e S u s p e n s e F a l l b a c k C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   _ n e x t P r i m a r y C h i l d r e n 4 ,   _ n e x t F a l l b a c k C h i l d r e n 3 ,   r e n d e r L a n e s ) ; 
 
                 v a r   _ p r i m a r y C h i l d F r a g m e n t 5   =   w o r k I n P r o g r e s s . c h i l d ; 
                 v a r   _ p r e v O f f s c r e e n S t a t e   =   c u r r e n t . c h i l d . m e m o i z e d S t a t e ; 
                 _ p r i m a r y C h i l d F r a g m e n t 5 . m e m o i z e d S t a t e   =   _ p r e v O f f s c r e e n S t a t e   = = =   n u l l   ?   m o u n t S u s p e n s e O f f s c r e e n S t a t e ( r e n d e r L a n e s )   :   u p d a t e S u s p e n s e O f f s c r e e n S t a t e ( _ p r e v O f f s c r e e n S t a t e ,   r e n d e r L a n e s ) ; 
                 _ p r i m a r y C h i l d F r a g m e n t 5 . c h i l d L a n e s   =   g e t R e m a i n i n g W o r k I n P r i m a r y T r e e ( c u r r e n t ,   r e n d e r L a n e s ) ; 
                 / /   f a l l b a c k   c h i l d r e n . 
 
 
                 w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   S U S P E N D E D _ M A R K E R ; 
                 r e t u r n   _ f a l l b a c k C h i l d F r a g m e n t 2 ; 
             }   e l s e   { 
                 / /   S t i l l   h a v e n ' t   t i m e d   o u t .   C o n t i n u e   r e n d e r i n g   t h e   c h i l d r e n ,   l i k e   w e 
                 / /   n o r m a l l y   d o . 
                 v a r   _ n e x t P r i m a r y C h i l d r e n 5   =   n e x t P r o p s . c h i l d r e n ; 
 
                 v a r   _ p r i m a r y C h i l d F r a g m e n t 6   =   u p d a t e S u s p e n s e P r i m a r y C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   _ n e x t P r i m a r y C h i l d r e n 5 ,   r e n d e r L a n e s ) ; 
 
                 w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   n u l l ; 
                 r e t u r n   _ p r i m a r y C h i l d F r a g m e n t 6 ; 
             } 
         } 
     } 
 } 
 
 f u n c t i o n   m o u n t S u s p e n s e P r i m a r y C h i l d r e n ( w o r k I n P r o g r e s s ,   p r i m a r y C h i l d r e n ,   r e n d e r L a n e s )   { 
     v a r   m o d e   =   w o r k I n P r o g r e s s . m o d e ; 
     v a r   p r i m a r y C h i l d P r o p s   =   { 
         m o d e :   ' v i s i b l e ' , 
         c h i l d r e n :   p r i m a r y C h i l d r e n 
     } ; 
     v a r   p r i m a r y C h i l d F r a g m e n t   =   m o u n t W o r k I n P r o g r e s s O f f s c r e e n F i b e r ( p r i m a r y C h i l d P r o p s ,   m o d e ) ; 
     p r i m a r y C h i l d F r a g m e n t . r e t u r n   =   w o r k I n P r o g r e s s ; 
     w o r k I n P r o g r e s s . c h i l d   =   p r i m a r y C h i l d F r a g m e n t ; 
     r e t u r n   p r i m a r y C h i l d F r a g m e n t ; 
 } 
 
 f u n c t i o n   m o u n t S u s p e n s e F a l l b a c k C h i l d r e n ( w o r k I n P r o g r e s s ,   p r i m a r y C h i l d r e n ,   f a l l b a c k C h i l d r e n ,   r e n d e r L a n e s )   { 
     v a r   m o d e   =   w o r k I n P r o g r e s s . m o d e ; 
     v a r   p r o g r e s s e d P r i m a r y F r a g m e n t   =   w o r k I n P r o g r e s s . c h i l d ; 
     v a r   p r i m a r y C h i l d P r o p s   =   { 
         m o d e :   ' h i d d e n ' , 
         c h i l d r e n :   p r i m a r y C h i l d r e n 
     } ; 
     v a r   p r i m a r y C h i l d F r a g m e n t ; 
     v a r   f a l l b a c k C h i l d F r a g m e n t ; 
 
     i f   ( ( m o d e   &   C o n c u r r e n t M o d e )   = = =   N o M o d e   & &   p r o g r e s s e d P r i m a r y F r a g m e n t   ! = =   n u l l )   { 
         / /   I n   l e g a c y   m o d e ,   w e   c o m m i t   t h e   p r i m a r y   t r e e   a s   i f   i t   s u c c e s s f u l l y 
         / /   c o m p l e t e d ,   e v e n   t h o u g h   i t ' s   i n   a n   i n c o n s i s t e n t   s t a t e . 
         p r i m a r y C h i l d F r a g m e n t   =   p r o g r e s s e d P r i m a r y F r a g m e n t ; 
         p r i m a r y C h i l d F r a g m e n t . c h i l d L a n e s   =   N o L a n e s ; 
         p r i m a r y C h i l d F r a g m e n t . p e n d i n g P r o p s   =   p r i m a r y C h i l d P r o p s ; 
 
         i f   (   w o r k I n P r o g r e s s . m o d e   &   P r o f i l e M o d e )   { 
             / /   R e s e t   t h e   d u r a t i o n s   f r o m   t h e   f i r s t   p a s s   s o   t h e y   a r e n ' t   i n c l u d e d   i n   t h e 
             / /   f i n a l   a m o u n t s .   T h i s   s e e m s   c o u n t e r i n t u i t i v e ,   s i n c e   w e ' r e   i n t e n t i o n a l l y 
             / /   n o t   m e a s u r i n g   p a r t   o f   t h e   r e n d e r   p h a s e ,   b u t   t h i s   m a k e s   i t   m a t c h   w h a t   w e 
             / /   d o   i n   C o n c u r r e n t   M o d e . 
             p r i m a r y C h i l d F r a g m e n t . a c t u a l D u r a t i o n   =   0 ; 
             p r i m a r y C h i l d F r a g m e n t . a c t u a l S t a r t T i m e   =   - 1 ; 
             p r i m a r y C h i l d F r a g m e n t . s e l f B a s e D u r a t i o n   =   0 ; 
             p r i m a r y C h i l d F r a g m e n t . t r e e B a s e D u r a t i o n   =   0 ; 
         } 
 
         f a l l b a c k C h i l d F r a g m e n t   =   c r e a t e F i b e r F r o m F r a g m e n t ( f a l l b a c k C h i l d r e n ,   m o d e ,   r e n d e r L a n e s ,   n u l l ) ; 
     }   e l s e   { 
         p r i m a r y C h i l d F r a g m e n t   =   m o u n t W o r k I n P r o g r e s s O f f s c r e e n F i b e r ( p r i m a r y C h i l d P r o p s ,   m o d e ) ; 
         f a l l b a c k C h i l d F r a g m e n t   =   c r e a t e F i b e r F r o m F r a g m e n t ( f a l l b a c k C h i l d r e n ,   m o d e ,   r e n d e r L a n e s ,   n u l l ) ; 
     } 
 
     p r i m a r y C h i l d F r a g m e n t . r e t u r n   =   w o r k I n P r o g r e s s ; 
     f a l l b a c k C h i l d F r a g m e n t . r e t u r n   =   w o r k I n P r o g r e s s ; 
     p r i m a r y C h i l d F r a g m e n t . s i b l i n g   =   f a l l b a c k C h i l d F r a g m e n t ; 
     w o r k I n P r o g r e s s . c h i l d   =   p r i m a r y C h i l d F r a g m e n t ; 
     r e t u r n   f a l l b a c k C h i l d F r a g m e n t ; 
 } 
 
 f u n c t i o n   m o u n t W o r k I n P r o g r e s s O f f s c r e e n F i b e r ( o f f s c r e e n P r o p s ,   m o d e ,   r e n d e r L a n e s )   { 
     / /   T h e   p r o p s   a r g u m e n t   t o   ` c r e a t e F i b e r F r o m O f f s c r e e n `   i s   ` a n y `   t y p e d ,   s o   w e   u s e 
     / /   t h i s   w r a p p e r   f u n c t i o n   t o   c o n s t r a i n   i t . 
     r e t u r n   c r e a t e F i b e r F r o m O f f s c r e e n ( o f f s c r e e n P r o p s ,   m o d e ,   N o L a n e s ,   n u l l ) ; 
 } 
 
 f u n c t i o n   u p d a t e W o r k I n P r o g r e s s O f f s c r e e n F i b e r ( c u r r e n t ,   o f f s c r e e n P r o p s )   { 
     / /   T h e   p r o p s   a r g u m e n t   t o   ` c r e a t e W o r k I n P r o g r e s s `   i s   ` a n y `   t y p e d ,   s o   w e   u s e   t h i s 
     / /   w r a p p e r   f u n c t i o n   t o   c o n s t r a i n   i t . 
     r e t u r n   c r e a t e W o r k I n P r o g r e s s ( c u r r e n t ,   o f f s c r e e n P r o p s ) ; 
 } 
 
 f u n c t i o n   u p d a t e S u s p e n s e P r i m a r y C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   p r i m a r y C h i l d r e n ,   r e n d e r L a n e s )   { 
     v a r   c u r r e n t P r i m a r y C h i l d F r a g m e n t   =   c u r r e n t . c h i l d ; 
     v a r   c u r r e n t F a l l b a c k C h i l d F r a g m e n t   =   c u r r e n t P r i m a r y C h i l d F r a g m e n t . s i b l i n g ; 
     v a r   p r i m a r y C h i l d F r a g m e n t   =   u p d a t e W o r k I n P r o g r e s s O f f s c r e e n F i b e r ( c u r r e n t P r i m a r y C h i l d F r a g m e n t ,   { 
         m o d e :   ' v i s i b l e ' , 
         c h i l d r e n :   p r i m a r y C h i l d r e n 
     } ) ; 
 
     i f   ( ( w o r k I n P r o g r e s s . m o d e   &   C o n c u r r e n t M o d e )   = = =   N o M o d e )   { 
         p r i m a r y C h i l d F r a g m e n t . l a n e s   =   r e n d e r L a n e s ; 
     } 
 
     p r i m a r y C h i l d F r a g m e n t . r e t u r n   =   w o r k I n P r o g r e s s ; 
     p r i m a r y C h i l d F r a g m e n t . s i b l i n g   =   n u l l ; 
 
     i f   ( c u r r e n t F a l l b a c k C h i l d F r a g m e n t   ! = =   n u l l )   { 
         / /   D e l e t e   t h e   f a l l b a c k   c h i l d   f r a g m e n t 
         v a r   d e l e t i o n s   =   w o r k I n P r o g r e s s . d e l e t i o n s ; 
 
         i f   ( d e l e t i o n s   = = =   n u l l )   { 
             w o r k I n P r o g r e s s . d e l e t i o n s   =   [ c u r r e n t F a l l b a c k C h i l d F r a g m e n t ] ; 
             w o r k I n P r o g r e s s . f l a g s   | =   C h i l d D e l e t i o n ; 
         }   e l s e   { 
             d e l e t i o n s . p u s h ( c u r r e n t F a l l b a c k C h i l d F r a g m e n t ) ; 
         } 
     } 
 
     w o r k I n P r o g r e s s . c h i l d   =   p r i m a r y C h i l d F r a g m e n t ; 
     r e t u r n   p r i m a r y C h i l d F r a g m e n t ; 
 } 
 
 f u n c t i o n   u p d a t e S u s p e n s e F a l l b a c k C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   p r i m a r y C h i l d r e n ,   f a l l b a c k C h i l d r e n ,   r e n d e r L a n e s )   { 
     v a r   m o d e   =   w o r k I n P r o g r e s s . m o d e ; 
     v a r   c u r r e n t P r i m a r y C h i l d F r a g m e n t   =   c u r r e n t . c h i l d ; 
     v a r   c u r r e n t F a l l b a c k C h i l d F r a g m e n t   =   c u r r e n t P r i m a r y C h i l d F r a g m e n t . s i b l i n g ; 
     v a r   p r i m a r y C h i l d P r o p s   =   { 
         m o d e :   ' h i d d e n ' , 
         c h i l d r e n :   p r i m a r y C h i l d r e n 
     } ; 
     v a r   p r i m a r y C h i l d F r a g m e n t ; 
 
     i f   (   / /   I n   l e g a c y   m o d e ,   w e   c o m m i t   t h e   p r i m a r y   t r e e   a s   i f   i t   s u c c e s s f u l l y 
     / /   c o m p l e t e d ,   e v e n   t h o u g h   i t ' s   i n   a n   i n c o n s i s t e n t   s t a t e . 
     ( m o d e   &   C o n c u r r e n t M o d e )   = = =   N o M o d e   & &   / /   M a k e   s u r e   w e ' r e   o n   t h e   s e c o n d   p a s s ,   i . e .   t h e   p r i m a r y   c h i l d   f r a g m e n t   w a s 
     / /   a l r e a d y   c l o n e d .   I n   l e g a c y   m o d e ,   t h e   o n l y   c a s e   w h e r e   t h i s   i s n ' t   t r u e   i s 
     / /   w h e n   D e v T o o l s   f o r c e s   u s   t o   d i s p l a y   a   f a l l b a c k ;   w e   s k i p   t h e   f i r s t   r e n d e r 
     / /   p a s s   e n t i r e l y   a n d   g o   s t r a i g h t   t o   r e n d e r i n g   t h e   f a l l b a c k .   ( I n   C o n c u r r e n t 
     / /   M o d e ,   S u s p e n s e L i s t   c a n   a l s o   t r i g g e r   t h i s   s c e n a r i o ,   b u t   t h i s   i s   a   l e g a c y - 
     / /   o n l y   c o d e p a t h . ) 
     w o r k I n P r o g r e s s . c h i l d   ! = =   c u r r e n t P r i m a r y C h i l d F r a g m e n t )   { 
         v a r   p r o g r e s s e d P r i m a r y F r a g m e n t   =   w o r k I n P r o g r e s s . c h i l d ; 
         p r i m a r y C h i l d F r a g m e n t   =   p r o g r e s s e d P r i m a r y F r a g m e n t ; 
         p r i m a r y C h i l d F r a g m e n t . c h i l d L a n e s   =   N o L a n e s ; 
         p r i m a r y C h i l d F r a g m e n t . p e n d i n g P r o p s   =   p r i m a r y C h i l d P r o p s ; 
 
         i f   (   w o r k I n P r o g r e s s . m o d e   &   P r o f i l e M o d e )   { 
             / /   R e s e t   t h e   d u r a t i o n s   f r o m   t h e   f i r s t   p a s s   s o   t h e y   a r e n ' t   i n c l u d e d   i n   t h e 
             / /   f i n a l   a m o u n t s .   T h i s   s e e m s   c o u n t e r i n t u i t i v e ,   s i n c e   w e ' r e   i n t e n t i o n a l l y 
             / /   n o t   m e a s u r i n g   p a r t   o f   t h e   r e n d e r   p h a s e ,   b u t   t h i s   m a k e s   i t   m a t c h   w h a t   w e 
             / /   d o   i n   C o n c u r r e n t   M o d e . 
             p r i m a r y C h i l d F r a g m e n t . a c t u a l D u r a t i o n   =   0 ; 
             p r i m a r y C h i l d F r a g m e n t . a c t u a l S t a r t T i m e   =   - 1 ; 
             p r i m a r y C h i l d F r a g m e n t . s e l f B a s e D u r a t i o n   =   c u r r e n t P r i m a r y C h i l d F r a g m e n t . s e l f B a s e D u r a t i o n ; 
             p r i m a r y C h i l d F r a g m e n t . t r e e B a s e D u r a t i o n   =   c u r r e n t P r i m a r y C h i l d F r a g m e n t . t r e e B a s e D u r a t i o n ; 
         } 
         / /   H o w e v e r ,   s i n c e   w e ' r e   g o i n g   t o   r e m a i n   o n   t h e   f a l l b a c k ,   w e   n o   l o n g e r   w a n t 
         / /   t o   d e l e t e   i t . 
 
 
         w o r k I n P r o g r e s s . d e l e t i o n s   =   n u l l ; 
     }   e l s e   { 
         p r i m a r y C h i l d F r a g m e n t   =   u p d a t e W o r k I n P r o g r e s s O f f s c r e e n F i b e r ( c u r r e n t P r i m a r y C h i l d F r a g m e n t ,   p r i m a r y C h i l d P r o p s ) ; 
         / /   ( W e   d o n ' t   d o   t h i s   i n   l e g a c y   m o d e ,   b e c a u s e   i n   l e g a c y   m o d e   w e   d o n ' t   r e - u s e 
         / /   t h e   c u r r e n t   t r e e ;   s e e   p r e v i o u s   b r a n c h . ) 
 
 
         p r i m a r y C h i l d F r a g m e n t . s u b t r e e F l a g s   =   c u r r e n t P r i m a r y C h i l d F r a g m e n t . s u b t r e e F l a g s   &   S t a t i c M a s k ; 
     } 
 
     v a r   f a l l b a c k C h i l d F r a g m e n t ; 
 
     i f   ( c u r r e n t F a l l b a c k C h i l d F r a g m e n t   ! = =   n u l l )   { 
         f a l l b a c k C h i l d F r a g m e n t   =   c r e a t e W o r k I n P r o g r e s s ( c u r r e n t F a l l b a c k C h i l d F r a g m e n t ,   f a l l b a c k C h i l d r e n ) ; 
     }   e l s e   { 
         f a l l b a c k C h i l d F r a g m e n t   =   c r e a t e F i b e r F r o m F r a g m e n t ( f a l l b a c k C h i l d r e n ,   m o d e ,   r e n d e r L a n e s ,   n u l l ) ;   / /   N e e d s   a   p l a c e m e n t   e f f e c t   b e c a u s e   t h e   p a r e n t   ( t h e   S u s p e n s e   b o u n d a r y )   a l r e a d y 
         / /   m o u n t e d   b u t   t h i s   i s   a   n e w   f i b e r . 
 
         f a l l b a c k C h i l d F r a g m e n t . f l a g s   | =   P l a c e m e n t ; 
     } 
 
     f a l l b a c k C h i l d F r a g m e n t . r e t u r n   =   w o r k I n P r o g r e s s ; 
     p r i m a r y C h i l d F r a g m e n t . r e t u r n   =   w o r k I n P r o g r e s s ; 
     p r i m a r y C h i l d F r a g m e n t . s i b l i n g   =   f a l l b a c k C h i l d F r a g m e n t ; 
     w o r k I n P r o g r e s s . c h i l d   =   p r i m a r y C h i l d F r a g m e n t ; 
     r e t u r n   f a l l b a c k C h i l d F r a g m e n t ; 
 } 
 
 f u n c t i o n   r e t r y S u s p e n s e C o m p o n e n t W i t h o u t H y d r a t i n g ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ,   r e c o v e r a b l e E r r o r )   { 
     / /   F a l l i n g   b a c k   t o   c l i e n t   r e n d e r i n g .   B e c a u s e   t h i s   h a s   p e r f o r m a n c e 
     / /   i m p l i c a t i o n s ,   i t ' s   c o n s i d e r e d   a   r e c o v e r a b l e   e r r o r ,   e v e n   t h o u g h   t h e   u s e r 
     / /   l i k e l y   w o n ' t   o b s e r v e   a n y t h i n g   w r o n g   w i t h   t h e   U I . 
     / / 
     / /   T h e   e r r o r   i s   p a s s e d   i n   a s   a n   a r g u m e n t   t o   e n f o r c e   t h a t   e v e r y   c a l l e r   p r o v i d e 
     / /   a   c u s t o m   m e s s a g e ,   o r   e x p l i c i t l y   o p t   o u t   ( c u r r e n t l y   t h e   o n l y   p a t h   t h a t   o p t s 
     / /   o u t   i s   l e g a c y   m o d e ;   e v e r y   c o n c u r r e n t   p a t h   p r o v i d e s   a n   e r r o r ) . 
     i f   ( r e c o v e r a b l e E r r o r   ! = =   n u l l )   { 
         q u e u e H y d r a t i o n E r r o r ( r e c o v e r a b l e E r r o r ) ; 
     }   / /   T h i s   w i l l   a d d   t h e   o l d   f i b e r   t o   t h e   d e l e t i o n   l i s t 
 
 
     r e c o n c i l e C h i l d F i b e r s ( w o r k I n P r o g r e s s ,   c u r r e n t . c h i l d ,   n u l l ,   r e n d e r L a n e s ) ;   / /   W e ' r e   n o w   n o t   s u s p e n d e d   n o r   d e h y d r a t e d . 
 
     v a r   n e x t P r o p s   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
     v a r   p r i m a r y C h i l d r e n   =   n e x t P r o p s . c h i l d r e n ; 
     v a r   p r i m a r y C h i l d F r a g m e n t   =   m o u n t S u s p e n s e P r i m a r y C h i l d r e n ( w o r k I n P r o g r e s s ,   p r i m a r y C h i l d r e n ) ;   / /   N e e d s   a   p l a c e m e n t   e f f e c t   b e c a u s e   t h e   p a r e n t   ( t h e   S u s p e n s e   b o u n d a r y )   a l r e a d y 
     / /   m o u n t e d   b u t   t h i s   i s   a   n e w   f i b e r . 
 
     p r i m a r y C h i l d F r a g m e n t . f l a g s   | =   P l a c e m e n t ; 
     w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   n u l l ; 
     r e t u r n   p r i m a r y C h i l d F r a g m e n t ; 
 } 
 
 f u n c t i o n   m o u n t S u s p e n s e F a l l b a c k A f t e r R e t r y W i t h o u t H y d r a t i n g ( c u r r e n t ,   w o r k I n P r o g r e s s ,   p r i m a r y C h i l d r e n ,   f a l l b a c k C h i l d r e n ,   r e n d e r L a n e s )   { 
     v a r   f i b e r M o d e   =   w o r k I n P r o g r e s s . m o d e ; 
     v a r   p r i m a r y C h i l d P r o p s   =   { 
         m o d e :   ' v i s i b l e ' , 
         c h i l d r e n :   p r i m a r y C h i l d r e n 
     } ; 
     v a r   p r i m a r y C h i l d F r a g m e n t   =   m o u n t W o r k I n P r o g r e s s O f f s c r e e n F i b e r ( p r i m a r y C h i l d P r o p s ,   f i b e r M o d e ) ; 
     v a r   f a l l b a c k C h i l d F r a g m e n t   =   c r e a t e F i b e r F r o m F r a g m e n t ( f a l l b a c k C h i l d r e n ,   f i b e r M o d e ,   r e n d e r L a n e s ,   n u l l ) ;   / /   N e e d s   a   p l a c e m e n t   e f f e c t   b e c a u s e   t h e   p a r e n t   ( t h e   S u s p e n s e 
     / /   b o u n d a r y )   a l r e a d y   m o u n t e d   b u t   t h i s   i s   a   n e w   f i b e r . 
 
     f a l l b a c k C h i l d F r a g m e n t . f l a g s   | =   P l a c e m e n t ; 
     p r i m a r y C h i l d F r a g m e n t . r e t u r n   =   w o r k I n P r o g r e s s ; 
     f a l l b a c k C h i l d F r a g m e n t . r e t u r n   =   w o r k I n P r o g r e s s ; 
     p r i m a r y C h i l d F r a g m e n t . s i b l i n g   =   f a l l b a c k C h i l d F r a g m e n t ; 
     w o r k I n P r o g r e s s . c h i l d   =   p r i m a r y C h i l d F r a g m e n t ; 
 
     i f   ( ( w o r k I n P r o g r e s s . m o d e   &   C o n c u r r e n t M o d e )   ! = =   N o M o d e )   { 
         / /   W e   w i l l   h a v e   d r o p p e d   t h e   e f f e c t   l i s t   w h i c h   c o n t a i n s   t h e 
         / /   d e l e t i o n .   W e   n e e d   t o   r e c o n c i l e   t o   d e l e t e   t h e   c u r r e n t   c h i l d . 
         r e c o n c i l e C h i l d F i b e r s ( w o r k I n P r o g r e s s ,   c u r r e n t . c h i l d ,   n u l l ,   r e n d e r L a n e s ) ; 
     } 
 
     r e t u r n   f a l l b a c k C h i l d F r a g m e n t ; 
 } 
 
 f u n c t i o n   m o u n t D e h y d r a t e d S u s p e n s e C o m p o n e n t ( w o r k I n P r o g r e s s ,   s u s p e n s e I n s t a n c e ,   r e n d e r L a n e s )   { 
     / /   D u r i n g   t h e   f i r s t   p a s s ,   w e ' l l   b a i l   o u t   a n d   n o t   d r i l l   i n t o   t h e   c h i l d r e n . 
     / /   I n s t e a d ,   w e ' l l   l e a v e   t h e   c o n t e n t   i n   p l a c e   a n d   t r y   t o   h y d r a t e   i t   l a t e r . 
     i f   ( ( w o r k I n P r o g r e s s . m o d e   &   C o n c u r r e n t M o d e )   = = =   N o M o d e )   { 
         { 
             e r r o r ( ' C a n n o t   h y d r a t e   S u s p e n s e   i n   l e g a c y   m o d e .   S w i t c h   f r o m   '   +   ' R e a c t D O M . h y d r a t e ( e l e m e n t ,   c o n t a i n e r )   t o   '   +   ' R e a c t D O M C l i e n t . h y d r a t e R o o t ( c o n t a i n e r ,   < A p p   / > ) '   +   ' . r e n d e r ( e l e m e n t )   o r   r e m o v e   t h e   S u s p e n s e   c o m p o n e n t s   f r o m   '   +   ' t h e   s e r v e r   r e n d e r e d   c o m p o n e n t s . ' ) ; 
         } 
 
         w o r k I n P r o g r e s s . l a n e s   =   l a n e T o L a n e s ( S y n c L a n e ) ; 
     }   e l s e   i f   ( i s S u s p e n s e I n s t a n c e F a l l b a c k ( s u s p e n s e I n s t a n c e ) )   { 
         / /   T h i s   i s   a   c l i e n t - o n l y   b o u n d a r y .   S i n c e   w e   w o n ' t   g e t   a n y   c o n t e n t   f r o m   t h e   s e r v e r 
         / /   f o r   t h i s ,   w e   n e e d   t o   s c h e d u l e   t h a t   a t   a   h i g h e r   p r i o r i t y   b a s e d   o n   w h e n   i t   w o u l d 
         / /   h a v e   t i m e d   o u t .   I n   t h e o r y   w e   c o u l d   r e n d e r   i t   i n   t h i s   p a s s   b u t   i t   w o u l d   h a v e   t h e 
         / /   w r o n g   p r i o r i t y   a s s o c i a t e d   w i t h   i t   a n d   w i l l   p r e v e n t   h y d r a t i o n   o f   p a r e n t   p a t h . 
         / /   I n s t e a d ,   w e ' l l   l e a v e   w o r k   l e f t   o n   i t   t o   r e n d e r   i t   i n   a   s e p a r a t e   c o m m i t . 
         / /   T O D O   T h i s   t i m e   s h o u l d   b e   t h e   t i m e   a t   w h i c h   t h e   s e r v e r   r e n d e r e d   r e s p o n s e   t h a t   i s 
         / /   a   p a r e n t   t o   t h i s   b o u n d a r y   w a s   d i s p l a y e d .   H o w e v e r ,   s i n c e   w e   c u r r e n t l y   d o n ' t   h a v e 
         / /   a   p r o t o c o l   t o   t r a n s f e r   t h a t   t i m e ,   w e ' l l   j u s t   e s t i m a t e   i t   b y   u s i n g   t h e   c u r r e n t 
         / /   t i m e .   T h i s   w i l l   m e a n   t h a t   S u s p e n s e   t i m e o u t s   a r e   s l i g h t l y   s h i f t e d   t o   l a t e r   t h a n 
         / /   t h e y   s h o u l d   b e . 
         / /   S c h e d u l e   a   n o r m a l   p r i   u p d a t e   t o   r e n d e r   t h i s   c o n t e n t . 
         w o r k I n P r o g r e s s . l a n e s   =   l a n e T o L a n e s ( D e f a u l t H y d r a t i o n L a n e ) ; 
     }   e l s e   { 
         / /   W e ' l l   c o n t i n u e   h y d r a t i n g   t h e   r e s t   a t   o f f s c r e e n   p r i o r i t y   s i n c e   w e ' l l   a l r e a d y 
         / /   b e   s h o w i n g   t h e   r i g h t   c o n t e n t   c o m i n g   f r o m   t h e   s e r v e r ,   i t   i s   n o   r u s h . 
         w o r k I n P r o g r e s s . l a n e s   =   l a n e T o L a n e s ( O f f s c r e e n L a n e ) ; 
     } 
 
     r e t u r n   n u l l ; 
 } 
 
 f u n c t i o n   u p d a t e D e h y d r a t e d S u s p e n s e C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   s u s p e n s e I n s t a n c e ,   s u s p e n s e S t a t e ,   r e n d e r L a n e s )   { 
     / /   W e   s h o u l d   n e v e r   b e   h y d r a t i n g   a t   t h i s   p o i n t   b e c a u s e   i t   i s   t h e   f i r s t   p a s s , 
     / /   b u t   a f t e r   w e ' v e   a l r e a d y   c o m m i t t e d   o n c e . 
     w a r n I f H y d r a t i n g ( ) ; 
 
     i f   ( ( w o r k I n P r o g r e s s . m o d e   &   C o n c u r r e n t M o d e )   = = =   N o M o d e )   { 
         r e t u r n   r e t r y S u s p e n s e C o m p o n e n t W i t h o u t H y d r a t i n g ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ,   / /   T O D O :   W h e n   w e   d e l e t e   l e g a c y   m o d e ,   w e   s h o u l d   m a k e   t h i s   e r r o r   a r g u m e n t 
         / /   r e q u i r e d      e v e r y   c o n c u r r e n t   m o d e   p a t h   t h a t   c a u s e s   h y d r a t i o n   t o 
         / /   d e - o p t   t o   c l i e n t   r e n d e r i n g   s h o u l d   h a v e   a n   e r r o r   m e s s a g e . 
         n u l l ) ; 
     } 
 
     i f   ( i s S u s p e n s e I n s t a n c e F a l l b a c k ( s u s p e n s e I n s t a n c e ) )   { 
         / /   T h i s   b o u n d a r y   i s   i n   a   p e r m a n e n t   f a l l b a c k   s t a t e .   I n   t h i s   c a s e ,   w e ' l l   n e v e r 
         / /   g e t   a n   u p d a t e   a n d   w e ' l l   n e v e r   b e   a b l e   t o   h y d r a t e   t h e   f i n a l   c o n t e n t .   L e t ' s   j u s t   t r y   t h e 
         / /   c l i e n t   s i d e   r e n d e r   i n s t e a d . 
         r e t u r n   r e t r y S u s p e n s e C o m p o n e n t W i t h o u t H y d r a t i n g ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ,   / /   T O D O :   T h e   s e r v e r   s h o u l d   s e r i a l i z e   t h e   e r r o r   m e s s a g e   s o   w e   c a n   l o g   i t 
         / /   h e r e   o n   t h e   c l i e n t .   O r ,   i n   p r o d u c t i o n ,   a   h a s h / i d   t h a t   c o r r e s p o n d s   t o 
         / /   t h e   e r r o r . 
         n e w   E r r o r ( ' T h e   s e r v e r   c o u l d   n o t   f i n i s h   t h i s   S u s p e n s e   b o u n d a r y ,   l i k e l y   '   +   ' d u e   t o   a n   e r r o r   d u r i n g   s e r v e r   r e n d e r i n g .   S w i t c h e d   t o   '   +   ' c l i e n t   r e n d e r i n g . ' ) ) ; 
     } 
     / /   a n y   c o n t e x t   h a s   c h a n g e d ,   w e   n e e d   t o   t r e a t   i s   a s   i f   t h e   i n p u t   m i g h t   h a v e   c h a n g e d . 
 
 
     v a r   h a s C o n t e x t C h a n g e d   =   i n c l u d e s S o m e L a n e ( r e n d e r L a n e s ,   c u r r e n t . c h i l d L a n e s ) ; 
 
     i f   ( d i d R e c e i v e U p d a t e   | |   h a s C o n t e x t C h a n g e d )   { 
         / /   T h i s   b o u n d a r y   h a s   c h a n g e d   s i n c e   t h e   f i r s t   r e n d e r .   T h i s   m e a n s   t h a t   w e   a r e   n o w   u n a b l e   t o 
         / /   h y d r a t e   i t .   W e   m i g h t   s t i l l   b e   a b l e   t o   h y d r a t e   i t   u s i n g   a   h i g h e r   p r i o r i t y   l a n e . 
         v a r   r o o t   =   g e t W o r k I n P r o g r e s s R o o t ( ) ; 
 
         i f   ( r o o t   ! = =   n u l l )   { 
             v a r   a t t e m p t H y d r a t i o n A t L a n e   =   g e t B u m p e d L a n e F o r H y d r a t i o n ( r o o t ,   r e n d e r L a n e s ) ; 
 
             i f   ( a t t e m p t H y d r a t i o n A t L a n e   ! = =   N o L a n e   & &   a t t e m p t H y d r a t i o n A t L a n e   ! = =   s u s p e n s e S t a t e . r e t r y L a n e )   { 
                 / /   I n t e n t i o n a l l y   m u t a t i n g   s i n c e   t h i s   r e n d e r   w i l l   g e t   i n t e r r u p t e d .   T h i s 
                 / /   i s   o n e   o f   t h e   v e r y   r a r e   t i m e s   w h e r e   w e   m u t a t e   t h e   c u r r e n t   t r e e 
                 / /   d u r i n g   t h e   r e n d e r   p h a s e . 
                 s u s p e n s e S t a t e . r e t r y L a n e   =   a t t e m p t H y d r a t i o n A t L a n e ;   / /   T O D O :   I d e a l l y   t h i s   w o u l d   i n h e r i t   t h e   e v e n t   t i m e   o f   t h e   c u r r e n t   r e n d e r 
 
                 v a r   e v e n t T i m e   =   N o T i m e s t a m p ; 
                 s c h e d u l e U p d a t e O n F i b e r ( c u r r e n t ,   a t t e m p t H y d r a t i o n A t L a n e ,   e v e n t T i m e ) ; 
             } 
         }   / /   I f   w e   h a v e   s c h e d u l e d   h i g h e r   p r i   w o r k   a b o v e ,   t h i s   w i l l   p r o b a b l y   j u s t   a b o r t   t h e   r e n d e r 
         / /   s i n c e   w e   n o w   h a v e   h i g h e r   p r i o r i t y   w o r k ,   b u t   i n   c a s e   i t   d o e s n ' t ,   w e   n e e d   t o   p r e p a r e   t o 
         / /   r e n d e r   s o m e t h i n g ,   i f   w e   t i m e   o u t .   E v e n   i f   t h a t   r e q u i r e s   u s   t o   d e l e t e   e v e r y t h i n g   a n d 
         / /   s k i p   h y d r a t i o n . 
         / /   D e l a y   h a v i n g   t o   d o   t h i s   a s   l o n g   a s   t h e   s u s p e n s e   t i m e o u t   a l l o w s   u s . 
 
 
         r e n d e r D i d S u s p e n d D e l a y I f P o s s i b l e ( ) ; 
         r e t u r n   r e t r y S u s p e n s e C o m p o n e n t W i t h o u t H y d r a t i n g ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ,   n e w   E r r o r ( ' T h i s   S u s p e n s e   b o u n d a r y   r e c e i v e d   a n   u p d a t e   b e f o r e   i t   f i n i s h e d   '   +   ' h y d r a t i n g .   T h i s   c a u s e d   t h e   b o u n d a r y   t o   s w i t c h   t o   c l i e n t   r e n d e r i n g .   '   +   ' T h e   u s u a l   w a y   t o   f i x   t h i s   i s   t o   w r a p   t h e   o r i g i n a l   u p d a t e   '   +   ' i n   s t a r t T r a n s i t i o n . ' ) ) ; 
     }   e l s e   i f   ( i s S u s p e n s e I n s t a n c e P e n d i n g ( s u s p e n s e I n s t a n c e ) )   { 
         / /   T h i s   c o m p o n e n t   i s   s t i l l   p e n d i n g   m o r e   d a t a   f r o m   t h e   s e r v e r ,   s o   w e   c a n ' t   h y d r a t e   i t s 
         / /   c o n t e n t .   W e   t r e a t   i t   a s   i f   t h i s   c o m p o n e n t   s u s p e n d e d   i t s e l f .   I t   m i g h t   s e e m   a s   i f 
         / /   w e   c o u l d   j u s t   t r y   t o   r e n d e r   i t   c l i e n t - s i d e   i n s t e a d .   H o w e v e r ,   t h i s   w i l l   p e r f o r m   a 
         / /   l o t   o f   u n n e c e s s a r y   w o r k   a n d   i s   u n l i k e l y   t o   c o m p l e t e   s i n c e   i t   o f t e n   w i l l   s u s p e n d 
         / /   o n   m i s s i n g   d a t a   a n y w a y .   A d d i t i o n a l l y ,   t h e   s e r v e r   m i g h t   b e   a b l e   t o   r e n d e r   m o r e 
         / /   t h a n   w e   c a n   o n   t h e   c l i e n t   y e t .   I n   t h a t   c a s e   w e ' d   e n d   u p   w i t h   m o r e   f a l l b a c k   s t a t e s 
         / /   o n   t h e   c l i e n t   t h a n   i f   w e   j u s t   l e a v e   i t   a l o n e .   I f   t h e   s e r v e r   t i m e s   o u t   o r   e r r o r s 
         / /   t h e s e   s h o u l d   u p d a t e   t h i s   b o u n d a r y   t o   t h e   p e r m a n e n t   F a l l b a c k   s t a t e   i n s t e a d . 
         / /   M a r k   i t   a s   h a v i n g   c a p t u r e d   ( i . e .   s u s p e n d e d ) . 
         w o r k I n P r o g r e s s . f l a g s   | =   D i d C a p t u r e ;   / /   L e a v e   t h e   c h i l d   i n   p l a c e .   I . e .   t h e   d e h y d r a t e d   f r a g m e n t . 
 
         w o r k I n P r o g r e s s . c h i l d   =   c u r r e n t . c h i l d ;   / /   R e g i s t e r   a   c a l l b a c k   t o   r e t r y   t h i s   b o u n d a r y   o n c e   t h e   s e r v e r   h a s   s e n t   t h e   r e s u l t . 
 
         v a r   r e t r y   =   r e t r y D e h y d r a t e d S u s p e n s e B o u n d a r y . b i n d ( n u l l ,   c u r r e n t ) ; 
         r e g i s t e r S u s p e n s e I n s t a n c e R e t r y ( s u s p e n s e I n s t a n c e ,   r e t r y ) ; 
         r e t u r n   n u l l ; 
     }   e l s e   { 
         / /   T h i s   i s   t h e   f i r s t   a t t e m p t . 
         r e e n t e r H y d r a t i o n S t a t e F r o m D e h y d r a t e d S u s p e n s e I n s t a n c e ( w o r k I n P r o g r e s s ,   s u s p e n s e I n s t a n c e ,   s u s p e n s e S t a t e . t r e e C o n t e x t ) ; 
         v a r   n e x t P r o p s   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
         v a r   p r i m a r y C h i l d r e n   =   n e x t P r o p s . c h i l d r e n ; 
         v a r   p r i m a r y C h i l d F r a g m e n t   =   m o u n t S u s p e n s e P r i m a r y C h i l d r e n ( w o r k I n P r o g r e s s ,   p r i m a r y C h i l d r e n ) ;   / /   M a r k   t h e   c h i l d r e n   a s   h y d r a t i n g .   T h i s   i s   a   f a s t   p a t h   t o   k n o w   w h e t h e r   t h i s 
         / /   t r e e   i s   p a r t   o f   a   h y d r a t i n g   t r e e .   T h i s   i s   u s e d   t o   d e t e r m i n e   i f   a   c h i l d 
         / /   n o d e   h a s   f u l l y   m o u n t e d   y e t ,   a n d   f o r   s c h e d u l i n g   e v e n t   r e p l a y i n g . 
         / /   C o n c e p t u a l l y   t h i s   i s   s i m i l a r   t o   P l a c e m e n t   i n   t h a t   a   n e w   s u b t r e e   i s 
         / /   i n s e r t e d   i n t o   t h e   R e a c t   t r e e   h e r e .   I t   j u s t   h a p p e n s   t o   n o t   n e e d   D O M 
         / /   m u t a t i o n s   b e c a u s e   i t   a l r e a d y   e x i s t s . 
 
         p r i m a r y C h i l d F r a g m e n t . f l a g s   | =   H y d r a t i n g ; 
         r e t u r n   p r i m a r y C h i l d F r a g m e n t ; 
     } 
 } 
 
 f u n c t i o n   s c h e d u l e S u s p e n s e W o r k O n F i b e r ( f i b e r ,   r e n d e r L a n e s ,   p r o p a g a t i o n R o o t )   { 
     f i b e r . l a n e s   =   m e r g e L a n e s ( f i b e r . l a n e s ,   r e n d e r L a n e s ) ; 
     v a r   a l t e r n a t e   =   f i b e r . a l t e r n a t e ; 
 
     i f   ( a l t e r n a t e   ! = =   n u l l )   { 
         a l t e r n a t e . l a n e s   =   m e r g e L a n e s ( a l t e r n a t e . l a n e s ,   r e n d e r L a n e s ) ; 
     } 
 
     s c h e d u l e C o n t e x t W o r k O n P a r e n t P a t h ( f i b e r . r e t u r n ,   r e n d e r L a n e s ,   p r o p a g a t i o n R o o t ) ; 
 } 
 
 f u n c t i o n   p r o p a g a t e S u s p e n s e C o n t e x t C h a n g e ( w o r k I n P r o g r e s s ,   f i r s t C h i l d ,   r e n d e r L a n e s )   { 
     / /   M a r k   a n y   S u s p e n s e   b o u n d a r i e s   w i t h   f a l l b a c k s   a s   h a v i n g   w o r k   t o   d o . 
     / /   I f   t h e y   w e r e   p r e v i o u s l y   f o r c e d   i n t o   f a l l b a c k s ,   t h e y   m a y   n o w   b e   a b l e 
     / /   t o   u n b l o c k . 
     v a r   n o d e   =   f i r s t C h i l d ; 
 
     w h i l e   ( n o d e   ! = =   n u l l )   { 
         i f   ( n o d e . t a g   = = =   S u s p e n s e C o m p o n e n t )   { 
             v a r   s t a t e   =   n o d e . m e m o i z e d S t a t e ; 
 
             i f   ( s t a t e   ! = =   n u l l )   { 
                 s c h e d u l e S u s p e n s e W o r k O n F i b e r ( n o d e ,   r e n d e r L a n e s ,   w o r k I n P r o g r e s s ) ; 
             } 
         }   e l s e   i f   ( n o d e . t a g   = = =   S u s p e n s e L i s t C o m p o n e n t )   { 
             / /   I f   t h e   t a i l   i s   h i d d e n   t h e r e   m i g h t   n o t   b e   a n   S u s p e n s e   b o u n d a r i e s 
             / /   t o   s c h e d u l e   w o r k   o n .   I n   t h i s   c a s e   w e   h a v e   t o   s c h e d u l e   i t   o n   t h e 
             / /   l i s t   i t s e l f . 
             / /   W e   d o n ' t   h a v e   t o   t r a v e r s e   t o   t h e   c h i l d r e n   o f   t h e   l i s t   s i n c e 
             / /   t h e   l i s t   w i l l   p r o p a g a t e   t h e   c h a n g e   w h e n   i t   r e r e n d e r s . 
             s c h e d u l e S u s p e n s e W o r k O n F i b e r ( n o d e ,   r e n d e r L a n e s ,   w o r k I n P r o g r e s s ) ; 
         }   e l s e   i f   ( n o d e . c h i l d   ! = =   n u l l )   { 
             n o d e . c h i l d . r e t u r n   =   n o d e ; 
             n o d e   =   n o d e . c h i l d ; 
             c o n t i n u e ; 
         } 
 
         i f   ( n o d e   = = =   w o r k I n P r o g r e s s )   { 
             r e t u r n ; 
         } 
 
         w h i l e   ( n o d e . s i b l i n g   = = =   n u l l )   { 
             i f   ( n o d e . r e t u r n   = = =   n u l l   | |   n o d e . r e t u r n   = = =   w o r k I n P r o g r e s s )   { 
                 r e t u r n ; 
             } 
 
             n o d e   =   n o d e . r e t u r n ; 
         } 
 
         n o d e . s i b l i n g . r e t u r n   =   n o d e . r e t u r n ; 
         n o d e   =   n o d e . s i b l i n g ; 
     } 
 } 
 
 f u n c t i o n   f i n d L a s t C o n t e n t R o w ( f i r s t C h i l d )   { 
     / /   T h i s   i s   g o i n g   t o   f i n d   t h e   l a s t   r o w   a m o n g   t h e s e   c h i l d r e n   t h a t   i s   a l r e a d y 
     / /   s h o w i n g   c o n t e n t   o n   t h e   s c r e e n ,   a s   o p p o s e d   t o   b e i n g   i n   f a l l b a c k   s t a t e   o r 
     / /   n e w .   I f   a   r o w   h a s   m u l t i p l e   S u s p e n s e   b o u n d a r i e s ,   a n y   o f   t h e m   b e i n g   i n   t h e 
     / /   f a l l b a c k   s t a t e ,   c o u n t s   a s   t h e   w h o l e   r o w   b e i n g   i n   a   f a l l b a c k   s t a t e . 
     / /   N o t e   t h a t   t h e   " r o w s "   w i l l   b e   w o r k I n P r o g r e s s ,   b u t   a n y   n e s t e d   c h i l d r e n 
     / /   w i l l   s t i l l   b e   c u r r e n t   s i n c e   w e   h a v e n ' t   r e n d e r e d   t h e m   y e t .   T h e   m o u n t e d 
     / /   o r d e r   m a y   n o t   b e   t h e   s a m e   a s   t h e   n e w   o r d e r .   W e   u s e   t h e   n e w   o r d e r . 
     v a r   r o w   =   f i r s t C h i l d ; 
     v a r   l a s t C o n t e n t R o w   =   n u l l ; 
 
     w h i l e   ( r o w   ! = =   n u l l )   { 
         v a r   c u r r e n t R o w   =   r o w . a l t e r n a t e ;   / /   N e w   r o w s   c a n ' t   b e   c o n t e n t   r o w s . 
 
         i f   ( c u r r e n t R o w   ! = =   n u l l   & &   f i n d F i r s t S u s p e n d e d ( c u r r e n t R o w )   = = =   n u l l )   { 
             l a s t C o n t e n t R o w   =   r o w ; 
         } 
 
         r o w   =   r o w . s i b l i n g ; 
     } 
 
     r e t u r n   l a s t C o n t e n t R o w ; 
 } 
 
 f u n c t i o n   v a l i d a t e R e v e a l O r d e r ( r e v e a l O r d e r )   { 
     { 
         i f   ( r e v e a l O r d e r   ! = =   u n d e f i n e d   & &   r e v e a l O r d e r   ! = =   ' f o r w a r d s '   & &   r e v e a l O r d e r   ! = =   ' b a c k w a r d s '   & &   r e v e a l O r d e r   ! = =   ' t o g e t h e r '   & &   ! d i d W a r n A b o u t R e v e a l O r d e r [ r e v e a l O r d e r ] )   { 
             d i d W a r n A b o u t R e v e a l O r d e r [ r e v e a l O r d e r ]   =   t r u e ; 
 
             i f   ( t y p e o f   r e v e a l O r d e r   = = =   ' s t r i n g ' )   { 
                 s w i t c h   ( r e v e a l O r d e r . t o L o w e r C a s e ( ) )   { 
                     c a s e   ' t o g e t h e r ' : 
                     c a s e   ' f o r w a r d s ' : 
                     c a s e   ' b a c k w a r d s ' : 
                         { 
                             e r r o r ( ' " % s "   i s   n o t   a   v a l i d   v a l u e   f o r   r e v e a l O r d e r   o n   < S u s p e n s e L i s t   / > .   '   +   ' U s e   l o w e r c a s e   " % s "   i n s t e a d . ' ,   r e v e a l O r d e r ,   r e v e a l O r d e r . t o L o w e r C a s e ( ) ) ; 
 
                             b r e a k ; 
                         } 
 
                     c a s e   ' f o r w a r d ' : 
                     c a s e   ' b a c k w a r d ' : 
                         { 
                             e r r o r ( ' " % s "   i s   n o t   a   v a l i d   v a l u e   f o r   r e v e a l O r d e r   o n   < S u s p e n s e L i s t   / > .   '   +   ' R e a c t   u s e s   t h e   - s   s u f f i x   i n   t h e   s p e l l i n g .   U s e   " % s s "   i n s t e a d . ' ,   r e v e a l O r d e r ,   r e v e a l O r d e r . t o L o w e r C a s e ( ) ) ; 
 
                             b r e a k ; 
                         } 
 
                     d e f a u l t : 
                         e r r o r ( ' " % s "   i s   n o t   a   s u p p o r t e d   r e v e a l O r d e r   o n   < S u s p e n s e L i s t   / > .   '   +   ' D i d   y o u   m e a n   " t o g e t h e r " ,   " f o r w a r d s "   o r   " b a c k w a r d s " ? ' ,   r e v e a l O r d e r ) ; 
 
                         b r e a k ; 
                 } 
             }   e l s e   { 
                 e r r o r ( ' % s   i s   n o t   a   s u p p o r t e d   v a l u e   f o r   r e v e a l O r d e r   o n   < S u s p e n s e L i s t   / > .   '   +   ' D i d   y o u   m e a n   " t o g e t h e r " ,   " f o r w a r d s "   o r   " b a c k w a r d s " ? ' ,   r e v e a l O r d e r ) ; 
             } 
         } 
     } 
 } 
 
 f u n c t i o n   v a l i d a t e T a i l O p t i o n s ( t a i l M o d e ,   r e v e a l O r d e r )   { 
     { 
         i f   ( t a i l M o d e   ! = =   u n d e f i n e d   & &   ! d i d W a r n A b o u t T a i l O p t i o n s [ t a i l M o d e ] )   { 
             i f   ( t a i l M o d e   ! = =   ' c o l l a p s e d '   & &   t a i l M o d e   ! = =   ' h i d d e n ' )   { 
                 d i d W a r n A b o u t T a i l O p t i o n s [ t a i l M o d e ]   =   t r u e ; 
 
                 e r r o r ( ' " % s "   i s   n o t   a   s u p p o r t e d   v a l u e   f o r   t a i l   o n   < S u s p e n s e L i s t   / > .   '   +   ' D i d   y o u   m e a n   " c o l l a p s e d "   o r   " h i d d e n " ? ' ,   t a i l M o d e ) ; 
             }   e l s e   i f   ( r e v e a l O r d e r   ! = =   ' f o r w a r d s '   & &   r e v e a l O r d e r   ! = =   ' b a c k w a r d s ' )   { 
                 d i d W a r n A b o u t T a i l O p t i o n s [ t a i l M o d e ]   =   t r u e ; 
 
                 e r r o r ( ' < S u s p e n s e L i s t   t a i l = " % s "   / >   i s   o n l y   v a l i d   i f   r e v e a l O r d e r   i s   '   +   ' " f o r w a r d s "   o r   " b a c k w a r d s " .   '   +   ' D i d   y o u   m e a n   t o   s p e c i f y   r e v e a l O r d e r = " f o r w a r d s " ? ' ,   t a i l M o d e ) ; 
             } 
         } 
     } 
 } 
 
 f u n c t i o n   v a l i d a t e S u s p e n s e L i s t N e s t e d C h i l d ( c h i l d S l o t ,   i n d e x )   { 
     { 
         v a r   i s A n A r r a y   =   i s A r r a y ( c h i l d S l o t ) ; 
         v a r   i s I t e r a b l e   =   ! i s A n A r r a y   & &   t y p e o f   g e t I t e r a t o r F n ( c h i l d S l o t )   = = =   ' f u n c t i o n ' ; 
 
         i f   ( i s A n A r r a y   | |   i s I t e r a b l e )   { 
             v a r   t y p e   =   i s A n A r r a y   ?   ' a r r a y '   :   ' i t e r a b l e ' ; 
 
             e r r o r ( ' A   n e s t e d   % s   w a s   p a s s e d   t o   r o w   # % s   i n   < S u s p e n s e L i s t   / > .   W r a p   i t   i n   '   +   ' a n   a d d i t i o n a l   S u s p e n s e L i s t   t o   c o n f i g u r e   i t s   r e v e a l O r d e r :   '   +   ' < S u s p e n s e L i s t   r e v e a l O r d e r = . . . >   . . .   '   +   ' < S u s p e n s e L i s t   r e v e a l O r d e r = . . . > { % s } < / S u s p e n s e L i s t >   . . .   '   +   ' < / S u s p e n s e L i s t > ' ,   t y p e ,   i n d e x ,   t y p e ) ; 
 
             r e t u r n   f a l s e ; 
         } 
     } 
 
     r e t u r n   t r u e ; 
 } 
 
 f u n c t i o n   v a l i d a t e S u s p e n s e L i s t C h i l d r e n ( c h i l d r e n ,   r e v e a l O r d e r )   { 
     { 
         i f   ( ( r e v e a l O r d e r   = = =   ' f o r w a r d s '   | |   r e v e a l O r d e r   = = =   ' b a c k w a r d s ' )   & &   c h i l d r e n   ! = =   u n d e f i n e d   & &   c h i l d r e n   ! = =   n u l l   & &   c h i l d r e n   ! = =   f a l s e )   { 
             i f   ( i s A r r a y ( c h i l d r e n ) )   { 
                 f o r   ( v a r   i   =   0 ;   i   <   c h i l d r e n . l e n g t h ;   i + + )   { 
                     i f   ( ! v a l i d a t e S u s p e n s e L i s t N e s t e d C h i l d ( c h i l d r e n [ i ] ,   i ) )   { 
                         r e t u r n ; 
                     } 
                 } 
             }   e l s e   { 
                 v a r   i t e r a t o r F n   =   g e t I t e r a t o r F n ( c h i l d r e n ) ; 
 
                 i f   ( t y p e o f   i t e r a t o r F n   = = =   ' f u n c t i o n ' )   { 
                     v a r   c h i l d r e n I t e r a t o r   =   i t e r a t o r F n . c a l l ( c h i l d r e n ) ; 
 
                     i f   ( c h i l d r e n I t e r a t o r )   { 
                         v a r   s t e p   =   c h i l d r e n I t e r a t o r . n e x t ( ) ; 
                         v a r   _ i   =   0 ; 
 
                         f o r   ( ;   ! s t e p . d o n e ;   s t e p   =   c h i l d r e n I t e r a t o r . n e x t ( ) )   { 
                             i f   ( ! v a l i d a t e S u s p e n s e L i s t N e s t e d C h i l d ( s t e p . v a l u e ,   _ i ) )   { 
                                 r e t u r n ; 
                             } 
 
                             _ i + + ; 
                         } 
                     } 
                 }   e l s e   { 
                     e r r o r ( ' A   s i n g l e   r o w   w a s   p a s s e d   t o   a   < S u s p e n s e L i s t   r e v e a l O r d e r = " % s "   / > .   '   +   ' T h i s   i s   n o t   u s e f u l   s i n c e   i t   n e e d s   m u l t i p l e   r o w s .   '   +   ' D i d   y o u   m e a n   t o   p a s s   m u l t i p l e   c h i l d r e n   o r   a n   a r r a y ? ' ,   r e v e a l O r d e r ) ; 
                 } 
             } 
         } 
     } 
 } 
 
 f u n c t i o n   i n i t S u s p e n s e L i s t R e n d e r S t a t e ( w o r k I n P r o g r e s s ,   i s B a c k w a r d s ,   t a i l ,   l a s t C o n t e n t R o w ,   t a i l M o d e )   { 
     v a r   r e n d e r S t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
 
     i f   ( r e n d e r S t a t e   = = =   n u l l )   { 
         w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   { 
             i s B a c k w a r d s :   i s B a c k w a r d s , 
             r e n d e r i n g :   n u l l , 
             r e n d e r i n g S t a r t T i m e :   0 , 
             l a s t :   l a s t C o n t e n t R o w , 
             t a i l :   t a i l , 
             t a i l M o d e :   t a i l M o d e 
         } ; 
     }   e l s e   { 
         / /   W e   c a n   r e u s e   t h e   e x i s t i n g   o b j e c t   f r o m   p r e v i o u s   r e n d e r s . 
         r e n d e r S t a t e . i s B a c k w a r d s   =   i s B a c k w a r d s ; 
         r e n d e r S t a t e . r e n d e r i n g   =   n u l l ; 
         r e n d e r S t a t e . r e n d e r i n g S t a r t T i m e   =   0 ; 
         r e n d e r S t a t e . l a s t   =   l a s t C o n t e n t R o w ; 
         r e n d e r S t a t e . t a i l   =   t a i l ; 
         r e n d e r S t a t e . t a i l M o d e   =   t a i l M o d e ; 
     } 
 }   / /   T h i s   c a n   e n d   u p   r e n d e r i n g   t h i s   c o m p o n e n t   m u l t i p l e   p a s s e s . 
 / /   T h e   f i r s t   p a s s   s p l i t s   t h e   c h i l d r e n   f i b e r s   i n t o   t w o   s e t s .   A   h e a d   a n d   t a i l . 
 / /   W e   f i r s t   r e n d e r   t h e   h e a d .   I f   a n y t h i n g   i s   i n   f a l l b a c k   s t a t e ,   w e   d o   a n o t h e r 
 / /   p a s s   t h r o u g h   b e g i n W o r k   t o   r e r e n d e r   a l l   c h i l d r e n   ( i n c l u d i n g   t h e   t a i l )   w i t h 
 / /   t h e   f o r c e   s u s p e n d   c o n t e x t .   I f   t h e   f i r s t   r e n d e r   d i d n ' t   h a v e   a n y t h i n g   i n 
 / /   i n   f a l l b a c k   s t a t e .   T h e n   w e   r e n d e r   e a c h   r o w   i n   t h e   t a i l   o n e - b y - o n e . 
 / /   T h a t   h a p p e n s   i n   t h e   c o m p l e t e W o r k   p h a s e   w i t h o u t   g o i n g   b a c k   t o   b e g i n W o r k . 
 
 
 f u n c t i o n   u p d a t e S u s p e n s e L i s t C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     v a r   n e x t P r o p s   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
     v a r   r e v e a l O r d e r   =   n e x t P r o p s . r e v e a l O r d e r ; 
     v a r   t a i l M o d e   =   n e x t P r o p s . t a i l ; 
     v a r   n e w C h i l d r e n   =   n e x t P r o p s . c h i l d r e n ; 
     v a l i d a t e R e v e a l O r d e r ( r e v e a l O r d e r ) ; 
     v a l i d a t e T a i l O p t i o n s ( t a i l M o d e ,   r e v e a l O r d e r ) ; 
     v a l i d a t e S u s p e n s e L i s t C h i l d r e n ( n e w C h i l d r e n ,   r e v e a l O r d e r ) ; 
     r e c o n c i l e C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e w C h i l d r e n ,   r e n d e r L a n e s ) ; 
     v a r   s u s p e n s e C o n t e x t   =   s u s p e n s e S t a c k C u r s o r . c u r r e n t ; 
     v a r   s h o u l d F o r c e F a l l b a c k   =   h a s S u s p e n s e C o n t e x t ( s u s p e n s e C o n t e x t ,   F o r c e S u s p e n s e F a l l b a c k ) ; 
 
     i f   ( s h o u l d F o r c e F a l l b a c k )   { 
         s u s p e n s e C o n t e x t   =   s e t S h a l l o w S u s p e n s e C o n t e x t ( s u s p e n s e C o n t e x t ,   F o r c e S u s p e n s e F a l l b a c k ) ; 
         w o r k I n P r o g r e s s . f l a g s   | =   D i d C a p t u r e ; 
     }   e l s e   { 
         v a r   d i d S u s p e n d B e f o r e   =   c u r r e n t   ! = =   n u l l   & &   ( c u r r e n t . f l a g s   &   D i d C a p t u r e )   ! = =   N o F l a g s ; 
 
         i f   ( d i d S u s p e n d B e f o r e )   { 
             / /   I f   w e   p r e v i o u s l y   f o r c e d   a   f a l l b a c k ,   w e   n e e d   t o   s c h e d u l e   w o r k 
             / /   o n   a n y   n e s t e d   b o u n d a r i e s   t o   l e t   t h e m   k n o w   t o   t r y   t o   r e n d e r 
             / /   a g a i n .   T h i s   i s   t h e   s a m e   a s   c o n t e x t   u p d a t i n g . 
             p r o p a g a t e S u s p e n s e C o n t e x t C h a n g e ( w o r k I n P r o g r e s s ,   w o r k I n P r o g r e s s . c h i l d ,   r e n d e r L a n e s ) ; 
         } 
 
         s u s p e n s e C o n t e x t   =   s e t D e f a u l t S h a l l o w S u s p e n s e C o n t e x t ( s u s p e n s e C o n t e x t ) ; 
     } 
 
     p u s h S u s p e n s e C o n t e x t ( w o r k I n P r o g r e s s ,   s u s p e n s e C o n t e x t ) ; 
 
     i f   ( ( w o r k I n P r o g r e s s . m o d e   &   C o n c u r r e n t M o d e )   = = =   N o M o d e )   { 
         / /   I n   l e g a c y   m o d e ,   S u s p e n s e L i s t   d o e s n ' t   w o r k   s o   w e   j u s t 
         / /   u s e   m a k e   i t   a   n o o p   b y   t r e a t i n g   i t   a s   t h e   d e f a u l t   r e v e a l O r d e r . 
         w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   n u l l ; 
     }   e l s e   { 
         s w i t c h   ( r e v e a l O r d e r )   { 
             c a s e   ' f o r w a r d s ' : 
                 { 
                     v a r   l a s t C o n t e n t R o w   =   f i n d L a s t C o n t e n t R o w ( w o r k I n P r o g r e s s . c h i l d ) ; 
                     v a r   t a i l ; 
 
                     i f   ( l a s t C o n t e n t R o w   = = =   n u l l )   { 
                         / /   T h e   w h o l e   l i s t   i s   p a r t   o f   t h e   t a i l . 
                         / /   T O D O :   W e   c o u l d   f a s t   p a t h   b y   j u s t   r e n d e r i n g   t h e   t a i l   n o w . 
                         t a i l   =   w o r k I n P r o g r e s s . c h i l d ; 
                         w o r k I n P r o g r e s s . c h i l d   =   n u l l ; 
                     }   e l s e   { 
                         / /   D i s c o n n e c t   t h e   t a i l   r o w s   a f t e r   t h e   c o n t e n t   r o w . 
                         / /   W e ' r e   g o i n g   t o   r e n d e r   t h e m   s e p a r a t e l y   l a t e r . 
                         t a i l   =   l a s t C o n t e n t R o w . s i b l i n g ; 
                         l a s t C o n t e n t R o w . s i b l i n g   =   n u l l ; 
                     } 
 
                     i n i t S u s p e n s e L i s t R e n d e r S t a t e ( w o r k I n P r o g r e s s ,   f a l s e ,   / /   i s B a c k w a r d s 
                     t a i l ,   l a s t C o n t e n t R o w ,   t a i l M o d e ) ; 
                     b r e a k ; 
                 } 
 
             c a s e   ' b a c k w a r d s ' : 
                 { 
                     / /   W e ' r e   g o i n g   t o   f i n d   t h e   f i r s t   r o w   t h a t   h a s   e x i s t i n g   c o n t e n t . 
                     / /   A t   t h e   s a m e   t i m e   w e ' r e   g o i n g   t o   r e v e r s e   t h e   l i s t   o f   e v e r y t h i n g 
                     / /   w e   p a s s   i n   t h e   m e a n t i m e .   T h a t ' s   g o i n g   t o   b e   o u r   t a i l   i n   r e v e r s e 
                     / /   o r d e r . 
                     v a r   _ t a i l   =   n u l l ; 
                     v a r   r o w   =   w o r k I n P r o g r e s s . c h i l d ; 
                     w o r k I n P r o g r e s s . c h i l d   =   n u l l ; 
 
                     w h i l e   ( r o w   ! = =   n u l l )   { 
                         v a r   c u r r e n t R o w   =   r o w . a l t e r n a t e ;   / /   N e w   r o w s   c a n ' t   b e   c o n t e n t   r o w s . 
 
                         i f   ( c u r r e n t R o w   ! = =   n u l l   & &   f i n d F i r s t S u s p e n d e d ( c u r r e n t R o w )   = = =   n u l l )   { 
                             / /   T h i s   i s   t h e   b e g i n n i n g   o f   t h e   m a i n   c o n t e n t . 
                             w o r k I n P r o g r e s s . c h i l d   =   r o w ; 
                             b r e a k ; 
                         } 
 
                         v a r   n e x t R o w   =   r o w . s i b l i n g ; 
                         r o w . s i b l i n g   =   _ t a i l ; 
                         _ t a i l   =   r o w ; 
                         r o w   =   n e x t R o w ; 
                     }   / /   T O D O :   I f   w o r k I n P r o g r e s s . c h i l d   i s   n u l l ,   w e   c a n   c o n t i n u e   o n   t h e   t a i l   i m m e d i a t e l y . 
 
 
                     i n i t S u s p e n s e L i s t R e n d e r S t a t e ( w o r k I n P r o g r e s s ,   t r u e ,   / /   i s B a c k w a r d s 
                     _ t a i l ,   n u l l ,   / /   l a s t 
                     t a i l M o d e ) ; 
                     b r e a k ; 
                 } 
 
             c a s e   ' t o g e t h e r ' : 
                 { 
                     i n i t S u s p e n s e L i s t R e n d e r S t a t e ( w o r k I n P r o g r e s s ,   f a l s e ,   / /   i s B a c k w a r d s 
                     n u l l ,   / /   t a i l 
                     n u l l ,   / /   l a s t 
                     u n d e f i n e d ) ; 
                     b r e a k ; 
                 } 
 
             d e f a u l t : 
                 { 
                     / /   T h e   d e f a u l t   r e v e a l   o r d e r   i s   t h e   s a m e   a s   n o t   h a v i n g 
                     / /   a   b o u n d a r y . 
                     w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   n u l l ; 
                 } 
         } 
     } 
 
     r e t u r n   w o r k I n P r o g r e s s . c h i l d ; 
 } 
 
 f u n c t i o n   u p d a t e P o r t a l C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     p u s h H o s t C o n t a i n e r ( w o r k I n P r o g r e s s ,   w o r k I n P r o g r e s s . s t a t e N o d e . c o n t a i n e r I n f o ) ; 
     v a r   n e x t C h i l d r e n   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
 
     i f   ( c u r r e n t   = = =   n u l l )   { 
         / /   P o r t a l s   a r e   s p e c i a l   b e c a u s e   w e   d o n ' t   a p p e n d   t h e   c h i l d r e n   d u r i n g   m o u n t 
         / /   b u t   a t   c o m m i t .   T h e r e f o r e   w e   n e e d   t o   t r a c k   i n s e r t i o n s   w h i c h   t h e   n o r m a l 
         / /   f l o w   d o e s n ' t   d o   d u r i n g   m o u n t .   T h i s   d o e s n ' t   h a p p e n   a t   t h e   r o o t   b e c a u s e 
         / /   t h e   r o o t   a l w a y s   s t a r t s   w i t h   a   " c u r r e n t "   w i t h   a   n u l l   c h i l d . 
         / /   T O D O :   C o n s i d e r   u n i f y i n g   t h i s   w i t h   h o w   t h e   r o o t   w o r k s . 
         w o r k I n P r o g r e s s . c h i l d   =   r e c o n c i l e C h i l d F i b e r s ( w o r k I n P r o g r e s s ,   n u l l ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ) ; 
     }   e l s e   { 
         r e c o n c i l e C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e x t C h i l d r e n ,   r e n d e r L a n e s ) ; 
     } 
 
     r e t u r n   w o r k I n P r o g r e s s . c h i l d ; 
 } 
 
 v a r   h a s W a r n e d A b o u t U s i n g N o V a l u e P r o p O n C o n t e x t P r o v i d e r   =   f a l s e ; 
 
 f u n c t i o n   u p d a t e C o n t e x t P r o v i d e r ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     v a r   p r o v i d e r T y p e   =   w o r k I n P r o g r e s s . t y p e ; 
     v a r   c o n t e x t   =   p r o v i d e r T y p e . _ c o n t e x t ; 
     v a r   n e w P r o p s   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
     v a r   o l d P r o p s   =   w o r k I n P r o g r e s s . m e m o i z e d P r o p s ; 
     v a r   n e w V a l u e   =   n e w P r o p s . v a l u e ; 
 
     { 
         i f   ( ! ( ' v a l u e '   i n   n e w P r o p s ) )   { 
             i f   ( ! h a s W a r n e d A b o u t U s i n g N o V a l u e P r o p O n C o n t e x t P r o v i d e r )   { 
                 h a s W a r n e d A b o u t U s i n g N o V a l u e P r o p O n C o n t e x t P r o v i d e r   =   t r u e ; 
 
                 e r r o r ( ' T h e   ` v a l u e `   p r o p   i s   r e q u i r e d   f o r   t h e   ` < C o n t e x t . P r o v i d e r > ` .   D i d   y o u   m i s s p e l l   i t   o r   f o r g e t   t o   p a s s   i t ? ' ) ; 
             } 
         } 
 
         v a r   p r o v i d e r P r o p T y p e s   =   w o r k I n P r o g r e s s . t y p e . p r o p T y p e s ; 
 
         i f   ( p r o v i d e r P r o p T y p e s )   { 
             c h e c k P r o p T y p e s ( p r o v i d e r P r o p T y p e s ,   n e w P r o p s ,   ' p r o p ' ,   ' C o n t e x t . P r o v i d e r ' ) ; 
         } 
     } 
 
     p u s h P r o v i d e r ( w o r k I n P r o g r e s s ,   c o n t e x t ,   n e w V a l u e ) ; 
 
     { 
         i f   ( o l d P r o p s   ! = =   n u l l )   { 
             v a r   o l d V a l u e   =   o l d P r o p s . v a l u e ; 
 
             i f   ( o b j e c t I s ( o l d V a l u e ,   n e w V a l u e ) )   { 
                 / /   N o   c h a n g e .   B a i l o u t   e a r l y   i f   c h i l d r e n   a r e   t h e   s a m e . 
                 i f   ( o l d P r o p s . c h i l d r e n   = = =   n e w P r o p s . c h i l d r e n   & &   ! h a s C o n t e x t C h a n g e d ( ) )   { 
                     r e t u r n   b a i l o u t O n A l r e a d y F i n i s h e d W o r k ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
                 } 
             }   e l s e   { 
                 / /   T h e   c o n t e x t   v a l u e   c h a n g e d .   S e a r c h   f o r   m a t c h i n g   c o n s u m e r s   a n d   s c h e d u l e 
                 / /   t h e m   t o   u p d a t e . 
                 p r o p a g a t e C o n t e x t C h a n g e ( w o r k I n P r o g r e s s ,   c o n t e x t ,   r e n d e r L a n e s ) ; 
             } 
         } 
     } 
 
     v a r   n e w C h i l d r e n   =   n e w P r o p s . c h i l d r e n ; 
     r e c o n c i l e C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e w C h i l d r e n ,   r e n d e r L a n e s ) ; 
     r e t u r n   w o r k I n P r o g r e s s . c h i l d ; 
 } 
 
 v a r   h a s W a r n e d A b o u t U s i n g C o n t e x t A s C o n s u m e r   =   f a l s e ; 
 
 f u n c t i o n   u p d a t e C o n t e x t C o n s u m e r ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     v a r   c o n t e x t   =   w o r k I n P r o g r e s s . t y p e ;   / /   T h e   l o g i c   b e l o w   f o r   C o n t e x t   d i f f e r s   d e p e n d i n g   o n   P R O D   o r   D E V   m o d e .   I n 
     / /   D E V   m o d e ,   w e   c r e a t e   a   s e p a r a t e   o b j e c t   f o r   C o n t e x t . C o n s u m e r   t h a t   a c t s 
     / /   l i k e   a   p r o x y   t o   C o n t e x t .   T h i s   p r o x y   o b j e c t   a d d s   u n n e c e s s a r y   c o d e   i n   P R O D 
     / /   s o   w e   u s e   t h e   o l d   b e h a v i o u r   ( C o n t e x t . C o n s u m e r   r e f e r e n c e s   C o n t e x t )   t o 
     / /   r e d u c e   s i z e   a n d   o v e r h e a d .   T h e   s e p a r a t e   o b j e c t   r e f e r e n c e s   c o n t e x t   v i a 
     / /   a   p r o p e r t y   c a l l e d   " _ c o n t e x t " ,   w h i c h   a l s o   g i v e s   u s   t h e   a b i l i t y   t o   c h e c k 
     / /   i n   D E V   m o d e   i f   t h i s   p r o p e r t y   e x i s t s   o r   n o t   a n d   w a r n   i f   i t   d o e s   n o t . 
 
     { 
         i f   ( c o n t e x t . _ c o n t e x t   = = =   u n d e f i n e d )   { 
             / /   T h i s   m a y   b e   b e c a u s e   i t ' s   a   C o n t e x t   ( r a t h e r   t h a n   a   C o n s u m e r ) . 
             / /   O r   i t   m a y   b e   b e c a u s e   i t ' s   o l d e r   R e a c t   w h e r e   t h e y ' r e   t h e   s a m e   t h i n g . 
             / /   W e   o n l y   w a n t   t o   w a r n   i f   w e ' r e   s u r e   i t ' s   a   n e w   R e a c t . 
             i f   ( c o n t e x t   ! = =   c o n t e x t . C o n s u m e r )   { 
                 i f   ( ! h a s W a r n e d A b o u t U s i n g C o n t e x t A s C o n s u m e r )   { 
                     h a s W a r n e d A b o u t U s i n g C o n t e x t A s C o n s u m e r   =   t r u e ; 
 
                     e r r o r ( ' R e n d e r i n g   < C o n t e x t >   d i r e c t l y   i s   n o t   s u p p o r t e d   a n d   w i l l   b e   r e m o v e d   i n   '   +   ' a   f u t u r e   m a j o r   r e l e a s e .   D i d   y o u   m e a n   t o   r e n d e r   < C o n t e x t . C o n s u m e r >   i n s t e a d ? ' ) ; 
                 } 
             } 
         }   e l s e   { 
             c o n t e x t   =   c o n t e x t . _ c o n t e x t ; 
         } 
     } 
 
     v a r   n e w P r o p s   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
     v a r   r e n d e r   =   n e w P r o p s . c h i l d r e n ; 
 
     { 
         i f   ( t y p e o f   r e n d e r   ! = =   ' f u n c t i o n ' )   { 
             e r r o r ( ' A   c o n t e x t   c o n s u m e r   w a s   r e n d e r e d   w i t h   m u l t i p l e   c h i l d r e n ,   o r   a   c h i l d   '   +   " t h a t   i s n ' t   a   f u n c t i o n .   A   c o n t e x t   c o n s u m e r   e x p e c t s   a   s i n g l e   c h i l d   "   +   ' t h a t   i s   a   f u n c t i o n .   I f   y o u   d i d   p a s s   a   f u n c t i o n ,   m a k e   s u r e   t h e r e   '   +   ' i s   n o   t r a i l i n g   o r   l e a d i n g   w h i t e s p a c e   a r o u n d   i t . ' ) ; 
         } 
     } 
 
     p r e p a r e T o R e a d C o n t e x t ( w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
     v a r   n e w V a l u e   =   r e a d C o n t e x t ( c o n t e x t ) ; 
 
     { 
         m a r k C o m p o n e n t R e n d e r S t a r t e d ( w o r k I n P r o g r e s s ) ; 
     } 
 
     v a r   n e w C h i l d r e n ; 
 
     { 
         R e a c t C u r r e n t O w n e r $ 1 . c u r r e n t   =   w o r k I n P r o g r e s s ; 
         s e t I s R e n d e r i n g ( t r u e ) ; 
         n e w C h i l d r e n   =   r e n d e r ( n e w V a l u e ) ; 
         s e t I s R e n d e r i n g ( f a l s e ) ; 
     } 
 
     { 
         m a r k C o m p o n e n t R e n d e r S t o p p e d ( ) ; 
     }   / /   R e a c t   D e v T o o l s   r e a d s   t h i s   f l a g . 
 
 
     w o r k I n P r o g r e s s . f l a g s   | =   P e r f o r m e d W o r k ; 
     r e c o n c i l e C h i l d r e n ( c u r r e n t ,   w o r k I n P r o g r e s s ,   n e w C h i l d r e n ,   r e n d e r L a n e s ) ; 
     r e t u r n   w o r k I n P r o g r e s s . c h i l d ; 
 } 
 
 f u n c t i o n   m a r k W o r k I n P r o g r e s s R e c e i v e d U p d a t e ( )   { 
     d i d R e c e i v e U p d a t e   =   t r u e ; 
 } 
 
 f u n c t i o n   b a i l o u t O n A l r e a d y F i n i s h e d W o r k ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     i f   ( c u r r e n t   ! = =   n u l l )   { 
         / /   R e u s e   p r e v i o u s   d e p e n d e n c i e s 
         w o r k I n P r o g r e s s . d e p e n d e n c i e s   =   c u r r e n t . d e p e n d e n c i e s ; 
     } 
 
     { 
         / /   D o n ' t   u p d a t e   " b a s e "   r e n d e r   t i m e s   f o r   b a i l o u t s . 
         s t o p P r o f i l e r T i m e r I f R u n n i n g ( ) ; 
     } 
 
     m a r k S k i p p e d U p d a t e L a n e s ( w o r k I n P r o g r e s s . l a n e s ) ;   / /   C h e c k   i f   t h e   c h i l d r e n   h a v e   a n y   p e n d i n g   w o r k . 
 
     i f   ( ! i n c l u d e s S o m e L a n e ( r e n d e r L a n e s ,   w o r k I n P r o g r e s s . c h i l d L a n e s ) )   { 
         / /   T h e   c h i l d r e n   d o n ' t   h a v e   a n y   w o r k   e i t h e r .   W e   c a n   s k i p   t h e m . 
         / /   T O D O :   O n c e   w e   a d d   b a c k   r e s u m i n g ,   w e   s h o u l d   c h e c k   i f   t h e   c h i l d r e n   a r e 
         / /   a   w o r k - i n - p r o g r e s s   s e t .   I f   s o ,   w e   n e e d   t o   t r a n s f e r   t h e i r   e f f e c t s . 
         { 
             r e t u r n   n u l l ; 
         } 
     }   / /   T h i s   f i b e r   d o e s n ' t   h a v e   w o r k ,   b u t   i t s   s u b t r e e   d o e s .   C l o n e   t h e   c h i l d 
     / /   f i b e r s   a n d   c o n t i n u e . 
 
 
     c l o n e C h i l d F i b e r s ( c u r r e n t ,   w o r k I n P r o g r e s s ) ; 
     r e t u r n   w o r k I n P r o g r e s s . c h i l d ; 
 } 
 
 f u n c t i o n   r e m o u n t F i b e r ( c u r r e n t ,   o l d W o r k I n P r o g r e s s ,   n e w W o r k I n P r o g r e s s )   { 
     { 
         v a r   r e t u r n F i b e r   =   o l d W o r k I n P r o g r e s s . r e t u r n ; 
 
         i f   ( r e t u r n F i b e r   = = =   n u l l )   { 
             / /   e s l i n t - d i s a b l e - n e x t - l i n e   r e a c t - i n t e r n a l / p r o d - e r r o r - c o d e s 
             t h r o w   n e w   E r r o r ( ' C a n n o t   s w a p   t h e   r o o t   f i b e r . ' ) ; 
         }   / /   D i s c o n n e c t   f r o m   t h e   o l d   c u r r e n t . 
         / /   I t   w i l l   g e t   d e l e t e d . 
 
 
         c u r r e n t . a l t e r n a t e   =   n u l l ; 
         o l d W o r k I n P r o g r e s s . a l t e r n a t e   =   n u l l ;   / /   C o n n e c t   t o   t h e   n e w   t r e e . 
 
         n e w W o r k I n P r o g r e s s . i n d e x   =   o l d W o r k I n P r o g r e s s . i n d e x ; 
         n e w W o r k I n P r o g r e s s . s i b l i n g   =   o l d W o r k I n P r o g r e s s . s i b l i n g ; 
         n e w W o r k I n P r o g r e s s . r e t u r n   =   o l d W o r k I n P r o g r e s s . r e t u r n ; 
         n e w W o r k I n P r o g r e s s . r e f   =   o l d W o r k I n P r o g r e s s . r e f ;   / /   R e p l a c e   t h e   c h i l d / s i b l i n g   p o i n t e r s   a b o v e   i t . 
 
         i f   ( o l d W o r k I n P r o g r e s s   = = =   r e t u r n F i b e r . c h i l d )   { 
             r e t u r n F i b e r . c h i l d   =   n e w W o r k I n P r o g r e s s ; 
         }   e l s e   { 
             v a r   p r e v S i b l i n g   =   r e t u r n F i b e r . c h i l d ; 
 
             i f   ( p r e v S i b l i n g   = = =   n u l l )   { 
                 / /   e s l i n t - d i s a b l e - n e x t - l i n e   r e a c t - i n t e r n a l / p r o d - e r r o r - c o d e s 
                 t h r o w   n e w   E r r o r ( ' E x p e c t e d   p a r e n t   t o   h a v e   a   c h i l d . ' ) ; 
             } 
 
             w h i l e   ( p r e v S i b l i n g . s i b l i n g   ! = =   o l d W o r k I n P r o g r e s s )   { 
                 p r e v S i b l i n g   =   p r e v S i b l i n g . s i b l i n g ; 
 
                 i f   ( p r e v S i b l i n g   = = =   n u l l )   { 
                     / /   e s l i n t - d i s a b l e - n e x t - l i n e   r e a c t - i n t e r n a l / p r o d - e r r o r - c o d e s 
                     t h r o w   n e w   E r r o r ( ' E x p e c t e d   t o   f i n d   t h e   p r e v i o u s   s i b l i n g . ' ) ; 
                 } 
             } 
 
             p r e v S i b l i n g . s i b l i n g   =   n e w W o r k I n P r o g r e s s ; 
         }   / /   D e l e t e   t h e   o l d   f i b e r   a n d   p l a c e   t h e   n e w   o n e . 
         / /   S i n c e   t h e   o l d   f i b e r   i s   d i s c o n n e c t e d ,   w e   h a v e   t o   s c h e d u l e   i t   m a n u a l l y . 
 
 
         v a r   d e l e t i o n s   =   r e t u r n F i b e r . d e l e t i o n s ; 
 
         i f   ( d e l e t i o n s   = = =   n u l l )   { 
             r e t u r n F i b e r . d e l e t i o n s   =   [ c u r r e n t ] ; 
             r e t u r n F i b e r . f l a g s   | =   C h i l d D e l e t i o n ; 
         }   e l s e   { 
             d e l e t i o n s . p u s h ( c u r r e n t ) ; 
         } 
 
         n e w W o r k I n P r o g r e s s . f l a g s   | =   P l a c e m e n t ;   / /   R e s t a r t   w o r k   f r o m   t h e   n e w   f i b e r . 
 
         r e t u r n   n e w W o r k I n P r o g r e s s ; 
     } 
 } 
 
 f u n c t i o n   c h e c k S c h e d u l e d U p d a t e O r C o n t e x t ( c u r r e n t ,   r e n d e r L a n e s )   { 
     / /   B e f o r e   p e r f o r m i n g   a n   e a r l y   b a i l o u t ,   w e   m u s t   c h e c k   i f   t h e r e   a r e   p e n d i n g 
     / /   u p d a t e s   o r   c o n t e x t . 
     v a r   u p d a t e L a n e s   =   c u r r e n t . l a n e s ; 
 
     i f   ( i n c l u d e s S o m e L a n e ( u p d a t e L a n e s ,   r e n d e r L a n e s ) )   { 
         r e t u r n   t r u e ; 
     }   / /   N o   p e n d i n g   u p d a t e ,   b u t   b e c a u s e   c o n t e x t   i s   p r o p a g a t e d   l a z i l y ,   w e   n e e d 
 
     r e t u r n   f a l s e ; 
 } 
 
 f u n c t i o n   a t t e m p t E a r l y B a i l o u t I f N o S c h e d u l e d U p d a t e ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     / /   T h i s   f i b e r   d o e s   n o t   h a v e   a n y   p e n d i n g   w o r k .   B a i l o u t   w i t h o u t   e n t e r i n g 
     / /   t h e   b e g i n   p h a s e .   T h e r e ' s   s t i l l   s o m e   b o o k k e e p i n g   w e   t h a t   n e e d s   t o   b e   d o n e 
     / /   i n   t h i s   o p t i m i z e d   p a t h ,   m o s t l y   p u s h i n g   s t u f f   o n t o   t h e   s t a c k . 
     s w i t c h   ( w o r k I n P r o g r e s s . t a g )   { 
         c a s e   H o s t R o o t : 
             p u s h H o s t R o o t C o n t e x t ( w o r k I n P r o g r e s s ) ; 
             v a r   r o o t   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
 
             r e s e t H y d r a t i o n S t a t e ( ) ; 
             b r e a k ; 
 
         c a s e   H o s t C o m p o n e n t : 
             p u s h H o s t C o n t e x t ( w o r k I n P r o g r e s s ) ; 
             b r e a k ; 
 
         c a s e   C l a s s C o m p o n e n t : 
             { 
                 v a r   C o m p o n e n t   =   w o r k I n P r o g r e s s . t y p e ; 
 
                 i f   ( i s C o n t e x t P r o v i d e r ( C o m p o n e n t ) )   { 
                     p u s h C o n t e x t P r o v i d e r ( w o r k I n P r o g r e s s ) ; 
                 } 
 
                 b r e a k ; 
             } 
 
         c a s e   H o s t P o r t a l : 
             p u s h H o s t C o n t a i n e r ( w o r k I n P r o g r e s s ,   w o r k I n P r o g r e s s . s t a t e N o d e . c o n t a i n e r I n f o ) ; 
             b r e a k ; 
 
         c a s e   C o n t e x t P r o v i d e r : 
             { 
                 v a r   n e w V a l u e   =   w o r k I n P r o g r e s s . m e m o i z e d P r o p s . v a l u e ; 
                 v a r   c o n t e x t   =   w o r k I n P r o g r e s s . t y p e . _ c o n t e x t ; 
                 p u s h P r o v i d e r ( w o r k I n P r o g r e s s ,   c o n t e x t ,   n e w V a l u e ) ; 
                 b r e a k ; 
             } 
 
         c a s e   P r o f i l e r : 
             { 
                 / /   P r o f i l e r   s h o u l d   o n l y   c a l l   o n R e n d e r   w h e n   o n e   o f   i t s   d e s c e n d a n t s   a c t u a l l y   r e n d e r e d . 
                 v a r   h a s C h i l d W o r k   =   i n c l u d e s S o m e L a n e ( r e n d e r L a n e s ,   w o r k I n P r o g r e s s . c h i l d L a n e s ) ; 
 
                 i f   ( h a s C h i l d W o r k )   { 
                     w o r k I n P r o g r e s s . f l a g s   | =   U p d a t e ; 
                 } 
 
                 { 
                     / /   R e s e t   e f f e c t   d u r a t i o n s   f o r   t h e   n e x t   e v e n t u a l   e f f e c t   p h a s e . 
                     / /   T h e s e   a r e   r e s e t   d u r i n g   r e n d e r   t o   a l l o w   t h e   D e v T o o l s   c o m m i t   h o o k   a   c h a n c e   t o   r e a d   t h e m , 
                     v a r   s t a t e N o d e   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
                     s t a t e N o d e . e f f e c t D u r a t i o n   =   0 ; 
                     s t a t e N o d e . p a s s i v e E f f e c t D u r a t i o n   =   0 ; 
                 } 
             } 
 
             b r e a k ; 
 
         c a s e   S u s p e n s e C o m p o n e n t : 
             { 
                 v a r   s t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
 
                 i f   ( s t a t e   ! = =   n u l l )   { 
                     i f   ( s t a t e . d e h y d r a t e d   ! = =   n u l l )   { 
                         p u s h S u s p e n s e C o n t e x t ( w o r k I n P r o g r e s s ,   s e t D e f a u l t S h a l l o w S u s p e n s e C o n t e x t ( s u s p e n s e S t a c k C u r s o r . c u r r e n t ) ) ;   / /   W e   k n o w   t h a t   t h i s   c o m p o n e n t   w i l l   s u s p e n d   a g a i n   b e c a u s e   i f   i t   h a s 
                         / /   b e e n   u n s u s p e n d e d   i t   h a s   c o m m i t t e d   a s   a   r e s o l v e d   S u s p e n s e   c o m p o n e n t . 
                         / /   I f   i t   n e e d s   t o   b e   r e t r i e d ,   i t   s h o u l d   h a v e   w o r k   s c h e d u l e d   o n   i t . 
 
                         w o r k I n P r o g r e s s . f l a g s   | =   D i d C a p t u r e ;   / /   W e   s h o u l d   n e v e r   r e n d e r   t h e   c h i l d r e n   o f   a   d e h y d r a t e d   b o u n d a r y   u n t i l   w e 
                         / /   u p g r a d e   i t .   W e   r e t u r n   n u l l   i n s t e a d   o f   b a i l o u t O n A l r e a d y F i n i s h e d W o r k . 
 
                         r e t u r n   n u l l ; 
                     }   / /   I f   t h i s   b o u n d a r y   i s   c u r r e n t l y   t i m e d   o u t ,   w e   n e e d   t o   d e c i d e 
                     / /   w h e t h e r   t o   r e t r y   t h e   p r i m a r y   c h i l d r e n ,   o r   t o   s k i p   o v e r   i t   a n d 
                     / /   g o   s t r a i g h t   t o   t h e   f a l l b a c k .   C h e c k   t h e   p r i o r i t y   o f   t h e   p r i m a r y 
                     / /   c h i l d   f r a g m e n t . 
 
 
                     v a r   p r i m a r y C h i l d F r a g m e n t   =   w o r k I n P r o g r e s s . c h i l d ; 
                     v a r   p r i m a r y C h i l d L a n e s   =   p r i m a r y C h i l d F r a g m e n t . c h i l d L a n e s ; 
 
                     i f   ( i n c l u d e s S o m e L a n e ( r e n d e r L a n e s ,   p r i m a r y C h i l d L a n e s ) )   { 
                         / /   T h e   p r i m a r y   c h i l d r e n   h a v e   p e n d i n g   w o r k .   U s e   t h e   n o r m a l   p a t h 
                         / /   t o   a t t e m p t   t o   r e n d e r   t h e   p r i m a r y   c h i l d r e n   a g a i n . 
                         r e t u r n   u p d a t e S u s p e n s e C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
                     }   e l s e   { 
                         / /   T h e   p r i m a r y   c h i l d   f r a g m e n t   d o e s   n o t   h a v e   p e n d i n g   w o r k   m a r k e d 
                         / /   o n   i t 
                         p u s h S u s p e n s e C o n t e x t ( w o r k I n P r o g r e s s ,   s e t D e f a u l t S h a l l o w S u s p e n s e C o n t e x t ( s u s p e n s e S t a c k C u r s o r . c u r r e n t ) ) ;   / /   T h e   p r i m a r y   c h i l d r e n   d o   n o t   h a v e   p e n d i n g   w o r k   w i t h   s u f f i c i e n t 
                         / /   p r i o r i t y .   B a i l o u t . 
 
                         v a r   c h i l d   =   b a i l o u t O n A l r e a d y F i n i s h e d W o r k ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
 
                         i f   ( c h i l d   ! = =   n u l l )   { 
                             / /   T h e   f a l l b a c k   c h i l d r e n   h a v e   p e n d i n g   w o r k .   S k i p   o v e r   t h e 
                             / /   p r i m a r y   c h i l d r e n   a n d   w o r k   o n   t h e   f a l l b a c k . 
                             r e t u r n   c h i l d . s i b l i n g ; 
                         }   e l s e   { 
                             / /   N o t e :   W e   c a n   r e t u r n   ` n u l l `   h e r e   b e c a u s e   w e   a l r e a d y   c h e c k e d 
                             / /   w h e t h e r   t h e r e   w e r e   n e s t e d   c o n t e x t   c o n s u m e r s ,   v i a   t h e   c a l l   t o 
                             / /   ` b a i l o u t O n A l r e a d y F i n i s h e d W o r k `   a b o v e . 
                             r e t u r n   n u l l ; 
                         } 
                     } 
                 }   e l s e   { 
                     p u s h S u s p e n s e C o n t e x t ( w o r k I n P r o g r e s s ,   s e t D e f a u l t S h a l l o w S u s p e n s e C o n t e x t ( s u s p e n s e S t a c k C u r s o r . c u r r e n t ) ) ; 
                 } 
 
                 b r e a k ; 
             } 
 
         c a s e   S u s p e n s e L i s t C o m p o n e n t : 
             { 
                 v a r   d i d S u s p e n d B e f o r e   =   ( c u r r e n t . f l a g s   &   D i d C a p t u r e )   ! = =   N o F l a g s ; 
 
                 v a r   _ h a s C h i l d W o r k   =   i n c l u d e s S o m e L a n e ( r e n d e r L a n e s ,   w o r k I n P r o g r e s s . c h i l d L a n e s ) ; 
 
                 i f   ( d i d S u s p e n d B e f o r e )   { 
                     i f   ( _ h a s C h i l d W o r k )   { 
                         / /   I f   s o m e t h i n g   w a s   i n   f a l l b a c k   s t a t e   l a s t   t i m e ,   a n d   w e   h a v e   a l l   t h e 
                         / /   s a m e   c h i l d r e n   t h e n   w e ' r e   s t i l l   i n   p r o g r e s s i v e   l o a d i n g   s t a t e . 
                         / /   S o m e t h i n g   m i g h t   g e t   u n b l o c k e d   b y   s t a t e   u p d a t e s   o r   r e t r i e s   i n   t h e 
                         / /   t r e e   w h i c h   w i l l   a f f e c t   t h e   t a i l .   S o   w e   n e e d   t o   u s e   t h e   n o r m a l 
                         / /   p a t h   t o   c o m p u t e   t h e   c o r r e c t   t a i l . 
                         r e t u r n   u p d a t e S u s p e n s e L i s t C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
                     }   / /   I f   n o n e   o f   t h e   c h i l d r e n   h a d   a n y   w o r k ,   t h a t   m e a n s   t h a t   n o n e   o f 
                     / /   t h e m   g o t   r e t r i e d   s o   t h e y ' l l   s t i l l   b e   b l o c k e d   i n   t h e   s a m e   w a y 
                     / /   a s   b e f o r e .   W e   c a n   f a s t   b a i l   o u t . 
 
 
                     w o r k I n P r o g r e s s . f l a g s   | =   D i d C a p t u r e ; 
                 }   / /   I f   n o t h i n g   s u s p e n d e d   b e f o r e   a n d   w e ' r e   r e n d e r i n g   t h e   s a m e   c h i l d r e n , 
                 / /   t h e n   t h e   t a i l   d o e s n ' t   m a t t e r .   A n y t h i n g   n e w   t h a t   s u s p e n d s   w i l l   w o r k 
                 / /   i n   t h e   " t o g e t h e r "   m o d e ,   s o   w e   c a n   c o n t i n u e   f r o m   t h e   s t a t e   w e   h a d . 
 
 
                 v a r   r e n d e r S t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
 
                 i f   ( r e n d e r S t a t e   ! = =   n u l l )   { 
                     / /   R e s e t   t o   t h e   " t o g e t h e r "   m o d e   i n   c a s e   w e ' v e   s t a r t e d   a   d i f f e r e n t 
                     / /   u p d a t e   i n   t h e   p a s t   b u t   d i d n ' t   c o m p l e t e   i t . 
                     r e n d e r S t a t e . r e n d e r i n g   =   n u l l ; 
                     r e n d e r S t a t e . t a i l   =   n u l l ; 
                     r e n d e r S t a t e . l a s t E f f e c t   =   n u l l ; 
                 } 
 
                 p u s h S u s p e n s e C o n t e x t ( w o r k I n P r o g r e s s ,   s u s p e n s e S t a c k C u r s o r . c u r r e n t ) ; 
 
                 i f   ( _ h a s C h i l d W o r k )   { 
                     b r e a k ; 
                 }   e l s e   { 
                     / /   I f   n o n e   o f   t h e   c h i l d r e n   h a d   a n y   w o r k ,   t h a t   m e a n s   t h a t   n o n e   o f 
                     / /   t h e m   g o t   r e t r i e d   s o   t h e y ' l l   s t i l l   b e   b l o c k e d   i n   t h e   s a m e   w a y 
                     / /   a s   b e f o r e .   W e   c a n   f a s t   b a i l   o u t . 
                     r e t u r n   n u l l ; 
                 } 
             } 
 
         c a s e   O f f s c r e e n C o m p o n e n t : 
         c a s e   L e g a c y H i d d e n C o m p o n e n t : 
             { 
                 / /   N e e d   t o   c h e c k   i f   t h e   t r e e   s t i l l   n e e d s   t o   b e   d e f e r r e d .   T h i s   i s 
                 / /   a l m o s t   i d e n t i c a l   t o   t h e   l o g i c   u s e d   i n   t h e   n o r m a l   u p d a t e   p a t h , 
                 / /   s o   w e ' l l   j u s t   e n t e r   t h a t .   T h e   o n l y   d i f f e r e n c e   i s   w e ' l l   b a i l   o u t 
                 / /   a t   t h e   n e x t   l e v e l   i n s t e a d   o f   t h i s   o n e ,   b e c a u s e   t h e   c h i l d   p r o p s 
                 / /   h a v e   n o t   c h a n g e d .   W h i c h   i s   f i n e . 
                 / /   T O D O :   P r o b a b l y   s h o u l d   r e f a c t o r   ` b e g i n W o r k `   t o   s p l i t   t h e   b a i l o u t 
                 / /   p a t h   f r o m   t h e   n o r m a l   p a t h .   I ' m   t e m p t e d   t o   d o   a   l a b e l e d   b r e a k   h e r e 
                 / /   b u t   I   w o n ' t   : ) 
                 w o r k I n P r o g r e s s . l a n e s   =   N o L a n e s ; 
                 r e t u r n   u p d a t e O f f s c r e e n C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
             } 
     } 
 
     r e t u r n   b a i l o u t O n A l r e a d y F i n i s h e d W o r k ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
 } 
 
 f u n c t i o n   b e g i n W o r k ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     { 
         i f   ( w o r k I n P r o g r e s s . _ d e b u g N e e d s R e m o u n t   & &   c u r r e n t   ! = =   n u l l )   { 
             / /   T h i s   w i l l   r e s t a r t   t h e   b e g i n   p h a s e   w i t h   a   n e w   f i b e r . 
             r e t u r n   r e m o u n t F i b e r ( c u r r e n t ,   w o r k I n P r o g r e s s ,   c r e a t e F i b e r F r o m T y p e A n d P r o p s ( w o r k I n P r o g r e s s . t y p e ,   w o r k I n P r o g r e s s . k e y ,   w o r k I n P r o g r e s s . p e n d i n g P r o p s ,   w o r k I n P r o g r e s s . _ d e b u g O w n e r   | |   n u l l ,   w o r k I n P r o g r e s s . m o d e ,   w o r k I n P r o g r e s s . l a n e s ) ) ; 
         } 
     } 
 
     i f   ( c u r r e n t   ! = =   n u l l )   { 
         v a r   o l d P r o p s   =   c u r r e n t . m e m o i z e d P r o p s ; 
         v a r   n e w P r o p s   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
 
         i f   ( o l d P r o p s   ! = =   n e w P r o p s   | |   h a s C o n t e x t C h a n g e d ( )   | |   (   / /   F o r c e   a   r e - r e n d e r   i f   t h e   i m p l e m e n t a t i o n   c h a n g e d   d u e   t o   h o t   r e l o a d : 
           w o r k I n P r o g r e s s . t y p e   ! = =   c u r r e n t . t y p e   ) )   { 
             / /   I f   p r o p s   o r   c o n t e x t   c h a n g e d ,   m a r k   t h e   f i b e r   a s   h a v i n g   p e r f o r m e d   w o r k . 
             / /   T h i s   m a y   b e   u n s e t   i f   t h e   p r o p s   a r e   d e t e r m i n e d   t o   b e   e q u a l   l a t e r   ( m e m o ) . 
             d i d R e c e i v e U p d a t e   =   t r u e ; 
         }   e l s e   { 
             / /   N e i t h e r   p r o p s   n o r   l e g a c y   c o n t e x t   c h a n g e s .   C h e c k   i f   t h e r e ' s   a   p e n d i n g 
             / /   u p d a t e   o r   c o n t e x t   c h a n g e . 
             v a r   h a s S c h e d u l e d U p d a t e O r C o n t e x t   =   c h e c k S c h e d u l e d U p d a t e O r C o n t e x t ( c u r r e n t ,   r e n d e r L a n e s ) ; 
 
             i f   ( ! h a s S c h e d u l e d U p d a t e O r C o n t e x t   & &   / /   I f   t h i s   i s   t h e   s e c o n d   p a s s   o f   a n   e r r o r   o r   s u s p e n s e   b o u n d a r y ,   t h e r e 
             / /   m a y   n o t   b e   w o r k   s c h e d u l e d   o n   ` c u r r e n t ` ,   s o   w e   c h e c k   f o r   t h i s   f l a g . 
             ( w o r k I n P r o g r e s s . f l a g s   &   D i d C a p t u r e )   = = =   N o F l a g s )   { 
                 / /   N o   p e n d i n g   u p d a t e s   o r   c o n t e x t .   B a i l   o u t   n o w . 
                 d i d R e c e i v e U p d a t e   =   f a l s e ; 
                 r e t u r n   a t t e m p t E a r l y B a i l o u t I f N o S c h e d u l e d U p d a t e ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
             } 
 
             i f   ( ( c u r r e n t . f l a g s   &   F o r c e U p d a t e F o r L e g a c y S u s p e n s e )   ! = =   N o F l a g s )   { 
                 / /   T h i s   i s   a   s p e c i a l   c a s e   t h a t   o n l y   e x i s t s   f o r   l e g a c y   m o d e . 
                 / /   S e e   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / p u l l / 1 9 2 1 6 . 
                 d i d R e c e i v e U p d a t e   =   t r u e ; 
             }   e l s e   { 
                 / /   A n   u p d a t e   w a s   s c h e d u l e d   o n   t h i s   f i b e r ,   b u t   t h e r e   a r e   n o   n e w   p r o p s 
                 / /   n o r   l e g a c y   c o n t e x t .   S e t   t h i s   t o   f a l s e .   I f   a n   u p d a t e   q u e u e   o r   c o n t e x t 
                 / /   c o n s u m e r   p r o d u c e s   a   c h a n g e d   v a l u e ,   i t   w i l l   s e t   t h i s   t o   t r u e .   O t h e r w i s e , 
                 / /   t h e   c o m p o n e n t   w i l l   a s s u m e   t h e   c h i l d r e n   h a v e   n o t   c h a n g e d   a n d   b a i l   o u t . 
                 d i d R e c e i v e U p d a t e   =   f a l s e ; 
             } 
         } 
     }   e l s e   { 
         d i d R e c e i v e U p d a t e   =   f a l s e ; 
 
         i f   ( g e t I s H y d r a t i n g ( )   & &   i s F o r k e d C h i l d ( w o r k I n P r o g r e s s ) )   { 
             / /   C h e c k   i f   t h i s   c h i l d   b e l o n g s   t o   a   l i s t   o f   m u l i p l e   c h i l d r e n   i n 
             / /   i t s   p a r e n t . 
             / / 
             / /   I n   a   t r u e   m u l t i - t h r e a d e d   i m p l e m e n t a t i o n ,   w e   w o u l d   r e n d e r   c h i l d r e n   o n 
             / /   p a r a l l e l   t h r e a d s .   T h i s   w o u l d   r e p r e s e n t   t h e   b e g i n n i n g   o f   a   n e w   r e n d e r 
             / /   t h r e a d   f o r   t h i s   s u b t r e e . 
             / / 
             / /   W e   o n l y   u s e   t h i s   f o r   i d   g e n e r a t i o n   d u r i n g   h y d r a t i o n ,   w h i c h   i s   w h y   t h e 
             / /   l o g i c   i s   l o c a t e d   i n   t h i s   s p e c i a l   b r a n c h . 
             v a r   s l o t I n d e x   =   w o r k I n P r o g r e s s . i n d e x ; 
             v a r   n u m b e r O f F o r k s   =   g e t F o r k s A t L e v e l ( ) ; 
             p u s h T r e e I d ( w o r k I n P r o g r e s s ,   n u m b e r O f F o r k s ,   s l o t I n d e x ) ; 
         } 
     }   / /   B e f o r e   e n t e r i n g   t h e   b e g i n   p h a s e ,   c l e a r   p e n d i n g   u p d a t e   p r i o r i t y . 
     / /   T O D O :   T h i s   a s s u m e s   t h a t   w e ' r e   a b o u t   t o   e v a l u a t e   t h e   c o m p o n e n t   a n d   p r o c e s s 
     / /   t h e   u p d a t e   q u e u e .   H o w e v e r ,   t h e r e ' s   a n   e x c e p t i o n :   S i m p l e M e m o C o m p o n e n t 
     / /   s o m e t i m e s   b a i l s   o u t   l a t e r   i n   t h e   b e g i n   p h a s e .   T h i s   i n d i c a t e s   t h a t   w e   s h o u l d 
     / /   m o v e   t h i s   a s s i g n m e n t   o u t   o f   t h e   c o m m o n   p a t h   a n d   i n t o   e a c h   b r a n c h . 
 
 
     w o r k I n P r o g r e s s . l a n e s   =   N o L a n e s ; 
 
     s w i t c h   ( w o r k I n P r o g r e s s . t a g )   { 
         c a s e   I n d e t e r m i n a t e C o m p o n e n t : 
             { 
                 r e t u r n   m o u n t I n d e t e r m i n a t e C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   w o r k I n P r o g r e s s . t y p e ,   r e n d e r L a n e s ) ; 
             } 
 
         c a s e   L a z y C o m p o n e n t : 
             { 
                 v a r   e l e m e n t T y p e   =   w o r k I n P r o g r e s s . e l e m e n t T y p e ; 
                 r e t u r n   m o u n t L a z y C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   e l e m e n t T y p e ,   r e n d e r L a n e s ) ; 
             } 
 
         c a s e   F u n c t i o n C o m p o n e n t : 
             { 
                 v a r   C o m p o n e n t   =   w o r k I n P r o g r e s s . t y p e ; 
                 v a r   u n r e s o l v e d P r o p s   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
                 v a r   r e s o l v e d P r o p s   =   w o r k I n P r o g r e s s . e l e m e n t T y p e   = = =   C o m p o n e n t   ?   u n r e s o l v e d P r o p s   :   r e s o l v e D e f a u l t P r o p s ( C o m p o n e n t ,   u n r e s o l v e d P r o p s ) ; 
                 r e t u r n   u p d a t e F u n c t i o n C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   C o m p o n e n t ,   r e s o l v e d P r o p s ,   r e n d e r L a n e s ) ; 
             } 
 
         c a s e   C l a s s C o m p o n e n t : 
             { 
                 v a r   _ C o m p o n e n t   =   w o r k I n P r o g r e s s . t y p e ; 
                 v a r   _ u n r e s o l v e d P r o p s   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
 
                 v a r   _ r e s o l v e d P r o p s   =   w o r k I n P r o g r e s s . e l e m e n t T y p e   = = =   _ C o m p o n e n t   ?   _ u n r e s o l v e d P r o p s   :   r e s o l v e D e f a u l t P r o p s ( _ C o m p o n e n t ,   _ u n r e s o l v e d P r o p s ) ; 
 
                 r e t u r n   u p d a t e C l a s s C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   _ C o m p o n e n t ,   _ r e s o l v e d P r o p s ,   r e n d e r L a n e s ) ; 
             } 
 
         c a s e   H o s t R o o t : 
             r e t u r n   u p d a t e H o s t R o o t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
 
         c a s e   H o s t C o m p o n e n t : 
             r e t u r n   u p d a t e H o s t C o m p o n e n t $ 1 ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
 
         c a s e   H o s t T e x t : 
             r e t u r n   u p d a t e H o s t T e x t $ 1 ( c u r r e n t ,   w o r k I n P r o g r e s s ) ; 
 
         c a s e   S u s p e n s e C o m p o n e n t : 
             r e t u r n   u p d a t e S u s p e n s e C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
 
         c a s e   H o s t P o r t a l : 
             r e t u r n   u p d a t e P o r t a l C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
 
         c a s e   F o r w a r d R e f : 
             { 
                 v a r   t y p e   =   w o r k I n P r o g r e s s . t y p e ; 
                 v a r   _ u n r e s o l v e d P r o p s 2   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
 
                 v a r   _ r e s o l v e d P r o p s 2   =   w o r k I n P r o g r e s s . e l e m e n t T y p e   = = =   t y p e   ?   _ u n r e s o l v e d P r o p s 2   :   r e s o l v e D e f a u l t P r o p s ( t y p e ,   _ u n r e s o l v e d P r o p s 2 ) ; 
 
                 r e t u r n   u p d a t e F o r w a r d R e f ( c u r r e n t ,   w o r k I n P r o g r e s s ,   t y p e ,   _ r e s o l v e d P r o p s 2 ,   r e n d e r L a n e s ) ; 
             } 
 
         c a s e   F r a g m e n t : 
             r e t u r n   u p d a t e F r a g m e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
 
         c a s e   M o d e : 
             r e t u r n   u p d a t e M o d e ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
 
         c a s e   P r o f i l e r : 
             r e t u r n   u p d a t e P r o f i l e r ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
 
         c a s e   C o n t e x t P r o v i d e r : 
             r e t u r n   u p d a t e C o n t e x t P r o v i d e r ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
 
         c a s e   C o n t e x t C o n s u m e r : 
             r e t u r n   u p d a t e C o n t e x t C o n s u m e r ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
 
         c a s e   M e m o C o m p o n e n t : 
             { 
                 v a r   _ t y p e 2   =   w o r k I n P r o g r e s s . t y p e ; 
                 v a r   _ u n r e s o l v e d P r o p s 3   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ;   / /   R e s o l v e   o u t e r   p r o p s   f i r s t ,   t h e n   r e s o l v e   i n n e r   p r o p s . 
 
                 v a r   _ r e s o l v e d P r o p s 3   =   r e s o l v e D e f a u l t P r o p s ( _ t y p e 2 ,   _ u n r e s o l v e d P r o p s 3 ) ; 
 
                 { 
                     i f   ( w o r k I n P r o g r e s s . t y p e   ! = =   w o r k I n P r o g r e s s . e l e m e n t T y p e )   { 
                         v a r   o u t e r P r o p T y p e s   =   _ t y p e 2 . p r o p T y p e s ; 
 
                         i f   ( o u t e r P r o p T y p e s )   { 
                             c h e c k P r o p T y p e s ( o u t e r P r o p T y p e s ,   _ r e s o l v e d P r o p s 3 ,   / /   R e s o l v e d   f o r   o u t e r   o n l y 
                             ' p r o p ' ,   g e t C o m p o n e n t N a m e F r o m T y p e ( _ t y p e 2 ) ) ; 
                         } 
                     } 
                 } 
 
                 _ r e s o l v e d P r o p s 3   =   r e s o l v e D e f a u l t P r o p s ( _ t y p e 2 . t y p e ,   _ r e s o l v e d P r o p s 3 ) ; 
                 r e t u r n   u p d a t e M e m o C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   _ t y p e 2 ,   _ r e s o l v e d P r o p s 3 ,   r e n d e r L a n e s ) ; 
             } 
 
         c a s e   S i m p l e M e m o C o m p o n e n t : 
             { 
                 r e t u r n   u p d a t e S i m p l e M e m o C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   w o r k I n P r o g r e s s . t y p e ,   w o r k I n P r o g r e s s . p e n d i n g P r o p s ,   r e n d e r L a n e s ) ; 
             } 
 
         c a s e   I n c o m p l e t e C l a s s C o m p o n e n t : 
             { 
                 v a r   _ C o m p o n e n t 2   =   w o r k I n P r o g r e s s . t y p e ; 
                 v a r   _ u n r e s o l v e d P r o p s 4   =   w o r k I n P r o g r e s s . p e n d i n g P r o p s ; 
 
                 v a r   _ r e s o l v e d P r o p s 4   =   w o r k I n P r o g r e s s . e l e m e n t T y p e   = = =   _ C o m p o n e n t 2   ?   _ u n r e s o l v e d P r o p s 4   :   r e s o l v e D e f a u l t P r o p s ( _ C o m p o n e n t 2 ,   _ u n r e s o l v e d P r o p s 4 ) ; 
 
                 r e t u r n   m o u n t I n c o m p l e t e C l a s s C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   _ C o m p o n e n t 2 ,   _ r e s o l v e d P r o p s 4 ,   r e n d e r L a n e s ) ; 
             } 
 
         c a s e   S u s p e n s e L i s t C o m p o n e n t : 
             { 
                 r e t u r n   u p d a t e S u s p e n s e L i s t C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
             } 
 
         c a s e   S c o p e C o m p o n e n t : 
             { 
 
                 b r e a k ; 
             } 
 
         c a s e   O f f s c r e e n C o m p o n e n t : 
             { 
                 r e t u r n   u p d a t e O f f s c r e e n C o m p o n e n t ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s ) ; 
             } 
     } 
 
     t h r o w   n e w   E r r o r ( " U n k n o w n   u n i t   o f   w o r k   t a g   ( "   +   w o r k I n P r o g r e s s . t a g   +   " ) .   T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   i n   "   +   ' R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
 } 
 
 f u n c t i o n   u n w i n d W o r k ( c u r r e n t ,   w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     / /   N o t e :   T h i s   i n t e n t i o n a l l y   d o e s n ' t   c h e c k   i f   w e ' r e   h y d r a t i n g   b e c a u s e   c o m p a r i n g 
     / /   t o   t h e   c u r r e n t   t r e e   p r o v i d e r   f i b e r   i s   j u s t   a s   f a s t   a n d   l e s s   e r r o r - p r o n e . 
     / /   I d e a l l y   w e   w o u l d   h a v e   a   s p e c i a l   v e r s i o n   o f   t h e   w o r k   l o o p   o n l y 
     / /   f o r   h y d r a t i o n . 
     p o p T r e e C o n t e x t ( w o r k I n P r o g r e s s ) ; 
 
     s w i t c h   ( w o r k I n P r o g r e s s . t a g )   { 
         c a s e   C l a s s C o m p o n e n t : 
             { 
                 v a r   C o m p o n e n t   =   w o r k I n P r o g r e s s . t y p e ; 
 
                 i f   ( i s C o n t e x t P r o v i d e r ( C o m p o n e n t ) )   { 
                     p o p C o n t e x t ( w o r k I n P r o g r e s s ) ; 
                 } 
 
                 v a r   f l a g s   =   w o r k I n P r o g r e s s . f l a g s ; 
 
                 i f   ( f l a g s   &   S h o u l d C a p t u r e )   { 
                     w o r k I n P r o g r e s s . f l a g s   =   f l a g s   &   ~ S h o u l d C a p t u r e   |   D i d C a p t u r e ; 
 
                     i f   (   ( w o r k I n P r o g r e s s . m o d e   &   P r o f i l e M o d e )   ! = =   N o M o d e )   { 
                         t r a n s f e r A c t u a l D u r a t i o n ( w o r k I n P r o g r e s s ) ; 
                     } 
 
                     r e t u r n   w o r k I n P r o g r e s s ; 
                 } 
 
                 r e t u r n   n u l l ; 
             } 
 
         c a s e   H o s t R o o t : 
             { 
                 v a r   r o o t   =   w o r k I n P r o g r e s s . s t a t e N o d e ; 
                 p o p H o s t C o n t a i n e r ( w o r k I n P r o g r e s s ) ; 
                 p o p T o p L e v e l C o n t e x t O b j e c t ( w o r k I n P r o g r e s s ) ; 
                 r e s e t W o r k I n P r o g r e s s V e r s i o n s ( ) ; 
                 v a r   _ f l a g s   =   w o r k I n P r o g r e s s . f l a g s ; 
 
                 i f   ( ( _ f l a g s   &   S h o u l d C a p t u r e )   ! = =   N o F l a g s   & &   ( _ f l a g s   &   D i d C a p t u r e )   = = =   N o F l a g s )   { 
                     / /   T h e r e   w a s   a n   e r r o r   d u r i n g   r e n d e r   t h a t   w a s n ' t   c a p t u r e d   b y   a   s u s p e n s e 
                     / /   b o u n d a r y .   D o   a   s e c o n d   p a s s   o n   t h e   r o o t   t o   u n m o u n t   t h e   c h i l d r e n . 
                     w o r k I n P r o g r e s s . f l a g s   =   _ f l a g s   &   ~ S h o u l d C a p t u r e   |   D i d C a p t u r e ; 
                     r e t u r n   w o r k I n P r o g r e s s ; 
                 }   / /   W e   u n w o u n d   t o   t h e   r o o t   w i t h o u t   c o m p l e t i n g   i t .   E x i t . 
 
 
                 r e t u r n   n u l l ; 
             } 
 
         c a s e   H o s t C o m p o n e n t : 
             { 
                 / /   T O D O :   p o p H y d r a t i o n S t a t e 
                 p o p H o s t C o n t e x t ( w o r k I n P r o g r e s s ) ; 
                 r e t u r n   n u l l ; 
             } 
 
         c a s e   S u s p e n s e C o m p o n e n t : 
             { 
                 p o p S u s p e n s e C o n t e x t ( w o r k I n P r o g r e s s ) ; 
                 v a r   s u s p e n s e S t a t e   =   w o r k I n P r o g r e s s . m e m o i z e d S t a t e ; 
 
                 i f   ( s u s p e n s e S t a t e   ! = =   n u l l   & &   s u s p e n s e S t a t e . d e h y d r a t e d   ! = =   n u l l )   { 
                     i f   ( w o r k I n P r o g r e s s . a l t e r n a t e   = = =   n u l l )   { 
                         t h r o w   n e w   E r r o r ( ' T h r e w   i n   n e w l y   m o u n t e d   d e h y d r a t e d   c o m p o n e n t .   T h i s   i s   l i k e l y   a   b u g   i n   '   +   ' R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
                     } 
 
                     r e s e t H y d r a t i o n S t a t e ( ) ; 
                 } 
 
                 v a r   _ f l a g s 2   =   w o r k I n P r o g r e s s . f l a g s ; 
 
                 i f   ( _ f l a g s 2   &   S h o u l d C a p t u r e )   { 
                     w o r k I n P r o g r e s s . f l a g s   =   _ f l a g s 2   &   ~ S h o u l d C a p t u r e   |   D i d C a p t u r e ;   / /   C a p t u r e d   a   s u s p e n s e   e f f e c t .   R e - r e n d e r   t h e   b o u n d a r y . 
 
                     i f   (   ( w o r k I n P r o g r e s s . m o d e   &   P r o f i l e M o d e )   ! = =   N o M o d e )   { 
                         t r a n s f e r A c t u a l D u r a t i o n ( w o r k I n P r o g r e s s ) ; 
                     } 
 
                     r e t u r n   w o r k I n P r o g r e s s ; 
                 } 
 
                 r e t u r n   n u l l ; 
             } 
 
         c a s e   S u s p e n s e L i s t C o m p o n e n t : 
             { 
                 p o p S u s p e n s e C o n t e x t ( w o r k I n P r o g r e s s ) ;   / /   S u s p e n s e L i s t   d o e s n ' t   a c t u a l l y   c a t c h   a n y t h i n g .   I t   s h o u l d ' v e   b e e n 
                 / /   c a u g h t   b y   a   n e s t e d   b o u n d a r y .   I f   n o t ,   i t   s h o u l d   b u b b l e   t h r o u g h . 
 
                 r e t u r n   n u l l ; 
             } 
 
         c a s e   H o s t P o r t a l : 
             p o p H o s t C o n t a i n e r ( w o r k I n P r o g r e s s ) ; 
             r e t u r n   n u l l ; 
 
         c a s e   C o n t e x t P r o v i d e r : 
             v a r   c o n t e x t   =   w o r k I n P r o g r e s s . t y p e . _ c o n t e x t ; 
             p o p P r o v i d e r ( c o n t e x t ,   w o r k I n P r o g r e s s ) ; 
             r e t u r n   n u l l ; 
 
         c a s e   O f f s c r e e n C o m p o n e n t : 
         c a s e   L e g a c y H i d d e n C o m p o n e n t : 
             p o p R e n d e r L a n e s ( w o r k I n P r o g r e s s ) ; 
             r e t u r n   n u l l ; 
 
         c a s e   C a c h e C o m p o n e n t : 
 
             r e t u r n   n u l l ; 
 
         d e f a u l t : 
             r e t u r n   n u l l ; 
     } 
 } 
 
 f u n c t i o n   u n w i n d I n t e r r u p t e d W o r k ( c u r r e n t ,   i n t e r r u p t e d W o r k ,   r e n d e r L a n e s )   { 
     / /   N o t e :   T h i s   i n t e n t i o n a l l y   d o e s n ' t   c h e c k   i f   w e ' r e   h y d r a t i n g   b e c a u s e   c o m p a r i n g 
     / /   t o   t h e   c u r r e n t   t r e e   p r o v i d e r   f i b e r   i s   j u s t   a s   f a s t   a n d   l e s s   e r r o r - p r o n e . 
     / /   I d e a l l y   w e   w o u l d   h a v e   a   s p e c i a l   v e r s i o n   o f   t h e   w o r k   l o o p   o n l y 
     / /   f o r   h y d r a t i o n . 
     p o p T r e e C o n t e x t ( i n t e r r u p t e d W o r k ) ; 
 
     s w i t c h   ( i n t e r r u p t e d W o r k . t a g )   { 
         c a s e   C l a s s C o m p o n e n t : 
             { 
                 v a r   c h i l d C o n t e x t T y p e s   =   i n t e r r u p t e d W o r k . t y p e . c h i l d C o n t e x t T y p e s ; 
 
                 i f   ( c h i l d C o n t e x t T y p e s   ! = =   n u l l   & &   c h i l d C o n t e x t T y p e s   ! = =   u n d e f i n e d )   { 
                     p o p C o n t e x t ( i n t e r r u p t e d W o r k ) ; 
                 } 
 
                 b r e a k ; 
             } 
 
         c a s e   H o s t R o o t : 
             { 
                 v a r   r o o t   =   i n t e r r u p t e d W o r k . s t a t e N o d e ; 
                 p o p H o s t C o n t a i n e r ( i n t e r r u p t e d W o r k ) ; 
                 p o p T o p L e v e l C o n t e x t O b j e c t ( i n t e r r u p t e d W o r k ) ; 
                 r e s e t W o r k I n P r o g r e s s V e r s i o n s ( ) ; 
                 b r e a k ; 
             } 
 
         c a s e   H o s t C o m p o n e n t : 
             { 
                 p o p H o s t C o n t e x t ( i n t e r r u p t e d W o r k ) ; 
                 b r e a k ; 
             } 
 
         c a s e   H o s t P o r t a l : 
             p o p H o s t C o n t a i n e r ( i n t e r r u p t e d W o r k ) ; 
             b r e a k ; 
 
         c a s e   S u s p e n s e C o m p o n e n t : 
             p o p S u s p e n s e C o n t e x t ( i n t e r r u p t e d W o r k ) ; 
             b r e a k ; 
 
         c a s e   S u s p e n s e L i s t C o m p o n e n t : 
             p o p S u s p e n s e C o n t e x t ( i n t e r r u p t e d W o r k ) ; 
             b r e a k ; 
 
         c a s e   C o n t e x t P r o v i d e r : 
             v a r   c o n t e x t   =   i n t e r r u p t e d W o r k . t y p e . _ c o n t e x t ; 
             p o p P r o v i d e r ( c o n t e x t ,   i n t e r r u p t e d W o r k ) ; 
             b r e a k ; 
 
         c a s e   O f f s c r e e n C o m p o n e n t : 
         c a s e   L e g a c y H i d d e n C o m p o n e n t : 
             p o p R e n d e r L a n e s ( i n t e r r u p t e d W o r k ) ; 
             b r e a k ; 
     } 
 } 
 
 v a r   d i d W a r n A b o u t U n d e f i n e d S n a p s h o t B e f o r e U p d a t e   =   n u l l ; 
 
 { 
     d i d W a r n A b o u t U n d e f i n e d S n a p s h o t B e f o r e U p d a t e   =   n e w   S e t ( ) ; 
 }   / /   U s e d   d u r i n g   t h e   c o m m i t   p h a s e   t o   t r a c k   t h e   s t a t e   o f   t h e   O f f s c r e e n   c o m p o n e n t   s t a c k . 
 / /   A l l o w s   u s   t o   a v o i d   t r a v e r s i n g   t h e   r e t u r n   p a t h   t o   f i n d   t h e   n e a r e s t   O f f s c r e e n   a n c e s t o r . 
 / /   O n l y   u s e d   w h e n   e n a b l e S u s p e n s e L a y o u t E f f e c t S e m a n t i c s   i s   e n a b l e d . 
 
 
 v a r   o f f s c r e e n S u b t r e e I s H i d d e n   =   f a l s e ; 
 v a r   o f f s c r e e n S u b t r e e W a s H i d d e n   =   f a l s e ; 
 v a r   P o s s i b l y W e a k S e t   =   t y p e o f   W e a k S e t   = = =   ' f u n c t i o n '   ?   W e a k S e t   :   S e t ; 
 v a r   n e x t E f f e c t   =   n u l l ;   / /   U s e d   f o r   P r o f i l i n g   b u i l d s   t o   t r a c k   u p d a t e r s . 
 
 v a r   i n P r o g r e s s L a n e s   =   n u l l ; 
 v a r   i n P r o g r e s s R o o t   =   n u l l ; 
 f u n c t i o n   r e p o r t U n c a u g h t E r r o r I n D E V ( e r r o r )   { 
     / /   W r a p p i n g   e a c h   s m a l l   p a r t   o f   t h e   c o m m i t   p h a s e   i n t o   a   g u a r d e d 
     / /   c a l l b a c k   i s   a   b i t   t o o   s l o w   ( h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / p u l l / 2 1 6 6 6 ) . 
     / /   B u t   w e   r e l y   o n   i t   t o   s u r f a c e   e r r o r s   t o   D E V   t o o l s   l i k e   o v e r l a y s 
     / /   ( h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 2 1 7 1 2 ) . 
     / /   A s   a   c o m p r o m i s e ,   r e t h r o w   o n l y   c a u g h t   e r r o r s   i n   a   g u a r d . 
     { 
         i n v o k e G u a r d e d C a l l b a c k ( n u l l ,   f u n c t i o n   ( )   { 
             t h r o w   e r r o r ; 
         } ) ; 
         c l e a r C a u g h t E r r o r ( ) ; 
     } 
 } 
 
 v a r   c a l l C o m p o n e n t W i l l U n m o u n t W i t h T i m e r   =   f u n c t i o n   ( c u r r e n t ,   i n s t a n c e )   { 
     i n s t a n c e . p r o p s   =   c u r r e n t . m e m o i z e d P r o p s ; 
     i n s t a n c e . s t a t e   =   c u r r e n t . m e m o i z e d S t a t e ; 
 
     i f   (   c u r r e n t . m o d e   &   P r o f i l e M o d e )   { 
         t r y   { 
             s t a r t L a y o u t E f f e c t T i m e r ( ) ; 
             i n s t a n c e . c o m p o n e n t W i l l U n m o u n t ( ) ; 
         }   f i n a l l y   { 
             r e c o r d L a y o u t E f f e c t D u r a t i o n ( c u r r e n t ) ; 
         } 
     }   e l s e   { 
         i n s t a n c e . c o m p o n e n t W i l l U n m o u n t ( ) ; 
     } 
 } ;   / /   C a p t u r e   e r r o r s   s o   t h e y   d o n ' t   i n t e r r u p t   m o u n t i n g . 
 
 
 f u n c t i o n   s a f e l y C a l l C o m m i t H o o k L a y o u t E f f e c t L i s t M o u n t ( c u r r e n t ,   n e a r e s t M o u n t e d A n c e s t o r )   { 
     t r y   { 
         c o m m i t H o o k E f f e c t L i s t M o u n t ( L a y o u t ,   c u r r e n t ) ; 
     }   c a t c h   ( e r r o r )   { 
         c a p t u r e C o m m i t P h a s e E r r o r ( c u r r e n t ,   n e a r e s t M o u n t e d A n c e s t o r ,   e r r o r ) ; 
     } 
 }   / /   C a p t u r e   e r r o r s   s o   t h e y   d o n ' t   i n t e r r u p t   u n m o u n t i n g . 
 
 
 f u n c t i o n   s a f e l y C a l l C o m p o n e n t W i l l U n m o u n t ( c u r r e n t ,   n e a r e s t M o u n t e d A n c e s t o r ,   i n s t a n c e )   { 
     t r y   { 
         c a l l C o m p o n e n t W i l l U n m o u n t W i t h T i m e r ( c u r r e n t ,   i n s t a n c e ) ; 
     }   c a t c h   ( e r r o r )   { 
         c a p t u r e C o m m i t P h a s e E r r o r ( c u r r e n t ,   n e a r e s t M o u n t e d A n c e s t o r ,   e r r o r ) ; 
     } 
 }   / /   C a p t u r e   e r r o r s   s o   t h e y   d o n ' t   i n t e r r u p t   m o u n t i n g . 
 
 
 f u n c t i o n   s a f e l y C a l l C o m p o n e n t D i d M o u n t ( c u r r e n t ,   n e a r e s t M o u n t e d A n c e s t o r ,   i n s t a n c e )   { 
     t r y   { 
         i n s t a n c e . c o m p o n e n t D i d M o u n t ( ) ; 
     }   c a t c h   ( e r r o r )   { 
         c a p t u r e C o m m i t P h a s e E r r o r ( c u r r e n t ,   n e a r e s t M o u n t e d A n c e s t o r ,   e r r o r ) ; 
     } 
 }   / /   C a p t u r e   e r r o r s   s o   t h e y   d o n ' t   i n t e r r u p t   m o u n t i n g . 
 
 
 f u n c t i o n   s a f e l y A t t a c h R e f ( c u r r e n t ,   n e a r e s t M o u n t e d A n c e s t o r )   { 
     t r y   { 
         c o m m i t A t t a c h R e f ( c u r r e n t ) ; 
     }   c a t c h   ( e r r o r )   { 
         c a p t u r e C o m m i t P h a s e E r r o r ( c u r r e n t ,   n e a r e s t M o u n t e d A n c e s t o r ,   e r r o r ) ; 
     } 
 } 
 
 f u n c t i o n   s a f e l y D e t a c h R e f ( c u r r e n t ,   n e a r e s t M o u n t e d A n c e s t o r )   { 
     v a r   r e f   =   c u r r e n t . r e f ; 
 
     i f   ( r e f   ! = =   n u l l )   { 
         i f   ( t y p e o f   r e f   = = =   ' f u n c t i o n ' )   { 
             v a r   r e t V a l ; 
 
             t r y   { 
                 i f   ( e n a b l e P r o f i l e r T i m e r   & &   e n a b l e P r o f i l e r C o m m i t H o o k s   & &   c u r r e n t . m o d e   &   P r o f i l e M o d e )   { 
                     t r y   { 
                         s t a r t L a y o u t E f f e c t T i m e r ( ) ; 
                         r e t V a l   =   r e f ( n u l l ) ; 
                     }   f i n a l l y   { 
                         r e c o r d L a y o u t E f f e c t D u r a t i o n ( c u r r e n t ) ; 
                     } 
                 }   e l s e   { 
                     r e t V a l   =   r e f ( n u l l ) ; 
                 } 
             }   c a t c h   ( e r r o r )   { 
                 c a p t u r e C o m m i t P h a s e E r r o r ( c u r r e n t ,   n e a r e s t M o u n t e d A n c e s t o r ,   e r r o r ) ; 
             } 
 
             { 
                 i f   ( t y p e o f   r e t V a l   = = =   ' f u n c t i o n ' )   { 
                     e r r o r ( ' U n e x p e c t e d   r e t u r n   v a l u e   f r o m   a   c a l l b a c k   r e f   i n   % s .   '   +   ' A   c a l l b a c k   r e f   s h o u l d   n o t   r e t u r n   a   f u n c t i o n . ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( c u r r e n t ) ) ; 
                 } 
             } 
         }   e l s e   { 
             r e f . c u r r e n t   =   n u l l ; 
         } 
     } 
 } 
 
 f u n c t i o n   s a f e l y C a l l D e s t r o y ( c u r r e n t ,   n e a r e s t M o u n t e d A n c e s t o r ,   d e s t r o y )   { 
     t r y   { 
         d e s t r o y ( ) ; 
     }   c a t c h   ( e r r o r )   { 
         c a p t u r e C o m m i t P h a s e E r r o r ( c u r r e n t ,   n e a r e s t M o u n t e d A n c e s t o r ,   e r r o r ) ; 
     } 
 } 
 
 v a r   f o c u s e d I n s t a n c e H a n d l e   =   n u l l ; 
 v a r   s h o u l d F i r e A f t e r A c t i v e I n s t a n c e B l u r   =   f a l s e ; 
 f u n c t i o n   c o m m i t B e f o r e M u t a t i o n E f f e c t s ( r o o t ,   f i r s t C h i l d )   { 
     f o c u s e d I n s t a n c e H a n d l e   =   p r e p a r e F o r C o m m i t ( r o o t . c o n t a i n e r I n f o ) ; 
     n e x t E f f e c t   =   f i r s t C h i l d ; 
     c o m m i t B e f o r e M u t a t i o n E f f e c t s _ b e g i n ( ) ;   / /   W e   n o   l o n g e r   n e e d   t o   t r a c k   t h e   a c t i v e   i n s t a n c e   f i b e r 
 
     v a r   s h o u l d F i r e   =   s h o u l d F i r e A f t e r A c t i v e I n s t a n c e B l u r ; 
     s h o u l d F i r e A f t e r A c t i v e I n s t a n c e B l u r   =   f a l s e ; 
     f o c u s e d I n s t a n c e H a n d l e   =   n u l l ; 
     r e t u r n   s h o u l d F i r e ; 
 } 
 
 f u n c t i o n   c o m m i t B e f o r e M u t a t i o n E f f e c t s _ b e g i n ( )   { 
     w h i l e   ( n e x t E f f e c t   ! = =   n u l l )   { 
         v a r   f i b e r   =   n e x t E f f e c t ;   / /   T h i s   p h a s e   i s   o n l y   u s e d   f o r   b e f o r e A c t i v e I n s t a n c e B l u r . 
 
         v a r   c h i l d   =   f i b e r . c h i l d ; 
 
         i f   ( ( f i b e r . s u b t r e e F l a g s   &   B e f o r e M u t a t i o n M a s k )   ! = =   N o F l a g s   & &   c h i l d   ! = =   n u l l )   { 
             c h i l d . r e t u r n   =   f i b e r ; 
             n e x t E f f e c t   =   c h i l d ; 
         }   e l s e   { 
             c o m m i t B e f o r e M u t a t i o n E f f e c t s _ c o m p l e t e ( ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   c o m m i t B e f o r e M u t a t i o n E f f e c t s _ c o m p l e t e ( )   { 
     w h i l e   ( n e x t E f f e c t   ! = =   n u l l )   { 
         v a r   f i b e r   =   n e x t E f f e c t ; 
         s e t C u r r e n t F i b e r ( f i b e r ) ; 
 
         t r y   { 
             c o m m i t B e f o r e M u t a t i o n E f f e c t s O n F i b e r ( f i b e r ) ; 
         }   c a t c h   ( e r r o r )   { 
             c a p t u r e C o m m i t P h a s e E r r o r ( f i b e r ,   f i b e r . r e t u r n ,   e r r o r ) ; 
         } 
 
         r e s e t C u r r e n t F i b e r ( ) ; 
         v a r   s i b l i n g   =   f i b e r . s i b l i n g ; 
 
         i f   ( s i b l i n g   ! = =   n u l l )   { 
             s i b l i n g . r e t u r n   =   f i b e r . r e t u r n ; 
             n e x t E f f e c t   =   s i b l i n g ; 
             r e t u r n ; 
         } 
 
         n e x t E f f e c t   =   f i b e r . r e t u r n ; 
     } 
 } 
 
 f u n c t i o n   c o m m i t B e f o r e M u t a t i o n E f f e c t s O n F i b e r ( f i n i s h e d W o r k )   { 
     v a r   c u r r e n t   =   f i n i s h e d W o r k . a l t e r n a t e ; 
     v a r   f l a g s   =   f i n i s h e d W o r k . f l a g s ; 
 
     i f   ( ( f l a g s   &   S n a p s h o t )   ! = =   N o F l a g s )   { 
         s e t C u r r e n t F i b e r ( f i n i s h e d W o r k ) ; 
 
         s w i t c h   ( f i n i s h e d W o r k . t a g )   { 
             c a s e   F u n c t i o n C o m p o n e n t : 
             c a s e   F o r w a r d R e f : 
             c a s e   S i m p l e M e m o C o m p o n e n t : 
                 { 
                     b r e a k ; 
                 } 
 
             c a s e   C l a s s C o m p o n e n t : 
                 { 
                     i f   ( c u r r e n t   ! = =   n u l l )   { 
                         v a r   p r e v P r o p s   =   c u r r e n t . m e m o i z e d P r o p s ; 
                         v a r   p r e v S t a t e   =   c u r r e n t . m e m o i z e d S t a t e ; 
                         v a r   i n s t a n c e   =   f i n i s h e d W o r k . s t a t e N o d e ;   / /   W e   c o u l d   u p d a t e   i n s t a n c e   p r o p s   a n d   s t a t e   h e r e , 
                         / /   b u t   i n s t e a d   w e   r e l y   o n   t h e m   b e i n g   s e t   d u r i n g   l a s t   r e n d e r . 
                         / /   T O D O :   r e v i s i t   t h i s   w h e n   w e   i m p l e m e n t   r e s u m i n g . 
 
                         { 
                             i f   ( f i n i s h e d W o r k . t y p e   = = =   f i n i s h e d W o r k . e l e m e n t T y p e   & &   ! d i d W a r n A b o u t R e a s s i g n i n g P r o p s )   { 
                                 i f   ( i n s t a n c e . p r o p s   ! = =   f i n i s h e d W o r k . m e m o i z e d P r o p s )   { 
                                     e r r o r ( ' E x p e c t e d   % s   p r o p s   t o   m a t c h   m e m o i z e d   p r o p s   b e f o r e   '   +   ' g e t S n a p s h o t B e f o r e U p d a t e .   '   +   ' T h i s   m i g h t   e i t h e r   b e   b e c a u s e   o f   a   b u g   i n   R e a c t ,   o r   b e c a u s e   '   +   ' a   c o m p o n e n t   r e a s s i g n s   i t s   o w n   ` t h i s . p r o p s ` .   '   +   ' P l e a s e   f i l e   a n   i s s u e . ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i n i s h e d W o r k )   | |   ' i n s t a n c e ' ) ; 
                                 } 
 
                                 i f   ( i n s t a n c e . s t a t e   ! = =   f i n i s h e d W o r k . m e m o i z e d S t a t e )   { 
                                     e r r o r ( ' E x p e c t e d   % s   s t a t e   t o   m a t c h   m e m o i z e d   s t a t e   b e f o r e   '   +   ' g e t S n a p s h o t B e f o r e U p d a t e .   '   +   ' T h i s   m i g h t   e i t h e r   b e   b e c a u s e   o f   a   b u g   i n   R e a c t ,   o r   b e c a u s e   '   +   ' a   c o m p o n e n t   r e a s s i g n s   i t s   o w n   ` t h i s . s t a t e ` .   '   +   ' P l e a s e   f i l e   a n   i s s u e . ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i n i s h e d W o r k )   | |   ' i n s t a n c e ' ) ; 
                                 } 
                             } 
                         } 
 
                         v a r   s n a p s h o t   =   i n s t a n c e . g e t S n a p s h o t B e f o r e U p d a t e ( f i n i s h e d W o r k . e l e m e n t T y p e   = = =   f i n i s h e d W o r k . t y p e   ?   p r e v P r o p s   :   r e s o l v e D e f a u l t P r o p s ( f i n i s h e d W o r k . t y p e ,   p r e v P r o p s ) ,   p r e v S t a t e ) ; 
 
                         { 
                             v a r   d i d W a r n S e t   =   d i d W a r n A b o u t U n d e f i n e d S n a p s h o t B e f o r e U p d a t e ; 
 
                             i f   ( s n a p s h o t   = = =   u n d e f i n e d   & &   ! d i d W a r n S e t . h a s ( f i n i s h e d W o r k . t y p e ) )   { 
                                 d i d W a r n S e t . a d d ( f i n i s h e d W o r k . t y p e ) ; 
 
                                 e r r o r ( ' % s . g e t S n a p s h o t B e f o r e U p d a t e ( ) :   A   s n a p s h o t   v a l u e   ( o r   n u l l )   '   +   ' m u s t   b e   r e t u r n e d .   Y o u   h a v e   r e t u r n e d   u n d e f i n e d . ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i n i s h e d W o r k ) ) ; 
                             } 
                         } 
 
                         i n s t a n c e . _ _ r e a c t I n t e r n a l S n a p s h o t B e f o r e U p d a t e   =   s n a p s h o t ; 
                     } 
 
                     b r e a k ; 
                 } 
 
             c a s e   H o s t R o o t : 
                 { 
                     { 
                         v a r   r o o t   =   f i n i s h e d W o r k . s t a t e N o d e ; 
                         c l e a r C o n t a i n e r ( r o o t . c o n t a i n e r I n f o ) ; 
                     } 
 
                     b r e a k ; 
                 } 
 
             c a s e   H o s t C o m p o n e n t : 
             c a s e   H o s t T e x t : 
             c a s e   H o s t P o r t a l : 
             c a s e   I n c o m p l e t e C l a s s C o m p o n e n t : 
                 / /   N o t h i n g   t o   d o   f o r   t h e s e   c o m p o n e n t   t y p e s 
                 b r e a k ; 
 
             d e f a u l t : 
                 { 
                     t h r o w   n e w   E r r o r ( ' T h i s   u n i t   o f   w o r k   t a g   s h o u l d   n o t   h a v e   s i d e - e f f e c t s .   T h i s   e r r o r   i s   '   +   ' l i k e l y   c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
                 } 
         } 
 
         r e s e t C u r r e n t F i b e r ( ) ; 
     } 
 } 
 
 f u n c t i o n   c o m m i t H o o k E f f e c t L i s t U n m o u n t ( f l a g s ,   f i n i s h e d W o r k ,   n e a r e s t M o u n t e d A n c e s t o r )   { 
     v a r   u p d a t e Q u e u e   =   f i n i s h e d W o r k . u p d a t e Q u e u e ; 
     v a r   l a s t E f f e c t   =   u p d a t e Q u e u e   ! = =   n u l l   ?   u p d a t e Q u e u e . l a s t E f f e c t   :   n u l l ; 
 
     i f   ( l a s t E f f e c t   ! = =   n u l l )   { 
         v a r   f i r s t E f f e c t   =   l a s t E f f e c t . n e x t ; 
         v a r   e f f e c t   =   f i r s t E f f e c t ; 
 
         d o   { 
             i f   ( ( e f f e c t . t a g   &   f l a g s )   = = =   f l a g s )   { 
                 / /   U n m o u n t 
                 v a r   d e s t r o y   =   e f f e c t . d e s t r o y ; 
                 e f f e c t . d e s t r o y   =   u n d e f i n e d ; 
 
                 i f   ( d e s t r o y   ! = =   u n d e f i n e d )   { 
                     { 
                         i f   ( ( f l a g s   &   P a s s i v e $ 1 )   ! = =   N o F l a g s $ 1 )   { 
                             m a r k C o m p o n e n t P a s s i v e E f f e c t U n m o u n t S t a r t e d ( f i n i s h e d W o r k ) ; 
                         }   e l s e   i f   ( ( f l a g s   &   L a y o u t )   ! = =   N o F l a g s $ 1 )   { 
                             m a r k C o m p o n e n t L a y o u t E f f e c t U n m o u n t S t a r t e d ( f i n i s h e d W o r k ) ; 
                         } 
                     } 
 
                     { 
                         i f   ( ( f l a g s   &   I n s e r t i o n )   ! = =   N o F l a g s $ 1 )   { 
                             s e t I s R u n n i n g I n s e r t i o n E f f e c t ( t r u e ) ; 
                         } 
                     } 
 
                     s a f e l y C a l l D e s t r o y ( f i n i s h e d W o r k ,   n e a r e s t M o u n t e d A n c e s t o r ,   d e s t r o y ) ; 
 
                     { 
                         i f   ( ( f l a g s   &   I n s e r t i o n )   ! = =   N o F l a g s $ 1 )   { 
                             s e t I s R u n n i n g I n s e r t i o n E f f e c t ( f a l s e ) ; 
                         } 
                     } 
 
                     { 
                         i f   ( ( f l a g s   &   P a s s i v e $ 1 )   ! = =   N o F l a g s $ 1 )   { 
                             m a r k C o m p o n e n t P a s s i v e E f f e c t U n m o u n t S t o p p e d ( ) ; 
                         }   e l s e   i f   ( ( f l a g s   &   L a y o u t )   ! = =   N o F l a g s $ 1 )   { 
                             m a r k C o m p o n e n t L a y o u t E f f e c t U n m o u n t S t o p p e d ( ) ; 
                         } 
                     } 
                 } 
             } 
 
             e f f e c t   =   e f f e c t . n e x t ; 
         }   w h i l e   ( e f f e c t   ! = =   f i r s t E f f e c t ) ; 
     } 
 } 
 
 f u n c t i o n   c o m m i t H o o k E f f e c t L i s t M o u n t ( f l a g s ,   f i n i s h e d W o r k )   { 
     v a r   u p d a t e Q u e u e   =   f i n i s h e d W o r k . u p d a t e Q u e u e ; 
     v a r   l a s t E f f e c t   =   u p d a t e Q u e u e   ! = =   n u l l   ?   u p d a t e Q u e u e . l a s t E f f e c t   :   n u l l ; 
 
     i f   ( l a s t E f f e c t   ! = =   n u l l )   { 
         v a r   f i r s t E f f e c t   =   l a s t E f f e c t . n e x t ; 
         v a r   e f f e c t   =   f i r s t E f f e c t ; 
 
         d o   { 
             i f   ( ( e f f e c t . t a g   &   f l a g s )   = = =   f l a g s )   { 
                 { 
                     i f   ( ( f l a g s   &   P a s s i v e $ 1 )   ! = =   N o F l a g s $ 1 )   { 
                         m a r k C o m p o n e n t P a s s i v e E f f e c t M o u n t S t a r t e d ( f i n i s h e d W o r k ) ; 
                     }   e l s e   i f   ( ( f l a g s   &   L a y o u t )   ! = =   N o F l a g s $ 1 )   { 
                         m a r k C o m p o n e n t L a y o u t E f f e c t M o u n t S t a r t e d ( f i n i s h e d W o r k ) ; 
                     } 
                 }   / /   M o u n t 
 
 
                 v a r   c r e a t e   =   e f f e c t . c r e a t e ; 
 
                 { 
                     i f   ( ( f l a g s   &   I n s e r t i o n )   ! = =   N o F l a g s $ 1 )   { 
                         s e t I s R u n n i n g I n s e r t i o n E f f e c t ( t r u e ) ; 
                     } 
                 } 
 
                 e f f e c t . d e s t r o y   =   c r e a t e ( ) ; 
 
                 { 
                     i f   ( ( f l a g s   &   I n s e r t i o n )   ! = =   N o F l a g s $ 1 )   { 
                         s e t I s R u n n i n g I n s e r t i o n E f f e c t ( f a l s e ) ; 
                     } 
                 } 
 
                 { 
                     i f   ( ( f l a g s   &   P a s s i v e $ 1 )   ! = =   N o F l a g s $ 1 )   { 
                         m a r k C o m p o n e n t P a s s i v e E f f e c t M o u n t S t o p p e d ( ) ; 
                     }   e l s e   i f   ( ( f l a g s   &   L a y o u t )   ! = =   N o F l a g s $ 1 )   { 
                         m a r k C o m p o n e n t L a y o u t E f f e c t M o u n t S t o p p e d ( ) ; 
                     } 
                 } 
 
                 { 
                     v a r   d e s t r o y   =   e f f e c t . d e s t r o y ; 
 
                     i f   ( d e s t r o y   ! = =   u n d e f i n e d   & &   t y p e o f   d e s t r o y   ! = =   ' f u n c t i o n ' )   { 
                         v a r   h o o k N a m e   =   v o i d   0 ; 
 
                         i f   ( ( e f f e c t . t a g   &   L a y o u t )   ! = =   N o F l a g s )   { 
                             h o o k N a m e   =   ' u s e L a y o u t E f f e c t ' ; 
                         }   e l s e   i f   ( ( e f f e c t . t a g   &   I n s e r t i o n )   ! = =   N o F l a g s )   { 
                             h o o k N a m e   =   ' u s e I n s e r t i o n E f f e c t ' ; 
                         }   e l s e   { 
                             h o o k N a m e   =   ' u s e E f f e c t ' ; 
                         } 
 
                         v a r   a d d e n d u m   =   v o i d   0 ; 
 
                         i f   ( d e s t r o y   = = =   n u l l )   { 
                             a d d e n d u m   =   '   Y o u   r e t u r n e d   n u l l .   I f   y o u r   e f f e c t   d o e s   n o t   r e q u i r e   c l e a n   '   +   ' u p ,   r e t u r n   u n d e f i n e d   ( o r   n o t h i n g ) . ' ; 
                         }   e l s e   i f   ( t y p e o f   d e s t r o y . t h e n   = = =   ' f u n c t i o n ' )   { 
                             a d d e n d u m   =   ' \ n \ n I t   l o o k s   l i k e   y o u   w r o t e   '   +   h o o k N a m e   +   ' ( a s y n c   ( )   = >   . . . )   o r   r e t u r n e d   a   P r o m i s e .   '   +   ' I n s t e a d ,   w r i t e   t h e   a s y n c   f u n c t i o n   i n s i d e   y o u r   e f f e c t   '   +   ' a n d   c a l l   i t   i m m e d i a t e l y : \ n \ n '   +   h o o k N a m e   +   ' ( ( )   = >   { \ n '   +   '     a s y n c   f u n c t i o n   f e t c h D a t a ( )   { \ n '   +   '         / /   Y o u   c a n   a w a i t   h e r e \ n '   +   '         c o n s t   r e s p o n s e   =   a w a i t   M y A P I . g e t D a t a ( s o m e I d ) ; \ n '   +   '         / /   . . . \ n '   +   '     } \ n '   +   '     f e t c h D a t a ( ) ; \ n '   +   " } ,   [ s o m e I d ] ) ;   / /   O r   [ ]   i f   e f f e c t   d o e s n ' t   n e e d   p r o p s   o r   s t a t e \ n \ n "   +   ' L e a r n   m o r e   a b o u t   d a t a   f e t c h i n g   w i t h   H o o k s :   h t t p s : / / r e a c t j s . o r g / l i n k / h o o k s - d a t a - f e t c h i n g ' ; 
                         }   e l s e   { 
                             a d d e n d u m   =   '   Y o u   r e t u r n e d :   '   +   d e s t r o y ; 
                         } 
 
                         e r r o r ( ' % s   m u s t   n o t   r e t u r n   a n y t h i n g   b e s i d e s   a   f u n c t i o n ,   '   +   ' w h i c h   i s   u s e d   f o r   c l e a n - u p . % s ' ,   h o o k N a m e ,   a d d e n d u m ) ; 
                     } 
                 } 
             } 
 
             e f f e c t   =   e f f e c t . n e x t ; 
         }   w h i l e   ( e f f e c t   ! = =   f i r s t E f f e c t ) ; 
     } 
 } 
 
 f u n c t i o n   c o m m i t P a s s i v e E f f e c t D u r a t i o n s ( f i n i s h e d R o o t ,   f i n i s h e d W o r k )   { 
     { 
         / /   O n l y   P r o f i l e r s   w i t h   w o r k   i n   t h e i r   s u b t r e e   w i l l   h a v e   a n   U p d a t e   e f f e c t   s c h e d u l e d . 
         i f   ( ( f i n i s h e d W o r k . f l a g s   &   U p d a t e )   ! = =   N o F l a g s )   { 
             s w i t c h   ( f i n i s h e d W o r k . t a g )   { 
                 c a s e   P r o f i l e r : 
                     { 
                         v a r   p a s s i v e E f f e c t D u r a t i o n   =   f i n i s h e d W o r k . s t a t e N o d e . p a s s i v e E f f e c t D u r a t i o n ; 
                         v a r   _ f i n i s h e d W o r k $ m e m o i z e   =   f i n i s h e d W o r k . m e m o i z e d P r o p s , 
                                 i d   =   _ f i n i s h e d W o r k $ m e m o i z e . i d , 
                                 o n P o s t C o m m i t   =   _ f i n i s h e d W o r k $ m e m o i z e . o n P o s t C o m m i t ;   / /   T h i s   v a l u e   w i l l   s t i l l   r e f l e c t   t h e   p r e v i o u s   c o m m i t   p h a s e . 
                         / /   I t   d o e s   n o t   g e t   r e s e t   u n t i l   t h e   s t a r t   o f   t h e   n e x t   c o m m i t   p h a s e . 
 
                         v a r   c o m m i t T i m e   =   g e t C o m m i t T i m e ( ) ; 
                         v a r   p h a s e   =   f i n i s h e d W o r k . a l t e r n a t e   = = =   n u l l   ?   ' m o u n t '   :   ' u p d a t e ' ; 
 
                         { 
                             i f   ( i s C u r r e n t U p d a t e N e s t e d ( ) )   { 
                                 p h a s e   =   ' n e s t e d - u p d a t e ' ; 
                             } 
                         } 
 
                         i f   ( t y p e o f   o n P o s t C o m m i t   = = =   ' f u n c t i o n ' )   { 
                             o n P o s t C o m m i t ( i d ,   p h a s e ,   p a s s i v e E f f e c t D u r a t i o n ,   c o m m i t T i m e ) ; 
                         }   / /   B u b b l e   t i m e s   t o   t h e   n e x t   n e a r e s t   a n c e s t o r   P r o f i l e r . 
                         / /   A f t e r   w e   p r o c e s s   t h a t   P r o f i l e r ,   w e ' l l   b u b b l e   f u r t h e r   u p . 
 
 
                         v a r   p a r e n t F i b e r   =   f i n i s h e d W o r k . r e t u r n ; 
 
                         o u t e r :   w h i l e   ( p a r e n t F i b e r   ! = =   n u l l )   { 
                             s w i t c h   ( p a r e n t F i b e r . t a g )   { 
                                 c a s e   H o s t R o o t : 
                                     v a r   r o o t   =   p a r e n t F i b e r . s t a t e N o d e ; 
                                     r o o t . p a s s i v e E f f e c t D u r a t i o n   + =   p a s s i v e E f f e c t D u r a t i o n ; 
                                     b r e a k   o u t e r ; 
 
                                 c a s e   P r o f i l e r : 
                                     v a r   p a r e n t S t a t e N o d e   =   p a r e n t F i b e r . s t a t e N o d e ; 
                                     p a r e n t S t a t e N o d e . p a s s i v e E f f e c t D u r a t i o n   + =   p a s s i v e E f f e c t D u r a t i o n ; 
                                     b r e a k   o u t e r ; 
                             } 
 
                             p a r e n t F i b e r   =   p a r e n t F i b e r . r e t u r n ; 
                         } 
 
                         b r e a k ; 
                     } 
             } 
         } 
     } 
 } 
 
 f u n c t i o n   c o m m i t L a y o u t E f f e c t O n F i b e r ( f i n i s h e d R o o t ,   c u r r e n t ,   f i n i s h e d W o r k ,   c o m m i t t e d L a n e s )   { 
     i f   ( ( f i n i s h e d W o r k . f l a g s   &   L a y o u t M a s k )   ! = =   N o F l a g s )   { 
         s w i t c h   ( f i n i s h e d W o r k . t a g )   { 
             c a s e   F u n c t i o n C o m p o n e n t : 
             c a s e   F o r w a r d R e f : 
             c a s e   S i m p l e M e m o C o m p o n e n t : 
                 { 
                     i f   (   ! o f f s c r e e n S u b t r e e W a s H i d d e n )   { 
                         / /   A t   t h i s   p o i n t   l a y o u t   e f f e c t s   h a v e   a l r e a d y   b e e n   d e s t r o y e d   ( d u r i n g   m u t a t i o n   p h a s e ) . 
                         / /   T h i s   i s   d o n e   t o   p r e v e n t   s i b l i n g   c o m p o n e n t   e f f e c t s   f r o m   i n t e r f e r i n g   w i t h   e a c h   o t h e r , 
                         / /   e . g .   a   d e s t r o y   f u n c t i o n   i n   o n e   c o m p o n e n t   s h o u l d   n e v e r   o v e r r i d e   a   r e f   s e t 
                         / /   b y   a   c r e a t e   f u n c t i o n   i n   a n o t h e r   c o m p o n e n t   d u r i n g   t h e   s a m e   c o m m i t . 
                         i f   (   f i n i s h e d W o r k . m o d e   &   P r o f i l e M o d e )   { 
                             t r y   { 
                                 s t a r t L a y o u t E f f e c t T i m e r ( ) ; 
                                 c o m m i t H o o k E f f e c t L i s t M o u n t ( L a y o u t   |   H a s E f f e c t ,   f i n i s h e d W o r k ) ; 
                             }   f i n a l l y   { 
                                 r e c o r d L a y o u t E f f e c t D u r a t i o n ( f i n i s h e d W o r k ) ; 
                             } 
                         }   e l s e   { 
                             c o m m i t H o o k E f f e c t L i s t M o u n t ( L a y o u t   |   H a s E f f e c t ,   f i n i s h e d W o r k ) ; 
                         } 
                     } 
 
                     b r e a k ; 
                 } 
 
             c a s e   C l a s s C o m p o n e n t : 
                 { 
                     v a r   i n s t a n c e   =   f i n i s h e d W o r k . s t a t e N o d e ; 
 
                     i f   ( f i n i s h e d W o r k . f l a g s   &   U p d a t e )   { 
                         i f   ( ! o f f s c r e e n S u b t r e e W a s H i d d e n )   { 
                             i f   ( c u r r e n t   = = =   n u l l )   { 
                                 / /   W e   c o u l d   u p d a t e   i n s t a n c e   p r o p s   a n d   s t a t e   h e r e , 
                                 / /   b u t   i n s t e a d   w e   r e l y   o n   t h e m   b e i n g   s e t   d u r i n g   l a s t   r e n d e r . 
                                 / /   T O D O :   r e v i s i t   t h i s   w h e n   w e   i m p l e m e n t   r e s u m i n g . 
                                 { 
                                     i f   ( f i n i s h e d W o r k . t y p e   = = =   f i n i s h e d W o r k . e l e m e n t T y p e   & &   ! d i d W a r n A b o u t R e a s s i g n i n g P r o p s )   { 
                                         i f   ( i n s t a n c e . p r o p s   ! = =   f i n i s h e d W o r k . m e m o i z e d P r o p s )   { 
                                             e r r o r ( ' E x p e c t e d   % s   p r o p s   t o   m a t c h   m e m o i z e d   p r o p s   b e f o r e   '   +   ' c o m p o n e n t D i d M o u n t .   '   +   ' T h i s   m i g h t   e i t h e r   b e   b e c a u s e   o f   a   b u g   i n   R e a c t ,   o r   b e c a u s e   '   +   ' a   c o m p o n e n t   r e a s s i g n s   i t s   o w n   ` t h i s . p r o p s ` .   '   +   ' P l e a s e   f i l e   a n   i s s u e . ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i n i s h e d W o r k )   | |   ' i n s t a n c e ' ) ; 
                                         } 
 
                                         i f   ( i n s t a n c e . s t a t e   ! = =   f i n i s h e d W o r k . m e m o i z e d S t a t e )   { 
                                             e r r o r ( ' E x p e c t e d   % s   s t a t e   t o   m a t c h   m e m o i z e d   s t a t e   b e f o r e   '   +   ' c o m p o n e n t D i d M o u n t .   '   +   ' T h i s   m i g h t   e i t h e r   b e   b e c a u s e   o f   a   b u g   i n   R e a c t ,   o r   b e c a u s e   '   +   ' a   c o m p o n e n t   r e a s s i g n s   i t s   o w n   ` t h i s . s t a t e ` .   '   +   ' P l e a s e   f i l e   a n   i s s u e . ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i n i s h e d W o r k )   | |   ' i n s t a n c e ' ) ; 
                                         } 
                                     } 
                                 } 
 
                                 i f   (   f i n i s h e d W o r k . m o d e   &   P r o f i l e M o d e )   { 
                                     t r y   { 
                                         s t a r t L a y o u t E f f e c t T i m e r ( ) ; 
                                         i n s t a n c e . c o m p o n e n t D i d M o u n t ( ) ; 
                                     }   f i n a l l y   { 
                                         r e c o r d L a y o u t E f f e c t D u r a t i o n ( f i n i s h e d W o r k ) ; 
                                     } 
                                 }   e l s e   { 
                                     i n s t a n c e . c o m p o n e n t D i d M o u n t ( ) ; 
                                 } 
                             }   e l s e   { 
                                 v a r   p r e v P r o p s   =   f i n i s h e d W o r k . e l e m e n t T y p e   = = =   f i n i s h e d W o r k . t y p e   ?   c u r r e n t . m e m o i z e d P r o p s   :   r e s o l v e D e f a u l t P r o p s ( f i n i s h e d W o r k . t y p e ,   c u r r e n t . m e m o i z e d P r o p s ) ; 
                                 v a r   p r e v S t a t e   =   c u r r e n t . m e m o i z e d S t a t e ;   / /   W e   c o u l d   u p d a t e   i n s t a n c e   p r o p s   a n d   s t a t e   h e r e , 
                                 / /   b u t   i n s t e a d   w e   r e l y   o n   t h e m   b e i n g   s e t   d u r i n g   l a s t   r e n d e r . 
                                 / /   T O D O :   r e v i s i t   t h i s   w h e n   w e   i m p l e m e n t   r e s u m i n g . 
 
                                 { 
                                     i f   ( f i n i s h e d W o r k . t y p e   = = =   f i n i s h e d W o r k . e l e m e n t T y p e   & &   ! d i d W a r n A b o u t R e a s s i g n i n g P r o p s )   { 
                                         i f   ( i n s t a n c e . p r o p s   ! = =   f i n i s h e d W o r k . m e m o i z e d P r o p s )   { 
                                             e r r o r ( ' E x p e c t e d   % s   p r o p s   t o   m a t c h   m e m o i z e d   p r o p s   b e f o r e   '   +   ' c o m p o n e n t D i d U p d a t e .   '   +   ' T h i s   m i g h t   e i t h e r   b e   b e c a u s e   o f   a   b u g   i n   R e a c t ,   o r   b e c a u s e   '   +   ' a   c o m p o n e n t   r e a s s i g n s   i t s   o w n   ` t h i s . p r o p s ` .   '   +   ' P l e a s e   f i l e   a n   i s s u e . ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i n i s h e d W o r k )   | |   ' i n s t a n c e ' ) ; 
                                         } 
 
                                         i f   ( i n s t a n c e . s t a t e   ! = =   f i n i s h e d W o r k . m e m o i z e d S t a t e )   { 
                                             e r r o r ( ' E x p e c t e d   % s   s t a t e   t o   m a t c h   m e m o i z e d   s t a t e   b e f o r e   '   +   ' c o m p o n e n t D i d U p d a t e .   '   +   ' T h i s   m i g h t   e i t h e r   b e   b e c a u s e   o f   a   b u g   i n   R e a c t ,   o r   b e c a u s e   '   +   ' a   c o m p o n e n t   r e a s s i g n s   i t s   o w n   ` t h i s . s t a t e ` .   '   +   ' P l e a s e   f i l e   a n   i s s u e . ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i n i s h e d W o r k )   | |   ' i n s t a n c e ' ) ; 
                                         } 
                                     } 
                                 } 
 
                                 i f   (   f i n i s h e d W o r k . m o d e   &   P r o f i l e M o d e )   { 
                                     t r y   { 
                                         s t a r t L a y o u t E f f e c t T i m e r ( ) ; 
                                         i n s t a n c e . c o m p o n e n t D i d U p d a t e ( p r e v P r o p s ,   p r e v S t a t e ,   i n s t a n c e . _ _ r e a c t I n t e r n a l S n a p s h o t B e f o r e U p d a t e ) ; 
                                     }   f i n a l l y   { 
                                         r e c o r d L a y o u t E f f e c t D u r a t i o n ( f i n i s h e d W o r k ) ; 
                                     } 
                                 }   e l s e   { 
                                     i n s t a n c e . c o m p o n e n t D i d U p d a t e ( p r e v P r o p s ,   p r e v S t a t e ,   i n s t a n c e . _ _ r e a c t I n t e r n a l S n a p s h o t B e f o r e U p d a t e ) ; 
                                 } 
                             } 
                         } 
                     }   / /   T O D O :   I   t h i n k   t h i s   i s   n o w   a l w a y s   n o n - n u l l   b y   t h e   t i m e   i t   r e a c h e s   t h e 
                     / /   c o m m i t   p h a s e .   C o n s i d e r   r e m o v i n g   t h e   t y p e   c h e c k . 
 
 
                     v a r   u p d a t e Q u e u e   =   f i n i s h e d W o r k . u p d a t e Q u e u e ; 
 
                     i f   ( u p d a t e Q u e u e   ! = =   n u l l )   { 
                         { 
                             i f   ( f i n i s h e d W o r k . t y p e   = = =   f i n i s h e d W o r k . e l e m e n t T y p e   & &   ! d i d W a r n A b o u t R e a s s i g n i n g P r o p s )   { 
                                 i f   ( i n s t a n c e . p r o p s   ! = =   f i n i s h e d W o r k . m e m o i z e d P r o p s )   { 
                                     e r r o r ( ' E x p e c t e d   % s   p r o p s   t o   m a t c h   m e m o i z e d   p r o p s   b e f o r e   '   +   ' p r o c e s s i n g   t h e   u p d a t e   q u e u e .   '   +   ' T h i s   m i g h t   e i t h e r   b e   b e c a u s e   o f   a   b u g   i n   R e a c t ,   o r   b e c a u s e   '   +   ' a   c o m p o n e n t   r e a s s i g n s   i t s   o w n   ` t h i s . p r o p s ` .   '   +   ' P l e a s e   f i l e   a n   i s s u e . ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i n i s h e d W o r k )   | |   ' i n s t a n c e ' ) ; 
                                 } 
 
                                 i f   ( i n s t a n c e . s t a t e   ! = =   f i n i s h e d W o r k . m e m o i z e d S t a t e )   { 
                                     e r r o r ( ' E x p e c t e d   % s   s t a t e   t o   m a t c h   m e m o i z e d   s t a t e   b e f o r e   '   +   ' p r o c e s s i n g   t h e   u p d a t e   q u e u e .   '   +   ' T h i s   m i g h t   e i t h e r   b e   b e c a u s e   o f   a   b u g   i n   R e a c t ,   o r   b e c a u s e   '   +   ' a   c o m p o n e n t   r e a s s i g n s   i t s   o w n   ` t h i s . s t a t e ` .   '   +   ' P l e a s e   f i l e   a n   i s s u e . ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i n i s h e d W o r k )   | |   ' i n s t a n c e ' ) ; 
                                 } 
                             } 
                         }   / /   W e   c o u l d   u p d a t e   i n s t a n c e   p r o p s   a n d   s t a t e   h e r e , 
                         / /   b u t   i n s t e a d   w e   r e l y   o n   t h e m   b e i n g   s e t   d u r i n g   l a s t   r e n d e r . 
                         / /   T O D O :   r e v i s i t   t h i s   w h e n   w e   i m p l e m e n t   r e s u m i n g . 
 
 
                         c o m m i t U p d a t e Q u e u e ( f i n i s h e d W o r k ,   u p d a t e Q u e u e ,   i n s t a n c e ) ; 
                     } 
 
                     b r e a k ; 
                 } 
 
             c a s e   H o s t R o o t : 
                 { 
                     / /   T O D O :   I   t h i n k   t h i s   i s   n o w   a l w a y s   n o n - n u l l   b y   t h e   t i m e   i t   r e a c h e s   t h e 
                     / /   c o m m i t   p h a s e .   C o n s i d e r   r e m o v i n g   t h e   t y p e   c h e c k . 
                     v a r   _ u p d a t e Q u e u e   =   f i n i s h e d W o r k . u p d a t e Q u e u e ; 
 
                     i f   ( _ u p d a t e Q u e u e   ! = =   n u l l )   { 
                         v a r   _ i n s t a n c e   =   n u l l ; 
 
                         i f   ( f i n i s h e d W o r k . c h i l d   ! = =   n u l l )   { 
                             s w i t c h   ( f i n i s h e d W o r k . c h i l d . t a g )   { 
                                 c a s e   H o s t C o m p o n e n t : 
                                     _ i n s t a n c e   =   g e t P u b l i c I n s t a n c e ( f i n i s h e d W o r k . c h i l d . s t a t e N o d e ) ; 
                                     b r e a k ; 
 
                                 c a s e   C l a s s C o m p o n e n t : 
                                     _ i n s t a n c e   =   f i n i s h e d W o r k . c h i l d . s t a t e N o d e ; 
                                     b r e a k ; 
                             } 
                         } 
 
                         c o m m i t U p d a t e Q u e u e ( f i n i s h e d W o r k ,   _ u p d a t e Q u e u e ,   _ i n s t a n c e ) ; 
                     } 
 
                     b r e a k ; 
                 } 
 
             c a s e   H o s t C o m p o n e n t : 
                 { 
                     v a r   _ i n s t a n c e 2   =   f i n i s h e d W o r k . s t a t e N o d e ;   / /   R e n d e r e r s   m a y   s c h e d u l e   w o r k   t o   b e   d o n e   a f t e r   h o s t   c o m p o n e n t s   a r e   m o u n t e d 
                     / /   ( e g   D O M   r e n d e r e r   m a y   s c h e d u l e   a u t o - f o c u s   f o r   i n p u t s   a n d   f o r m   c o n t r o l s ) . 
                     / /   T h e s e   e f f e c t s   s h o u l d   o n l y   b e   c o m m i t t e d   w h e n   c o m p o n e n t s   a r e   f i r s t   m o u n t e d , 
                     / /   a k a   w h e n   t h e r e   i s   n o   c u r r e n t / a l t e r n a t e . 
 
                     i f   ( c u r r e n t   = = =   n u l l   & &   f i n i s h e d W o r k . f l a g s   &   U p d a t e )   { 
                         v a r   t y p e   =   f i n i s h e d W o r k . t y p e ; 
                         v a r   p r o p s   =   f i n i s h e d W o r k . m e m o i z e d P r o p s ; 
                         c o m m i t M o u n t ( _ i n s t a n c e 2 ,   t y p e ,   p r o p s ) ; 
                     } 
 
                     b r e a k ; 
                 } 
 
             c a s e   H o s t T e x t : 
                 { 
                     / /   W e   h a v e   n o   l i f e - c y c l e s   a s s o c i a t e d   w i t h   t e x t . 
                     b r e a k ; 
                 } 
 
             c a s e   H o s t P o r t a l : 
                 { 
                     / /   W e   h a v e   n o   l i f e - c y c l e s   a s s o c i a t e d   w i t h   p o r t a l s . 
                     b r e a k ; 
                 } 
 
             c a s e   P r o f i l e r : 
                 { 
                     { 
                         v a r   _ f i n i s h e d W o r k $ m e m o i z e 2   =   f i n i s h e d W o r k . m e m o i z e d P r o p s , 
                                 o n C o m m i t   =   _ f i n i s h e d W o r k $ m e m o i z e 2 . o n C o m m i t , 
                                 o n R e n d e r   =   _ f i n i s h e d W o r k $ m e m o i z e 2 . o n R e n d e r ; 
                         v a r   e f f e c t D u r a t i o n   =   f i n i s h e d W o r k . s t a t e N o d e . e f f e c t D u r a t i o n ; 
                         v a r   c o m m i t T i m e   =   g e t C o m m i t T i m e ( ) ; 
                         v a r   p h a s e   =   c u r r e n t   = = =   n u l l   ?   ' m o u n t '   :   ' u p d a t e ' ; 
 
                         { 
                             i f   ( i s C u r r e n t U p d a t e N e s t e d ( ) )   { 
                                 p h a s e   =   ' n e s t e d - u p d a t e ' ; 
                             } 
                         } 
 
                         i f   ( t y p e o f   o n R e n d e r   = = =   ' f u n c t i o n ' )   { 
                             o n R e n d e r ( f i n i s h e d W o r k . m e m o i z e d P r o p s . i d ,   p h a s e ,   f i n i s h e d W o r k . a c t u a l D u r a t i o n ,   f i n i s h e d W o r k . t r e e B a s e D u r a t i o n ,   f i n i s h e d W o r k . a c t u a l S t a r t T i m e ,   c o m m i t T i m e ) ; 
                         } 
 
                         { 
                             i f   ( t y p e o f   o n C o m m i t   = = =   ' f u n c t i o n ' )   { 
                                 o n C o m m i t ( f i n i s h e d W o r k . m e m o i z e d P r o p s . i d ,   p h a s e ,   e f f e c t D u r a t i o n ,   c o m m i t T i m e ) ; 
                             }   / /   S c h e d u l e   a   p a s s i v e   e f f e c t   f o r   t h i s   P r o f i l e r   t o   c a l l   o n P o s t C o m m i t   h o o k s . 
                             / /   T h i s   e f f e c t   s h o u l d   b e   s c h e d u l e d   e v e n   i f   t h e r e   i s   n o   o n P o s t C o m m i t   c a l l b a c k   f o r   t h i s   P r o f i l e r , 
                             / /   b e c a u s e   t h e   e f f e c t   i s   a l s o   w h e r e   t i m e s   b u b b l e   t o   p a r e n t   P r o f i l e r s . 
 
 
                             e n q u e u e P e n d i n g P a s s i v e P r o f i l e r E f f e c t ( f i n i s h e d W o r k ) ;   / /   P r o p a g a t e   l a y o u t   e f f e c t   d u r a t i o n s   t o   t h e   n e x t   n e a r e s t   P r o f i l e r   a n c e s t o r . 
                             / /   D o   n o t   r e s e t   t h e s e   v a l u e s   u n t i l   t h e   n e x t   r e n d e r   s o   D e v T o o l s   h a s   a   c h a n c e   t o   r e a d   t h e m   f i r s t . 
 
                             v a r   p a r e n t F i b e r   =   f i n i s h e d W o r k . r e t u r n ; 
 
                             o u t e r :   w h i l e   ( p a r e n t F i b e r   ! = =   n u l l )   { 
                                 s w i t c h   ( p a r e n t F i b e r . t a g )   { 
                                     c a s e   H o s t R o o t : 
                                         v a r   r o o t   =   p a r e n t F i b e r . s t a t e N o d e ; 
                                         r o o t . e f f e c t D u r a t i o n   + =   e f f e c t D u r a t i o n ; 
                                         b r e a k   o u t e r ; 
 
                                     c a s e   P r o f i l e r : 
                                         v a r   p a r e n t S t a t e N o d e   =   p a r e n t F i b e r . s t a t e N o d e ; 
                                         p a r e n t S t a t e N o d e . e f f e c t D u r a t i o n   + =   e f f e c t D u r a t i o n ; 
                                         b r e a k   o u t e r ; 
                                 } 
 
                                 p a r e n t F i b e r   =   p a r e n t F i b e r . r e t u r n ; 
                             } 
                         } 
                     } 
 
                     b r e a k ; 
                 } 
 
             c a s e   S u s p e n s e C o m p o n e n t : 
                 { 
                     c o m m i t S u s p e n s e H y d r a t i o n C a l l b a c k s ( f i n i s h e d R o o t ,   f i n i s h e d W o r k ) ; 
                     b r e a k ; 
                 } 
 
             c a s e   S u s p e n s e L i s t C o m p o n e n t : 
             c a s e   I n c o m p l e t e C l a s s C o m p o n e n t : 
             c a s e   S c o p e C o m p o n e n t : 
             c a s e   O f f s c r e e n C o m p o n e n t : 
             c a s e   L e g a c y H i d d e n C o m p o n e n t : 
                 { 
                     b r e a k ; 
                 } 
 
             d e f a u l t : 
                 t h r o w   n e w   E r r o r ( ' T h i s   u n i t   o f   w o r k   t a g   s h o u l d   n o t   h a v e   s i d e - e f f e c t s .   T h i s   e r r o r   i s   '   +   ' l i k e l y   c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
         } 
     } 
 
     i f   (   ! o f f s c r e e n S u b t r e e W a s H i d d e n )   { 
         { 
             i f   ( f i n i s h e d W o r k . f l a g s   &   R e f )   { 
                 c o m m i t A t t a c h R e f ( f i n i s h e d W o r k ) ; 
             } 
         } 
     } 
 } 
 
 f u n c t i o n   r e a p p e a r L a y o u t E f f e c t s O n F i b e r ( n o d e )   { 
     / /   T u r n   o n   l a y o u t   e f f e c t s   i n   a   t r e e   t h a t   p r e v i o u s l y   d i s a p p e a r e d . 
     / /   T O D O   ( O f f s c r e e n )   C h e c k :   f l a g s   &   L a y o u t S t a t i c 
     s w i t c h   ( n o d e . t a g )   { 
         c a s e   F u n c t i o n C o m p o n e n t : 
         c a s e   F o r w a r d R e f : 
         c a s e   S i m p l e M e m o C o m p o n e n t : 
             { 
                 i f   (   n o d e . m o d e   &   P r o f i l e M o d e )   { 
                     t r y   { 
                         s t a r t L a y o u t E f f e c t T i m e r ( ) ; 
                         s a f e l y C a l l C o m m i t H o o k L a y o u t E f f e c t L i s t M o u n t ( n o d e ,   n o d e . r e t u r n ) ; 
                     }   f i n a l l y   { 
                         r e c o r d L a y o u t E f f e c t D u r a t i o n ( n o d e ) ; 
                     } 
                 }   e l s e   { 
                     s a f e l y C a l l C o m m i t H o o k L a y o u t E f f e c t L i s t M o u n t ( n o d e ,   n o d e . r e t u r n ) ; 
                 } 
 
                 b r e a k ; 
             } 
 
         c a s e   C l a s s C o m p o n e n t : 
             { 
                 v a r   i n s t a n c e   =   n o d e . s t a t e N o d e ; 
 
                 i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t D i d M o u n t   = = =   ' f u n c t i o n ' )   { 
                     s a f e l y C a l l C o m p o n e n t D i d M o u n t ( n o d e ,   n o d e . r e t u r n ,   i n s t a n c e ) ; 
                 } 
 
                 s a f e l y A t t a c h R e f ( n o d e ,   n o d e . r e t u r n ) ; 
                 b r e a k ; 
             } 
 
         c a s e   H o s t C o m p o n e n t : 
             { 
                 s a f e l y A t t a c h R e f ( n o d e ,   n o d e . r e t u r n ) ; 
                 b r e a k ; 
             } 
     } 
 } 
 
 f u n c t i o n   h i d e O r U n h i d e A l l C h i l d r e n ( f i n i s h e d W o r k ,   i s H i d d e n )   { 
     / /   O n l y   h i d e   o r   u n h i d e   t h e   t o p - m o s t   h o s t   n o d e s . 
     v a r   h o s t S u b t r e e R o o t   =   n u l l ; 
 
     { 
         / /   W e   o n l y   h a v e   t h e   t o p   F i b e r   t h a t   w a s   i n s e r t e d   b u t   w e   n e e d   t o   r e c u r s e   d o w n   i t s 
         / /   c h i l d r e n   t o   f i n d   a l l   t h e   t e r m i n a l   n o d e s . 
         v a r   n o d e   =   f i n i s h e d W o r k ; 
 
         w h i l e   ( t r u e )   { 
             i f   ( n o d e . t a g   = = =   H o s t C o m p o n e n t )   { 
                 i f   ( h o s t S u b t r e e R o o t   = = =   n u l l )   { 
                     h o s t S u b t r e e R o o t   =   n o d e ; 
 
                     t r y   { 
                         v a r   i n s t a n c e   =   n o d e . s t a t e N o d e ; 
 
                         i f   ( i s H i d d e n )   { 
                             h i d e I n s t a n c e ( i n s t a n c e ) ; 
                         }   e l s e   { 
                             u n h i d e I n s t a n c e ( n o d e . s t a t e N o d e ,   n o d e . m e m o i z e d P r o p s ) ; 
                         } 
                     }   c a t c h   ( e r r o r )   { 
                         c a p t u r e C o m m i t P h a s e E r r o r ( f i n i s h e d W o r k ,   f i n i s h e d W o r k . r e t u r n ,   e r r o r ) ; 
                     } 
                 } 
             }   e l s e   i f   ( n o d e . t a g   = = =   H o s t T e x t )   { 
                 i f   ( h o s t S u b t r e e R o o t   = = =   n u l l )   { 
                     t r y   { 
                         v a r   _ i n s t a n c e 3   =   n o d e . s t a t e N o d e ; 
 
                         i f   ( i s H i d d e n )   { 
                             h i d e T e x t I n s t a n c e ( _ i n s t a n c e 3 ) ; 
                         }   e l s e   { 
                             u n h i d e T e x t I n s t a n c e ( _ i n s t a n c e 3 ,   n o d e . m e m o i z e d P r o p s ) ; 
                         } 
                     }   c a t c h   ( e r r o r )   { 
                         c a p t u r e C o m m i t P h a s e E r r o r ( f i n i s h e d W o r k ,   f i n i s h e d W o r k . r e t u r n ,   e r r o r ) ; 
                     } 
                 } 
             }   e l s e   i f   ( ( n o d e . t a g   = = =   O f f s c r e e n C o m p o n e n t   | |   n o d e . t a g   = = =   L e g a c y H i d d e n C o m p o n e n t )   & &   n o d e . m e m o i z e d S t a t e   ! = =   n u l l   & &   n o d e   ! = =   f i n i s h e d W o r k )   ;   e l s e   i f   ( n o d e . c h i l d   ! = =   n u l l )   { 
                 n o d e . c h i l d . r e t u r n   =   n o d e ; 
                 n o d e   =   n o d e . c h i l d ; 
                 c o n t i n u e ; 
             } 
 
             i f   ( n o d e   = = =   f i n i s h e d W o r k )   { 
                 r e t u r n ; 
             } 
 
             w h i l e   ( n o d e . s i b l i n g   = = =   n u l l )   { 
                 i f   ( n o d e . r e t u r n   = = =   n u l l   | |   n o d e . r e t u r n   = = =   f i n i s h e d W o r k )   { 
                     r e t u r n ; 
                 } 
 
                 i f   ( h o s t S u b t r e e R o o t   = = =   n o d e )   { 
                     h o s t S u b t r e e R o o t   =   n u l l ; 
                 } 
 
                 n o d e   =   n o d e . r e t u r n ; 
             } 
 
             i f   ( h o s t S u b t r e e R o o t   = = =   n o d e )   { 
                 h o s t S u b t r e e R o o t   =   n u l l ; 
             } 
 
             n o d e . s i b l i n g . r e t u r n   =   n o d e . r e t u r n ; 
             n o d e   =   n o d e . s i b l i n g ; 
         } 
     } 
 } 
 
 f u n c t i o n   c o m m i t A t t a c h R e f ( f i n i s h e d W o r k )   { 
     v a r   r e f   =   f i n i s h e d W o r k . r e f ; 
 
     i f   ( r e f   ! = =   n u l l )   { 
         v a r   i n s t a n c e   =   f i n i s h e d W o r k . s t a t e N o d e ; 
         v a r   i n s t a n c e T o U s e ; 
 
         s w i t c h   ( f i n i s h e d W o r k . t a g )   { 
             c a s e   H o s t C o m p o n e n t : 
                 i n s t a n c e T o U s e   =   g e t P u b l i c I n s t a n c e ( i n s t a n c e ) ; 
                 b r e a k ; 
 
             d e f a u l t : 
                 i n s t a n c e T o U s e   =   i n s t a n c e ; 
         }   / /   M o v e d   o u t s i d e   t o   e n s u r e   D C E   w o r k s   w i t h   t h i s   f l a g 
 
         i f   ( t y p e o f   r e f   = = =   ' f u n c t i o n ' )   { 
             v a r   r e t V a l ; 
 
             i f   (   f i n i s h e d W o r k . m o d e   &   P r o f i l e M o d e )   { 
                 t r y   { 
                     s t a r t L a y o u t E f f e c t T i m e r ( ) ; 
                     r e t V a l   =   r e f ( i n s t a n c e T o U s e ) ; 
                 }   f i n a l l y   { 
                     r e c o r d L a y o u t E f f e c t D u r a t i o n ( f i n i s h e d W o r k ) ; 
                 } 
             }   e l s e   { 
                 r e t V a l   =   r e f ( i n s t a n c e T o U s e ) ; 
             } 
 
             { 
                 i f   ( t y p e o f   r e t V a l   = = =   ' f u n c t i o n ' )   { 
                     e r r o r ( ' U n e x p e c t e d   r e t u r n   v a l u e   f r o m   a   c a l l b a c k   r e f   i n   % s .   '   +   ' A   c a l l b a c k   r e f   s h o u l d   n o t   r e t u r n   a   f u n c t i o n . ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i n i s h e d W o r k ) ) ; 
                 } 
             } 
         }   e l s e   { 
             { 
                 i f   ( ! r e f . h a s O w n P r o p e r t y ( ' c u r r e n t ' ) )   { 
                     e r r o r ( ' U n e x p e c t e d   r e f   o b j e c t   p r o v i d e d   f o r   % s .   '   +   ' U s e   e i t h e r   a   r e f - s e t t e r   f u n c t i o n   o r   R e a c t . c r e a t e R e f ( ) . ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i n i s h e d W o r k ) ) ; 
                 } 
             } 
 
             r e f . c u r r e n t   =   i n s t a n c e T o U s e ; 
         } 
     } 
 } 
 
 f u n c t i o n   d e t a c h F i b e r M u t a t i o n ( f i b e r )   { 
     / /   C u t   o f f   t h e   r e t u r n   p o i n t e r   t o   d i s c o n n e c t   i t   f r o m   t h e   t r e e . 
     / /   T h i s   e n a b l e s   u s   t o   d e t e c t   a n d   w a r n   a g a i n s t   s t a t e   u p d a t e s   o n   a n   u n m o u n t e d   c o m p o n e n t . 
     / /   I t   a l s o   p r e v e n t s   e v e n t s   f r o m   b u b b l i n g   f r o m   w i t h i n   d i s c o n n e c t e d   c o m p o n e n t s . 
     / / 
     / /   I d e a l l y ,   w e   s h o u l d   a l s o   c l e a r   t h e   c h i l d   p o i n t e r   o f   t h e   p a r e n t   a l t e r n a t e   t o   l e t   t h i s 
     / /   g e t   G C : e d   b u t   w e   d o n ' t   k n o w   w h i c h   f o r   s u r e   w h i c h   p a r e n t   i s   t h e   c u r r e n t 
     / /   o n e   s o   w e ' l l   s e t t l e   f o r   G C : i n g   t h e   s u b t r e e   o f   t h i s   c h i l d . 
     / /   T h i s   c h i l d   i t s e l f   w i l l   b e   G C : e d   w h e n   t h e   p a r e n t   u p d a t e s   t h e   n e x t   t i m e . 
     / / 
     / /   N o t e   t h a t   w e   c a n ' t   c l e a r   c h i l d   o r   s i b l i n g   p o i n t e r s   y e t . 
     / /   T h e y ' r e   n e e d e d   f o r   p a s s i v e   e f f e c t s   a n d   f o r   f i n d D O M N o d e . 
     / /   W e   d e f e r   t h o s e   f i e l d s ,   a n d   a l l   o t h e r   c l e a n u p ,   t o   t h e   p a s s i v e   p h a s e   ( s e e   d e t a c h F i b e r A f t e r E f f e c t s ) . 
     / / 
     / /   D o n ' t   r e s e t   t h e   a l t e r n a t e   y e t ,   e i t h e r .   W e   n e e d   t h a t   s o   w e   c a n   d e t a c h   t h e 
     / /   a l t e r n a t e ' s   f i e l d s   i n   t h e   p a s s i v e   p h a s e .   C l e a r i n g   t h e   r e t u r n   p o i n t e r   i s 
     / /   s u f f i c i e n t   f o r   f i n d D O M N o d e   s e m a n t i c s . 
     v a r   a l t e r n a t e   =   f i b e r . a l t e r n a t e ; 
 
     i f   ( a l t e r n a t e   ! = =   n u l l )   { 
         a l t e r n a t e . r e t u r n   =   n u l l ; 
     } 
 
     f i b e r . r e t u r n   =   n u l l ; 
 } 
 
 f u n c t i o n   d e t a c h F i b e r A f t e r E f f e c t s ( f i b e r )   { 
     v a r   a l t e r n a t e   =   f i b e r . a l t e r n a t e ; 
 
     i f   ( a l t e r n a t e   ! = =   n u l l )   { 
         f i b e r . a l t e r n a t e   =   n u l l ; 
         d e t a c h F i b e r A f t e r E f f e c t s ( a l t e r n a t e ) ; 
     }   / /   N o t e :   D e f e n s i v e l y   u s i n g   n e g a t i o n   i n s t e a d   o f   <   i n   c a s e 
     / /   ` d e l e t e d T r e e C l e a n U p L e v e l `   i s   u n d e f i n e d . 
 
 
     { 
         / /   C l e a r   c y c l i c a l   F i b e r   f i e l d s .   T h i s   l e v e l   a l o n e   i s   d e s i g n e d   t o   r o u g h l y 
         / /   a p p r o x i m a t e   t h e   p l a n n e d   F i b e r   r e f a c t o r .   I n   t h a t   w o r l d ,   ` s e t S t a t e `   w i l l   b e 
         / /   b o u n d   t o   a   s p e c i a l   " i n s t a n c e "   o b j e c t   i n s t e a d   o f   a   F i b e r .   T h e   I n s t a n c e 
         / /   o b j e c t   w i l l   n o t   h a v e   a n y   o f   t h e s e   f i e l d s .   I t   w i l l   o n l y   b e   c o n n e c t e d   t o 
         / /   t h e   f i b e r   t r e e   v i a   a   s i n g l e   l i n k   a t   t h e   r o o t .   S o   i f   t h i s   l e v e l   a l o n e   i s 
         / /   s u f f i c i e n t   t o   f i x   m e m o r y   i s s u e s ,   t h a t   b o d e s   w e l l   f o r   o u r   p l a n s . 
         f i b e r . c h i l d   =   n u l l ; 
         f i b e r . d e l e t i o n s   =   n u l l ; 
         f i b e r . s i b l i n g   =   n u l l ;   / /   T h e   ` s t a t e N o d e `   i s   c y c l i c a l   b e c a u s e   o n   h o s t   n o d e s   i t   p o i n t s   t o   t h e   h o s t 
         / /   t r e e ,   w h i c h   h a s   i t s   o w n   p o i n t e r s   t o   c h i l d r e n ,   p a r e n t s ,   a n d   s i b l i n g s . 
         / /   T h e   o t h e r   h o s t   n o d e s   a l s o   p o i n t   b a c k   t o   f i b e r s ,   s o   w e   s h o u l d   d e t a c h   t h a t 
         / /   o n e ,   t o o . 
 
         i f   ( f i b e r . t a g   = = =   H o s t C o m p o n e n t )   { 
             v a r   h o s t I n s t a n c e   =   f i b e r . s t a t e N o d e ; 
 
             i f   ( h o s t I n s t a n c e   ! = =   n u l l )   { 
                 d e t a c h D e l e t e d I n s t a n c e ( h o s t I n s t a n c e ) ; 
             } 
         } 
 
         f i b e r . s t a t e N o d e   =   n u l l ;   / /   I ' m   i n t e n t i o n a l l y   n o t   c l e a r i n g   t h e   ` r e t u r n `   f i e l d   i n   t h i s   l e v e l .   W e 
         / /   a l r e a d y   d i s c o n n e c t   t h e   ` r e t u r n `   p o i n t e r   a t   t h e   r o o t   o f   t h e   d e l e t e d 
         / /   s u b t r e e   ( i n   ` d e t a c h F i b e r M u t a t i o n ` ) .   B e s i d e s ,   ` r e t u r n `   b y   i t s e l f   i s   n o t 
         / /   c y c l i c a l      i t ' s   o n l y   c y c l i c a l   w h e n   c o m b i n e d   w i t h   ` c h i l d ` ,   ` s i b l i n g ` ,   a n d 
         / /   ` a l t e r n a t e ` .   B u t   w e ' l l   c l e a r   i t   i n   t h e   n e x t   l e v e l   a n y w a y ,   j u s t   i n   c a s e . 
 
         { 
             f i b e r . _ d e b u g O w n e r   =   n u l l ; 
         } 
 
         { 
             / /   T h e o r e t i c a l l y ,   n o t h i n g   i n   h e r e   s h o u l d   b e   n e c e s s a r y ,   b e c a u s e   w e   a l r e a d y 
             / /   d i s c o n n e c t e d   t h e   f i b e r   f r o m   t h e   t r e e .   S o   e v e n   i f   s o m e t h i n g   l e a k s   t h i s 
             / /   p a r t i c u l a r   f i b e r ,   i t   w o n ' t   l e a k   a n y t h i n g   e l s e 
             / / 
             / /   T h e   p u r p o s e   o f   t h i s   b r a n c h   i s   t o   b e   s u p e r   a g g r e s s i v e   s o   w e   c a n   m e a s u r e 
             / /   i f   t h e r e ' s   a n y   d i f f e r e n c e   i n   m e m o r y   i m p a c t .   I f   t h e r e   i s ,   t h a t   c o u l d 
             / /   i n d i c a t e   a   R e a c t   l e a k   w e   d o n ' t   k n o w   a b o u t . 
             f i b e r . r e t u r n   =   n u l l ; 
             f i b e r . d e p e n d e n c i e s   =   n u l l ; 
             f i b e r . m e m o i z e d P r o p s   =   n u l l ; 
             f i b e r . m e m o i z e d S t a t e   =   n u l l ; 
             f i b e r . p e n d i n g P r o p s   =   n u l l ; 
             f i b e r . s t a t e N o d e   =   n u l l ;   / /   T O D O :   M o v e   t o   ` c o m m i t P a s s i v e U n m o u n t I n s i d e D e l e t e d T r e e O n F i b e r `   i n s t e a d . 
 
             f i b e r . u p d a t e Q u e u e   =   n u l l ; 
         } 
     } 
 } 
 
 f u n c t i o n   g e t H o s t P a r e n t F i b e r ( f i b e r )   { 
     v a r   p a r e n t   =   f i b e r . r e t u r n ; 
 
     w h i l e   ( p a r e n t   ! = =   n u l l )   { 
         i f   ( i s H o s t P a r e n t ( p a r e n t ) )   { 
             r e t u r n   p a r e n t ; 
         } 
 
         p a r e n t   =   p a r e n t . r e t u r n ; 
     } 
 
     t h r o w   n e w   E r r o r ( ' E x p e c t e d   t o   f i n d   a   h o s t   p a r e n t .   T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   '   +   ' i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
 } 
 
 f u n c t i o n   i s H o s t P a r e n t ( f i b e r )   { 
     r e t u r n   f i b e r . t a g   = = =   H o s t C o m p o n e n t   | |   f i b e r . t a g   = = =   H o s t R o o t   | |   f i b e r . t a g   = = =   H o s t P o r t a l ; 
 } 
 
 f u n c t i o n   g e t H o s t S i b l i n g ( f i b e r )   { 
     / /   W e ' r e   g o i n g   t o   s e a r c h   f o r w a r d   i n t o   t h e   t r e e   u n t i l   w e   f i n d   a   s i b l i n g   h o s t 
     / /   n o d e .   U n f o r t u n a t e l y ,   i f   m u l t i p l e   i n s e r t i o n s   a r e   d o n e   i n   a   r o w   w e   h a v e   t o 
     / /   s e a r c h   p a s t   t h e m .   T h i s   l e a d s   t o   e x p o n e n t i a l   s e a r c h   f o r   t h e   n e x t   s i b l i n g . 
     / /   T O D O :   F i n d   a   m o r e   e f f i c i e n t   w a y   t o   d o   t h i s . 
     v a r   n o d e   =   f i b e r ; 
 
     s i b l i n g s :   w h i l e   ( t r u e )   { 
         / /   I f   w e   d i d n ' t   f i n d   a n y t h i n g ,   l e t ' s   t r y   t h e   n e x t   s i b l i n g . 
         w h i l e   ( n o d e . s i b l i n g   = = =   n u l l )   { 
             i f   ( n o d e . r e t u r n   = = =   n u l l   | |   i s H o s t P a r e n t ( n o d e . r e t u r n ) )   { 
                 / /   I f   w e   p o p   o u t   o f   t h e   r o o t   o r   h i t   t h e   p a r e n t   t h e   f i b e r   w e   a r e   t h e 
                 / /   l a s t   s i b l i n g . 
                 r e t u r n   n u l l ; 
             } 
 
             n o d e   =   n o d e . r e t u r n ; 
         } 
 
         n o d e . s i b l i n g . r e t u r n   =   n o d e . r e t u r n ; 
         n o d e   =   n o d e . s i b l i n g ; 
 
         w h i l e   ( n o d e . t a g   ! = =   H o s t C o m p o n e n t   & &   n o d e . t a g   ! = =   H o s t T e x t   & &   n o d e . t a g   ! = =   D e h y d r a t e d F r a g m e n t )   { 
             / /   I f   i t   i s   n o t   h o s t   n o d e   a n d ,   w e   m i g h t   h a v e   a   h o s t   n o d e   i n s i d e   i t . 
             / /   T r y   t o   s e a r c h   d o w n   u n t i l   w e   f i n d   o n e . 
             i f   ( n o d e . f l a g s   &   P l a c e m e n t )   { 
                 / /   I f   w e   d o n ' t   h a v e   a   c h i l d ,   t r y   t h e   s i b l i n g s   i n s t e a d . 
                 c o n t i n u e   s i b l i n g s ; 
             }   / /   I f   w e   d o n ' t   h a v e   a   c h i l d ,   t r y   t h e   s i b l i n g s   i n s t e a d . 
             / /   W e   a l s o   s k i p   p o r t a l s   b e c a u s e   t h e y   a r e   n o t   p a r t   o f   t h i s   h o s t   t r e e . 
 
 
             i f   ( n o d e . c h i l d   = = =   n u l l   | |   n o d e . t a g   = = =   H o s t P o r t a l )   { 
                 c o n t i n u e   s i b l i n g s ; 
             }   e l s e   { 
                 n o d e . c h i l d . r e t u r n   =   n o d e ; 
                 n o d e   =   n o d e . c h i l d ; 
             } 
         }   / /   C h e c k   i f   t h i s   h o s t   n o d e   i s   s t a b l e   o r   a b o u t   t o   b e   p l a c e d . 
 
 
         i f   ( ! ( n o d e . f l a g s   &   P l a c e m e n t ) )   { 
             / /   F o u n d   i t ! 
             r e t u r n   n o d e . s t a t e N o d e ; 
         } 
     } 
 } 
 
 f u n c t i o n   c o m m i t P l a c e m e n t ( f i n i s h e d W o r k )   { 
 
 
     v a r   p a r e n t F i b e r   =   g e t H o s t P a r e n t F i b e r ( f i n i s h e d W o r k ) ;   / /   N o t e :   t h e s e   t w o   v a r i a b l e s   * m u s t *   a l w a y s   b e   u p d a t e d   t o g e t h e r . 
 
     s w i t c h   ( p a r e n t F i b e r . t a g )   { 
         c a s e   H o s t C o m p o n e n t : 
             { 
                 v a r   p a r e n t   =   p a r e n t F i b e r . s t a t e N o d e ; 
 
                 i f   ( p a r e n t F i b e r . f l a g s   &   C o n t e n t R e s e t )   { 
                     / /   R e s e t   t h e   t e x t   c o n t e n t   o f   t h e   p a r e n t   b e f o r e   d o i n g   a n y   i n s e r t i o n s 
                     r e s e t T e x t C o n t e n t ( p a r e n t ) ;   / /   C l e a r   C o n t e n t R e s e t   f r o m   t h e   e f f e c t   t a g 
 
                     p a r e n t F i b e r . f l a g s   & =   ~ C o n t e n t R e s e t ; 
                 } 
 
                 v a r   b e f o r e   =   g e t H o s t S i b l i n g ( f i n i s h e d W o r k ) ;   / /   W e   o n l y   h a v e   t h e   t o p   F i b e r   t h a t   w a s   i n s e r t e d   b u t   w e   n e e d   t o   r e c u r s e   d o w n   i t s 
                 / /   c h i l d r e n   t o   f i n d   a l l   t h e   t e r m i n a l   n o d e s . 
 
                 i n s e r t O r A p p e n d P l a c e m e n t N o d e ( f i n i s h e d W o r k ,   b e f o r e ,   p a r e n t ) ; 
                 b r e a k ; 
             } 
 
         c a s e   H o s t R o o t : 
         c a s e   H o s t P o r t a l : 
             { 
                 v a r   _ p a r e n t   =   p a r e n t F i b e r . s t a t e N o d e . c o n t a i n e r I n f o ; 
 
                 v a r   _ b e f o r e   =   g e t H o s t S i b l i n g ( f i n i s h e d W o r k ) ; 
 
                 i n s e r t O r A p p e n d P l a c e m e n t N o d e I n t o C o n t a i n e r ( f i n i s h e d W o r k ,   _ b e f o r e ,   _ p a r e n t ) ; 
                 b r e a k ; 
             } 
         / /   e s l i n t - d i s a b l e - n e x t - l i n e - n o - f a l l t h r o u g h 
 
         d e f a u l t : 
             t h r o w   n e w   E r r o r ( ' I n v a l i d   h o s t   p a r e n t   f i b e r .   T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   '   +   ' i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
     } 
 } 
 
 f u n c t i o n   i n s e r t O r A p p e n d P l a c e m e n t N o d e I n t o C o n t a i n e r ( n o d e ,   b e f o r e ,   p a r e n t )   { 
     v a r   t a g   =   n o d e . t a g ; 
     v a r   i s H o s t   =   t a g   = = =   H o s t C o m p o n e n t   | |   t a g   = = =   H o s t T e x t ; 
 
     i f   ( i s H o s t )   { 
         v a r   s t a t e N o d e   =   n o d e . s t a t e N o d e ; 
 
         i f   ( b e f o r e )   { 
             i n s e r t I n C o n t a i n e r B e f o r e ( p a r e n t ,   s t a t e N o d e ,   b e f o r e ) ; 
         }   e l s e   { 
             a p p e n d C h i l d T o C o n t a i n e r ( p a r e n t ,   s t a t e N o d e ) ; 
         } 
     }   e l s e   i f   ( t a g   = = =   H o s t P o r t a l )   ;   e l s e   { 
         v a r   c h i l d   =   n o d e . c h i l d ; 
 
         i f   ( c h i l d   ! = =   n u l l )   { 
             i n s e r t O r A p p e n d P l a c e m e n t N o d e I n t o C o n t a i n e r ( c h i l d ,   b e f o r e ,   p a r e n t ) ; 
             v a r   s i b l i n g   =   c h i l d . s i b l i n g ; 
 
             w h i l e   ( s i b l i n g   ! = =   n u l l )   { 
                 i n s e r t O r A p p e n d P l a c e m e n t N o d e I n t o C o n t a i n e r ( s i b l i n g ,   b e f o r e ,   p a r e n t ) ; 
                 s i b l i n g   =   s i b l i n g . s i b l i n g ; 
             } 
         } 
     } 
 } 
 
 f u n c t i o n   i n s e r t O r A p p e n d P l a c e m e n t N o d e ( n o d e ,   b e f o r e ,   p a r e n t )   { 
     v a r   t a g   =   n o d e . t a g ; 
     v a r   i s H o s t   =   t a g   = = =   H o s t C o m p o n e n t   | |   t a g   = = =   H o s t T e x t ; 
 
     i f   ( i s H o s t )   { 
         v a r   s t a t e N o d e   =   n o d e . s t a t e N o d e ; 
 
         i f   ( b e f o r e )   { 
             i n s e r t B e f o r e ( p a r e n t ,   s t a t e N o d e ,   b e f o r e ) ; 
         }   e l s e   { 
             a p p e n d C h i l d ( p a r e n t ,   s t a t e N o d e ) ; 
         } 
     }   e l s e   i f   ( t a g   = = =   H o s t P o r t a l )   ;   e l s e   { 
         v a r   c h i l d   =   n o d e . c h i l d ; 
 
         i f   ( c h i l d   ! = =   n u l l )   { 
             i n s e r t O r A p p e n d P l a c e m e n t N o d e ( c h i l d ,   b e f o r e ,   p a r e n t ) ; 
             v a r   s i b l i n g   =   c h i l d . s i b l i n g ; 
 
             w h i l e   ( s i b l i n g   ! = =   n u l l )   { 
                 i n s e r t O r A p p e n d P l a c e m e n t N o d e ( s i b l i n g ,   b e f o r e ,   p a r e n t ) ; 
                 s i b l i n g   =   s i b l i n g . s i b l i n g ; 
             } 
         } 
     } 
 }   / /   T h e s e   a r e   t r a c k e d   o n   t h e   s t a c k   a s   w e   r e c u r s i v e l y   t r a v e r s e   a 
 / /   d e l e t e d   s u b t r e e . 
 / /   T O D O :   U p d a t e   t h e s e   d u r i n g   t h e   w h o l e   m u t a t i o n   p h a s e ,   n o t   j u s t   d u r i n g 
 / /   a   d e l e t i o n . 
 
 
 v a r   h o s t P a r e n t   =   n u l l ; 
 v a r   h o s t P a r e n t I s C o n t a i n e r   =   f a l s e ; 
 
 f u n c t i o n   c o m m i t D e l e t i o n E f f e c t s ( r o o t ,   r e t u r n F i b e r ,   d e l e t e d F i b e r )   { 
     { 
         / /   W e   o n l y   h a v e   t h e   t o p   F i b e r   t h a t   w a s   d e l e t e d   b u t   w e   n e e d   t o   r e c u r s e   d o w n   i t s 
         / /   c h i l d r e n   t o   f i n d   a l l   t h e   t e r m i n a l   n o d e s . 
         / /   R e c u r s i v e l y   d e l e t e   a l l   h o s t   n o d e s   f r o m   t h e   p a r e n t ,   d e t a c h   r e f s ,   c l e a n 
         / /   u p   m o u n t e d   l a y o u t   e f f e c t s ,   a n d   c a l l   c o m p o n e n t W i l l U n m o u n t . 
         / /   W e   o n l y   n e e d   t o   r e m o v e   t h e   t o p m o s t   h o s t   c h i l d   i n   e a c h   b r a n c h .   B u t   t h e n   w e 
         / /   s t i l l   n e e d   t o   k e e p   t r a v e r s i n g   t o   u n m o u n t   e f f e c t s ,   r e f s ,   a n d   c W U .   T O D O :   W e 
         / /   c o u l d   s p l i t   t h i s   i n t o   t w o   s e p a r a t e   t r a v e r s a l s   f u n c t i o n s ,   w h e r e   t h e   s e c o n d 
         / /   o n e   d o e s n ' t   i n c l u d e   a n y   r e m o v e C h i l d   l o g i c .   T h i s   i s   m a y b e   t h e   s a m e 
         / /   f u n c t i o n   a s   " d i s a p p e a r L a y o u t E f f e c t s "   ( o r   w h a t e v e r   t h a t   t u r n s   i n t o   a f t e r 
         / /   t h e   l a y o u t   p h a s e   i s   r e f a c t o r e d   t o   u s e   r e c u r s i o n ) . 
         / /   B e f o r e   s t a r t i n g ,   f i n d   t h e   n e a r e s t   h o s t   p a r e n t   o n   t h e   s t a c k   s o   w e   k n o w 
         / /   w h i c h   i n s t a n c e / c o n t a i n e r   t o   r e m o v e   t h e   c h i l d r e n   f r o m . 
         / /   T O D O :   I n s t e a d   o f   s e a r c h i n g   u p   t h e   f i b e r   r e t u r n   p a t h   o n   e v e r y   d e l e t i o n ,   w e 
         / /   c a n   t r a c k   t h e   n e a r e s t   h o s t   c o m p o n e n t   o n   t h e   J S   s t a c k   a s   w e   t r a v e r s e   t h e 
         / /   t r e e   d u r i n g   t h e   c o m m i t   p h a s e .   T h i s   w o u l d   m a k e   i n s e r t i o n s   f a s t e r ,   t o o . 
         v a r   p a r e n t   =   r e t u r n F i b e r ; 
 
         f i n d P a r e n t :   w h i l e   ( p a r e n t   ! = =   n u l l )   { 
             s w i t c h   ( p a r e n t . t a g )   { 
                 c a s e   H o s t C o m p o n e n t : 
                     { 
                         h o s t P a r e n t   =   p a r e n t . s t a t e N o d e ; 
                         h o s t P a r e n t I s C o n t a i n e r   =   f a l s e ; 
                         b r e a k   f i n d P a r e n t ; 
                     } 
 
                 c a s e   H o s t R o o t : 
                     { 
                         h o s t P a r e n t   =   p a r e n t . s t a t e N o d e . c o n t a i n e r I n f o ; 
                         h o s t P a r e n t I s C o n t a i n e r   =   t r u e ; 
                         b r e a k   f i n d P a r e n t ; 
                     } 
 
                 c a s e   H o s t P o r t a l : 
                     { 
                         h o s t P a r e n t   =   p a r e n t . s t a t e N o d e . c o n t a i n e r I n f o ; 
                         h o s t P a r e n t I s C o n t a i n e r   =   t r u e ; 
                         b r e a k   f i n d P a r e n t ; 
                     } 
             } 
 
             p a r e n t   =   p a r e n t . r e t u r n ; 
         } 
 
         i f   ( h o s t P a r e n t   = = =   n u l l )   { 
             t h r o w   n e w   E r r o r ( ' E x p e c t e d   t o   f i n d   a   h o s t   p a r e n t .   T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   '   +   ' a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
         } 
 
         c o m m i t D e l e t i o n E f f e c t s O n F i b e r ( r o o t ,   r e t u r n F i b e r ,   d e l e t e d F i b e r ) ; 
         h o s t P a r e n t   =   n u l l ; 
         h o s t P a r e n t I s C o n t a i n e r   =   f a l s e ; 
     } 
 
     d e t a c h F i b e r M u t a t i o n ( d e l e t e d F i b e r ) ; 
 } 
 
 f u n c t i o n   r e c u r s i v e l y T r a v e r s e D e l e t i o n E f f e c t s ( f i n i s h e d R o o t ,   n e a r e s t M o u n t e d A n c e s t o r ,   p a r e n t )   { 
     / /   T O D O :   U s e   a   s t a t i c   f l a g   t o   s k i p   t r e e s   t h a t   d o n ' t   h a v e   u n m o u n t   e f f e c t s 
     v a r   c h i l d   =   p a r e n t . c h i l d ; 
 
     w h i l e   ( c h i l d   ! = =   n u l l )   { 
         c o m m i t D e l e t i o n E f f e c t s O n F i b e r ( f i n i s h e d R o o t ,   n e a r e s t M o u n t e d A n c e s t o r ,   c h i l d ) ; 
         c h i l d   =   c h i l d . s i b l i n g ; 
     } 
 } 
 
 f u n c t i o n   c o m m i t D e l e t i o n E f f e c t s O n F i b e r ( f i n i s h e d R o o t ,   n e a r e s t M o u n t e d A n c e s t o r ,   d e l e t e d F i b e r )   { 
     o n C o m m i t U n m o u n t ( d e l e t e d F i b e r ) ;   / /   T h e   c a s e s   i n   t h i s   o u t e r   s w i t c h   m o d i f y   t h e   s t a c k   b e f o r e   t h e y   t r a v e r s e 
     / /   i n t o   t h e i r   s u b t r e e .   T h e r e   a r e   s i m p l e r   c a s e s   i n   t h e   i n n e r   s w i t c h 
     / /   t h a t   d o n ' t   m o d i f y   t h e   s t a c k . 
 
     s w i t c h   ( d e l e t e d F i b e r . t a g )   { 
         c a s e   H o s t C o m p o n e n t : 
             { 
                 i f   ( ! o f f s c r e e n S u b t r e e W a s H i d d e n )   { 
                     s a f e l y D e t a c h R e f ( d e l e t e d F i b e r ,   n e a r e s t M o u n t e d A n c e s t o r ) ; 
                 }   / /   I n t e n t i o n a l   f a l l t h r o u g h   t o   n e x t   b r a n c h 
 
             } 
         / /   e s l i n t - d i s a b l e - n e x t - l i n e - n o - f a l l t h r o u g h 
 
         c a s e   H o s t T e x t : 
             { 
                 / /   W e   o n l y   n e e d   t o   r e m o v e   t h e   n e a r e s t   h o s t   c h i l d .   S e t   t h e   h o s t   p a r e n t 
                 / /   t o   ` n u l l `   o n   t h e   s t a c k   t o   i n d i c a t e   t h a t   n e s t e d   c h i l d r e n   d o n ' t 
                 / /   n e e d   t o   b e   r e m o v e d . 
                 { 
                     v a r   p r e v H o s t P a r e n t   =   h o s t P a r e n t ; 
                     v a r   p r e v H o s t P a r e n t I s C o n t a i n e r   =   h o s t P a r e n t I s C o n t a i n e r ; 
                     h o s t P a r e n t   =   n u l l ; 
                     r e c u r s i v e l y T r a v e r s e D e l e t i o n E f f e c t s ( f i n i s h e d R o o t ,   n e a r e s t M o u n t e d A n c e s t o r ,   d e l e t e d F i b e r ) ; 
                     h o s t P a r e n t   =   p r e v H o s t P a r e n t ; 
                     h o s t P a r e n t I s C o n t a i n e r   =   p r e v H o s t P a r e n t I s C o n t a i n e r ; 
 
                     i f   ( h o s t P a r e n t   ! = =   n u l l )   { 
                         / /   N o w   t h a t   a l l   t h e   c h i l d   e f f e c t s   h a v e   u n m o u n t e d ,   w e   c a n   r e m o v e   t h e 
                         / /   n o d e   f r o m   t h e   t r e e . 
                         i f   ( h o s t P a r e n t I s C o n t a i n e r )   { 
                             r e m o v e C h i l d F r o m C o n t a i n e r ( h o s t P a r e n t ,   d e l e t e d F i b e r . s t a t e N o d e ) ; 
                         }   e l s e   { 
                             r e m o v e C h i l d ( h o s t P a r e n t ,   d e l e t e d F i b e r . s t a t e N o d e ) ; 
                         } 
                     } 
                 } 
 
                 r e t u r n ; 
             } 
 
         c a s e   D e h y d r a t e d F r a g m e n t : 
             { 
                 / /   D e l e t e   t h e   d e h y d r a t e d   s u s p e n s e   b o u n d a r y   a n d   a l l   o f   i t s   c o n t e n t . 
 
 
                 { 
                     i f   ( h o s t P a r e n t   ! = =   n u l l )   { 
                         i f   ( h o s t P a r e n t I s C o n t a i n e r )   { 
                             c l e a r S u s p e n s e B o u n d a r y F r o m C o n t a i n e r ( h o s t P a r e n t ,   d e l e t e d F i b e r . s t a t e N o d e ) ; 
                         }   e l s e   { 
                             c l e a r S u s p e n s e B o u n d a r y ( h o s t P a r e n t ,   d e l e t e d F i b e r . s t a t e N o d e ) ; 
                         } 
                     } 
                 } 
 
                 r e t u r n ; 
             } 
 
         c a s e   H o s t P o r t a l : 
             { 
                 { 
                     / /   W h e n   w e   g o   i n t o   a   p o r t a l ,   i t   b e c o m e s   t h e   p a r e n t   t o   r e m o v e   f r o m . 
                     v a r   _ p r e v H o s t P a r e n t   =   h o s t P a r e n t ; 
                     v a r   _ p r e v H o s t P a r e n t I s C o n t a i n e r   =   h o s t P a r e n t I s C o n t a i n e r ; 
                     h o s t P a r e n t   =   d e l e t e d F i b e r . s t a t e N o d e . c o n t a i n e r I n f o ; 
                     h o s t P a r e n t I s C o n t a i n e r   =   t r u e ; 
                     r e c u r s i v e l y T r a v e r s e D e l e t i o n E f f e c t s ( f i n i s h e d R o o t ,   n e a r e s t M o u n t e d A n c e s t o r ,   d e l e t e d F i b e r ) ; 
                     h o s t P a r e n t   =   _ p r e v H o s t P a r e n t ; 
                     h o s t P a r e n t I s C o n t a i n e r   =   _ p r e v H o s t P a r e n t I s C o n t a i n e r ; 
                 } 
 
                 r e t u r n ; 
             } 
 
         c a s e   F u n c t i o n C o m p o n e n t : 
         c a s e   F o r w a r d R e f : 
         c a s e   M e m o C o m p o n e n t : 
         c a s e   S i m p l e M e m o C o m p o n e n t : 
             { 
                 i f   ( ! o f f s c r e e n S u b t r e e W a s H i d d e n )   { 
                     v a r   u p d a t e Q u e u e   =   d e l e t e d F i b e r . u p d a t e Q u e u e ; 
 
                     i f   ( u p d a t e Q u e u e   ! = =   n u l l )   { 
                         v a r   l a s t E f f e c t   =   u p d a t e Q u e u e . l a s t E f f e c t ; 
 
                         i f   ( l a s t E f f e c t   ! = =   n u l l )   { 
                             v a r   f i r s t E f f e c t   =   l a s t E f f e c t . n e x t ; 
                             v a r   e f f e c t   =   f i r s t E f f e c t ; 
 
                             d o   { 
                                 v a r   _ e f f e c t   =   e f f e c t , 
                                         d e s t r o y   =   _ e f f e c t . d e s t r o y , 
                                         t a g   =   _ e f f e c t . t a g ; 
 
                                 i f   ( d e s t r o y   ! = =   u n d e f i n e d )   { 
                                     i f   ( ( t a g   &   I n s e r t i o n )   ! = =   N o F l a g s $ 1 )   { 
                                         s a f e l y C a l l D e s t r o y ( d e l e t e d F i b e r ,   n e a r e s t M o u n t e d A n c e s t o r ,   d e s t r o y ) ; 
                                     }   e l s e   i f   ( ( t a g   &   L a y o u t )   ! = =   N o F l a g s $ 1 )   { 
                                         { 
                                             m a r k C o m p o n e n t L a y o u t E f f e c t U n m o u n t S t a r t e d ( d e l e t e d F i b e r ) ; 
                                         } 
 
                                         i f   (   d e l e t e d F i b e r . m o d e   &   P r o f i l e M o d e )   { 
                                             s t a r t L a y o u t E f f e c t T i m e r ( ) ; 
                                             s a f e l y C a l l D e s t r o y ( d e l e t e d F i b e r ,   n e a r e s t M o u n t e d A n c e s t o r ,   d e s t r o y ) ; 
                                             r e c o r d L a y o u t E f f e c t D u r a t i o n ( d e l e t e d F i b e r ) ; 
                                         }   e l s e   { 
                                             s a f e l y C a l l D e s t r o y ( d e l e t e d F i b e r ,   n e a r e s t M o u n t e d A n c e s t o r ,   d e s t r o y ) ; 
                                         } 
 
                                         { 
                                             m a r k C o m p o n e n t L a y o u t E f f e c t U n m o u n t S t o p p e d ( ) ; 
                                         } 
                                     } 
                                 } 
 
                                 e f f e c t   =   e f f e c t . n e x t ; 
                             }   w h i l e   ( e f f e c t   ! = =   f i r s t E f f e c t ) ; 
                         } 
                     } 
                 } 
 
                 r e c u r s i v e l y T r a v e r s e D e l e t i o n E f f e c t s ( f i n i s h e d R o o t ,   n e a r e s t M o u n t e d A n c e s t o r ,   d e l e t e d F i b e r ) ; 
                 r e t u r n ; 
             } 
 
         c a s e   C l a s s C o m p o n e n t : 
             { 
                 i f   ( ! o f f s c r e e n S u b t r e e W a s H i d d e n )   { 
                     s a f e l y D e t a c h R e f ( d e l e t e d F i b e r ,   n e a r e s t M o u n t e d A n c e s t o r ) ; 
                     v a r   i n s t a n c e   =   d e l e t e d F i b e r . s t a t e N o d e ; 
 
                     i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t W i l l U n m o u n t   = = =   ' f u n c t i o n ' )   { 
                         s a f e l y C a l l C o m p o n e n t W i l l U n m o u n t ( d e l e t e d F i b e r ,   n e a r e s t M o u n t e d A n c e s t o r ,   i n s t a n c e ) ; 
                     } 
                 } 
 
                 r e c u r s i v e l y T r a v e r s e D e l e t i o n E f f e c t s ( f i n i s h e d R o o t ,   n e a r e s t M o u n t e d A n c e s t o r ,   d e l e t e d F i b e r ) ; 
                 r e t u r n ; 
             } 
 
         c a s e   S c o p e C o m p o n e n t : 
             { 
 
                 r e c u r s i v e l y T r a v e r s e D e l e t i o n E f f e c t s ( f i n i s h e d R o o t ,   n e a r e s t M o u n t e d A n c e s t o r ,   d e l e t e d F i b e r ) ; 
                 r e t u r n ; 
             } 
 
         c a s e   O f f s c r e e n C o m p o n e n t : 
             { 
                 i f   (   / /   T O D O :   R e m o v e   t h i s   d e a d   f l a g 
                   d e l e t e d F i b e r . m o d e   &   C o n c u r r e n t M o d e )   { 
                     / /   I f   t h i s   o f f s c r e e n   c o m p o n e n t   i s   h i d d e n ,   w e   a l r e a d y   u n m o u n t e d   i t .   B e f o r e 
                     / /   d e l e t i n g   t h e   c h i l d r e n ,   t r a c k   t h a t   i t ' s   a l r e a d y   u n m o u n t e d   s o   t h a t   w e 
                     / /   d o n ' t   a t t e m p t   t o   u n m o u n t   t h e   e f f e c t s   a g a i n . 
                     / /   T O D O :   I f   t h e   t r e e   i s   h i d d e n ,   i n   m o s t   c a s e s   w e   s h o u l d   b e   a b l e   t o   s k i p 
                     / /   o v e r   t h e   n e s t e d   c h i l d r e n   e n t i r e l y .   A n   e x c e p t i o n   i s   w e   h a v e n ' t   y e t   f o u n d 
                     / /   t h e   t o p m o s t   h o s t   n o d e   t o   d e l e t e ,   w h i c h   w e   a l r e a d y   t r a c k   o n   t h e   s t a c k . 
                     / /   B u t   t h e   o t h e r   c a s e   i s   p o r t a l s ,   w h i c h   n e e d   t o   b e   d e t a c h e d   n o   m a t t e r   h o w 
                     / /   d e e p l y   t h e y   a r e   n e s t e d .   W e   s h o u l d   u s e   a   s u b t r e e   f l a g   t o   t r a c k   w h e t h e r   a 
                     / /   s u b t r e e   i n c l u d e s   a   n e s t e d   p o r t a l . 
                     v a r   p r e v O f f s c r e e n S u b t r e e W a s H i d d e n   =   o f f s c r e e n S u b t r e e W a s H i d d e n ; 
                     o f f s c r e e n S u b t r e e W a s H i d d e n   =   p r e v O f f s c r e e n S u b t r e e W a s H i d d e n   | |   d e l e t e d F i b e r . m e m o i z e d S t a t e   ! = =   n u l l ; 
                     r e c u r s i v e l y T r a v e r s e D e l e t i o n E f f e c t s ( f i n i s h e d R o o t ,   n e a r e s t M o u n t e d A n c e s t o r ,   d e l e t e d F i b e r ) ; 
                     o f f s c r e e n S u b t r e e W a s H i d d e n   =   p r e v O f f s c r e e n S u b t r e e W a s H i d d e n ; 
                 }   e l s e   { 
                     r e c u r s i v e l y T r a v e r s e D e l e t i o n E f f e c t s ( f i n i s h e d R o o t ,   n e a r e s t M o u n t e d A n c e s t o r ,   d e l e t e d F i b e r ) ; 
                 } 
 
                 b r e a k ; 
             } 
 
         d e f a u l t : 
             { 
                 r e c u r s i v e l y T r a v e r s e D e l e t i o n E f f e c t s ( f i n i s h e d R o o t ,   n e a r e s t M o u n t e d A n c e s t o r ,   d e l e t e d F i b e r ) ; 
                 r e t u r n ; 
             } 
     } 
 } 
 
 f u n c t i o n   c o m m i t S u s p e n s e C a l l b a c k ( f i n i s h e d W o r k )   { 
     / /   T O D O :   M o v e   t h i s   t o   p a s s i v e   p h a s e 
     v a r   n e w S t a t e   =   f i n i s h e d W o r k . m e m o i z e d S t a t e ; 
 } 
 
 f u n c t i o n   c o m m i t S u s p e n s e H y d r a t i o n C a l l b a c k s ( f i n i s h e d R o o t ,   f i n i s h e d W o r k )   { 
 
     v a r   n e w S t a t e   =   f i n i s h e d W o r k . m e m o i z e d S t a t e ; 
 
     i f   ( n e w S t a t e   = = =   n u l l )   { 
         v a r   c u r r e n t   =   f i n i s h e d W o r k . a l t e r n a t e ; 
 
         i f   ( c u r r e n t   ! = =   n u l l )   { 
             v a r   p r e v S t a t e   =   c u r r e n t . m e m o i z e d S t a t e ; 
 
             i f   ( p r e v S t a t e   ! = =   n u l l )   { 
                 v a r   s u s p e n s e I n s t a n c e   =   p r e v S t a t e . d e h y d r a t e d ; 
 
                 i f   ( s u s p e n s e I n s t a n c e   ! = =   n u l l )   { 
                     c o m m i t H y d r a t e d S u s p e n s e I n s t a n c e ( s u s p e n s e I n s t a n c e ) ; 
                 } 
             } 
         } 
     } 
 } 
 
 f u n c t i o n   a t t a c h S u s p e n s e R e t r y L i s t e n e r s ( f i n i s h e d W o r k )   { 
     / /   I f   t h i s   b o u n d a r y   j u s t   t i m e d   o u t ,   t h e n   i t   w i l l   h a v e   a   s e t   o f   w a k e a b l e s . 
     / /   F o r   e a c h   w a k e a b l e ,   a t t a c h   a   l i s t e n e r   s o   t h a t   w h e n   i t   r e s o l v e s ,   R e a c t 
     / /   a t t e m p t s   t o   r e - r e n d e r   t h e   b o u n d a r y   i n   t h e   p r i m a r y   ( p r e - t i m e o u t )   s t a t e . 
     v a r   w a k e a b l e s   =   f i n i s h e d W o r k . u p d a t e Q u e u e ; 
 
     i f   ( w a k e a b l e s   ! = =   n u l l )   { 
         f i n i s h e d W o r k . u p d a t e Q u e u e   =   n u l l ; 
         v a r   r e t r y C a c h e   =   f i n i s h e d W o r k . s t a t e N o d e ; 
 
         i f   ( r e t r y C a c h e   = = =   n u l l )   { 
             r e t r y C a c h e   =   f i n i s h e d W o r k . s t a t e N o d e   =   n e w   P o s s i b l y W e a k S e t ( ) ; 
         } 
 
         w a k e a b l e s . f o r E a c h ( f u n c t i o n   ( w a k e a b l e )   { 
             / /   M e m o i z e   u s i n g   t h e   b o u n d a r y   f i b e r   t o   p r e v e n t   r e d u n d a n t   l i s t e n e r s . 
             v a r   r e t r y   =   r e s o l v e R e t r y W a k e a b l e . b i n d ( n u l l ,   f i n i s h e d W o r k ,   w a k e a b l e ) ; 
 
             i f   ( ! r e t r y C a c h e . h a s ( w a k e a b l e ) )   { 
                 r e t r y C a c h e . a d d ( w a k e a b l e ) ; 
 
                 { 
                     i f   ( i s D e v T o o l s P r e s e n t )   { 
                         i f   ( i n P r o g r e s s L a n e s   ! = =   n u l l   & &   i n P r o g r e s s R o o t   ! = =   n u l l )   { 
                             / /   I f   w e   h a v e   p e n d i n g   w o r k   s t i l l ,   a s s o c i a t e   t h e   o r i g i n a l   u p d a t e r s   w i t h   i t . 
                             r e s t o r e P e n d i n g U p d a t e r s ( i n P r o g r e s s R o o t ,   i n P r o g r e s s L a n e s ) ; 
                         }   e l s e   { 
                             t h r o w   E r r o r ( ' E x p e c t e d   f i n i s h e d   r o o t   a n d   l a n e s   t o   b e   s e t .   T h i s   i s   a   b u g   i n   R e a c t . ' ) ; 
                         } 
                     } 
                 } 
 
                 w a k e a b l e . t h e n ( r e t r y ,   r e t r y ) ; 
             } 
         } ) ; 
     } 
 }   / /   T h i s   f u n c t i o n   d e t e c t s   w h e n   a   S u s p e n s e   b o u n d a r y   g o e s   f r o m   v i s i b l e   t o   h i d d e n . 
 f u n c t i o n   c o m m i t M u t a t i o n E f f e c t s ( r o o t ,   f i n i s h e d W o r k ,   c o m m i t t e d L a n e s )   { 
     i n P r o g r e s s L a n e s   =   c o m m i t t e d L a n e s ; 
     i n P r o g r e s s R o o t   =   r o o t ; 
     s e t C u r r e n t F i b e r ( f i n i s h e d W o r k ) ; 
     c o m m i t M u t a t i o n E f f e c t s O n F i b e r ( f i n i s h e d W o r k ,   r o o t ) ; 
     s e t C u r r e n t F i b e r ( f i n i s h e d W o r k ) ; 
     i n P r o g r e s s L a n e s   =   n u l l ; 
     i n P r o g r e s s R o o t   =   n u l l ; 
 } 
 
 f u n c t i o n   r e c u r s i v e l y T r a v e r s e M u t a t i o n E f f e c t s ( r o o t ,   p a r e n t F i b e r ,   l a n e s )   { 
     / /   D e l e t i o n s   e f f e c t s   c a n   b e   s c h e d u l e d   o n   a n y   f i b e r   t y p e .   T h e y   n e e d   t o   h a p p e n 
     / /   b e f o r e   t h e   c h i l d r e n   e f f e c t s   h a e   f i r e d . 
     v a r   d e l e t i o n s   =   p a r e n t F i b e r . d e l e t i o n s ; 
 
     i f   ( d e l e t i o n s   ! = =   n u l l )   { 
         f o r   ( v a r   i   =   0 ;   i   <   d e l e t i o n s . l e n g t h ;   i + + )   { 
             v a r   c h i l d T o D e l e t e   =   d e l e t i o n s [ i ] ; 
 
             t r y   { 
                 c o m m i t D e l e t i o n E f f e c t s ( r o o t ,   p a r e n t F i b e r ,   c h i l d T o D e l e t e ) ; 
             }   c a t c h   ( e r r o r )   { 
                 c a p t u r e C o m m i t P h a s e E r r o r ( c h i l d T o D e l e t e ,   p a r e n t F i b e r ,   e r r o r ) ; 
             } 
         } 
     } 
 
     v a r   p r e v D e b u g F i b e r   =   g e t C u r r e n t F i b e r ( ) ; 
 
     i f   ( p a r e n t F i b e r . s u b t r e e F l a g s   &   M u t a t i o n M a s k )   { 
         v a r   c h i l d   =   p a r e n t F i b e r . c h i l d ; 
 
         w h i l e   ( c h i l d   ! = =   n u l l )   { 
             s e t C u r r e n t F i b e r ( c h i l d ) ; 
             c o m m i t M u t a t i o n E f f e c t s O n F i b e r ( c h i l d ,   r o o t ) ; 
             c h i l d   =   c h i l d . s i b l i n g ; 
         } 
     } 
 
     s e t C u r r e n t F i b e r ( p r e v D e b u g F i b e r ) ; 
 } 
 
 f u n c t i o n   c o m m i t M u t a t i o n E f f e c t s O n F i b e r ( f i n i s h e d W o r k ,   r o o t ,   l a n e s )   { 
     v a r   c u r r e n t   =   f i n i s h e d W o r k . a l t e r n a t e ; 
     v a r   f l a g s   =   f i n i s h e d W o r k . f l a g s ;   / /   T h e   e f f e c t   f l a g   s h o u l d   b e   c h e c k e d   * a f t e r *   w e   r e f i n e   t h e   t y p e   o f   f i b e r , 
     / /   b e c a u s e   t h e   f i b e r   t a g   i s   m o r e   s p e c i f i c .   A n   e x c e p t i o n   i s   a n y   f l a g   r e l a t e d 
     / /   t o   r e c o n c i l a t i o n ,   b e c a u s e   t h o s e   c a n   b e   s e t   o n   a l l   f i b e r   t y p e s . 
 
     s w i t c h   ( f i n i s h e d W o r k . t a g )   { 
         c a s e   F u n c t i o n C o m p o n e n t : 
         c a s e   F o r w a r d R e f : 
         c a s e   M e m o C o m p o n e n t : 
         c a s e   S i m p l e M e m o C o m p o n e n t : 
             { 
                 r e c u r s i v e l y T r a v e r s e M u t a t i o n E f f e c t s ( r o o t ,   f i n i s h e d W o r k ) ; 
                 c o m m i t R e c o n c i l i a t i o n E f f e c t s ( f i n i s h e d W o r k ) ; 
 
                 i f   ( f l a g s   &   U p d a t e )   { 
                     t r y   { 
                         c o m m i t H o o k E f f e c t L i s t U n m o u n t ( I n s e r t i o n   |   H a s E f f e c t ,   f i n i s h e d W o r k ,   f i n i s h e d W o r k . r e t u r n ) ; 
                         c o m m i t H o o k E f f e c t L i s t M o u n t ( I n s e r t i o n   |   H a s E f f e c t ,   f i n i s h e d W o r k ) ; 
                     }   c a t c h   ( e r r o r )   { 
                         c a p t u r e C o m m i t P h a s e E r r o r ( f i n i s h e d W o r k ,   f i n i s h e d W o r k . r e t u r n ,   e r r o r ) ; 
                     }   / /   L a y o u t   e f f e c t s   a r e   d e s t r o y e d   d u r i n g   t h e   m u t a t i o n   p h a s e   s o   t h a t   a l l 
                     / /   d e s t r o y   f u n c t i o n s   f o r   a l l   f i b e r s   a r e   c a l l e d   b e f o r e   a n y   c r e a t e   f u n c t i o n s . 
                     / /   T h i s   p r e v e n t s   s i b l i n g   c o m p o n e n t   e f f e c t s   f r o m   i n t e r f e r i n g   w i t h   e a c h   o t h e r , 
                     / /   e . g .   a   d e s t r o y   f u n c t i o n   i n   o n e   c o m p o n e n t   s h o u l d   n e v e r   o v e r r i d e   a   r e f   s e t 
                     / /   b y   a   c r e a t e   f u n c t i o n   i n   a n o t h e r   c o m p o n e n t   d u r i n g   t h e   s a m e   c o m m i t . 
 
 
                     i f   (   f i n i s h e d W o r k . m o d e   &   P r o f i l e M o d e )   { 
                         t r y   { 
                             s t a r t L a y o u t E f f e c t T i m e r ( ) ; 
                             c o m m i t H o o k E f f e c t L i s t U n m o u n t ( L a y o u t   |   H a s E f f e c t ,   f i n i s h e d W o r k ,   f i n i s h e d W o r k . r e t u r n ) ; 
                         }   c a t c h   ( e r r o r )   { 
                             c a p t u r e C o m m i t P h a s e E r r o r ( f i n i s h e d W o r k ,   f i n i s h e d W o r k . r e t u r n ,   e r r o r ) ; 
                         } 
 
                         r e c o r d L a y o u t E f f e c t D u r a t i o n ( f i n i s h e d W o r k ) ; 
                     }   e l s e   { 
                         t r y   { 
                             c o m m i t H o o k E f f e c t L i s t U n m o u n t ( L a y o u t   |   H a s E f f e c t ,   f i n i s h e d W o r k ,   f i n i s h e d W o r k . r e t u r n ) ; 
                         }   c a t c h   ( e r r o r )   { 
                             c a p t u r e C o m m i t P h a s e E r r o r ( f i n i s h e d W o r k ,   f i n i s h e d W o r k . r e t u r n ,   e r r o r ) ; 
                         } 
                     } 
                 } 
 
                 r e t u r n ; 
             } 
 
         c a s e   C l a s s C o m p o n e n t : 
             { 
                 r e c u r s i v e l y T r a v e r s e M u t a t i o n E f f e c t s ( r o o t ,   f i n i s h e d W o r k ) ; 
                 c o m m i t R e c o n c i l i a t i o n E f f e c t s ( f i n i s h e d W o r k ) ; 
 
                 i f   ( f l a g s   &   R e f )   { 
                     i f   ( c u r r e n t   ! = =   n u l l )   { 
                         s a f e l y D e t a c h R e f ( c u r r e n t ,   c u r r e n t . r e t u r n ) ; 
                     } 
                 } 
 
                 r e t u r n ; 
             } 
 
         c a s e   H o s t C o m p o n e n t : 
             { 
                 r e c u r s i v e l y T r a v e r s e M u t a t i o n E f f e c t s ( r o o t ,   f i n i s h e d W o r k ) ; 
                 c o m m i t R e c o n c i l i a t i o n E f f e c t s ( f i n i s h e d W o r k ) ; 
 
                 i f   ( f l a g s   &   R e f )   { 
                     i f   ( c u r r e n t   ! = =   n u l l )   { 
                         s a f e l y D e t a c h R e f ( c u r r e n t ,   c u r r e n t . r e t u r n ) ; 
                     } 
                 } 
 
                 { 
                     / /   T O D O :   C o n t e n t R e s e t   g e t s   c l e a r e d   b y   t h e   c h i l d r e n   d u r i n g   t h e   c o m m i t 
                     / /   p h a s e .   T h i s   i s   a   r e f a c t o r   h a z a r d   b e c a u s e   i t   m e a n s   w e   m u s t   r e a d 
                     / /   f l a g s   t h e   f l a g s   a f t e r   ` c o m m i t R e c o n c i l i a t i o n E f f e c t s `   h a s   a l r e a d y   r u n ; 
                     / /   t h e   o r d e r   m a t t e r s .   W e   s h o u l d   r e f a c t o r   s o   t h a t   C o n t e n t R e s e t   d o e s   n o t 
                     / /   r e l y   o n   m u t a t i n g   t h e   f l a g   d u r i n g   c o m m i t .   L i k e   b y   s e t t i n g   a   f l a g 
                     / /   d u r i n g   t h e   r e n d e r   p h a s e   i n s t e a d . 
                     i f   ( f i n i s h e d W o r k . f l a g s   &   C o n t e n t R e s e t )   { 
                         v a r   i n s t a n c e   =   f i n i s h e d W o r k . s t a t e N o d e ; 
 
                         t r y   { 
                             r e s e t T e x t C o n t e n t ( i n s t a n c e ) ; 
                         }   c a t c h   ( e r r o r )   { 
                             c a p t u r e C o m m i t P h a s e E r r o r ( f i n i s h e d W o r k ,   f i n i s h e d W o r k . r e t u r n ,   e r r o r ) ; 
                         } 
                     } 
 
                     i f   ( f l a g s   &   U p d a t e )   { 
                         v a r   _ i n s t a n c e 4   =   f i n i s h e d W o r k . s t a t e N o d e ; 
 
                         i f   ( _ i n s t a n c e 4   ! =   n u l l )   { 
                             / /   C o m m i t   t h e   w o r k   p r e p a r e d   e a r l i e r . 
                             v a r   n e w P r o p s   =   f i n i s h e d W o r k . m e m o i z e d P r o p s ;   / /   F o r   h y d r a t i o n   w e   r e u s e   t h e   u p d a t e   p a t h   b u t   w e   t r e a t   t h e   o l d P r o p s 
                             / /   a s   t h e   n e w P r o p s .   T h e   u p d a t e P a y l o a d   w i l l   c o n t a i n   t h e   r e a l   c h a n g e   i n 
                             / /   t h i s   c a s e . 
 
                             v a r   o l d P r o p s   =   c u r r e n t   ! = =   n u l l   ?   c u r r e n t . m e m o i z e d P r o p s   :   n e w P r o p s ; 
                             v a r   t y p e   =   f i n i s h e d W o r k . t y p e ;   / /   T O D O :   T y p e   t h e   u p d a t e Q u e u e   t o   b e   s p e c i f i c   t o   h o s t   c o m p o n e n t s . 
 
                             v a r   u p d a t e P a y l o a d   =   f i n i s h e d W o r k . u p d a t e Q u e u e ; 
                             f i n i s h e d W o r k . u p d a t e Q u e u e   =   n u l l ; 
 
                             i f   ( u p d a t e P a y l o a d   ! = =   n u l l )   { 
                                 t r y   { 
                                     c o m m i t U p d a t e ( _ i n s t a n c e 4 ,   u p d a t e P a y l o a d ,   t y p e ,   o l d P r o p s ,   n e w P r o p s ,   f i n i s h e d W o r k ) ; 
                                 }   c a t c h   ( e r r o r )   { 
                                     c a p t u r e C o m m i t P h a s e E r r o r ( f i n i s h e d W o r k ,   f i n i s h e d W o r k . r e t u r n ,   e r r o r ) ; 
                                 } 
                             } 
                         } 
                     } 
                 } 
 
                 r e t u r n ; 
             } 
 
         c a s e   H o s t T e x t : 
             { 
                 r e c u r s i v e l y T r a v e r s e M u t a t i o n E f f e c t s ( r o o t ,   f i n i s h e d W o r k ) ; 
                 c o m m i t R e c o n c i l i a t i o n E f f e c t s ( f i n i s h e d W o r k ) ; 
 
                 i f   ( f l a g s   &   U p d a t e )   { 
                     { 
                         i f   ( f i n i s h e d W o r k . s t a t e N o d e   = = =   n u l l )   { 
                             t h r o w   n e w   E r r o r ( ' T h i s   s h o u l d   h a v e   a   t e x t   n o d e   i n i t i a l i z e d .   T h i s   e r r o r   i s   l i k e l y   '   +   ' c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
                         } 
 
                         v a r   t e x t I n s t a n c e   =   f i n i s h e d W o r k . s t a t e N o d e ; 
                         v a r   n e w T e x t   =   f i n i s h e d W o r k . m e m o i z e d P r o p s ;   / /   F o r   h y d r a t i o n   w e   r e u s e   t h e   u p d a t e   p a t h   b u t   w e   t r e a t   t h e   o l d P r o p s 
                         / /   a s   t h e   n e w P r o p s .   T h e   u p d a t e P a y l o a d   w i l l   c o n t a i n   t h e   r e a l   c h a n g e   i n 
                         / /   t h i s   c a s e . 
 
                         v a r   o l d T e x t   =   c u r r e n t   ! = =   n u l l   ?   c u r r e n t . m e m o i z e d P r o p s   :   n e w T e x t ; 
 
                         t r y   { 
                             c o m m i t T e x t U p d a t e ( t e x t I n s t a n c e ,   o l d T e x t ,   n e w T e x t ) ; 
                         }   c a t c h   ( e r r o r )   { 
                             c a p t u r e C o m m i t P h a s e E r r o r ( f i n i s h e d W o r k ,   f i n i s h e d W o r k . r e t u r n ,   e r r o r ) ; 
                         } 
                     } 
                 } 
 
                 r e t u r n ; 
             } 
 
         c a s e   H o s t R o o t : 
             { 
                 r e c u r s i v e l y T r a v e r s e M u t a t i o n E f f e c t s ( r o o t ,   f i n i s h e d W o r k ) ; 
                 c o m m i t R e c o n c i l i a t i o n E f f e c t s ( f i n i s h e d W o r k ) ; 
 
                 i f   ( f l a g s   &   U p d a t e )   { 
                     { 
                         i f   ( c u r r e n t   ! = =   n u l l )   { 
                             v a r   p r e v R o o t S t a t e   =   c u r r e n t . m e m o i z e d S t a t e ; 
 
                             i f   ( p r e v R o o t S t a t e . i s D e h y d r a t e d )   { 
                                 t r y   { 
                                     c o m m i t H y d r a t e d C o n t a i n e r ( r o o t . c o n t a i n e r I n f o ) ; 
                                 }   c a t c h   ( e r r o r )   { 
                                     c a p t u r e C o m m i t P h a s e E r r o r ( f i n i s h e d W o r k ,   f i n i s h e d W o r k . r e t u r n ,   e r r o r ) ; 
                                 } 
                             } 
                         } 
                     } 
                 } 
 
                 r e t u r n ; 
             } 
 
         c a s e   H o s t P o r t a l : 
             { 
                 r e c u r s i v e l y T r a v e r s e M u t a t i o n E f f e c t s ( r o o t ,   f i n i s h e d W o r k ) ; 
                 c o m m i t R e c o n c i l i a t i o n E f f e c t s ( f i n i s h e d W o r k ) ; 
 
                 r e t u r n ; 
             } 
 
         c a s e   S u s p e n s e C o m p o n e n t : 
             { 
                 r e c u r s i v e l y T r a v e r s e M u t a t i o n E f f e c t s ( r o o t ,   f i n i s h e d W o r k ) ; 
                 c o m m i t R e c o n c i l i a t i o n E f f e c t s ( f i n i s h e d W o r k ) ; 
                 v a r   o f f s c r e e n F i b e r   =   f i n i s h e d W o r k . c h i l d ; 
 
                 i f   ( o f f s c r e e n F i b e r . f l a g s   &   V i s i b i l i t y )   { 
                     v a r   n e w S t a t e   =   o f f s c r e e n F i b e r . m e m o i z e d S t a t e ; 
                     v a r   i s H i d d e n   =   n e w S t a t e   ! = =   n u l l ; 
 
                     i f   ( i s H i d d e n )   { 
                         v a r   w a s H i d d e n   =   o f f s c r e e n F i b e r . a l t e r n a t e   ! = =   n u l l   & &   o f f s c r e e n F i b e r . a l t e r n a t e . m e m o i z e d S t a t e   ! = =   n u l l ; 
 
                         i f   ( ! w a s H i d d e n )   { 
                             / /   T O D O :   M o v e   t o   p a s s i v e   p h a s e 
                             m a r k C o m m i t T i m e O f F a l l b a c k ( ) ; 
                         } 
                     } 
                 } 
 
                 i f   ( f l a g s   &   U p d a t e )   { 
                     t r y   { 
                         c o m m i t S u s p e n s e C a l l b a c k ( f i n i s h e d W o r k ) ; 
                     }   c a t c h   ( e r r o r )   { 
                         c a p t u r e C o m m i t P h a s e E r r o r ( f i n i s h e d W o r k ,   f i n i s h e d W o r k . r e t u r n ,   e r r o r ) ; 
                     } 
 
                     a t t a c h S u s p e n s e R e t r y L i s t e n e r s ( f i n i s h e d W o r k ) ; 
                 } 
 
                 r e t u r n ; 
             } 
 
         c a s e   O f f s c r e e n C o m p o n e n t : 
             { 
                 v a r   _ w a s H i d d e n   =   c u r r e n t   ! = =   n u l l   & &   c u r r e n t . m e m o i z e d S t a t e   ! = =   n u l l ; 
 
                 i f   (   / /   T O D O :   R e m o v e   t h i s   d e a d   f l a g 
                   f i n i s h e d W o r k . m o d e   &   C o n c u r r e n t M o d e )   { 
                     / /   B e f o r e   c o m m i t t i n g   t h e   c h i l d r e n ,   t r a c k   o n   t h e   s t a c k   w h e t h e r   t h i s 
                     / /   o f f s c r e e n   s u b t r e e   w a s   a l r e a d y   h i d d e n ,   s o   t h a t   w e   d o n ' t   u n m o u n t   t h e 
                     / /   e f f e c t s   a g a i n . 
                     v a r   p r e v O f f s c r e e n S u b t r e e W a s H i d d e n   =   o f f s c r e e n S u b t r e e W a s H i d d e n ; 
                     o f f s c r e e n S u b t r e e W a s H i d d e n   =   p r e v O f f s c r e e n S u b t r e e W a s H i d d e n   | |   _ w a s H i d d e n ; 
                     r e c u r s i v e l y T r a v e r s e M u t a t i o n E f f e c t s ( r o o t ,   f i n i s h e d W o r k ) ; 
                     o f f s c r e e n S u b t r e e W a s H i d d e n   =   p r e v O f f s c r e e n S u b t r e e W a s H i d d e n ; 
                 }   e l s e   { 
                     r e c u r s i v e l y T r a v e r s e M u t a t i o n E f f e c t s ( r o o t ,   f i n i s h e d W o r k ) ; 
                 } 
 
                 c o m m i t R e c o n c i l i a t i o n E f f e c t s ( f i n i s h e d W o r k ) ; 
 
                 i f   ( f l a g s   &   V i s i b i l i t y )   { 
                     v a r   _ n e w S t a t e   =   f i n i s h e d W o r k . m e m o i z e d S t a t e ; 
 
                     v a r   _ i s H i d d e n   =   _ n e w S t a t e   ! = =   n u l l ; 
 
                     v a r   o f f s c r e e n B o u n d a r y   =   f i n i s h e d W o r k ; 
 
                     { 
                         / /   T O D O :   T h i s   n e e d s   t o   r u n   w h e n e v e r   t h e r e ' s   a n   i n s e r t i o n   o r   u p d a t e 
                         / /   i n s i d e   a   h i d d e n   O f f s c r e e n   t r e e . 
                         h i d e O r U n h i d e A l l C h i l d r e n ( o f f s c r e e n B o u n d a r y ,   _ i s H i d d e n ) ; 
                     } 
 
                     { 
                         i f   ( _ i s H i d d e n )   { 
                             i f   ( ! _ w a s H i d d e n )   { 
                                 i f   ( ( o f f s c r e e n B o u n d a r y . m o d e   &   C o n c u r r e n t M o d e )   ! = =   N o M o d e )   { 
                                     n e x t E f f e c t   =   o f f s c r e e n B o u n d a r y ; 
                                     v a r   o f f s c r e e n C h i l d   =   o f f s c r e e n B o u n d a r y . c h i l d ; 
 
                                     w h i l e   ( o f f s c r e e n C h i l d   ! = =   n u l l )   { 
                                         n e x t E f f e c t   =   o f f s c r e e n C h i l d ; 
                                         d i s a p p e a r L a y o u t E f f e c t s _ b e g i n ( o f f s c r e e n C h i l d ) ; 
                                         o f f s c r e e n C h i l d   =   o f f s c r e e n C h i l d . s i b l i n g ; 
                                     } 
                                 } 
                             } 
                         } 
                     } 
                 } 
 
                 r e t u r n ; 
             } 
 
         c a s e   S u s p e n s e L i s t C o m p o n e n t : 
             { 
                 r e c u r s i v e l y T r a v e r s e M u t a t i o n E f f e c t s ( r o o t ,   f i n i s h e d W o r k ) ; 
                 c o m m i t R e c o n c i l i a t i o n E f f e c t s ( f i n i s h e d W o r k ) ; 
 
                 i f   ( f l a g s   &   U p d a t e )   { 
                     a t t a c h S u s p e n s e R e t r y L i s t e n e r s ( f i n i s h e d W o r k ) ; 
                 } 
 
                 r e t u r n ; 
             } 
 
         c a s e   S c o p e C o m p o n e n t : 
             { 
 
                 r e t u r n ; 
             } 
 
         d e f a u l t : 
             { 
                 r e c u r s i v e l y T r a v e r s e M u t a t i o n E f f e c t s ( r o o t ,   f i n i s h e d W o r k ) ; 
                 c o m m i t R e c o n c i l i a t i o n E f f e c t s ( f i n i s h e d W o r k ) ; 
                 r e t u r n ; 
             } 
     } 
 } 
 
 f u n c t i o n   c o m m i t R e c o n c i l i a t i o n E f f e c t s ( f i n i s h e d W o r k )   { 
     / /   P l a c e m e n t   e f f e c t s   ( i n s e r t i o n s ,   r e o r d e r s )   c a n   b e   s c h e d u l e d   o n   a n y   f i b e r 
     / /   t y p e .   T h e y   n e e d s   t o   h a p p e n   a f t e r   t h e   c h i l d r e n   e f f e c t s   h a v e   f i r e d ,   b u t 
     / /   b e f o r e   t h e   e f f e c t s   o n   t h i s   f i b e r   h a v e   f i r e d . 
     v a r   f l a g s   =   f i n i s h e d W o r k . f l a g s ; 
 
     i f   ( f l a g s   &   P l a c e m e n t )   { 
         t r y   { 
             c o m m i t P l a c e m e n t ( f i n i s h e d W o r k ) ; 
         }   c a t c h   ( e r r o r )   { 
             c a p t u r e C o m m i t P h a s e E r r o r ( f i n i s h e d W o r k ,   f i n i s h e d W o r k . r e t u r n ,   e r r o r ) ; 
         }   / /   C l e a r   t h e   " p l a c e m e n t "   f r o m   e f f e c t   t a g   s o   t h a t   w e   k n o w   t h a t   t h i s   i s 
         / /   i n s e r t e d ,   b e f o r e   a n y   l i f e - c y c l e s   l i k e   c o m p o n e n t D i d M o u n t   g e t s   c a l l e d . 
         / /   T O D O :   f i n d D O M N o d e   d o e s n ' t   r e l y   o n   t h i s   a n y   m o r e   b u t   i s M o u n t e d   d o e s 
         / /   a n d   i s M o u n t e d   i s   d e p r e c a t e d   a n y w a y   s o   w e   s h o u l d   b e   a b l e   t o   k i l l   t h i s . 
 
 
         f i n i s h e d W o r k . f l a g s   & =   ~ P l a c e m e n t ; 
     } 
 
     i f   ( f l a g s   &   H y d r a t i n g )   { 
         f i n i s h e d W o r k . f l a g s   & =   ~ H y d r a t i n g ; 
     } 
 } 
 
 f u n c t i o n   c o m m i t L a y o u t E f f e c t s ( f i n i s h e d W o r k ,   r o o t ,   c o m m i t t e d L a n e s )   { 
     i n P r o g r e s s L a n e s   =   c o m m i t t e d L a n e s ; 
     i n P r o g r e s s R o o t   =   r o o t ; 
     n e x t E f f e c t   =   f i n i s h e d W o r k ; 
     c o m m i t L a y o u t E f f e c t s _ b e g i n ( f i n i s h e d W o r k ,   r o o t ,   c o m m i t t e d L a n e s ) ; 
     i n P r o g r e s s L a n e s   =   n u l l ; 
     i n P r o g r e s s R o o t   =   n u l l ; 
 } 
 
 f u n c t i o n   c o m m i t L a y o u t E f f e c t s _ b e g i n ( s u b t r e e R o o t ,   r o o t ,   c o m m i t t e d L a n e s )   { 
     / /   S u s p e n s e   l a y o u t   e f f e c t s   s e m a n t i c s   d o n ' t   c h a n g e   f o r   l e g a c y   r o o t s . 
     v a r   i s M o d e r n R o o t   =   ( s u b t r e e R o o t . m o d e   &   C o n c u r r e n t M o d e )   ! = =   N o M o d e ; 
 
     w h i l e   ( n e x t E f f e c t   ! = =   n u l l )   { 
         v a r   f i b e r   =   n e x t E f f e c t ; 
         v a r   f i r s t C h i l d   =   f i b e r . c h i l d ; 
 
         i f   (   f i b e r . t a g   = = =   O f f s c r e e n C o m p o n e n t   & &   i s M o d e r n R o o t )   { 
             / /   K e e p   t r a c k   o f   t h e   c u r r e n t   O f f s c r e e n   s t a c k ' s   s t a t e . 
             v a r   i s H i d d e n   =   f i b e r . m e m o i z e d S t a t e   ! = =   n u l l ; 
             v a r   n e w O f f s c r e e n S u b t r e e I s H i d d e n   =   i s H i d d e n   | |   o f f s c r e e n S u b t r e e I s H i d d e n ; 
 
             i f   ( n e w O f f s c r e e n S u b t r e e I s H i d d e n )   { 
                 / /   T h e   O f f s c r e e n   t r e e   i s   h i d d e n .   S k i p   o v e r   i t s   l a y o u t   e f f e c t s . 
                 c o m m i t L a y o u t M o u n t E f f e c t s _ c o m p l e t e ( s u b t r e e R o o t ,   r o o t ,   c o m m i t t e d L a n e s ) ; 
                 c o n t i n u e ; 
             }   e l s e   { 
                 / /   T O D O   ( O f f s c r e e n )   A l s o   c h e c k :   s u b t r e e F l a g s   &   L a y o u t M a s k 
                 v a r   c u r r e n t   =   f i b e r . a l t e r n a t e ; 
                 v a r   w a s H i d d e n   =   c u r r e n t   ! = =   n u l l   & &   c u r r e n t . m e m o i z e d S t a t e   ! = =   n u l l ; 
                 v a r   n e w O f f s c r e e n S u b t r e e W a s H i d d e n   =   w a s H i d d e n   | |   o f f s c r e e n S u b t r e e W a s H i d d e n ; 
                 v a r   p r e v O f f s c r e e n S u b t r e e I s H i d d e n   =   o f f s c r e e n S u b t r e e I s H i d d e n ; 
                 v a r   p r e v O f f s c r e e n S u b t r e e W a s H i d d e n   =   o f f s c r e e n S u b t r e e W a s H i d d e n ;   / /   T r a v e r s e   t h e   O f f s c r e e n   s u b t r e e   w i t h   t h e   c u r r e n t   O f f s c r e e n   a s   t h e   r o o t . 
 
                 o f f s c r e e n S u b t r e e I s H i d d e n   =   n e w O f f s c r e e n S u b t r e e I s H i d d e n ; 
                 o f f s c r e e n S u b t r e e W a s H i d d e n   =   n e w O f f s c r e e n S u b t r e e W a s H i d d e n ; 
 
                 i f   ( o f f s c r e e n S u b t r e e W a s H i d d e n   & &   ! p r e v O f f s c r e e n S u b t r e e W a s H i d d e n )   { 
                     / /   T h i s   i s   t h e   r o o t   o f   a   r e a p p e a r i n g   b o u n d a r y .   T u r n   i t s   l a y o u t   e f f e c t s 
                     / /   b a c k   o n . 
                     n e x t E f f e c t   =   f i b e r ; 
                     r e a p p e a r L a y o u t E f f e c t s _ b e g i n ( f i b e r ) ; 
                 } 
 
                 v a r   c h i l d   =   f i r s t C h i l d ; 
 
                 w h i l e   ( c h i l d   ! = =   n u l l )   { 
                     n e x t E f f e c t   =   c h i l d ; 
                     c o m m i t L a y o u t E f f e c t s _ b e g i n ( c h i l d ,   / /   N e w   r o o t ;   b u b b l e   b a c k   u p   t o   h e r e   a n d   s t o p . 
                     r o o t ,   c o m m i t t e d L a n e s ) ; 
                     c h i l d   =   c h i l d . s i b l i n g ; 
                 }   / /   R e s t o r e   O f f s c r e e n   s t a t e   a n d   r e s u m e   i n   o u r - p r o g r e s s   t r a v e r s a l . 
 
 
                 n e x t E f f e c t   =   f i b e r ; 
                 o f f s c r e e n S u b t r e e I s H i d d e n   =   p r e v O f f s c r e e n S u b t r e e I s H i d d e n ; 
                 o f f s c r e e n S u b t r e e W a s H i d d e n   =   p r e v O f f s c r e e n S u b t r e e W a s H i d d e n ; 
                 c o m m i t L a y o u t M o u n t E f f e c t s _ c o m p l e t e ( s u b t r e e R o o t ,   r o o t ,   c o m m i t t e d L a n e s ) ; 
                 c o n t i n u e ; 
             } 
         } 
 
         i f   ( ( f i b e r . s u b t r e e F l a g s   &   L a y o u t M a s k )   ! = =   N o F l a g s   & &   f i r s t C h i l d   ! = =   n u l l )   { 
             f i r s t C h i l d . r e t u r n   =   f i b e r ; 
             n e x t E f f e c t   =   f i r s t C h i l d ; 
         }   e l s e   { 
             c o m m i t L a y o u t M o u n t E f f e c t s _ c o m p l e t e ( s u b t r e e R o o t ,   r o o t ,   c o m m i t t e d L a n e s ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   c o m m i t L a y o u t M o u n t E f f e c t s _ c o m p l e t e ( s u b t r e e R o o t ,   r o o t ,   c o m m i t t e d L a n e s )   { 
     w h i l e   ( n e x t E f f e c t   ! = =   n u l l )   { 
         v a r   f i b e r   =   n e x t E f f e c t ; 
 
         i f   ( ( f i b e r . f l a g s   &   L a y o u t M a s k )   ! = =   N o F l a g s )   { 
             v a r   c u r r e n t   =   f i b e r . a l t e r n a t e ; 
             s e t C u r r e n t F i b e r ( f i b e r ) ; 
 
             t r y   { 
                 c o m m i t L a y o u t E f f e c t O n F i b e r ( r o o t ,   c u r r e n t ,   f i b e r ,   c o m m i t t e d L a n e s ) ; 
             }   c a t c h   ( e r r o r )   { 
                 c a p t u r e C o m m i t P h a s e E r r o r ( f i b e r ,   f i b e r . r e t u r n ,   e r r o r ) ; 
             } 
 
             r e s e t C u r r e n t F i b e r ( ) ; 
         } 
 
         i f   ( f i b e r   = = =   s u b t r e e R o o t )   { 
             n e x t E f f e c t   =   n u l l ; 
             r e t u r n ; 
         } 
 
         v a r   s i b l i n g   =   f i b e r . s i b l i n g ; 
 
         i f   ( s i b l i n g   ! = =   n u l l )   { 
             s i b l i n g . r e t u r n   =   f i b e r . r e t u r n ; 
             n e x t E f f e c t   =   s i b l i n g ; 
             r e t u r n ; 
         } 
 
         n e x t E f f e c t   =   f i b e r . r e t u r n ; 
     } 
 } 
 
 f u n c t i o n   d i s a p p e a r L a y o u t E f f e c t s _ b e g i n ( s u b t r e e R o o t )   { 
     w h i l e   ( n e x t E f f e c t   ! = =   n u l l )   { 
         v a r   f i b e r   =   n e x t E f f e c t ; 
         v a r   f i r s t C h i l d   =   f i b e r . c h i l d ;   / /   T O D O   ( O f f s c r e e n )   C h e c k :   f l a g s   &   ( R e f S t a t i c   |   L a y o u t S t a t i c ) 
 
         s w i t c h   ( f i b e r . t a g )   { 
             c a s e   F u n c t i o n C o m p o n e n t : 
             c a s e   F o r w a r d R e f : 
             c a s e   M e m o C o m p o n e n t : 
             c a s e   S i m p l e M e m o C o m p o n e n t : 
                 { 
                     i f   (   f i b e r . m o d e   &   P r o f i l e M o d e )   { 
                         t r y   { 
                             s t a r t L a y o u t E f f e c t T i m e r ( ) ; 
                             c o m m i t H o o k E f f e c t L i s t U n m o u n t ( L a y o u t ,   f i b e r ,   f i b e r . r e t u r n ) ; 
                         }   f i n a l l y   { 
                             r e c o r d L a y o u t E f f e c t D u r a t i o n ( f i b e r ) ; 
                         } 
                     }   e l s e   { 
                         c o m m i t H o o k E f f e c t L i s t U n m o u n t ( L a y o u t ,   f i b e r ,   f i b e r . r e t u r n ) ; 
                     } 
 
                     b r e a k ; 
                 } 
 
             c a s e   C l a s s C o m p o n e n t : 
                 { 
                     / /   T O D O   ( O f f s c r e e n )   C h e c k :   f l a g s   &   R e f S t a t i c 
                     s a f e l y D e t a c h R e f ( f i b e r ,   f i b e r . r e t u r n ) ; 
                     v a r   i n s t a n c e   =   f i b e r . s t a t e N o d e ; 
 
                     i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t W i l l U n m o u n t   = = =   ' f u n c t i o n ' )   { 
                         s a f e l y C a l l C o m p o n e n t W i l l U n m o u n t ( f i b e r ,   f i b e r . r e t u r n ,   i n s t a n c e ) ; 
                     } 
 
                     b r e a k ; 
                 } 
 
             c a s e   H o s t C o m p o n e n t : 
                 { 
                     s a f e l y D e t a c h R e f ( f i b e r ,   f i b e r . r e t u r n ) ; 
                     b r e a k ; 
                 } 
 
             c a s e   O f f s c r e e n C o m p o n e n t : 
                 { 
                     / /   C h e c k   i f   t h i s   i s   a 
                     v a r   i s H i d d e n   =   f i b e r . m e m o i z e d S t a t e   ! = =   n u l l ; 
 
                     i f   ( i s H i d d e n )   { 
                         / /   N e s t e d   O f f s c r e e n   t r e e   i s   a l r e a d y   h i d d e n .   D o n ' t   d i s a p p e a r 
                         / /   i t s   e f f e c t s . 
                         d i s a p p e a r L a y o u t E f f e c t s _ c o m p l e t e ( s u b t r e e R o o t ) ; 
                         c o n t i n u e ; 
                     } 
 
                     b r e a k ; 
                 } 
         }   / /   T O D O   ( O f f s c r e e n )   C h e c k :   s u b t r e e F l a g s   &   L a y o u t S t a t i c 
 
 
         i f   ( f i r s t C h i l d   ! = =   n u l l )   { 
             f i r s t C h i l d . r e t u r n   =   f i b e r ; 
             n e x t E f f e c t   =   f i r s t C h i l d ; 
         }   e l s e   { 
             d i s a p p e a r L a y o u t E f f e c t s _ c o m p l e t e ( s u b t r e e R o o t ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   d i s a p p e a r L a y o u t E f f e c t s _ c o m p l e t e ( s u b t r e e R o o t )   { 
     w h i l e   ( n e x t E f f e c t   ! = =   n u l l )   { 
         v a r   f i b e r   =   n e x t E f f e c t ; 
 
         i f   ( f i b e r   = = =   s u b t r e e R o o t )   { 
             n e x t E f f e c t   =   n u l l ; 
             r e t u r n ; 
         } 
 
         v a r   s i b l i n g   =   f i b e r . s i b l i n g ; 
 
         i f   ( s i b l i n g   ! = =   n u l l )   { 
             s i b l i n g . r e t u r n   =   f i b e r . r e t u r n ; 
             n e x t E f f e c t   =   s i b l i n g ; 
             r e t u r n ; 
         } 
 
         n e x t E f f e c t   =   f i b e r . r e t u r n ; 
     } 
 } 
 
 f u n c t i o n   r e a p p e a r L a y o u t E f f e c t s _ b e g i n ( s u b t r e e R o o t )   { 
     w h i l e   ( n e x t E f f e c t   ! = =   n u l l )   { 
         v a r   f i b e r   =   n e x t E f f e c t ; 
         v a r   f i r s t C h i l d   =   f i b e r . c h i l d ; 
 
         i f   ( f i b e r . t a g   = = =   O f f s c r e e n C o m p o n e n t )   { 
             v a r   i s H i d d e n   =   f i b e r . m e m o i z e d S t a t e   ! = =   n u l l ; 
 
             i f   ( i s H i d d e n )   { 
                 / /   N e s t e d   O f f s c r e e n   t r e e   i s   s t i l l   h i d d e n .   D o n ' t   r e - a p p e a r   i t s   e f f e c t s . 
                 r e a p p e a r L a y o u t E f f e c t s _ c o m p l e t e ( s u b t r e e R o o t ) ; 
                 c o n t i n u e ; 
             } 
         }   / /   T O D O   ( O f f s c r e e n )   C h e c k :   s u b t r e e F l a g s   &   L a y o u t S t a t i c 
 
 
         i f   ( f i r s t C h i l d   ! = =   n u l l )   { 
             / /   T h i s   n o d e   m a y   h a v e   b e e n   r e u s e d   f r o m   a   p r e v i o u s   r e n d e r ,   s o   w e   c a n ' t 
             / /   a s s u m e   i t s   r e t u r n   p o i n t e r   i s   c o r r e c t . 
             f i r s t C h i l d . r e t u r n   =   f i b e r ; 
             n e x t E f f e c t   =   f i r s t C h i l d ; 
         }   e l s e   { 
             r e a p p e a r L a y o u t E f f e c t s _ c o m p l e t e ( s u b t r e e R o o t ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   r e a p p e a r L a y o u t E f f e c t s _ c o m p l e t e ( s u b t r e e R o o t )   { 
     w h i l e   ( n e x t E f f e c t   ! = =   n u l l )   { 
         v a r   f i b e r   =   n e x t E f f e c t ;   / /   T O D O   ( O f f s c r e e n )   C h e c k :   f l a g s   &   L a y o u t S t a t i c 
 
         s e t C u r r e n t F i b e r ( f i b e r ) ; 
 
         t r y   { 
             r e a p p e a r L a y o u t E f f e c t s O n F i b e r ( f i b e r ) ; 
         }   c a t c h   ( e r r o r )   { 
             c a p t u r e C o m m i t P h a s e E r r o r ( f i b e r ,   f i b e r . r e t u r n ,   e r r o r ) ; 
         } 
 
         r e s e t C u r r e n t F i b e r ( ) ; 
 
         i f   ( f i b e r   = = =   s u b t r e e R o o t )   { 
             n e x t E f f e c t   =   n u l l ; 
             r e t u r n ; 
         } 
 
         v a r   s i b l i n g   =   f i b e r . s i b l i n g ; 
 
         i f   ( s i b l i n g   ! = =   n u l l )   { 
             / /   T h i s   n o d e   m a y   h a v e   b e e n   r e u s e d   f r o m   a   p r e v i o u s   r e n d e r ,   s o   w e   c a n ' t 
             / /   a s s u m e   i t s   r e t u r n   p o i n t e r   i s   c o r r e c t . 
             s i b l i n g . r e t u r n   =   f i b e r . r e t u r n ; 
             n e x t E f f e c t   =   s i b l i n g ; 
             r e t u r n ; 
         } 
 
         n e x t E f f e c t   =   f i b e r . r e t u r n ; 
     } 
 } 
 
 f u n c t i o n   c o m m i t P a s s i v e M o u n t E f f e c t s ( r o o t ,   f i n i s h e d W o r k ,   c o m m i t t e d L a n e s ,   c o m m i t t e d T r a n s i t i o n s )   { 
     n e x t E f f e c t   =   f i n i s h e d W o r k ; 
     c o m m i t P a s s i v e M o u n t E f f e c t s _ b e g i n ( f i n i s h e d W o r k ,   r o o t ,   c o m m i t t e d L a n e s ,   c o m m i t t e d T r a n s i t i o n s ) ; 
 } 
 
 f u n c t i o n   c o m m i t P a s s i v e M o u n t E f f e c t s _ b e g i n ( s u b t r e e R o o t ,   r o o t ,   c o m m i t t e d L a n e s ,   c o m m i t t e d T r a n s i t i o n s )   { 
     w h i l e   ( n e x t E f f e c t   ! = =   n u l l )   { 
         v a r   f i b e r   =   n e x t E f f e c t ; 
         v a r   f i r s t C h i l d   =   f i b e r . c h i l d ; 
 
         i f   ( ( f i b e r . s u b t r e e F l a g s   &   P a s s i v e M a s k )   ! = =   N o F l a g s   & &   f i r s t C h i l d   ! = =   n u l l )   { 
             f i r s t C h i l d . r e t u r n   =   f i b e r ; 
             n e x t E f f e c t   =   f i r s t C h i l d ; 
         }   e l s e   { 
             c o m m i t P a s s i v e M o u n t E f f e c t s _ c o m p l e t e ( s u b t r e e R o o t ,   r o o t ,   c o m m i t t e d L a n e s ,   c o m m i t t e d T r a n s i t i o n s ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   c o m m i t P a s s i v e M o u n t E f f e c t s _ c o m p l e t e ( s u b t r e e R o o t ,   r o o t ,   c o m m i t t e d L a n e s ,   c o m m i t t e d T r a n s i t i o n s )   { 
     w h i l e   ( n e x t E f f e c t   ! = =   n u l l )   { 
         v a r   f i b e r   =   n e x t E f f e c t ; 
 
         i f   ( ( f i b e r . f l a g s   &   P a s s i v e )   ! = =   N o F l a g s )   { 
             s e t C u r r e n t F i b e r ( f i b e r ) ; 
 
             t r y   { 
                 c o m m i t P a s s i v e M o u n t O n F i b e r ( r o o t ,   f i b e r ,   c o m m i t t e d L a n e s ,   c o m m i t t e d T r a n s i t i o n s ) ; 
             }   c a t c h   ( e r r o r )   { 
                 c a p t u r e C o m m i t P h a s e E r r o r ( f i b e r ,   f i b e r . r e t u r n ,   e r r o r ) ; 
             } 
 
             r e s e t C u r r e n t F i b e r ( ) ; 
         } 
 
         i f   ( f i b e r   = = =   s u b t r e e R o o t )   { 
             n e x t E f f e c t   =   n u l l ; 
             r e t u r n ; 
         } 
 
         v a r   s i b l i n g   =   f i b e r . s i b l i n g ; 
 
         i f   ( s i b l i n g   ! = =   n u l l )   { 
             s i b l i n g . r e t u r n   =   f i b e r . r e t u r n ; 
             n e x t E f f e c t   =   s i b l i n g ; 
             r e t u r n ; 
         } 
 
         n e x t E f f e c t   =   f i b e r . r e t u r n ; 
     } 
 } 
 
 f u n c t i o n   c o m m i t P a s s i v e M o u n t O n F i b e r ( f i n i s h e d R o o t ,   f i n i s h e d W o r k ,   c o m m i t t e d L a n e s ,   c o m m i t t e d T r a n s i t i o n s )   { 
     s w i t c h   ( f i n i s h e d W o r k . t a g )   { 
         c a s e   F u n c t i o n C o m p o n e n t : 
         c a s e   F o r w a r d R e f : 
         c a s e   S i m p l e M e m o C o m p o n e n t : 
             { 
                 i f   (   f i n i s h e d W o r k . m o d e   &   P r o f i l e M o d e )   { 
                     s t a r t P a s s i v e E f f e c t T i m e r ( ) ; 
 
                     t r y   { 
                         c o m m i t H o o k E f f e c t L i s t M o u n t ( P a s s i v e $ 1   |   H a s E f f e c t ,   f i n i s h e d W o r k ) ; 
                     }   f i n a l l y   { 
                         r e c o r d P a s s i v e E f f e c t D u r a t i o n ( f i n i s h e d W o r k ) ; 
                     } 
                 }   e l s e   { 
                     c o m m i t H o o k E f f e c t L i s t M o u n t ( P a s s i v e $ 1   |   H a s E f f e c t ,   f i n i s h e d W o r k ) ; 
                 } 
 
                 b r e a k ; 
             } 
     } 
 } 
 
 f u n c t i o n   c o m m i t P a s s i v e U n m o u n t E f f e c t s ( f i r s t C h i l d )   { 
     n e x t E f f e c t   =   f i r s t C h i l d ; 
     c o m m i t P a s s i v e U n m o u n t E f f e c t s _ b e g i n ( ) ; 
 } 
 
 f u n c t i o n   c o m m i t P a s s i v e U n m o u n t E f f e c t s _ b e g i n ( )   { 
     w h i l e   ( n e x t E f f e c t   ! = =   n u l l )   { 
         v a r   f i b e r   =   n e x t E f f e c t ; 
         v a r   c h i l d   =   f i b e r . c h i l d ; 
 
         i f   ( ( n e x t E f f e c t . f l a g s   &   C h i l d D e l e t i o n )   ! = =   N o F l a g s )   { 
             v a r   d e l e t i o n s   =   f i b e r . d e l e t i o n s ; 
 
             i f   ( d e l e t i o n s   ! = =   n u l l )   { 
                 f o r   ( v a r   i   =   0 ;   i   <   d e l e t i o n s . l e n g t h ;   i + + )   { 
                     v a r   f i b e r T o D e l e t e   =   d e l e t i o n s [ i ] ; 
                     n e x t E f f e c t   =   f i b e r T o D e l e t e ; 
                     c o m m i t P a s s i v e U n m o u n t E f f e c t s I n s i d e O f D e l e t e d T r e e _ b e g i n ( f i b e r T o D e l e t e ,   f i b e r ) ; 
                 } 
 
                 { 
                     / /   A   f i b e r   w a s   d e l e t e d   f r o m   t h i s   p a r e n t   f i b e r ,   b u t   i t ' s   s t i l l   p a r t   o f 
                     / /   t h e   p r e v i o u s   ( a l t e r n a t e )   p a r e n t   f i b e r ' s   l i s t   o f   c h i l d r e n .   B e c a u s e 
                     / /   c h i l d r e n   a r e   a   l i n k e d   l i s t ,   a n   e a r l i e r   s i b l i n g   t h a t ' s   s t i l l   a l i v e 
                     / /   w i l l   b e   c o n n e c t e d   t o   t h e   d e l e t e d   f i b e r   v i a   i t s   ` a l t e r n a t e ` : 
                     / / 
                     / /       l i v e   f i b e r 
                     / /       - - a l t e r n a t e - - >   p r e v i o u s   l i v e   f i b e r 
                     / /       - - s i b l i n g - - >   d e l e t e d   f i b e r 
                     / / 
                     / /   W e   c a n ' t   d i s c o n n e c t   ` a l t e r n a t e `   o n   n o d e s   t h a t   h a v e n ' t   b e e n   d e l e t e d 
                     / /   y e t ,   b u t   w e   c a n   d i s c o n n e c t   t h e   ` s i b l i n g `   a n d   ` c h i l d `   p o i n t e r s . 
                     v a r   p r e v i o u s F i b e r   =   f i b e r . a l t e r n a t e ; 
 
                     i f   ( p r e v i o u s F i b e r   ! = =   n u l l )   { 
                         v a r   d e t a c h e d C h i l d   =   p r e v i o u s F i b e r . c h i l d ; 
 
                         i f   ( d e t a c h e d C h i l d   ! = =   n u l l )   { 
                             p r e v i o u s F i b e r . c h i l d   =   n u l l ; 
 
                             d o   { 
                                 v a r   d e t a c h e d S i b l i n g   =   d e t a c h e d C h i l d . s i b l i n g ; 
                                 d e t a c h e d C h i l d . s i b l i n g   =   n u l l ; 
                                 d e t a c h e d C h i l d   =   d e t a c h e d S i b l i n g ; 
                             }   w h i l e   ( d e t a c h e d C h i l d   ! = =   n u l l ) ; 
                         } 
                     } 
                 } 
 
                 n e x t E f f e c t   =   f i b e r ; 
             } 
         } 
 
         i f   ( ( f i b e r . s u b t r e e F l a g s   &   P a s s i v e M a s k )   ! = =   N o F l a g s   & &   c h i l d   ! = =   n u l l )   { 
             c h i l d . r e t u r n   =   f i b e r ; 
             n e x t E f f e c t   =   c h i l d ; 
         }   e l s e   { 
             c o m m i t P a s s i v e U n m o u n t E f f e c t s _ c o m p l e t e ( ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   c o m m i t P a s s i v e U n m o u n t E f f e c t s _ c o m p l e t e ( )   { 
     w h i l e   ( n e x t E f f e c t   ! = =   n u l l )   { 
         v a r   f i b e r   =   n e x t E f f e c t ; 
 
         i f   ( ( f i b e r . f l a g s   &   P a s s i v e )   ! = =   N o F l a g s )   { 
             s e t C u r r e n t F i b e r ( f i b e r ) ; 
             c o m m i t P a s s i v e U n m o u n t O n F i b e r ( f i b e r ) ; 
             r e s e t C u r r e n t F i b e r ( ) ; 
         } 
 
         v a r   s i b l i n g   =   f i b e r . s i b l i n g ; 
 
         i f   ( s i b l i n g   ! = =   n u l l )   { 
             s i b l i n g . r e t u r n   =   f i b e r . r e t u r n ; 
             n e x t E f f e c t   =   s i b l i n g ; 
             r e t u r n ; 
         } 
 
         n e x t E f f e c t   =   f i b e r . r e t u r n ; 
     } 
 } 
 
 f u n c t i o n   c o m m i t P a s s i v e U n m o u n t O n F i b e r ( f i n i s h e d W o r k )   { 
     s w i t c h   ( f i n i s h e d W o r k . t a g )   { 
         c a s e   F u n c t i o n C o m p o n e n t : 
         c a s e   F o r w a r d R e f : 
         c a s e   S i m p l e M e m o C o m p o n e n t : 
             { 
                 i f   (   f i n i s h e d W o r k . m o d e   &   P r o f i l e M o d e )   { 
                     s t a r t P a s s i v e E f f e c t T i m e r ( ) ; 
                     c o m m i t H o o k E f f e c t L i s t U n m o u n t ( P a s s i v e $ 1   |   H a s E f f e c t ,   f i n i s h e d W o r k ,   f i n i s h e d W o r k . r e t u r n ) ; 
                     r e c o r d P a s s i v e E f f e c t D u r a t i o n ( f i n i s h e d W o r k ) ; 
                 }   e l s e   { 
                     c o m m i t H o o k E f f e c t L i s t U n m o u n t ( P a s s i v e $ 1   |   H a s E f f e c t ,   f i n i s h e d W o r k ,   f i n i s h e d W o r k . r e t u r n ) ; 
                 } 
 
                 b r e a k ; 
             } 
     } 
 } 
 
 f u n c t i o n   c o m m i t P a s s i v e U n m o u n t E f f e c t s I n s i d e O f D e l e t e d T r e e _ b e g i n ( d e l e t e d S u b t r e e R o o t ,   n e a r e s t M o u n t e d A n c e s t o r )   { 
     w h i l e   ( n e x t E f f e c t   ! = =   n u l l )   { 
         v a r   f i b e r   =   n e x t E f f e c t ;   / /   D e l e t i o n   e f f e c t s   f i r e   i n   p a r e n t   - >   c h i l d   o r d e r 
         / /   T O D O :   C h e c k   i f   f i b e r   h a s   a   P a s s i v e S t a t i c   f l a g 
 
         s e t C u r r e n t F i b e r ( f i b e r ) ; 
         c o m m i t P a s s i v e U n m o u n t I n s i d e D e l e t e d T r e e O n F i b e r ( f i b e r ,   n e a r e s t M o u n t e d A n c e s t o r ) ; 
         r e s e t C u r r e n t F i b e r ( ) ; 
         v a r   c h i l d   =   f i b e r . c h i l d ;   / /   T O D O :   O n l y   t r a v e r s e   s u b t r e e   i f   i t   h a s   a   P a s s i v e S t a t i c   f l a g .   ( B u t ,   i f   w e 
         / /   d o   t h i s ,   s t i l l   n e e d   t o   h a n d l e   ` d e l e t e d T r e e C l e a n U p L e v e l `   c o r r e c t l y . ) 
 
         i f   ( c h i l d   ! = =   n u l l )   { 
             c h i l d . r e t u r n   =   f i b e r ; 
             n e x t E f f e c t   =   c h i l d ; 
         }   e l s e   { 
             c o m m i t P a s s i v e U n m o u n t E f f e c t s I n s i d e O f D e l e t e d T r e e _ c o m p l e t e ( d e l e t e d S u b t r e e R o o t ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   c o m m i t P a s s i v e U n m o u n t E f f e c t s I n s i d e O f D e l e t e d T r e e _ c o m p l e t e ( d e l e t e d S u b t r e e R o o t )   { 
     w h i l e   ( n e x t E f f e c t   ! = =   n u l l )   { 
         v a r   f i b e r   =   n e x t E f f e c t ; 
         v a r   s i b l i n g   =   f i b e r . s i b l i n g ; 
         v a r   r e t u r n F i b e r   =   f i b e r . r e t u r n ; 
 
         { 
             / /   R e c u r s i v e l y   t r a v e r s e   t h e   e n t i r e   d e l e t e d   t r e e   a n d   c l e a n   u p   f i b e r   f i e l d s . 
             / /   T h i s   i s   m o r e   a g g r e s s i v e   t h a n   i d e a l ,   a n d   t h e   l o n g   t e r m   g o a l   i s   t o   o n l y 
             / /   h a v e   t o   d e t a c h   t h e   d e l e t e d   t r e e   a t   t h e   r o o t . 
             d e t a c h F i b e r A f t e r E f f e c t s ( f i b e r ) ; 
 
             i f   ( f i b e r   = = =   d e l e t e d S u b t r e e R o o t )   { 
                 n e x t E f f e c t   =   n u l l ; 
                 r e t u r n ; 
             } 
         } 
 
         i f   ( s i b l i n g   ! = =   n u l l )   { 
             s i b l i n g . r e t u r n   =   r e t u r n F i b e r ; 
             n e x t E f f e c t   =   s i b l i n g ; 
             r e t u r n ; 
         } 
 
         n e x t E f f e c t   =   r e t u r n F i b e r ; 
     } 
 } 
 
 f u n c t i o n   c o m m i t P a s s i v e U n m o u n t I n s i d e D e l e t e d T r e e O n F i b e r ( c u r r e n t ,   n e a r e s t M o u n t e d A n c e s t o r )   { 
     s w i t c h   ( c u r r e n t . t a g )   { 
         c a s e   F u n c t i o n C o m p o n e n t : 
         c a s e   F o r w a r d R e f : 
         c a s e   S i m p l e M e m o C o m p o n e n t : 
             { 
                 i f   (   c u r r e n t . m o d e   &   P r o f i l e M o d e )   { 
                     s t a r t P a s s i v e E f f e c t T i m e r ( ) ; 
                     c o m m i t H o o k E f f e c t L i s t U n m o u n t ( P a s s i v e $ 1 ,   c u r r e n t ,   n e a r e s t M o u n t e d A n c e s t o r ) ; 
                     r e c o r d P a s s i v e E f f e c t D u r a t i o n ( c u r r e n t ) ; 
                 }   e l s e   { 
                     c o m m i t H o o k E f f e c t L i s t U n m o u n t ( P a s s i v e $ 1 ,   c u r r e n t ,   n e a r e s t M o u n t e d A n c e s t o r ) ; 
                 } 
 
                 b r e a k ; 
             } 
     } 
 }   / /   T O D O :   R e u s e   r e a p p e a r L a y o u t E f f e c t s   t r a v e r s a l   h e r e ? 
 
 
 f u n c t i o n   i n v o k e L a y o u t E f f e c t M o u n t I n D E V ( f i b e r )   { 
     { 
         / /   W e   d o n ' t   n e e d   t o   r e - c h e c k   S t r i c t E f f e c t s M o d e   h e r e . 
         / /   T h i s   f u n c t i o n   i s   o n l y   c a l l e d   i f   t h a t   c h e c k   h a s   a l r e a d y   p a s s e d . 
         s w i t c h   ( f i b e r . t a g )   { 
             c a s e   F u n c t i o n C o m p o n e n t : 
             c a s e   F o r w a r d R e f : 
             c a s e   S i m p l e M e m o C o m p o n e n t : 
                 { 
                     t r y   { 
                         c o m m i t H o o k E f f e c t L i s t M o u n t ( L a y o u t   |   H a s E f f e c t ,   f i b e r ) ; 
                     }   c a t c h   ( e r r o r )   { 
                         c a p t u r e C o m m i t P h a s e E r r o r ( f i b e r ,   f i b e r . r e t u r n ,   e r r o r ) ; 
                     } 
 
                     b r e a k ; 
                 } 
 
             c a s e   C l a s s C o m p o n e n t : 
                 { 
                     v a r   i n s t a n c e   =   f i b e r . s t a t e N o d e ; 
 
                     t r y   { 
                         i n s t a n c e . c o m p o n e n t D i d M o u n t ( ) ; 
                     }   c a t c h   ( e r r o r )   { 
                         c a p t u r e C o m m i t P h a s e E r r o r ( f i b e r ,   f i b e r . r e t u r n ,   e r r o r ) ; 
                     } 
 
                     b r e a k ; 
                 } 
         } 
     } 
 } 
 
 f u n c t i o n   i n v o k e P a s s i v e E f f e c t M o u n t I n D E V ( f i b e r )   { 
     { 
         / /   W e   d o n ' t   n e e d   t o   r e - c h e c k   S t r i c t E f f e c t s M o d e   h e r e . 
         / /   T h i s   f u n c t i o n   i s   o n l y   c a l l e d   i f   t h a t   c h e c k   h a s   a l r e a d y   p a s s e d . 
         s w i t c h   ( f i b e r . t a g )   { 
             c a s e   F u n c t i o n C o m p o n e n t : 
             c a s e   F o r w a r d R e f : 
             c a s e   S i m p l e M e m o C o m p o n e n t : 
                 { 
                     t r y   { 
                         c o m m i t H o o k E f f e c t L i s t M o u n t ( P a s s i v e $ 1   |   H a s E f f e c t ,   f i b e r ) ; 
                     }   c a t c h   ( e r r o r )   { 
                         c a p t u r e C o m m i t P h a s e E r r o r ( f i b e r ,   f i b e r . r e t u r n ,   e r r o r ) ; 
                     } 
 
                     b r e a k ; 
                 } 
         } 
     } 
 } 
 
 f u n c t i o n   i n v o k e L a y o u t E f f e c t U n m o u n t I n D E V ( f i b e r )   { 
     { 
         / /   W e   d o n ' t   n e e d   t o   r e - c h e c k   S t r i c t E f f e c t s M o d e   h e r e . 
         / /   T h i s   f u n c t i o n   i s   o n l y   c a l l e d   i f   t h a t   c h e c k   h a s   a l r e a d y   p a s s e d . 
         s w i t c h   ( f i b e r . t a g )   { 
             c a s e   F u n c t i o n C o m p o n e n t : 
             c a s e   F o r w a r d R e f : 
             c a s e   S i m p l e M e m o C o m p o n e n t : 
                 { 
                     t r y   { 
                         c o m m i t H o o k E f f e c t L i s t U n m o u n t ( L a y o u t   |   H a s E f f e c t ,   f i b e r ,   f i b e r . r e t u r n ) ; 
                     }   c a t c h   ( e r r o r )   { 
                         c a p t u r e C o m m i t P h a s e E r r o r ( f i b e r ,   f i b e r . r e t u r n ,   e r r o r ) ; 
                     } 
 
                     b r e a k ; 
                 } 
 
             c a s e   C l a s s C o m p o n e n t : 
                 { 
                     v a r   i n s t a n c e   =   f i b e r . s t a t e N o d e ; 
 
                     i f   ( t y p e o f   i n s t a n c e . c o m p o n e n t W i l l U n m o u n t   = = =   ' f u n c t i o n ' )   { 
                         s a f e l y C a l l C o m p o n e n t W i l l U n m o u n t ( f i b e r ,   f i b e r . r e t u r n ,   i n s t a n c e ) ; 
                     } 
 
                     b r e a k ; 
                 } 
         } 
     } 
 } 
 
 f u n c t i o n   i n v o k e P a s s i v e E f f e c t U n m o u n t I n D E V ( f i b e r )   { 
     { 
         / /   W e   d o n ' t   n e e d   t o   r e - c h e c k   S t r i c t E f f e c t s M o d e   h e r e . 
         / /   T h i s   f u n c t i o n   i s   o n l y   c a l l e d   i f   t h a t   c h e c k   h a s   a l r e a d y   p a s s e d . 
         s w i t c h   ( f i b e r . t a g )   { 
             c a s e   F u n c t i o n C o m p o n e n t : 
             c a s e   F o r w a r d R e f : 
             c a s e   S i m p l e M e m o C o m p o n e n t : 
                 { 
                     t r y   { 
                         c o m m i t H o o k E f f e c t L i s t U n m o u n t ( P a s s i v e $ 1   |   H a s E f f e c t ,   f i b e r ,   f i b e r . r e t u r n ) ; 
                     }   c a t c h   ( e r r o r )   { 
                         c a p t u r e C o m m i t P h a s e E r r o r ( f i b e r ,   f i b e r . r e t u r n ,   e r r o r ) ; 
                     } 
                 } 
         } 
     } 
 } 
 
 v a r   C O M P O N E N T _ T Y P E   =   0 ; 
 v a r   H A S _ P S E U D O _ C L A S S _ T Y P E   =   1 ; 
 v a r   R O L E _ T Y P E   =   2 ; 
 v a r   T E S T _ N A M E _ T Y P E   =   3 ; 
 v a r   T E X T _ T Y P E   =   4 ; 
 
 i f   ( t y p e o f   S y m b o l   = = =   ' f u n c t i o n '   & &   S y m b o l . f o r )   { 
     v a r   s y m b o l F o r   =   S y m b o l . f o r ; 
     C O M P O N E N T _ T Y P E   =   s y m b o l F o r ( ' s e l e c t o r . c o m p o n e n t ' ) ; 
     H A S _ P S E U D O _ C L A S S _ T Y P E   =   s y m b o l F o r ( ' s e l e c t o r . h a s _ p s e u d o _ c l a s s ' ) ; 
     R O L E _ T Y P E   =   s y m b o l F o r ( ' s e l e c t o r . r o l e ' ) ; 
     T E S T _ N A M E _ T Y P E   =   s y m b o l F o r ( ' s e l e c t o r . t e s t _ i d ' ) ; 
     T E X T _ T Y P E   =   s y m b o l F o r ( ' s e l e c t o r . t e x t ' ) ; 
 } 
 v a r   c o m m i t H o o k s   =   [ ] ; 
 f u n c t i o n   o n C o m m i t R o o t $ 1 ( )   { 
     { 
         c o m m i t H o o k s . f o r E a c h ( f u n c t i o n   ( c o m m i t H o o k )   { 
             r e t u r n   c o m m i t H o o k ( ) ; 
         } ) ; 
     } 
 } 
 
 v a r   R e a c t C u r r e n t A c t Q u e u e   =   R e a c t S h a r e d I n t e r n a l s . R e a c t C u r r e n t A c t Q u e u e ; 
 f u n c t i o n   i s L e g a c y A c t E n v i r o n m e n t ( f i b e r )   { 
     { 
         / /   L e g a c y   m o d e .   W e   p r e s e r v e   t h e   b e h a v i o r   o f   R e a c t   1 7 ' s   a c t .   I t   a s s u m e s   a n 
         / /   a c t   e n v i r o n m e n t   w h e n e v e r   ` j e s t `   i s   d e f i n e d ,   b u t   y o u   c a n   s t i l l   t u r n   o f f 
         / /   s p u r i o u s   w a r n i n g s   b y   s e t t i n g   I S _ R E A C T _ A C T _ E N V I R O N M E N T   e x p l i c i t l y 
         / /   t o   f a l s e . 
         v a r   i s R e a c t A c t E n v i r o n m e n t G l o b a l   =   / /   $ F l o w E x p e c t e d E r r o r      F l o w   d o e s n ' t   k n o w   a b o u t   I S _ R E A C T _ A C T _ E N V I R O N M E N T   g l o b a l 
         t y p e o f   I S _ R E A C T _ A C T _ E N V I R O N M E N T   ! = =   ' u n d e f i n e d '   ?   I S _ R E A C T _ A C T _ E N V I R O N M E N T   :   u n d e f i n e d ;   / /   $ F l o w E x p e c t e d E r r o r   -   F l o w   d o e s n ' t   k n o w   a b o u t   j e s t 
 
         v a r   j e s t I s D e f i n e d   =   t y p e o f   j e s t   ! = =   ' u n d e f i n e d ' ; 
         r e t u r n     j e s t I s D e f i n e d   & &   i s R e a c t A c t E n v i r o n m e n t G l o b a l   ! = =   f a l s e ; 
     } 
 } 
 f u n c t i o n   i s C o n c u r r e n t A c t E n v i r o n m e n t ( )   { 
     { 
         v a r   i s R e a c t A c t E n v i r o n m e n t G l o b a l   =   / /   $ F l o w E x p e c t e d E r r o r      F l o w   d o e s n ' t   k n o w   a b o u t   I S _ R E A C T _ A C T _ E N V I R O N M E N T   g l o b a l 
         t y p e o f   I S _ R E A C T _ A C T _ E N V I R O N M E N T   ! = =   ' u n d e f i n e d '   ?   I S _ R E A C T _ A C T _ E N V I R O N M E N T   :   u n d e f i n e d ; 
 
         i f   ( ! i s R e a c t A c t E n v i r o n m e n t G l o b a l   & &   R e a c t C u r r e n t A c t Q u e u e . c u r r e n t   ! = =   n u l l )   { 
             / /   T O D O :   I n c l u d e   l i n k   t o   r e l e v a n t   d o c u m e n t a t i o n   p a g e . 
             e r r o r ( ' T h e   c u r r e n t   t e s t i n g   e n v i r o n m e n t   i s   n o t   c o n f i g u r e d   t o   s u p p o r t   '   +   ' a c t ( . . . ) ' ) ; 
         } 
 
         r e t u r n   i s R e a c t A c t E n v i r o n m e n t G l o b a l ; 
     } 
 } 
 
 v a r   c e i l   =   M a t h . c e i l ; 
 v a r   R e a c t C u r r e n t D i s p a t c h e r $ 2   =   R e a c t S h a r e d I n t e r n a l s . R e a c t C u r r e n t D i s p a t c h e r , 
         R e a c t C u r r e n t O w n e r $ 2   =   R e a c t S h a r e d I n t e r n a l s . R e a c t C u r r e n t O w n e r , 
         R e a c t C u r r e n t B a t c h C o n f i g $ 3   =   R e a c t S h a r e d I n t e r n a l s . R e a c t C u r r e n t B a t c h C o n f i g , 
         R e a c t C u r r e n t A c t Q u e u e $ 1   =   R e a c t S h a r e d I n t e r n a l s . R e a c t C u r r e n t A c t Q u e u e ; 
 v a r   N o C o n t e x t   = 
 / *                           * / 
 0 ; 
 v a r   B a t c h e d C o n t e x t   = 
 / *                               * / 
 1 ; 
 v a r   R e n d e r C o n t e x t   = 
 / *                                 * / 
 2 ; 
 v a r   C o m m i t C o n t e x t   = 
 / *                                 * / 
 4 ; 
 v a r   R o o t I n P r o g r e s s   =   0 ; 
 v a r   R o o t F a t a l E r r o r e d   =   1 ; 
 v a r   R o o t E r r o r e d   =   2 ; 
 v a r   R o o t S u s p e n d e d   =   3 ; 
 v a r   R o o t S u s p e n d e d W i t h D e l a y   =   4 ; 
 v a r   R o o t C o m p l e t e d   =   5 ; 
 v a r   R o o t D i d N o t C o m p l e t e   =   6 ;   / /   D e s c r i b e s   w h e r e   w e   a r e   i n   t h e   R e a c t   e x e c u t i o n   s t a c k 
 
 v a r   e x e c u t i o n C o n t e x t   =   N o C o n t e x t ;   / /   T h e   r o o t   w e ' r e   w o r k i n g   o n 
 
 v a r   w o r k I n P r o g r e s s R o o t   =   n u l l ;   / /   T h e   f i b e r   w e ' r e   w o r k i n g   o n 
 
 v a r   w o r k I n P r o g r e s s   =   n u l l ;   / /   T h e   l a n e s   w e ' r e   r e n d e r i n g 
 
 v a r   w o r k I n P r o g r e s s R o o t R e n d e r L a n e s   =   N o L a n e s ;   / /   S t a c k   t h a t   a l l o w s   c o m p o n e n t s   t o   c h a n g e   t h e   r e n d e r   l a n e s   f o r   i t s   s u b t r e e 
 / /   T h i s   i s   a   s u p e r s e t   o f   t h e   l a n e s   w e   s t a r t e d   w o r k i n g   o n   a t   t h e   r o o t .   T h e   o n l y 
 / /   c a s e   w h e r e   i t ' s   d i f f e r e n t   f r o m   ` w o r k I n P r o g r e s s R o o t R e n d e r L a n e s `   i s   w h e n   w e 
 / /   e n t e r   a   s u b t r e e   t h a t   i s   h i d d e n   a n d   n e e d s   t o   b e   u n h i d d e n :   S u s p e n s e   a n d 
 / /   O f f s c r e e n   c o m p o n e n t . 
 / / 
 / /   M o s t   t h i n g s   i n   t h e   w o r k   l o o p   s h o u l d   d e a l   w i t h   w o r k I n P r o g r e s s R o o t R e n d e r L a n e s . 
 / /   M o s t   t h i n g s   i n   b e g i n / c o m p l e t e   p h a s e s   s h o u l d   d e a l   w i t h   s u b t r e e R e n d e r L a n e s . 
 
 v a r   s u b t r e e R e n d e r L a n e s   =   N o L a n e s ; 
 v a r   s u b t r e e R e n d e r L a n e s C u r s o r   =   c r e a t e C u r s o r ( N o L a n e s ) ;   / /   W h e t h e r   t o   r o o t   c o m p l e t e d ,   e r r o r e d ,   s u s p e n d e d ,   e t c . 
 
 v a r   w o r k I n P r o g r e s s R o o t E x i t S t a t u s   =   R o o t I n P r o g r e s s ;   / /   A   f a t a l   e r r o r ,   i f   o n e   i s   t h r o w n 
 
 v a r   w o r k I n P r o g r e s s R o o t F a t a l E r r o r   =   n u l l ;   / /   " I n c l u d e d "   l a n e s   r e f e r   t o   l a n e s   t h a t   w e r e   w o r k e d   o n   d u r i n g   t h i s   r e n d e r .   I t ' s 
 / /   s l i g h t l y   d i f f e r e n t   t h a n   ` r e n d e r L a n e s `   b e c a u s e   ` r e n d e r L a n e s `   c a n   c h a n g e   a s   y o u 
 / /   e n t e r   a n d   e x i t   a n   O f f s c r e e n   t r e e .   T h i s   v a l u e   i s   t h e   c o m b i n a t i o n   o f   a l l   r e n d e r 
 / /   l a n e s   f o r   t h e   e n t i r e   r e n d e r   p h a s e . 
 
 v a r   w o r k I n P r o g r e s s R o o t I n c l u d e d L a n e s   =   N o L a n e s ;   / /   T h e   w o r k   l e f t   o v e r   b y   c o m p o n e n t s   t h a t   w e r e   v i s i t e d   d u r i n g   t h i s   r e n d e r .   O n l y 
 / /   i n c l u d e s   u n p r o c e s s e d   u p d a t e s ,   n o t   w o r k   i n   b a i l e d   o u t   c h i l d r e n . 
 
 v a r   w o r k I n P r o g r e s s R o o t S k i p p e d L a n e s   =   N o L a n e s ;   / /   L a n e s   t h a t   w e r e   u p d a t e d   ( i n   a n   i n t e r l e a v e d   e v e n t )   d u r i n g   t h i s   r e n d e r . 
 
 v a r   w o r k I n P r o g r e s s R o o t I n t e r l e a v e d U p d a t e d L a n e s   =   N o L a n e s ;   / /   L a n e s   t h a t   w e r e   u p d a t e d   d u r i n g   t h e   r e n d e r   p h a s e   ( * n o t *   a n   i n t e r l e a v e d   e v e n t ) . 
 
 v a r   w o r k I n P r o g r e s s R o o t P i n g e d L a n e s   =   N o L a n e s ;   / /   E r r o r s   t h a t   a r e   t h r o w n   d u r i n g   t h e   r e n d e r   p h a s e . 
 
 v a r   w o r k I n P r o g r e s s R o o t C o n c u r r e n t E r r o r s   =   n u l l ;   / /   T h e s e   a r e   e r r o r s   t h a t   w e   r e c o v e r e d   f r o m   w i t h o u t   s u r f a c i n g   t h e m   t o   t h e   U I . 
 / /   W e   w i l l   l o g   t h e m   o n c e   t h e   t r e e   c o m m i t s . 
 
 v a r   w o r k I n P r o g r e s s R o o t R e c o v e r a b l e E r r o r s   =   n u l l ;   / /   T h e   m o s t   r e c e n t   t i m e   w e   c o m m i t t e d   a   f a l l b a c k .   T h i s   l e t s   u s   e n s u r e   a   t r a i n 
 / /   m o d e l   w h e r e   w e   d o n ' t   c o m m i t   n e w   l o a d i n g   s t a t e s   i n   t o o   q u i c k   s u c c e s s i o n . 
 
 v a r   g l o b a l M o s t R e c e n t F a l l b a c k T i m e   =   0 ; 
 v a r   F A L L B A C K _ T H R O T T L E _ M S   =   5 0 0 ;   / /   T h e   a b s o l u t e   t i m e   f o r   w h e n   w e   s h o u l d   s t a r t   g i v i n g   u p   o n   r e n d e r i n g 
 / /   m o r e   a n d   p r e f e r   C P U   s u s p e n s e   h e u r i s t i c s   i n s t e a d . 
 
 v a r   w o r k I n P r o g r e s s R o o t R e n d e r T a r g e t T i m e   =   I n f i n i t y ;   / /   H o w   l o n g   a   r e n d e r   i s   s u p p o s e d   t o   t a k e   b e f o r e   w e   s t a r t   f o l l o w i n g   C P U 
 / /   s u s p e n s e   h e u r i s t i c s   a n d   o p t   o u t   o f   r e n d e r i n g   m o r e   c o n t e n t . 
 
 v a r   R E N D E R _ T I M E O U T _ M S   =   5 0 0 ; 
 v a r   w o r k I n P r o g r e s s T r a n s i t i o n s   =   n u l l ; 
 
 f u n c t i o n   r e s e t R e n d e r T i m e r ( )   { 
     w o r k I n P r o g r e s s R o o t R e n d e r T a r g e t T i m e   =   n o w ( )   +   R E N D E R _ T I M E O U T _ M S ; 
 } 
 
 f u n c t i o n   g e t R e n d e r T a r g e t T i m e ( )   { 
     r e t u r n   w o r k I n P r o g r e s s R o o t R e n d e r T a r g e t T i m e ; 
 } 
 v a r   h a s U n c a u g h t E r r o r   =   f a l s e ; 
 v a r   f i r s t U n c a u g h t E r r o r   =   n u l l ; 
 v a r   l e g a c y E r r o r B o u n d a r i e s T h a t A l r e a d y F a i l e d   =   n u l l ;   / /   O n l y   u s e d   w h e n   e n a b l e P r o f i l e r N e s t e d U p d a t e S c h e d u l e d H o o k   i s   t r u e ; 
 v a r   r o o t D o e s H a v e P a s s i v e E f f e c t s   =   f a l s e ; 
 v a r   r o o t W i t h P e n d i n g P a s s i v e E f f e c t s   =   n u l l ; 
 v a r   p e n d i n g P a s s i v e E f f e c t s L a n e s   =   N o L a n e s ; 
 v a r   p e n d i n g P a s s i v e P r o f i l e r E f f e c t s   =   [ ] ; 
 v a r   p e n d i n g P a s s i v e T r a n s i t i o n s   =   n u l l ;   / /   U s e   t h e s e   t o   p r e v e n t   a n   i n f i n i t e   l o o p   o f   n e s t e d   u p d a t e s 
 
 v a r   N E S T E D _ U P D A T E _ L I M I T   =   5 0 ; 
 v a r   n e s t e d U p d a t e C o u n t   =   0 ; 
 v a r   r o o t W i t h N e s t e d U p d a t e s   =   n u l l ; 
 v a r   i s F l u s h i n g P a s s i v e E f f e c t s   =   f a l s e ; 
 v a r   d i d S c h e d u l e U p d a t e D u r i n g P a s s i v e E f f e c t s   =   f a l s e ; 
 v a r   N E S T E D _ P A S S I V E _ U P D A T E _ L I M I T   =   5 0 ; 
 v a r   n e s t e d P a s s i v e U p d a t e C o u n t   =   0 ; 
 v a r   r o o t W i t h P a s s i v e N e s t e d U p d a t e s   =   n u l l ;   / /   I f   t w o   u p d a t e s   a r e   s c h e d u l e d   w i t h i n   t h e   s a m e   e v e n t ,   w e   s h o u l d   t r e a t   t h e i r 
 / /   e v e n t   t i m e s   a s   s i m u l t a n e o u s ,   e v e n   i f   t h e   a c t u a l   c l o c k   t i m e   h a s   a d v a n c e d 
 / /   b e t w e e n   t h e   f i r s t   a n d   s e c o n d   c a l l . 
 
 v a r   c u r r e n t E v e n t T i m e   =   N o T i m e s t a m p ; 
 v a r   c u r r e n t E v e n t T r a n s i t i o n L a n e   =   N o L a n e s ; 
 v a r   i s R u n n i n g I n s e r t i o n E f f e c t   =   f a l s e ; 
 f u n c t i o n   g e t W o r k I n P r o g r e s s R o o t ( )   { 
     r e t u r n   w o r k I n P r o g r e s s R o o t ; 
 } 
 f u n c t i o n   r e q u e s t E v e n t T i m e ( )   { 
     i f   ( ( e x e c u t i o n C o n t e x t   &   ( R e n d e r C o n t e x t   |   C o m m i t C o n t e x t ) )   ! = =   N o C o n t e x t )   { 
         / /   W e ' r e   i n s i d e   R e a c t ,   s o   i t ' s   f i n e   t o   r e a d   t h e   a c t u a l   t i m e . 
         r e t u r n   n o w ( ) ; 
     }   / /   W e ' r e   n o t   i n s i d e   R e a c t ,   s o   w e   m a y   b e   i n   t h e   m i d d l e   o f   a   b r o w s e r   e v e n t . 
 
 
     i f   ( c u r r e n t E v e n t T i m e   ! = =   N o T i m e s t a m p )   { 
         / /   U s e   t h e   s a m e   s t a r t   t i m e   f o r   a l l   u p d a t e s   u n t i l   w e   e n t e r   R e a c t   a g a i n . 
         r e t u r n   c u r r e n t E v e n t T i m e ; 
     }   / /   T h i s   i s   t h e   f i r s t   u p d a t e   s i n c e   R e a c t   y i e l d e d .   C o m p u t e   a   n e w   s t a r t   t i m e . 
 
 
     c u r r e n t E v e n t T i m e   =   n o w ( ) ; 
     r e t u r n   c u r r e n t E v e n t T i m e ; 
 } 
 f u n c t i o n   r e q u e s t U p d a t e L a n e ( f i b e r )   { 
     / /   S p e c i a l   c a s e s 
     v a r   m o d e   =   f i b e r . m o d e ; 
 
     i f   ( ( m o d e   &   C o n c u r r e n t M o d e )   = = =   N o M o d e )   { 
         r e t u r n   S y n c L a n e ; 
     }   e l s e   i f   (   ( e x e c u t i o n C o n t e x t   &   R e n d e r C o n t e x t )   ! = =   N o C o n t e x t   & &   w o r k I n P r o g r e s s R o o t R e n d e r L a n e s   ! = =   N o L a n e s )   { 
         / /   T h i s   i s   a   r e n d e r   p h a s e   u p d a t e .   T h e s e   a r e   n o t   o f f i c i a l l y   s u p p o r t e d .   T h e 
         / /   o l d   b e h a v i o r   i s   t o   g i v e   t h i s   t h e   s a m e   " t h r e a d "   ( l a n e s )   a s 
         / /   w h a t e v e r   i s   c u r r e n t l y   r e n d e r i n g .   S o   i f   y o u   c a l l   ` s e t S t a t e `   o n   a   c o m p o n e n t 
         / /   t h a t   h a p p e n s   l a t e r   i n   t h e   s a m e   r e n d e r ,   i t   w i l l   f l u s h .   I d e a l l y ,   w e   w a n t   t o 
         / /   r e m o v e   t h e   s p e c i a l   c a s e   a n d   t r e a t   t h e m   a s   i f   t h e y   c a m e   f r o m   a n 
         / /   i n t e r l e a v e d   e v e n t .   R e g a r d l e s s ,   t h i s   p a t t e r n   i s   n o t   o f f i c i a l l y   s u p p o r t e d . 
         / /   T h i s   b e h a v i o r   i s   o n l y   a   f a l l b a c k .   T h e   f l a g   o n l y   e x i s t s   u n t i l   w e   c a n   r o l l 
         / /   o u t   t h e   s e t S t a t e   w a r n i n g ,   s i n c e   e x i s t i n g   c o d e   m i g h t   a c c i d e n t a l l y   r e l y   o n 
         / /   t h e   c u r r e n t   b e h a v i o r . 
         r e t u r n   p i c k A r b i t r a r y L a n e ( w o r k I n P r o g r e s s R o o t R e n d e r L a n e s ) ; 
     } 
 
     v a r   i s T r a n s i t i o n   =   r e q u e s t C u r r e n t T r a n s i t i o n ( )   ! = =   N o T r a n s i t i o n ; 
 
     i f   ( i s T r a n s i t i o n )   { 
         i f   (   R e a c t C u r r e n t B a t c h C o n f i g $ 3 . t r a n s i t i o n   ! = =   n u l l )   { 
             v a r   t r a n s i t i o n   =   R e a c t C u r r e n t B a t c h C o n f i g $ 3 . t r a n s i t i o n ; 
 
             i f   ( ! t r a n s i t i o n . _ u p d a t e d F i b e r s )   { 
                 t r a n s i t i o n . _ u p d a t e d F i b e r s   =   n e w   S e t ( ) ; 
             } 
 
             t r a n s i t i o n . _ u p d a t e d F i b e r s . a d d ( f i b e r ) ; 
         }   / /   T h e   a l g o r i t h m   f o r   a s s i g n i n g   a n   u p d a t e   t o   a   l a n e   s h o u l d   b e   s t a b l e   f o r   a l l 
         / /   u p d a t e s   a t   t h e   s a m e   p r i o r i t y   w i t h i n   t h e   s a m e   e v e n t .   T o   d o   t h i s ,   t h e 
         / /   i n p u t s   t o   t h e   a l g o r i t h m   m u s t   b e   t h e   s a m e . 
         / / 
         / /   T h e   t r i c k   w e   u s e   i s   t o   c a c h e   t h e   f i r s t   o f   e a c h   o f   t h e s e   i n p u t s   w i t h i n   a n 
         / /   e v e n t .   T h e n   r e s e t   t h e   c a c h e d   v a l u e s   o n c e   w e   c a n   b e   s u r e   t h e   e v e n t   i s 
         / /   o v e r .   O u r   h e u r i s t i c   f o r   t h a t   i s   w h e n e v e r   w e   e n t e r   a   c o n c u r r e n t   w o r k   l o o p . 
 
 
         i f   ( c u r r e n t E v e n t T r a n s i t i o n L a n e   = = =   N o L a n e )   { 
             / /   A l l   t r a n s i t i o n s   w i t h i n   t h e   s a m e   e v e n t   a r e   a s s i g n e d   t h e   s a m e   l a n e . 
             c u r r e n t E v e n t T r a n s i t i o n L a n e   =   c l a i m N e x t T r a n s i t i o n L a n e ( ) ; 
         } 
 
         r e t u r n   c u r r e n t E v e n t T r a n s i t i o n L a n e ; 
     }   / /   U p d a t e s   o r i g i n a t i n g   i n s i d e   c e r t a i n   R e a c t   m e t h o d s ,   l i k e   f l u s h S y n c ,   h a v e 
     / /   t h e i r   p r i o r i t y   s e t   b y   t r a c k i n g   i t   w i t h   a   c o n t e x t   v a r i a b l e . 
     / / 
     / /   T h e   o p a q u e   t y p e   r e t u r n e d   b y   t h e   h o s t   c o n f i g   i s   i n t e r n a l l y   a   l a n e ,   s o   w e   c a n 
     / /   u s e   t h a t   d i r e c t l y . 
     / /   T O D O :   M o v e   t h i s   t y p e   c o n v e r s i o n   t o   t h e   e v e n t   p r i o r i t y   m o d u l e . 
 
 
     v a r   u p d a t e L a n e   =   g e t C u r r e n t U p d a t e P r i o r i t y ( ) ; 
 
     i f   ( u p d a t e L a n e   ! = =   N o L a n e )   { 
         r e t u r n   u p d a t e L a n e ; 
     }   / /   T h i s   u p d a t e   o r i g i n a t e d   o u t s i d e   R e a c t .   A s k   t h e   h o s t   e n v i r o n m e n t   f o r   a n 
     / /   a p p r o p r i a t e   p r i o r i t y ,   b a s e d   o n   t h e   t y p e   o f   e v e n t . 
     / / 
     / /   T h e   o p a q u e   t y p e   r e t u r n e d   b y   t h e   h o s t   c o n f i g   i s   i n t e r n a l l y   a   l a n e ,   s o   w e   c a n 
     / /   u s e   t h a t   d i r e c t l y . 
     / /   T O D O :   M o v e   t h i s   t y p e   c o n v e r s i o n   t o   t h e   e v e n t   p r i o r i t y   m o d u l e . 
 
 
     v a r   e v e n t L a n e   =   g e t C u r r e n t E v e n t P r i o r i t y ( ) ; 
     r e t u r n   e v e n t L a n e ; 
 } 
 
 f u n c t i o n   r e q u e s t R e t r y L a n e ( f i b e r )   { 
     / /   T h i s   i s   a   f o r k   o f   ` r e q u e s t U p d a t e L a n e `   d e s i g n e d   s p e c i f i c a l l y   f o r   S u s p e n s e 
     / /   " r e t r i e s "      a   s p e c i a l   u p d a t e   t h a t   a t t e m p t s   t o   f l i p   a   S u s p e n s e   b o u n d a r y 
     / /   f r o m   i t s   p l a c e h o l d e r   s t a t e   t o   i t s   p r i m a r y / r e s o l v e d   s t a t e . 
     / /   S p e c i a l   c a s e s 
     v a r   m o d e   =   f i b e r . m o d e ; 
 
     i f   ( ( m o d e   &   C o n c u r r e n t M o d e )   = = =   N o M o d e )   { 
         r e t u r n   S y n c L a n e ; 
     } 
 
     r e t u r n   c l a i m N e x t R e t r y L a n e ( ) ; 
 } 
 
 f u n c t i o n   s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   l a n e ,   e v e n t T i m e )   { 
     c h e c k F o r N e s t e d U p d a t e s ( ) ; 
 
     { 
         i f   ( i s R u n n i n g I n s e r t i o n E f f e c t )   { 
             e r r o r ( ' u s e I n s e r t i o n E f f e c t   m u s t   n o t   s c h e d u l e   u p d a t e s . ' ) ; 
         } 
     } 
 
     v a r   r o o t   =   m a r k U p d a t e L a n e F r o m F i b e r T o R o o t ( f i b e r ,   l a n e ) ; 
 
     i f   ( r o o t   = = =   n u l l )   { 
         r e t u r n   n u l l ; 
     } 
 
     { 
         i f   ( i s F l u s h i n g P a s s i v e E f f e c t s )   { 
             d i d S c h e d u l e U p d a t e D u r i n g P a s s i v e E f f e c t s   =   t r u e ; 
         } 
     }   / /   M a r k   t h a t   t h e   r o o t   h a s   a   p e n d i n g   u p d a t e . 
 
 
     m a r k R o o t U p d a t e d ( r o o t ,   l a n e ,   e v e n t T i m e ) ; 
 
     i f   ( ( e x e c u t i o n C o n t e x t   &   R e n d e r C o n t e x t )   ! = =   N o L a n e s   & &   r o o t   = = =   w o r k I n P r o g r e s s R o o t )   { 
         / /   T h i s   u p d a t e   w a s   d i s p a t c h e d   d u r i n g   t h e   r e n d e r   p h a s e .   T h i s   i s   a   m i s t a k e 
         / /   i f   t h e   u p d a t e   o r i g i n a t e s   f r o m   u s e r   s p a c e   ( w i t h   t h e   e x c e p t i o n   o f   l o c a l 
         / /   h o o k   u p d a t e s ,   w h i c h   a r e   h a n d l e d   d i f f e r e n t l y   a n d   d o n ' t   r e a c h   t h i s 
         / /   f u n c t i o n ) ,   b u t   t h e r e   a r e   s o m e   i n t e r n a l   R e a c t   f e a t u r e s   t h a t   u s e   t h i s   a s 
         / /   a n   i m p l e m e n t a t i o n   d e t a i l ,   l i k e   s e l e c t i v e   h y d r a t i o n . 
         w a r n A b o u t R e n d e r P h a s e U p d a t e s I n D E V ( f i b e r ) ;   / /   T r a c k   l a n e s   t h a t   w e r e   u p d a t e d   d u r i n g   t h e   r e n d e r   p h a s e 
     }   e l s e   { 
         / /   T h i s   i s   a   n o r m a l   u p d a t e ,   s c h e d u l e d   f r o m   o u t s i d e   t h e   r e n d e r   p h a s e .   F o r 
         / /   e x a m p l e ,   d u r i n g   a n   i n p u t   e v e n t . 
         { 
             i f   ( i s D e v T o o l s P r e s e n t )   { 
                 a d d F i b e r T o L a n e s M a p ( r o o t ,   f i b e r ,   l a n e ) ; 
             } 
         } 
 
         w a r n I f U p d a t e s N o t W r a p p e d W i t h A c t D E V ( f i b e r ) ; 
 
         i f   ( r o o t   = = =   w o r k I n P r o g r e s s R o o t )   { 
             / /   T O D O :   C o n s o l i d a t e   w i t h   ` i s I n t e r l e a v e d U p d a t e `   c h e c k 
             / /   R e c e i v e d   a n   u p d a t e   t o   a   t r e e   t h a t ' s   i n   t h e   m i d d l e   o f   r e n d e r i n g .   M a r k 
             / /   t h a t   t h e r e   w a s   a n   i n t e r l e a v e d   u p d a t e   w o r k   o n   t h i s   r o o t .   U n l e s s   t h e 
             / /   ` d e f e r R e n d e r P h a s e U p d a t e T o N e x t B a t c h `   f l a g   i s   o f f   a n d   t h i s   i s   a   r e n d e r 
             / /   p h a s e   u p d a t e .   I n   t h a t   c a s e ,   w e   d o n ' t   t r e a t   r e n d e r   p h a s e   u p d a t e s   a s   i f 
             / /   t h e y   w e r e   i n t e r l e a v e d ,   f o r   b a c k w a r d s   c o m p a t   r e a s o n s . 
             i f   (   ( e x e c u t i o n C o n t e x t   &   R e n d e r C o n t e x t )   = = =   N o C o n t e x t )   { 
                 w o r k I n P r o g r e s s R o o t I n t e r l e a v e d U p d a t e d L a n e s   =   m e r g e L a n e s ( w o r k I n P r o g r e s s R o o t I n t e r l e a v e d U p d a t e d L a n e s ,   l a n e ) ; 
             } 
 
             i f   ( w o r k I n P r o g r e s s R o o t E x i t S t a t u s   = = =   R o o t S u s p e n d e d W i t h D e l a y )   { 
                 / /   T h e   r o o t   a l r e a d y   s u s p e n d e d   w i t h   a   d e l a y ,   w h i c h   m e a n s   t h i s   r e n d e r 
                 / /   d e f i n i t e l y   w o n ' t   f i n i s h .   S i n c e   w e   h a v e   a   n e w   u p d a t e ,   l e t ' s   m a r k   i t   a s 
                 / /   s u s p e n d e d   n o w ,   r i g h t   b e f o r e   m a r k i n g   t h e   i n c o m i n g   u p d a t e .   T h i s   h a s   t h e 
                 / /   e f f e c t   o f   i n t e r r u p t i n g   t h e   c u r r e n t   r e n d e r   a n d   s w i t c h i n g   t o   t h e   u p d a t e . 
                 / /   T O D O :   M a k e   s u r e   t h i s   d o e s n ' t   o v e r r i d e   p i n g s   t h a t   h a p p e n   w h i l e   w e ' v e 
                 / /   a l r e a d y   s t a r t e d   r e n d e r i n g . 
                 m a r k R o o t S u s p e n d e d $ 1 ( r o o t ,   w o r k I n P r o g r e s s R o o t R e n d e r L a n e s ) ; 
             } 
         } 
 
         e n s u r e R o o t I s S c h e d u l e d ( r o o t ,   e v e n t T i m e ) ; 
 
         i f   ( l a n e   = = =   S y n c L a n e   & &   e x e c u t i o n C o n t e x t   = = =   N o C o n t e x t   & &   ( f i b e r . m o d e   &   C o n c u r r e n t M o d e )   = = =   N o M o d e   & &   / /   T r e a t   ` a c t `   a s   i f   i t ' s   i n s i d e   ` b a t c h e d U p d a t e s ` ,   e v e n   i n   l e g a c y   m o d e . 
         ! (   R e a c t C u r r e n t A c t Q u e u e $ 1 . i s B a t c h i n g L e g a c y ) )   { 
             / /   F l u s h   t h e   s y n c h r o n o u s   w o r k   n o w ,   u n l e s s   w e ' r e   a l r e a d y   w o r k i n g   o r   i n s i d e 
             / /   a   b a t c h .   T h i s   i s   i n t e n t i o n a l l y   i n s i d e   s c h e d u l e U p d a t e O n F i b e r   i n s t e a d   o f 
             / /   s c h e d u l e C a l l b a c k F o r F i b e r   t o   p r e s e r v e   t h e   a b i l i t y   t o   s c h e d u l e   a   c a l l b a c k 
             / /   w i t h o u t   i m m e d i a t e l y   f l u s h i n g   i t .   W e   o n l y   d o   t h i s   f o r   u s e r - i n i t i a t e d 
             / /   u p d a t e s ,   t o   p r e s e r v e   h i s t o r i c a l   b e h a v i o r   o f   l e g a c y   m o d e . 
             r e s e t R e n d e r T i m e r ( ) ; 
             f l u s h S y n c C a l l b a c k s O n l y I n L e g a c y M o d e ( ) ; 
         } 
     } 
 
     r e t u r n   r o o t ; 
 } 
 f u n c t i o n   s c h e d u l e I n i t i a l H y d r a t i o n O n R o o t ( r o o t ,   l a n e ,   e v e n t T i m e )   { 
     / /   T h i s   i s   a   s p e c i a l   f o r k   o f   s c h e d u l e U p d a t e O n F i b e r   t h a t   i s   o n l y   u s e d   t o 
     / /   s c h e d u l e   t h e   i n i t i a l   h y d r a t i o n   o f   a   r o o t   t h a t   h a s   j u s t   b e e n   c r e a t e d .   M o s t 
     / /   o f   t h e   s t u f f   i n   s c h e d u l e U p d a t e O n F i b e r   c a n   b e   s k i p p e d . 
     / / 
     / /   T h e   m a i n   r e a s o n   f o r   t h i s   s e p a r a t e   p a t h ,   t h o u g h ,   i s   t o   d i s t i n g u i s h   t h e 
     / /   i n i t i a l   c h i l d r e n   f r o m   s u b s e q u e n t   u p d a t e s .   I n   f u l l y   c l i e n t - r e n d e r e d   r o o t s 
     / /   ( c r e a t e R o o t   i n s t e a d   o f   h y d r a t e R o o t ) ,   a l l   t o p - l e v e l   r e n d e r s   a r e   m o d e l e d   a s 
     / /   u p d a t e s ,   b u t   h y d r a t i o n   r o o t s   a r e   s p e c i a l   b e c a u s e   t h e   i n i t i a l   r e n d e r   m u s t 
     / /   m a t c h   w h a t   w a s   r e n d e r e d   o n   t h e   s e r v e r . 
     v a r   c u r r e n t   =   r o o t . c u r r e n t ; 
     c u r r e n t . l a n e s   =   l a n e ; 
     m a r k R o o t U p d a t e d ( r o o t ,   l a n e ,   e v e n t T i m e ) ; 
     e n s u r e R o o t I s S c h e d u l e d ( r o o t ,   e v e n t T i m e ) ; 
 }   / /   T h i s   i s   s p l i t   i n t o   a   s e p a r a t e   f u n c t i o n   s o   w e   c a n   m a r k   a   f i b e r   w i t h   p e n d i n g 
 / /   w o r k   w i t h o u t   t r e a t i n g   i t   a s   a   t y p i c a l   u p d a t e   t h a t   o r i g i n a t e s   f r o m   a n   e v e n t ; 
 / /   e . g .   r e t r y i n g   a   S u s p e n s e   b o u n d a r y   i s n ' t   a n   u p d a t e ,   b u t   i t   d o e s   s c h e d u l e   w o r k 
 / /   o n   a   f i b e r . 
 
 f u n c t i o n   m a r k U p d a t e L a n e F r o m F i b e r T o R o o t ( s o u r c e F i b e r ,   l a n e )   { 
     / /   U p d a t e   t h e   s o u r c e   f i b e r ' s   l a n e s 
     s o u r c e F i b e r . l a n e s   =   m e r g e L a n e s ( s o u r c e F i b e r . l a n e s ,   l a n e ) ; 
     v a r   a l t e r n a t e   =   s o u r c e F i b e r . a l t e r n a t e ; 
 
     i f   ( a l t e r n a t e   ! = =   n u l l )   { 
         a l t e r n a t e . l a n e s   =   m e r g e L a n e s ( a l t e r n a t e . l a n e s ,   l a n e ) ; 
     } 
 
     { 
         i f   ( a l t e r n a t e   = = =   n u l l   & &   ( s o u r c e F i b e r . f l a g s   &   ( P l a c e m e n t   |   H y d r a t i n g ) )   ! = =   N o F l a g s )   { 
             w a r n A b o u t U p d a t e O n N o t Y e t M o u n t e d F i b e r I n D E V ( s o u r c e F i b e r ) ; 
         } 
     }   / /   W a l k   t h e   p a r e n t   p a t h   t o   t h e   r o o t   a n d   u p d a t e   t h e   c h i l d   l a n e s . 
 
 
     v a r   n o d e   =   s o u r c e F i b e r ; 
     v a r   p a r e n t   =   s o u r c e F i b e r . r e t u r n ; 
 
     w h i l e   ( p a r e n t   ! = =   n u l l )   { 
         p a r e n t . c h i l d L a n e s   =   m e r g e L a n e s ( p a r e n t . c h i l d L a n e s ,   l a n e ) ; 
         a l t e r n a t e   =   p a r e n t . a l t e r n a t e ; 
 
         i f   ( a l t e r n a t e   ! = =   n u l l )   { 
             a l t e r n a t e . c h i l d L a n e s   =   m e r g e L a n e s ( a l t e r n a t e . c h i l d L a n e s ,   l a n e ) ; 
         }   e l s e   { 
             { 
                 i f   ( ( p a r e n t . f l a g s   &   ( P l a c e m e n t   |   H y d r a t i n g ) )   ! = =   N o F l a g s )   { 
                     w a r n A b o u t U p d a t e O n N o t Y e t M o u n t e d F i b e r I n D E V ( s o u r c e F i b e r ) ; 
                 } 
             } 
         } 
 
         n o d e   =   p a r e n t ; 
         p a r e n t   =   p a r e n t . r e t u r n ; 
     } 
 
     i f   ( n o d e . t a g   = = =   H o s t R o o t )   { 
         v a r   r o o t   =   n o d e . s t a t e N o d e ; 
         r e t u r n   r o o t ; 
     }   e l s e   { 
         r e t u r n   n u l l ; 
     } 
 } 
 
 f u n c t i o n   i s I n t e r l e a v e d U p d a t e ( f i b e r ,   l a n e )   { 
     r e t u r n   ( / /   T O D O :   O p t i m i z e   s l i g h t l y   b y   c o m p a r i n g   t o   r o o t   t h a t   f i b e r   b e l o n g s   t o . 
         / /   R e q u i r e s   s o m e   r e f a c t o r i n g .   N o t   a   b i g   d e a l   t h o u g h   s i n c e   i t ' s   r a r e   f o r 
         / /   c o n c u r r e n t   a p p s   t o   h a v e   m o r e   t h a n   a   s i n g l e   r o o t . 
         ( w o r k I n P r o g r e s s R o o t   ! = =   n u l l   | |   / /   I f   t h e   i n t e r l e a v e d   u p d a t e s   q u e u e   h a s n ' t   b e e n   c l e a r e d   y e t ,   t h e n 
         / /   w e   s h o u l d   t r e a t   t h i s   a s   a n   i n t e r l e a v e d   u p d a t e ,   t o o .   T h i s   i s   a l s o   a 
         / /   d e f e n s i v e   c o d i n g   m e a s u r e   i n   c a s e   a   n e w   u p d a t e   c o m e s   i n   b e t w e e n   w h e n 
         / /   r e n d e r i n g   h a s   f i n i s h e d   a n d   w h e n   t h e   i n t e r l e a v e d   u p d a t e s   a r e   t r a n s f e r r e d 
         / /   t o   t h e   m a i n   q u e u e . 
         h a s I n t e r l e a v e d U p d a t e s ( ) )   & &   ( f i b e r . m o d e   &   C o n c u r r e n t M o d e )   ! = =   N o M o d e   & &   (   / /   I f   t h i s   i s   a   r e n d e r   p h a s e   u p d a t e   ( i . e .   U N S A F E _ c o m p o n e n t W i l l R e c e i v e P r o p s ) , 
         / /   t h e n   d o n ' t   t r e a t   t h i s   a s   a n   i n t e r l e a v e d   u p d a t e .   T h i s   p a t t e r n   i s 
         / /   a c c o m p a n i e d   b y   a   w a r n i n g   b u t   w e   h a v e n ' t   f u l l y   d e p r e c a t e d   i t   y e t .   W e   c a n 
         / /   r e m o v e   o n c e   t h e   d e f e r R e n d e r P h a s e U p d a t e T o N e x t B a t c h   f l a g   i s   e n a b l e d . 
           ( e x e c u t i o n C o n t e x t   &   R e n d e r C o n t e x t )   = = =   N o C o n t e x t ) 
     ) ; 
 }   / /   U s e   t h i s   f u n c t i o n   t o   s c h e d u l e   a   t a s k   f o r   a   r o o t .   T h e r e ' s   o n l y   o n e   t a s k   p e r 
 / /   r o o t ;   i f   a   t a s k   w a s   a l r e a d y   s c h e d u l e d ,   w e ' l l   c h e c k   t o   m a k e   s u r e   t h e   p r i o r i t y 
 / /   o f   t h e   e x i s t i n g   t a s k   i s   t h e   s a m e   a s   t h e   p r i o r i t y   o f   t h e   n e x t   l e v e l   t h a t   t h e 
 / /   r o o t   h a s   w o r k   o n .   T h i s   f u n c t i o n   i s   c a l l e d   o n   e v e r y   u p d a t e ,   a n d   r i g h t   b e f o r e 
 / /   e x i t i n g   a   t a s k . 
 
 f u n c t i o n   e n s u r e R o o t I s S c h e d u l e d ( r o o t ,   c u r r e n t T i m e )   { 
     v a r   e x i s t i n g C a l l b a c k N o d e   =   r o o t . c a l l b a c k N o d e ;   / /   C h e c k   i f   a n y   l a n e s   a r e   b e i n g   s t a r v e d   b y   o t h e r   w o r k .   I f   s o ,   m a r k   t h e m   a s 
     / /   e x p i r e d   s o   w e   k n o w   t o   w o r k   o n   t h o s e   n e x t . 
 
     m a r k S t a r v e d L a n e s A s E x p i r e d ( r o o t ,   c u r r e n t T i m e ) ;   / /   D e t e r m i n e   t h e   n e x t   l a n e s   t o   w o r k   o n ,   a n d   t h e i r   p r i o r i t y . 
 
     v a r   n e x t L a n e s   =   g e t N e x t L a n e s ( r o o t ,   r o o t   = = =   w o r k I n P r o g r e s s R o o t   ?   w o r k I n P r o g r e s s R o o t R e n d e r L a n e s   :   N o L a n e s ) ; 
 
     i f   ( n e x t L a n e s   = = =   N o L a n e s )   { 
         / /   S p e c i a l   c a s e :   T h e r e ' s   n o t h i n g   t o   w o r k   o n . 
         i f   ( e x i s t i n g C a l l b a c k N o d e   ! = =   n u l l )   { 
             c a n c e l C a l l b a c k $ 1 ( e x i s t i n g C a l l b a c k N o d e ) ; 
         } 
 
         r o o t . c a l l b a c k N o d e   =   n u l l ; 
         r o o t . c a l l b a c k P r i o r i t y   =   N o L a n e ; 
         r e t u r n ; 
     }   / /   W e   u s e   t h e   h i g h e s t   p r i o r i t y   l a n e   t o   r e p r e s e n t   t h e   p r i o r i t y   o f   t h e   c a l l b a c k . 
 
 
     v a r   n e w C a l l b a c k P r i o r i t y   =   g e t H i g h e s t P r i o r i t y L a n e ( n e x t L a n e s ) ;   / /   C h e c k   i f   t h e r e ' s   a n   e x i s t i n g   t a s k .   W e   m a y   b e   a b l e   t o   r e u s e   i t . 
 
     v a r   e x i s t i n g C a l l b a c k P r i o r i t y   =   r o o t . c a l l b a c k P r i o r i t y ; 
 
     i f   ( e x i s t i n g C a l l b a c k P r i o r i t y   = = =   n e w C a l l b a c k P r i o r i t y   & &   / /   S p e c i a l   c a s e   r e l a t e d   t o   ` a c t ` .   I f   t h e   c u r r e n t l y   s c h e d u l e d   t a s k   i s   a 
     / /   S c h e d u l e r   t a s k ,   r a t h e r   t h a n   a n   ` a c t `   t a s k ,   c a n c e l   i t   a n d   r e - s c h e d u l e d 
     / /   o n   t h e   ` a c t `   q u e u e . 
     ! (   R e a c t C u r r e n t A c t Q u e u e $ 1 . c u r r e n t   ! = =   n u l l   & &   e x i s t i n g C a l l b a c k N o d e   ! = =   f a k e A c t C a l l b a c k N o d e ) )   { 
         { 
             / /   I f   w e ' r e   g o i n g   t o   r e - u s e   a n   e x i s t i n g   t a s k ,   i t   n e e d s   t o   e x i s t . 
             / /   A s s u m e   t h a t   d i s c r e t e   u p d a t e   m i c r o t a s k s   a r e   n o n - c a n c e l l a b l e   a n d   n u l l . 
             / /   T O D O :   T e m p o r a r y   u n t i l   w e   c o n f i r m   t h i s   w a r n i n g   i s   n o t   f i r e d . 
             i f   ( e x i s t i n g C a l l b a c k N o d e   = =   n u l l   & &   e x i s t i n g C a l l b a c k P r i o r i t y   ! = =   S y n c L a n e )   { 
                 e r r o r ( ' E x p e c t e d   s c h e d u l e d   c a l l b a c k   t o   e x i s t .   T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
             } 
         }   / /   T h e   p r i o r i t y   h a s n ' t   c h a n g e d .   W e   c a n   r e u s e   t h e   e x i s t i n g   t a s k .   E x i t . 
 
 
         r e t u r n ; 
     } 
 
     i f   ( e x i s t i n g C a l l b a c k N o d e   ! =   n u l l )   { 
         / /   C a n c e l   t h e   e x i s t i n g   c a l l b a c k .   W e ' l l   s c h e d u l e   a   n e w   o n e   b e l o w . 
         c a n c e l C a l l b a c k $ 1 ( e x i s t i n g C a l l b a c k N o d e ) ; 
     }   / /   S c h e d u l e   a   n e w   c a l l b a c k . 
 
 
     v a r   n e w C a l l b a c k N o d e ; 
 
     i f   ( n e w C a l l b a c k P r i o r i t y   = = =   S y n c L a n e )   { 
         / /   S p e c i a l   c a s e :   S y n c   R e a c t   c a l l b a c k s   a r e   s c h e d u l e d   o n   a   s p e c i a l 
         / /   i n t e r n a l   q u e u e 
         i f   ( r o o t . t a g   = = =   L e g a c y R o o t )   { 
             i f   (   R e a c t C u r r e n t A c t Q u e u e $ 1 . i s B a t c h i n g L e g a c y   ! = =   n u l l )   { 
                 R e a c t C u r r e n t A c t Q u e u e $ 1 . d i d S c h e d u l e L e g a c y U p d a t e   =   t r u e ; 
             } 
 
             s c h e d u l e L e g a c y S y n c C a l l b a c k ( p e r f o r m S y n c W o r k O n R o o t . b i n d ( n u l l ,   r o o t ) ) ; 
         }   e l s e   { 
             s c h e d u l e S y n c C a l l b a c k ( p e r f o r m S y n c W o r k O n R o o t . b i n d ( n u l l ,   r o o t ) ) ; 
         } 
 
         { 
             / /   F l u s h   t h e   q u e u e   i n   a   m i c r o t a s k . 
             i f   (   R e a c t C u r r e n t A c t Q u e u e $ 1 . c u r r e n t   ! = =   n u l l )   { 
                 / /   I n s i d e   ` a c t ` ,   u s e   o u r   i n t e r n a l   ` a c t `   q u e u e   s o   t h a t   t h e s e   g e t   f l u s h e d 
                 / /   a t   t h e   e n d   o f   t h e   c u r r e n t   s c o p e   e v e n   w h e n   u s i n g   t h e   s y n c   v e r s i o n 
                 / /   o f   ` a c t ` . 
                 R e a c t C u r r e n t A c t Q u e u e $ 1 . c u r r e n t . p u s h ( f l u s h S y n c C a l l b a c k s ) ; 
             }   e l s e   { 
                 s c h e d u l e M i c r o t a s k ( f u n c t i o n   ( )   { 
                     / /   I n   S a f a r i ,   a p p e n d i n g   a n   i f r a m e   f o r c e s   m i c r o t a s k s   t o   r u n . 
                     / /   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 2 2 4 5 9 
                     / /   W e   d o n ' t   s u p p o r t   r u n n i n g   c a l l b a c k s   i n   t h e   m i d d l e   o f   r e n d e r 
                     / /   o r   c o m m i t   s o   w e   n e e d   t o   c h e c k   a g a i n s t   t h a t . 
                     i f   ( e x e c u t i o n C o n t e x t   = = =   N o C o n t e x t )   { 
                         / /   I t ' s   o n l y   s a f e   t o   d o   t h i s   c o n d i t i o n a l l y   b e c a u s e   w e   a l w a y s 
                         / /   c h e c k   f o r   p e n d i n g   w o r k   b e f o r e   w e   e x i t   t h e   t a s k . 
                         f l u s h S y n c C a l l b a c k s ( ) ; 
                     } 
                 } ) ; 
             } 
         } 
 
         n e w C a l l b a c k N o d e   =   n u l l ; 
     }   e l s e   { 
         v a r   s c h e d u l e r P r i o r i t y L e v e l ; 
 
         s w i t c h   ( l a n e s T o E v e n t P r i o r i t y ( n e x t L a n e s ) )   { 
             c a s e   D i s c r e t e E v e n t P r i o r i t y : 
                 s c h e d u l e r P r i o r i t y L e v e l   =   I m m e d i a t e P r i o r i t y ; 
                 b r e a k ; 
 
             c a s e   C o n t i n u o u s E v e n t P r i o r i t y : 
                 s c h e d u l e r P r i o r i t y L e v e l   =   U s e r B l o c k i n g P r i o r i t y ; 
                 b r e a k ; 
 
             c a s e   D e f a u l t E v e n t P r i o r i t y : 
                 s c h e d u l e r P r i o r i t y L e v e l   =   N o r m a l P r i o r i t y ; 
                 b r e a k ; 
 
             c a s e   I d l e E v e n t P r i o r i t y : 
                 s c h e d u l e r P r i o r i t y L e v e l   =   I d l e P r i o r i t y ; 
                 b r e a k ; 
 
             d e f a u l t : 
                 s c h e d u l e r P r i o r i t y L e v e l   =   N o r m a l P r i o r i t y ; 
                 b r e a k ; 
         } 
 
         n e w C a l l b a c k N o d e   =   s c h e d u l e C a l l b a c k $ 1 ( s c h e d u l e r P r i o r i t y L e v e l ,   p e r f o r m C o n c u r r e n t W o r k O n R o o t . b i n d ( n u l l ,   r o o t ) ) ; 
     } 
 
     r o o t . c a l l b a c k P r i o r i t y   =   n e w C a l l b a c k P r i o r i t y ; 
     r o o t . c a l l b a c k N o d e   =   n e w C a l l b a c k N o d e ; 
 }   / /   T h i s   i s   t h e   e n t r y   p o i n t   f o r   e v e r y   c o n c u r r e n t   t a s k ,   i . e .   a n y t h i n g   t h a t 
 / /   g o e s   t h r o u g h   S c h e d u l e r . 
 
 
 f u n c t i o n   p e r f o r m C o n c u r r e n t W o r k O n R o o t ( r o o t ,   d i d T i m e o u t )   { 
     { 
         r e s e t N e s t e d U p d a t e F l a g ( ) ; 
     }   / /   S i n c e   w e   k n o w   w e ' r e   i n   a   R e a c t   e v e n t ,   w e   c a n   c l e a r   t h e   c u r r e n t 
     / /   e v e n t   t i m e .   T h e   n e x t   u p d a t e   w i l l   c o m p u t e   a   n e w   e v e n t   t i m e . 
 
 
     c u r r e n t E v e n t T i m e   =   N o T i m e s t a m p ; 
     c u r r e n t E v e n t T r a n s i t i o n L a n e   =   N o L a n e s ; 
 
     i f   ( ( e x e c u t i o n C o n t e x t   &   ( R e n d e r C o n t e x t   |   C o m m i t C o n t e x t ) )   ! = =   N o C o n t e x t )   { 
         t h r o w   n e w   E r r o r ( ' S h o u l d   n o t   a l r e a d y   b e   w o r k i n g . ' ) ; 
     }   / /   F l u s h   a n y   p e n d i n g   p a s s i v e   e f f e c t s   b e f o r e   d e c i d i n g   w h i c h   l a n e s   t o   w o r k   o n , 
     / /   i n   c a s e   t h e y   s c h e d u l e   a d d i t i o n a l   w o r k . 
 
 
     v a r   o r i g i n a l C a l l b a c k N o d e   =   r o o t . c a l l b a c k N o d e ; 
     v a r   d i d F l u s h P a s s i v e E f f e c t s   =   f l u s h P a s s i v e E f f e c t s ( ) ; 
 
     i f   ( d i d F l u s h P a s s i v e E f f e c t s )   { 
         / /   S o m e t h i n g   i n   t h e   p a s s i v e   e f f e c t   p h a s e   m a y   h a v e   c a n c e l e d   t h e   c u r r e n t   t a s k . 
         / /   C h e c k   i f   t h e   t a s k   n o d e   f o r   t h i s   r o o t   w a s   c h a n g e d . 
         i f   ( r o o t . c a l l b a c k N o d e   ! = =   o r i g i n a l C a l l b a c k N o d e )   { 
             / /   T h e   c u r r e n t   t a s k   w a s   c a n c e l e d .   E x i t .   W e   d o n ' t   n e e d   t o   c a l l 
             / /   ` e n s u r e R o o t I s S c h e d u l e d `   b e c a u s e   t h e   c h e c k   a b o v e   i m p l i e s   e i t h e r   t h a t 
             / /   t h e r e ' s   a   n e w   t a s k ,   o r   t h a t   t h e r e ' s   n o   r e m a i n i n g   w o r k   o n   t h i s   r o o t . 
             r e t u r n   n u l l ; 
         } 
     }   / /   D e t e r m i n e   t h e   n e x t   l a n e s   t o   w o r k   o n ,   u s i n g   t h e   f i e l d s   s t o r e d 
     / /   o n   t h e   r o o t . 
 
 
     v a r   l a n e s   =   g e t N e x t L a n e s ( r o o t ,   r o o t   = = =   w o r k I n P r o g r e s s R o o t   ?   w o r k I n P r o g r e s s R o o t R e n d e r L a n e s   :   N o L a n e s ) ; 
 
     i f   ( l a n e s   = = =   N o L a n e s )   { 
         / /   D e f e n s i v e   c o d i n g .   T h i s   i s   n e v e r   e x p e c t e d   t o   h a p p e n . 
         r e t u r n   n u l l ; 
     }   / /   W e   d i s a b l e   t i m e - s l i c i n g   i n   s o m e   c a s e s :   i f   t h e   w o r k   h a s   b e e n   C P U - b o u n d 
     / /   f o r   t o o   l o n g   ( " e x p i r e d "   w o r k ,   t o   p r e v e n t   s t a r v a t i o n ) ,   o r   w e ' r e   i n 
     / /   s y n c - u p d a t e s - b y - d e f a u l t   m o d e . 
     / /   T O D O :   W e   o n l y   c h e c k   ` d i d T i m e o u t `   d e f e n s i v e l y ,   t o   a c c o u n t   f o r   a   S c h e d u l e r 
     / /   b u g   w e ' r e   s t i l l   i n v e s t i g a t i n g .   O n c e   t h e   b u g   i n   S c h e d u l e r   i s   f i x e d , 
     / /   w e   c a n   r e m o v e   t h i s ,   s i n c e   w e   t r a c k   e x p i r a t i o n   o u r s e l v e s . 
 
 
     v a r   s h o u l d T i m e S l i c e   =   ! i n c l u d e s B l o c k i n g L a n e ( r o o t ,   l a n e s )   & &   ! i n c l u d e s E x p i r e d L a n e ( r o o t ,   l a n e s )   & &   (   ! d i d T i m e o u t ) ; 
     v a r   e x i t S t a t u s   =   s h o u l d T i m e S l i c e   ?   r e n d e r R o o t C o n c u r r e n t ( r o o t ,   l a n e s )   :   r e n d e r R o o t S y n c ( r o o t ,   l a n e s ) ; 
 
     i f   ( e x i t S t a t u s   ! = =   R o o t I n P r o g r e s s )   { 
         i f   ( e x i t S t a t u s   = = =   R o o t E r r o r e d )   { 
             / /   I f   s o m e t h i n g   t h r e w   a n   e r r o r ,   t r y   r e n d e r i n g   o n e   m o r e   t i m e .   W e ' l l 
             / /   r e n d e r   s y n c h r o n o u s l y   t o   b l o c k   c o n c u r r e n t   d a t a   m u t a t i o n s ,   a n d   w e ' l l 
             / /   i n c l u d e s   a l l   p e n d i n g   u p d a t e s   a r e   i n c l u d e d .   I f   i t   s t i l l   f a i l s   a f t e r 
             / /   t h e   s e c o n d   a t t e m p t ,   w e ' l l   g i v e   u p   a n d   c o m m i t   t h e   r e s u l t i n g   t r e e . 
             v a r   e r r o r R e t r y L a n e s   =   g e t L a n e s T o R e t r y S y n c h r o n o u s l y O n E r r o r ( r o o t ) ; 
 
             i f   ( e r r o r R e t r y L a n e s   ! = =   N o L a n e s )   { 
                 l a n e s   =   e r r o r R e t r y L a n e s ; 
                 e x i t S t a t u s   =   r e c o v e r F r o m C o n c u r r e n t E r r o r ( r o o t ,   e r r o r R e t r y L a n e s ) ; 
             } 
         } 
 
         i f   ( e x i t S t a t u s   = = =   R o o t F a t a l E r r o r e d )   { 
             v a r   f a t a l E r r o r   =   w o r k I n P r o g r e s s R o o t F a t a l E r r o r ; 
             p r e p a r e F r e s h S t a c k ( r o o t ,   N o L a n e s ) ; 
             m a r k R o o t S u s p e n d e d $ 1 ( r o o t ,   l a n e s ) ; 
             e n s u r e R o o t I s S c h e d u l e d ( r o o t ,   n o w ( ) ) ; 
             t h r o w   f a t a l E r r o r ; 
         } 
 
         i f   ( e x i t S t a t u s   = = =   R o o t D i d N o t C o m p l e t e )   { 
             / /   T h e   r e n d e r   u n w o u n d   w i t h o u t   c o m p l e t i n g   t h e   t r e e .   T h i s   h a p p e n s   i n   s p e c i a l 
             / /   c a s e s   w h e r e   n e e d   t o   e x i t   t h e   c u r r e n t   r e n d e r   w i t h o u t   p r o d u c i n g   a 
             / /   c o n s i s t e n t   t r e e   o r   c o m m i t t i n g . 
             / / 
             / /   T h i s   s h o u l d   o n l y   h a p p e n   d u r i n g   a   c o n c u r r e n t   r e n d e r ,   n o t   a   d i s c r e t e   o r 
             / /   s y n c h r o n o u s   u p d a t e .   W e   s h o u l d   h a v e   a l r e a d y   c h e c k e d   f o r   t h i s   w h e n   w e 
             / /   u n w o u n d   t h e   s t a c k . 
             m a r k R o o t S u s p e n d e d $ 1 ( r o o t ,   l a n e s ) ; 
         }   e l s e   { 
             / /   T h e   r e n d e r   c o m p l e t e d . 
             / /   C h e c k   i f   t h i s   r e n d e r   m a y   h a v e   y i e l d e d   t o   a   c o n c u r r e n t   e v e n t ,   a n d   i f   s o , 
             / /   c o n f i r m   t h a t   a n y   n e w l y   r e n d e r e d   s t o r e s   a r e   c o n s i s t e n t . 
             / /   T O D O :   I t ' s   p o s s i b l e   t h a t   e v e n   a   c o n c u r r e n t   r e n d e r   m a y   n e v e r   h a v e   y i e l d e d 
             / /   t o   t h e   m a i n   t h r e a d ,   i f   i t   w a s   f a s t   e n o u g h ,   o r   i f   i t   e x p i r e d .   W e   c o u l d 
             / /   s k i p   t h e   c o n s i s t e n c y   c h e c k   i n   t h a t   c a s e ,   t o o . 
             v a r   r e n d e r W a s C o n c u r r e n t   =   ! i n c l u d e s B l o c k i n g L a n e ( r o o t ,   l a n e s ) ; 
             v a r   f i n i s h e d W o r k   =   r o o t . c u r r e n t . a l t e r n a t e ; 
 
             i f   ( r e n d e r W a s C o n c u r r e n t   & &   ! i s R e n d e r C o n s i s t e n t W i t h E x t e r n a l S t o r e s ( f i n i s h e d W o r k ) )   { 
                 / /   A   s t o r e   w a s   m u t a t e d   i n   a n   i n t e r l e a v e d   e v e n t .   R e n d e r   a g a i n , 
                 / /   s y n c h r o n o u s l y ,   t o   b l o c k   f u r t h e r   m u t a t i o n s . 
                 e x i t S t a t u s   =   r e n d e r R o o t S y n c ( r o o t ,   l a n e s ) ;   / /   W e   n e e d   t o   c h e c k   a g a i n   i f   s o m e t h i n g   t h r e w 
 
                 i f   ( e x i t S t a t u s   = = =   R o o t E r r o r e d )   { 
                     v a r   _ e r r o r R e t r y L a n e s   =   g e t L a n e s T o R e t r y S y n c h r o n o u s l y O n E r r o r ( r o o t ) ; 
 
                     i f   ( _ e r r o r R e t r y L a n e s   ! = =   N o L a n e s )   { 
                         l a n e s   =   _ e r r o r R e t r y L a n e s ; 
                         e x i t S t a t u s   =   r e c o v e r F r o m C o n c u r r e n t E r r o r ( r o o t ,   _ e r r o r R e t r y L a n e s ) ;   / /   W e   a s s u m e   t h e   t r e e   i s   n o w   c o n s i s t e n t   b e c a u s e   w e   d i d n ' t   y i e l d   t o   a n y 
                         / /   c o n c u r r e n t   e v e n t s . 
                     } 
                 } 
 
                 i f   ( e x i t S t a t u s   = = =   R o o t F a t a l E r r o r e d )   { 
                     v a r   _ f a t a l E r r o r   =   w o r k I n P r o g r e s s R o o t F a t a l E r r o r ; 
                     p r e p a r e F r e s h S t a c k ( r o o t ,   N o L a n e s ) ; 
                     m a r k R o o t S u s p e n d e d $ 1 ( r o o t ,   l a n e s ) ; 
                     e n s u r e R o o t I s S c h e d u l e d ( r o o t ,   n o w ( ) ) ; 
                     t h r o w   _ f a t a l E r r o r ; 
                 } 
             }   / /   W e   n o w   h a v e   a   c o n s i s t e n t   t r e e .   T h e   n e x t   s t e p   i s   e i t h e r   t o   c o m m i t   i t , 
             / /   o r ,   i f   s o m e t h i n g   s u s p e n d e d ,   w a i t   t o   c o m m i t   i t   a f t e r   a   t i m e o u t . 
 
 
             r o o t . f i n i s h e d W o r k   =   f i n i s h e d W o r k ; 
             r o o t . f i n i s h e d L a n e s   =   l a n e s ; 
             f i n i s h C o n c u r r e n t R e n d e r ( r o o t ,   e x i t S t a t u s ,   l a n e s ) ; 
         } 
     } 
 
     e n s u r e R o o t I s S c h e d u l e d ( r o o t ,   n o w ( ) ) ; 
 
     i f   ( r o o t . c a l l b a c k N o d e   = = =   o r i g i n a l C a l l b a c k N o d e )   { 
         / /   T h e   t a s k   n o d e   s c h e d u l e d   f o r   t h i s   r o o t   i s   t h e   s a m e   o n e   t h a t ' s 
         / /   c u r r e n t l y   e x e c u t e d .   N e e d   t o   r e t u r n   a   c o n t i n u a t i o n . 
         r e t u r n   p e r f o r m C o n c u r r e n t W o r k O n R o o t . b i n d ( n u l l ,   r o o t ) ; 
     } 
 
     r e t u r n   n u l l ; 
 } 
 
 f u n c t i o n   r e c o v e r F r o m C o n c u r r e n t E r r o r ( r o o t ,   e r r o r R e t r y L a n e s )   { 
     / /   I f   a n   e r r o r   o c c u r r e d   d u r i n g   h y d r a t i o n ,   d i s c a r d   s e r v e r   r e s p o n s e   a n d   f a l l 
     / /   b a c k   t o   c l i e n t   s i d e   r e n d e r . 
     / /   B e f o r e   r e n d e r i n g   a g a i n ,   s a v e   t h e   e r r o r s   f r o m   t h e   p r e v i o u s   a t t e m p t . 
     v a r   e r r o r s F r o m F i r s t A t t e m p t   =   w o r k I n P r o g r e s s R o o t C o n c u r r e n t E r r o r s ; 
 
     i f   ( i s R o o t D e h y d r a t e d ( r o o t ) )   { 
         / /   T h e   s h e l l   f a i l e d   t o   h y d r a t e .   S e t   a   f l a g   t o   f o r c e   a   c l i e n t   r e n d e r i n g 
         / /   d u r i n g   t h e   n e x t   a t t e m p t .   T o   d o   t h i s ,   w e   c a l l   p r e p a r e F r e s h S t a c k   n o w 
         / /   t o   c r e a t e   t h e   r o o t   w o r k - i n - p r o g r e s s   f i b e r .   T h i s   i s   a   b i t   w e i r d   i n   t e r m s 
         / /   o f   f a c t o r i n g ,   b e c a u s e   i t   r e l i e s   o n   r e n d e r R o o t S y n c   n o t   c a l l i n g 
         / /   p r e p a r e F r e s h S t a c k   a g a i n   i n   t h e   c a l l   b e l o w ,   w h i c h   h a p p e n s   b e c a u s e   t h e 
         / /   r o o t   a n d   l a n e s   h a v e n ' t   c h a n g e d . 
         / / 
         / /   T O D O :   I   t h i n k   w h a t   w e   s h o u l d   d o   i s   s e t   F o r c e C l i e n t R e n d e r   i n s i d e 
         / /   t h r o w E x c e p t i o n ,   l i k e   w e   d o   f o r   n e s t e d   S u s p e n s e   b o u n d a r i e s .   T h e   r e a s o n 
         / /   i t ' s   h e r e   i n s t e a d   i s   s o   w e   c a n   s w i t c h   t o   t h e   s y n c h r o n o u s   w o r k   l o o p ,   t o o . 
         / /   S o m e t h i n g   t o   c o n s i d e r   f o r   a   f u t u r e   r e f a c t o r . 
         v a r   r o o t W o r k I n P r o g r e s s   =   p r e p a r e F r e s h S t a c k ( r o o t ,   e r r o r R e t r y L a n e s ) ; 
         r o o t W o r k I n P r o g r e s s . f l a g s   | =   F o r c e C l i e n t R e n d e r ; 
 
         { 
             e r r o r H y d r a t i n g C o n t a i n e r ( r o o t . c o n t a i n e r I n f o ) ; 
         } 
     } 
 
     v a r   e x i t S t a t u s   =   r e n d e r R o o t S y n c ( r o o t ,   e r r o r R e t r y L a n e s ) ; 
 
     i f   ( e x i t S t a t u s   ! = =   R o o t E r r o r e d )   { 
         / /   S u c c e s s f u l l y   f i n i s h e d   r e n d e r i n g   o n   r e t r y 
         / /   T h e   e r r o r s   f r o m   t h e   f a i l e d   f i r s t   a t t e m p t   h a v e   b e e n   r e c o v e r e d .   A d d 
         / /   t h e m   t o   t h e   c o l l e c t i o n   o f   r e c o v e r a b l e   e r r o r s .   W e ' l l   l o g   t h e m   i n   t h e 
         / /   c o m m i t   p h a s e . 
         v a r   e r r o r s F r o m S e c o n d A t t e m p t   =   w o r k I n P r o g r e s s R o o t R e c o v e r a b l e E r r o r s ; 
         w o r k I n P r o g r e s s R o o t R e c o v e r a b l e E r r o r s   =   e r r o r s F r o m F i r s t A t t e m p t ;   / /   T h e   e r r o r s   f r o m   t h e   s e c o n d   a t t e m p t   s h o u l d   b e   q u e u e d   a f t e r   t h e   e r r o r s 
         / /   f r o m   t h e   f i r s t   a t t e m p t ,   t o   p r e s e r v e   t h e   c a u s a l   s e q u e n c e . 
 
         i f   ( e r r o r s F r o m S e c o n d A t t e m p t   ! = =   n u l l )   { 
             q u e u e R e c o v e r a b l e E r r o r s ( e r r o r s F r o m S e c o n d A t t e m p t ) ; 
         } 
     } 
 
     r e t u r n   e x i t S t a t u s ; 
 } 
 
 f u n c t i o n   q u e u e R e c o v e r a b l e E r r o r s ( e r r o r s )   { 
     i f   ( w o r k I n P r o g r e s s R o o t R e c o v e r a b l e E r r o r s   = = =   n u l l )   { 
         w o r k I n P r o g r e s s R o o t R e c o v e r a b l e E r r o r s   =   e r r o r s ; 
     }   e l s e   { 
         w o r k I n P r o g r e s s R o o t R e c o v e r a b l e E r r o r s . p u s h . a p p l y ( w o r k I n P r o g r e s s R o o t R e c o v e r a b l e E r r o r s ,   e r r o r s ) ; 
     } 
 } 
 
 f u n c t i o n   f i n i s h C o n c u r r e n t R e n d e r ( r o o t ,   e x i t S t a t u s ,   l a n e s )   { 
     s w i t c h   ( e x i t S t a t u s )   { 
         c a s e   R o o t I n P r o g r e s s : 
         c a s e   R o o t F a t a l E r r o r e d : 
             { 
                 t h r o w   n e w   E r r o r ( ' R o o t   d i d   n o t   c o m p l e t e .   T h i s   i s   a   b u g   i n   R e a c t . ' ) ; 
             } 
         / /   F l o w   k n o w s   a b o u t   i n v a r i a n t ,   s o   i t   c o m p l a i n s   i f   I   a d d   a   b r e a k 
         / /   s t a t e m e n t ,   b u t   e s l i n t   d o e s n ' t   k n o w   a b o u t   i n v a r i a n t ,   s o   i t   c o m p l a i n s 
         / /   i f   I   d o .   e s l i n t - d i s a b l e - n e x t - l i n e   n o - f a l l t h r o u g h 
 
         c a s e   R o o t E r r o r e d : 
             { 
                 / /   W e   s h o u l d   h a v e   a l r e a d y   a t t e m p t e d   t o   r e t r y   t h i s   t r e e .   I f   w e   r e a c h e d 
                 / /   t h i s   p o i n t ,   i t   e r r o r e d   a g a i n .   C o m m i t   i t . 
                 c o m m i t R o o t ( r o o t ,   w o r k I n P r o g r e s s R o o t R e c o v e r a b l e E r r o r s ,   w o r k I n P r o g r e s s T r a n s i t i o n s ) ; 
                 b r e a k ; 
             } 
 
         c a s e   R o o t S u s p e n d e d : 
             { 
                 m a r k R o o t S u s p e n d e d $ 1 ( r o o t ,   l a n e s ) ;   / /   W e   h a v e   a n   a c c e p t a b l e   l o a d i n g   s t a t e .   W e   n e e d   t o   f i g u r e   o u t   i f   w e 
                 / /   s h o u l d   i m m e d i a t e l y   c o m m i t   i t   o r   w a i t   a   b i t . 
 
                 i f   ( i n c l u d e s O n l y R e t r i e s ( l a n e s )   & &   / /   d o   n o t   d e l a y   i f   w e ' r e   i n s i d e   a n   a c t ( )   s c o p e 
                 ! s h o u l d F o r c e F l u s h F a l l b a c k s I n D E V ( ) )   { 
                     / /   T h i s   r e n d e r   o n l y   i n c l u d e d   r e t r i e s ,   n o   u p d a t e s .   T h r o t t l e   c o m m i t t i n g 
                     / /   r e t r i e s   s o   t h a t   w e   d o n ' t   s h o w   t o o   m a n y   l o a d i n g   s t a t e s   t o o   q u i c k l y . 
                     v a r   m s U n t i l T i m e o u t   =   g l o b a l M o s t R e c e n t F a l l b a c k T i m e   +   F A L L B A C K _ T H R O T T L E _ M S   -   n o w ( ) ;   / /   D o n ' t   b o t h e r   w i t h   a   v e r y   s h o r t   s u s p e n s e   t i m e . 
 
                     i f   ( m s U n t i l T i m e o u t   >   1 0 )   { 
                         v a r   n e x t L a n e s   =   g e t N e x t L a n e s ( r o o t ,   N o L a n e s ) ; 
 
                         i f   ( n e x t L a n e s   ! = =   N o L a n e s )   { 
                             / /   T h e r e ' s   a d d i t i o n a l   w o r k   o n   t h i s   r o o t . 
                             b r e a k ; 
                         } 
 
                         v a r   s u s p e n d e d L a n e s   =   r o o t . s u s p e n d e d L a n e s ; 
 
                         i f   ( ! i s S u b s e t O f L a n e s ( s u s p e n d e d L a n e s ,   l a n e s ) )   { 
                             / /   W e   s h o u l d   p r e f e r   t o   r e n d e r   t h e   f a l l b a c k   o f   a t   t h e   l a s t 
                             / /   s u s p e n d e d   l e v e l .   P i n g   t h e   l a s t   s u s p e n d e d   l e v e l   t o   t r y 
                             / /   r e n d e r i n g   i t   a g a i n . 
                             / /   F I X M E :   W h a t   i f   t h e   s u s p e n d e d   l a n e s   a r e   I d l e ?   S h o u l d   n o t   r e s t a r t . 
                             v a r   e v e n t T i m e   =   r e q u e s t E v e n t T i m e ( ) ; 
                             m a r k R o o t P i n g e d ( r o o t ,   s u s p e n d e d L a n e s ) ; 
                             b r e a k ; 
                         }   / /   T h e   r e n d e r   i s   s u s p e n d e d ,   i t   h a s n ' t   t i m e d   o u t ,   a n d   t h e r e ' s   n o 
                         / /   l o w e r   p r i o r i t y   w o r k   t o   d o .   I n s t e a d   o f   c o m m i t t i n g   t h e   f a l l b a c k 
                         / /   i m m e d i a t e l y ,   w a i t   f o r   m o r e   d a t a   t o   a r r i v e . 
 
 
                         r o o t . t i m e o u t H a n d l e   =   s c h e d u l e T i m e o u t ( c o m m i t R o o t . b i n d ( n u l l ,   r o o t ,   w o r k I n P r o g r e s s R o o t R e c o v e r a b l e E r r o r s ,   w o r k I n P r o g r e s s T r a n s i t i o n s ) ,   m s U n t i l T i m e o u t ) ; 
                         b r e a k ; 
                     } 
                 }   / /   T h e   w o r k   e x p i r e d .   C o m m i t   i m m e d i a t e l y . 
 
 
                 c o m m i t R o o t ( r o o t ,   w o r k I n P r o g r e s s R o o t R e c o v e r a b l e E r r o r s ,   w o r k I n P r o g r e s s T r a n s i t i o n s ) ; 
                 b r e a k ; 
             } 
 
         c a s e   R o o t S u s p e n d e d W i t h D e l a y : 
             { 
                 m a r k R o o t S u s p e n d e d $ 1 ( r o o t ,   l a n e s ) ; 
 
                 i f   ( i n c l u d e s O n l y T r a n s i t i o n s ( l a n e s ) )   { 
                     / /   T h i s   i s   a   t r a n s i t i o n ,   s o   w e   s h o u l d   e x i t   w i t h o u t   c o m m i t t i n g   a 
                     / /   p l a c e h o l d e r   a n d   w i t h o u t   s c h e d u l i n g   a   t i m e o u t .   D e l a y   i n d e f i n i t e l y 
                     / /   u n t i l   w e   r e c e i v e   m o r e   d a t a . 
                     b r e a k ; 
                 } 
 
                 i f   ( ! s h o u l d F o r c e F l u s h F a l l b a c k s I n D E V ( ) )   { 
                     / /   T h i s   i s   n o t   a   t r a n s i t i o n ,   b u t   w e   d i d   t r i g g e r   a n   a v o i d e d   s t a t e . 
                     / /   S c h e d u l e   a   p l a c e h o l d e r   t o   d i s p l a y   a f t e r   a   s h o r t   d e l a y ,   u s i n g   t h e   J u s t 
                     / /   N o t i c e a b l e   D i f f e r e n c e . 
                     / /   T O D O :   I s   t h e   J N D   o p t i m i z a t i o n   w o r t h   t h e   a d d e d   c o m p l e x i t y ?   I f   t h i s   i s 
                     / /   t h e   o n l y   r e a s o n   w e   t r a c k   t h e   e v e n t   t i m e ,   t h e n   p r o b a b l y   n o t . 
                     / /   C o n s i d e r   r e m o v i n g . 
                     v a r   m o s t R e c e n t E v e n t T i m e   =   g e t M o s t R e c e n t E v e n t T i m e ( r o o t ,   l a n e s ) ; 
                     v a r   e v e n t T i m e M s   =   m o s t R e c e n t E v e n t T i m e ; 
                     v a r   t i m e E l a p s e d M s   =   n o w ( )   -   e v e n t T i m e M s ; 
 
                     v a r   _ m s U n t i l T i m e o u t   =   j n d ( t i m e E l a p s e d M s )   -   t i m e E l a p s e d M s ;   / /   D o n ' t   b o t h e r   w i t h   a   v e r y   s h o r t   s u s p e n s e   t i m e . 
 
 
                     i f   ( _ m s U n t i l T i m e o u t   >   1 0 )   { 
                         / /   I n s t e a d   o f   c o m m i t t i n g   t h e   f a l l b a c k   i m m e d i a t e l y ,   w a i t   f o r   m o r e   d a t a 
                         / /   t o   a r r i v e . 
                         r o o t . t i m e o u t H a n d l e   =   s c h e d u l e T i m e o u t ( c o m m i t R o o t . b i n d ( n u l l ,   r o o t ,   w o r k I n P r o g r e s s R o o t R e c o v e r a b l e E r r o r s ,   w o r k I n P r o g r e s s T r a n s i t i o n s ) ,   _ m s U n t i l T i m e o u t ) ; 
                         b r e a k ; 
                     } 
                 }   / /   C o m m i t   t h e   p l a c e h o l d e r . 
 
 
                 c o m m i t R o o t ( r o o t ,   w o r k I n P r o g r e s s R o o t R e c o v e r a b l e E r r o r s ,   w o r k I n P r o g r e s s T r a n s i t i o n s ) ; 
                 b r e a k ; 
             } 
 
         c a s e   R o o t C o m p l e t e d : 
             { 
                 / /   T h e   w o r k   c o m p l e t e d .   R e a d y   t o   c o m m i t . 
                 c o m m i t R o o t ( r o o t ,   w o r k I n P r o g r e s s R o o t R e c o v e r a b l e E r r o r s ,   w o r k I n P r o g r e s s T r a n s i t i o n s ) ; 
                 b r e a k ; 
             } 
 
         d e f a u l t : 
             { 
                 t h r o w   n e w   E r r o r ( ' U n k n o w n   r o o t   e x i t   s t a t u s . ' ) ; 
             } 
     } 
 } 
 
 f u n c t i o n   i s R e n d e r C o n s i s t e n t W i t h E x t e r n a l S t o r e s ( f i n i s h e d W o r k )   { 
     / /   S e a r c h   t h e   r e n d e r e d   t r e e   f o r   e x t e r n a l   s t o r e   r e a d s ,   a n d   c h e c k   w h e t h e r   t h e 
     / /   s t o r e s   w e r e   m u t a t e d   i n   a   c o n c u r r e n t   e v e n t .   I n t e n t i o n a l l y   u s i n g   a n   i t e r a t i v e 
     / /   l o o p   i n s t e a d   o f   r e c u r s i o n   s o   w e   c a n   e x i t   e a r l y . 
     v a r   n o d e   =   f i n i s h e d W o r k ; 
 
     w h i l e   ( t r u e )   { 
         i f   ( n o d e . f l a g s   &   S t o r e C o n s i s t e n c y )   { 
             v a r   u p d a t e Q u e u e   =   n o d e . u p d a t e Q u e u e ; 
 
             i f   ( u p d a t e Q u e u e   ! = =   n u l l )   { 
                 v a r   c h e c k s   =   u p d a t e Q u e u e . s t o r e s ; 
 
                 i f   ( c h e c k s   ! = =   n u l l )   { 
                     f o r   ( v a r   i   =   0 ;   i   <   c h e c k s . l e n g t h ;   i + + )   { 
                         v a r   c h e c k   =   c h e c k s [ i ] ; 
                         v a r   g e t S n a p s h o t   =   c h e c k . g e t S n a p s h o t ; 
                         v a r   r e n d e r e d V a l u e   =   c h e c k . v a l u e ; 
 
                         t r y   { 
                             i f   ( ! o b j e c t I s ( g e t S n a p s h o t ( ) ,   r e n d e r e d V a l u e ) )   { 
                                 / /   F o u n d   a n   i n c o n s i s t e n t   s t o r e . 
                                 r e t u r n   f a l s e ; 
                             } 
                         }   c a t c h   ( e r r o r )   { 
                             / /   I f   ` g e t S n a p s h o t `   t h r o w s ,   r e t u r n   ` f a l s e ` .   T h i s   w i l l   s c h e d u l e 
                             / /   a   r e - r e n d e r ,   a n d   t h e   e r r o r   w i l l   b e   r e t h r o w n   d u r i n g   r e n d e r . 
                             r e t u r n   f a l s e ; 
                         } 
                     } 
                 } 
             } 
         } 
 
         v a r   c h i l d   =   n o d e . c h i l d ; 
 
         i f   ( n o d e . s u b t r e e F l a g s   &   S t o r e C o n s i s t e n c y   & &   c h i l d   ! = =   n u l l )   { 
             c h i l d . r e t u r n   =   n o d e ; 
             n o d e   =   c h i l d ; 
             c o n t i n u e ; 
         } 
 
         i f   ( n o d e   = = =   f i n i s h e d W o r k )   { 
             r e t u r n   t r u e ; 
         } 
 
         w h i l e   ( n o d e . s i b l i n g   = = =   n u l l )   { 
             i f   ( n o d e . r e t u r n   = = =   n u l l   | |   n o d e . r e t u r n   = = =   f i n i s h e d W o r k )   { 
                 r e t u r n   t r u e ; 
             } 
 
             n o d e   =   n o d e . r e t u r n ; 
         } 
 
         n o d e . s i b l i n g . r e t u r n   =   n o d e . r e t u r n ; 
         n o d e   =   n o d e . s i b l i n g ; 
     }   / /   F l o w   d o e s n ' t   k n o w   t h i s   i s   u n r e a c h a b l e ,   b u t   e s l i n t   d o e s 
     / /   e s l i n t - d i s a b l e - n e x t - l i n e   n o - u n r e a c h a b l e 
 
 
     r e t u r n   t r u e ; 
 } 
 
 f u n c t i o n   m a r k R o o t S u s p e n d e d $ 1 ( r o o t ,   s u s p e n d e d L a n e s )   { 
     / /   W h e n   s u s p e n d i n g ,   w e   s h o u l d   a l w a y s   e x c l u d e   l a n e s   t h a t   w e r e   p i n g e d   o r   ( m o r e 
     / /   r a r e l y ,   s i n c e   w e   t r y   t o   a v o i d   i t )   u p d a t e d   d u r i n g   t h e   r e n d e r   p h a s e . 
     / /   T O D O :   L o l   m a y b e   t h e r e ' s   a   b e t t e r   w a y   t o   f a c t o r   t h i s   b e s i d e s   t h i s 
     / /   o b n o x i o u s l y   n a m e d   f u n c t i o n   : ) 
     s u s p e n d e d L a n e s   =   r e m o v e L a n e s ( s u s p e n d e d L a n e s ,   w o r k I n P r o g r e s s R o o t P i n g e d L a n e s ) ; 
     s u s p e n d e d L a n e s   =   r e m o v e L a n e s ( s u s p e n d e d L a n e s ,   w o r k I n P r o g r e s s R o o t I n t e r l e a v e d U p d a t e d L a n e s ) ; 
     m a r k R o o t S u s p e n d e d ( r o o t ,   s u s p e n d e d L a n e s ) ; 
 }   / /   T h i s   i s   t h e   e n t r y   p o i n t   f o r   s y n c h r o n o u s   t a s k s   t h a t   d o n ' t   g o 
 / /   t h r o u g h   S c h e d u l e r 
 
 
 f u n c t i o n   p e r f o r m S y n c W o r k O n R o o t ( r o o t )   { 
     { 
         s y n c N e s t e d U p d a t e F l a g ( ) ; 
     } 
 
     i f   ( ( e x e c u t i o n C o n t e x t   &   ( R e n d e r C o n t e x t   |   C o m m i t C o n t e x t ) )   ! = =   N o C o n t e x t )   { 
         t h r o w   n e w   E r r o r ( ' S h o u l d   n o t   a l r e a d y   b e   w o r k i n g . ' ) ; 
     } 
 
     f l u s h P a s s i v e E f f e c t s ( ) ; 
     v a r   l a n e s   =   g e t N e x t L a n e s ( r o o t ,   N o L a n e s ) ; 
 
     i f   ( ! i n c l u d e s S o m e L a n e ( l a n e s ,   S y n c L a n e ) )   { 
         / /   T h e r e ' s   n o   r e m a i n i n g   s y n c   w o r k   l e f t . 
         e n s u r e R o o t I s S c h e d u l e d ( r o o t ,   n o w ( ) ) ; 
         r e t u r n   n u l l ; 
     } 
 
     v a r   e x i t S t a t u s   =   r e n d e r R o o t S y n c ( r o o t ,   l a n e s ) ; 
 
     i f   ( r o o t . t a g   ! = =   L e g a c y R o o t   & &   e x i t S t a t u s   = = =   R o o t E r r o r e d )   { 
         / /   I f   s o m e t h i n g   t h r e w   a n   e r r o r ,   t r y   r e n d e r i n g   o n e   m o r e   t i m e .   W e ' l l   r e n d e r 
         / /   s y n c h r o n o u s l y   t o   b l o c k   c o n c u r r e n t   d a t a   m u t a t i o n s ,   a n d   w e ' l l   i n c l u d e s 
         / /   a l l   p e n d i n g   u p d a t e s   a r e   i n c l u d e d .   I f   i t   s t i l l   f a i l s   a f t e r   t h e   s e c o n d 
         / /   a t t e m p t ,   w e ' l l   g i v e   u p   a n d   c o m m i t   t h e   r e s u l t i n g   t r e e . 
         v a r   e r r o r R e t r y L a n e s   =   g e t L a n e s T o R e t r y S y n c h r o n o u s l y O n E r r o r ( r o o t ) ; 
 
         i f   ( e r r o r R e t r y L a n e s   ! = =   N o L a n e s )   { 
             l a n e s   =   e r r o r R e t r y L a n e s ; 
             e x i t S t a t u s   =   r e c o v e r F r o m C o n c u r r e n t E r r o r ( r o o t ,   e r r o r R e t r y L a n e s ) ; 
         } 
     } 
 
     i f   ( e x i t S t a t u s   = = =   R o o t F a t a l E r r o r e d )   { 
         v a r   f a t a l E r r o r   =   w o r k I n P r o g r e s s R o o t F a t a l E r r o r ; 
         p r e p a r e F r e s h S t a c k ( r o o t ,   N o L a n e s ) ; 
         m a r k R o o t S u s p e n d e d $ 1 ( r o o t ,   l a n e s ) ; 
         e n s u r e R o o t I s S c h e d u l e d ( r o o t ,   n o w ( ) ) ; 
         t h r o w   f a t a l E r r o r ; 
     } 
 
     i f   ( e x i t S t a t u s   = = =   R o o t D i d N o t C o m p l e t e )   { 
         t h r o w   n e w   E r r o r ( ' R o o t   d i d   n o t   c o m p l e t e .   T h i s   i s   a   b u g   i n   R e a c t . ' ) ; 
     }   / /   W e   n o w   h a v e   a   c o n s i s t e n t   t r e e .   B e c a u s e   t h i s   i s   a   s y n c   r e n d e r ,   w e 
     / /   w i l l   c o m m i t   i t   e v e n   i f   s o m e t h i n g   s u s p e n d e d . 
 
 
     v a r   f i n i s h e d W o r k   =   r o o t . c u r r e n t . a l t e r n a t e ; 
     r o o t . f i n i s h e d W o r k   =   f i n i s h e d W o r k ; 
     r o o t . f i n i s h e d L a n e s   =   l a n e s ; 
     c o m m i t R o o t ( r o o t ,   w o r k I n P r o g r e s s R o o t R e c o v e r a b l e E r r o r s ,   w o r k I n P r o g r e s s T r a n s i t i o n s ) ;   / /   B e f o r e   e x i t i n g ,   m a k e   s u r e   t h e r e ' s   a   c a l l b a c k   s c h e d u l e d   f o r   t h e   n e x t 
     / /   p e n d i n g   l e v e l . 
 
     e n s u r e R o o t I s S c h e d u l e d ( r o o t ,   n o w ( ) ) ; 
     r e t u r n   n u l l ; 
 } 
 
 f u n c t i o n   f l u s h R o o t ( r o o t ,   l a n e s )   { 
     i f   ( l a n e s   ! = =   N o L a n e s )   { 
         m a r k R o o t E n t a n g l e d ( r o o t ,   m e r g e L a n e s ( l a n e s ,   S y n c L a n e ) ) ; 
         e n s u r e R o o t I s S c h e d u l e d ( r o o t ,   n o w ( ) ) ; 
 
         i f   ( ( e x e c u t i o n C o n t e x t   &   ( R e n d e r C o n t e x t   |   C o m m i t C o n t e x t ) )   = = =   N o C o n t e x t )   { 
             r e s e t R e n d e r T i m e r ( ) ; 
             f l u s h S y n c C a l l b a c k s ( ) ; 
         } 
     } 
 } 
 f u n c t i o n   b a t c h e d U p d a t e s $ 1 ( f n ,   a )   { 
     v a r   p r e v E x e c u t i o n C o n t e x t   =   e x e c u t i o n C o n t e x t ; 
     e x e c u t i o n C o n t e x t   | =   B a t c h e d C o n t e x t ; 
 
     t r y   { 
         r e t u r n   f n ( a ) ; 
     }   f i n a l l y   { 
         e x e c u t i o n C o n t e x t   =   p r e v E x e c u t i o n C o n t e x t ;   / /   I f   t h e r e   w e r e   l e g a c y   s y n c   u p d a t e s ,   f l u s h   t h e m   a t   t h e   e n d   o f   t h e   o u t e r 
         / /   m o s t   b a t c h e d U p d a t e s - l i k e   m e t h o d . 
 
         i f   ( e x e c u t i o n C o n t e x t   = = =   N o C o n t e x t   & &   / /   T r e a t   ` a c t `   a s   i f   i t ' s   i n s i d e   ` b a t c h e d U p d a t e s ` ,   e v e n   i n   l e g a c y   m o d e . 
         ! (   R e a c t C u r r e n t A c t Q u e u e $ 1 . i s B a t c h i n g L e g a c y ) )   { 
             r e s e t R e n d e r T i m e r ( ) ; 
             f l u s h S y n c C a l l b a c k s O n l y I n L e g a c y M o d e ( ) ; 
         } 
     } 
 } 
 f u n c t i o n   d i s c r e t e U p d a t e s ( f n ,   a ,   b ,   c ,   d )   { 
     v a r   p r e v i o u s P r i o r i t y   =   g e t C u r r e n t U p d a t e P r i o r i t y ( ) ; 
     v a r   p r e v T r a n s i t i o n   =   R e a c t C u r r e n t B a t c h C o n f i g $ 3 . t r a n s i t i o n ; 
 
     t r y   { 
         R e a c t C u r r e n t B a t c h C o n f i g $ 3 . t r a n s i t i o n   =   n u l l ; 
         s e t C u r r e n t U p d a t e P r i o r i t y ( D i s c r e t e E v e n t P r i o r i t y ) ; 
         r e t u r n   f n ( a ,   b ,   c ,   d ) ; 
     }   f i n a l l y   { 
         s e t C u r r e n t U p d a t e P r i o r i t y ( p r e v i o u s P r i o r i t y ) ; 
         R e a c t C u r r e n t B a t c h C o n f i g $ 3 . t r a n s i t i o n   =   p r e v T r a n s i t i o n ; 
 
         i f   ( e x e c u t i o n C o n t e x t   = = =   N o C o n t e x t )   { 
             r e s e t R e n d e r T i m e r ( ) ; 
         } 
     } 
 }   / /   O v e r l o a d   t h e   d e f i n i t i o n   t o   t h e   t w o   v a l i d   s i g n a t u r e s . 
 / /   W a r n i n g ,   t h i s   o p t s - o u t   o f   c h e c k i n g   t h e   f u n c t i o n   b o d y . 
 
 / /   e s l i n t - d i s a b l e - n e x t - l i n e   n o - r e d e c l a r e 
 f u n c t i o n   f l u s h S y n c ( f n )   { 
     / /   I n   l e g a c y   m o d e ,   w e   f l u s h   p e n d i n g   p a s s i v e   e f f e c t s   a t   t h e   b e g i n n i n g   o f   t h e 
     / /   n e x t   e v e n t ,   n o t   a t   t h e   e n d   o f   t h e   p r e v i o u s   o n e . 
     i f   ( r o o t W i t h P e n d i n g P a s s i v e E f f e c t s   ! = =   n u l l   & &   r o o t W i t h P e n d i n g P a s s i v e E f f e c t s . t a g   = = =   L e g a c y R o o t   & &   ( e x e c u t i o n C o n t e x t   &   ( R e n d e r C o n t e x t   |   C o m m i t C o n t e x t ) )   = = =   N o C o n t e x t )   { 
         f l u s h P a s s i v e E f f e c t s ( ) ; 
     } 
 
     v a r   p r e v E x e c u t i o n C o n t e x t   =   e x e c u t i o n C o n t e x t ; 
     e x e c u t i o n C o n t e x t   | =   B a t c h e d C o n t e x t ; 
     v a r   p r e v T r a n s i t i o n   =   R e a c t C u r r e n t B a t c h C o n f i g $ 3 . t r a n s i t i o n ; 
     v a r   p r e v i o u s P r i o r i t y   =   g e t C u r r e n t U p d a t e P r i o r i t y ( ) ; 
 
     t r y   { 
         R e a c t C u r r e n t B a t c h C o n f i g $ 3 . t r a n s i t i o n   =   n u l l ; 
         s e t C u r r e n t U p d a t e P r i o r i t y ( D i s c r e t e E v e n t P r i o r i t y ) ; 
 
         i f   ( f n )   { 
             r e t u r n   f n ( ) ; 
         }   e l s e   { 
             r e t u r n   u n d e f i n e d ; 
         } 
     }   f i n a l l y   { 
         s e t C u r r e n t U p d a t e P r i o r i t y ( p r e v i o u s P r i o r i t y ) ; 
         R e a c t C u r r e n t B a t c h C o n f i g $ 3 . t r a n s i t i o n   =   p r e v T r a n s i t i o n ; 
         e x e c u t i o n C o n t e x t   =   p r e v E x e c u t i o n C o n t e x t ;   / /   F l u s h   t h e   i m m e d i a t e   c a l l b a c k s   t h a t   w e r e   s c h e d u l e d   d u r i n g   t h i s   b a t c h . 
         / /   N o t e   t h a t   t h i s   w i l l   h a p p e n   e v e n   i f   b a t c h e d U p d a t e s   i s   h i g h e r   u p 
         / /   t h e   s t a c k . 
 
         i f   ( ( e x e c u t i o n C o n t e x t   &   ( R e n d e r C o n t e x t   |   C o m m i t C o n t e x t ) )   = = =   N o C o n t e x t )   { 
             f l u s h S y n c C a l l b a c k s ( ) ; 
         } 
     } 
 } 
 f u n c t i o n   i s A l r e a d y R e n d e r i n g ( )   { 
     / /   U s e d   b y   t h e   r e n d e r e r   t o   p r i n t   a   w a r n i n g   i f   c e r t a i n   A P I s   a r e   c a l l e d   f r o m 
     / /   t h e   w r o n g   c o n t e x t . 
     r e t u r n     ( e x e c u t i o n C o n t e x t   &   ( R e n d e r C o n t e x t   |   C o m m i t C o n t e x t ) )   ! = =   N o C o n t e x t ; 
 } 
 f u n c t i o n   p u s h R e n d e r L a n e s ( f i b e r ,   l a n e s )   { 
     p u s h ( s u b t r e e R e n d e r L a n e s C u r s o r ,   s u b t r e e R e n d e r L a n e s ,   f i b e r ) ; 
     s u b t r e e R e n d e r L a n e s   =   m e r g e L a n e s ( s u b t r e e R e n d e r L a n e s ,   l a n e s ) ; 
     w o r k I n P r o g r e s s R o o t I n c l u d e d L a n e s   =   m e r g e L a n e s ( w o r k I n P r o g r e s s R o o t I n c l u d e d L a n e s ,   l a n e s ) ; 
 } 
 f u n c t i o n   p o p R e n d e r L a n e s ( f i b e r )   { 
     s u b t r e e R e n d e r L a n e s   =   s u b t r e e R e n d e r L a n e s C u r s o r . c u r r e n t ; 
     p o p ( s u b t r e e R e n d e r L a n e s C u r s o r ,   f i b e r ) ; 
 } 
 
 f u n c t i o n   p r e p a r e F r e s h S t a c k ( r o o t ,   l a n e s )   { 
     r o o t . f i n i s h e d W o r k   =   n u l l ; 
     r o o t . f i n i s h e d L a n e s   =   N o L a n e s ; 
     v a r   t i m e o u t H a n d l e   =   r o o t . t i m e o u t H a n d l e ; 
 
     i f   ( t i m e o u t H a n d l e   ! = =   n o T i m e o u t )   { 
         / /   T h e   r o o t   p r e v i o u s   s u s p e n d e d   a n d   s c h e d u l e d   a   t i m e o u t   t o   c o m m i t   a   f a l l b a c k 
         / /   s t a t e .   N o w   t h a t   w e   h a v e   a d d i t i o n a l   w o r k ,   c a n c e l   t h e   t i m e o u t . 
         r o o t . t i m e o u t H a n d l e   =   n o T i m e o u t ;   / /   $ F l o w F i x M e   C o m p l a i n s   n o T i m e o u t   i s   n o t   a   T i m e o u t I D ,   d e s p i t e   t h e   c h e c k   a b o v e 
 
         c a n c e l T i m e o u t ( t i m e o u t H a n d l e ) ; 
     } 
 
     i f   ( w o r k I n P r o g r e s s   ! = =   n u l l )   { 
         v a r   i n t e r r u p t e d W o r k   =   w o r k I n P r o g r e s s . r e t u r n ; 
 
         w h i l e   ( i n t e r r u p t e d W o r k   ! = =   n u l l )   { 
             v a r   c u r r e n t   =   i n t e r r u p t e d W o r k . a l t e r n a t e ; 
             u n w i n d I n t e r r u p t e d W o r k ( c u r r e n t ,   i n t e r r u p t e d W o r k ) ; 
             i n t e r r u p t e d W o r k   =   i n t e r r u p t e d W o r k . r e t u r n ; 
         } 
     } 
 
     w o r k I n P r o g r e s s R o o t   =   r o o t ; 
     v a r   r o o t W o r k I n P r o g r e s s   =   c r e a t e W o r k I n P r o g r e s s ( r o o t . c u r r e n t ,   n u l l ) ; 
     w o r k I n P r o g r e s s   =   r o o t W o r k I n P r o g r e s s ; 
     w o r k I n P r o g r e s s R o o t R e n d e r L a n e s   =   s u b t r e e R e n d e r L a n e s   =   w o r k I n P r o g r e s s R o o t I n c l u d e d L a n e s   =   l a n e s ; 
     w o r k I n P r o g r e s s R o o t E x i t S t a t u s   =   R o o t I n P r o g r e s s ; 
     w o r k I n P r o g r e s s R o o t F a t a l E r r o r   =   n u l l ; 
     w o r k I n P r o g r e s s R o o t S k i p p e d L a n e s   =   N o L a n e s ; 
     w o r k I n P r o g r e s s R o o t I n t e r l e a v e d U p d a t e d L a n e s   =   N o L a n e s ; 
     w o r k I n P r o g r e s s R o o t P i n g e d L a n e s   =   N o L a n e s ; 
     w o r k I n P r o g r e s s R o o t C o n c u r r e n t E r r o r s   =   n u l l ; 
     w o r k I n P r o g r e s s R o o t R e c o v e r a b l e E r r o r s   =   n u l l ; 
     e n q u e u e I n t e r l e a v e d U p d a t e s ( ) ; 
 
     { 
         R e a c t S t r i c t M o d e W a r n i n g s . d i s c a r d P e n d i n g W a r n i n g s ( ) ; 
     } 
 
     r e t u r n   r o o t W o r k I n P r o g r e s s ; 
 } 
 
 f u n c t i o n   h a n d l e E r r o r ( r o o t ,   t h r o w n V a l u e )   { 
     d o   { 
         v a r   e r r o r e d W o r k   =   w o r k I n P r o g r e s s ; 
 
         t r y   { 
             / /   R e s e t   m o d u l e - l e v e l   s t a t e   t h a t   w a s   s e t   d u r i n g   t h e   r e n d e r   p h a s e . 
             r e s e t C o n t e x t D e p e n d e n c i e s ( ) ; 
             r e s e t H o o k s A f t e r T h r o w ( ) ; 
             r e s e t C u r r e n t F i b e r ( ) ;   / /   T O D O :   I   f o u n d   a n d   a d d e d   t h i s   m i s s i n g   l i n e   w h i l e   i n v e s t i g a t i n g   a 
             / /   s e p a r a t e   i s s u e .   W r i t e   a   r e g r e s s i o n   t e s t   u s i n g   s t r i n g   r e f s . 
 
             R e a c t C u r r e n t O w n e r $ 2 . c u r r e n t   =   n u l l ; 
 
             i f   ( e r r o r e d W o r k   = = =   n u l l   | |   e r r o r e d W o r k . r e t u r n   = = =   n u l l )   { 
                 / /   E x p e c t e d   t o   b e   w o r k i n g   o n   a   n o n - r o o t   f i b e r .   T h i s   i s   a   f a t a l   e r r o r 
                 / /   b e c a u s e   t h e r e ' s   n o   a n c e s t o r   t h a t   c a n   h a n d l e   i t ;   t h e   r o o t   i s 
                 / /   s u p p o s e d   t o   c a p t u r e   a l l   e r r o r s   t h a t   w e r e n ' t   c a u g h t   b y   a n   e r r o r 
                 / /   b o u n d a r y . 
                 w o r k I n P r o g r e s s R o o t E x i t S t a t u s   =   R o o t F a t a l E r r o r e d ; 
                 w o r k I n P r o g r e s s R o o t F a t a l E r r o r   =   t h r o w n V a l u e ;   / /   S e t   ` w o r k I n P r o g r e s s `   t o   n u l l .   T h i s   r e p r e s e n t s   a d v a n c i n g   t o   t h e   n e x t 
                 / /   s i b l i n g ,   o r   t h e   p a r e n t   i f   t h e r e   a r e   n o   s i b l i n g s .   B u t   s i n c e   t h e   r o o t 
                 / /   h a s   n o   s i b l i n g s   n o r   a   p a r e n t ,   w e   s e t   i t   t o   n u l l .   U s u a l l y   t h i s   i s 
                 / /   h a n d l e d   b y   ` c o m p l e t e U n i t O f W o r k `   o r   ` u n w i n d W o r k ` ,   b u t   s i n c e   w e ' r e 
                 / /   i n t e n t i o n a l l y   n o t   c a l l i n g   t h o s e ,   w e   n e e d   s e t   i t   h e r e . 
                 / /   T O D O :   C o n s i d e r   c a l l i n g   ` u n w i n d W o r k `   t o   p o p   t h e   c o n t e x t s . 
 
                 w o r k I n P r o g r e s s   =   n u l l ; 
                 r e t u r n ; 
             } 
 
             i f   ( e n a b l e P r o f i l e r T i m e r   & &   e r r o r e d W o r k . m o d e   &   P r o f i l e M o d e )   { 
                 / /   R e c o r d   t h e   t i m e   s p e n t   r e n d e r i n g   b e f o r e   a n   e r r o r   w a s   t h r o w n .   T h i s 
                 / /   a v o i d s   i n a c c u r a t e   P r o f i l e r   d u r a t i o n s   i n   t h e   c a s e   o f   a 
                 / /   s u s p e n d e d   r e n d e r . 
                 s t o p P r o f i l e r T i m e r I f R u n n i n g A n d R e c o r d D e l t a ( e r r o r e d W o r k ,   t r u e ) ; 
             } 
 
             i f   ( e n a b l e S c h e d u l i n g P r o f i l e r )   { 
                 m a r k C o m p o n e n t R e n d e r S t o p p e d ( ) ; 
 
                 i f   ( t h r o w n V a l u e   ! = =   n u l l   & &   t y p e o f   t h r o w n V a l u e   = = =   ' o b j e c t '   & &   t y p e o f   t h r o w n V a l u e . t h e n   = = =   ' f u n c t i o n ' )   { 
                     v a r   w a k e a b l e   =   t h r o w n V a l u e ; 
                     m a r k C o m p o n e n t S u s p e n d e d ( e r r o r e d W o r k ,   w a k e a b l e ,   w o r k I n P r o g r e s s R o o t R e n d e r L a n e s ) ; 
                 }   e l s e   { 
                     m a r k C o m p o n e n t E r r o r e d ( e r r o r e d W o r k ,   t h r o w n V a l u e ,   w o r k I n P r o g r e s s R o o t R e n d e r L a n e s ) ; 
                 } 
             } 
 
             t h r o w E x c e p t i o n ( r o o t ,   e r r o r e d W o r k . r e t u r n ,   e r r o r e d W o r k ,   t h r o w n V a l u e ,   w o r k I n P r o g r e s s R o o t R e n d e r L a n e s ) ; 
             c o m p l e t e U n i t O f W o r k ( e r r o r e d W o r k ) ; 
         }   c a t c h   ( y e t A n o t h e r T h r o w n V a l u e )   { 
             / /   S o m e t h i n g   i n   t h e   r e t u r n   p a t h   a l s o   t h r e w . 
             t h r o w n V a l u e   =   y e t A n o t h e r T h r o w n V a l u e ; 
 
             i f   ( w o r k I n P r o g r e s s   = = =   e r r o r e d W o r k   & &   e r r o r e d W o r k   ! = =   n u l l )   { 
                 / /   I f   t h i s   b o u n d a r y   h a s   a l r e a d y   e r r o r e d ,   t h e n   w e   h a d   t r o u b l e   p r o c e s s i n g 
                 / /   t h e   e r r o r .   B u b b l e   i t   t o   t h e   n e x t   b o u n d a r y . 
                 e r r o r e d W o r k   =   e r r o r e d W o r k . r e t u r n ; 
                 w o r k I n P r o g r e s s   =   e r r o r e d W o r k ; 
             }   e l s e   { 
                 e r r o r e d W o r k   =   w o r k I n P r o g r e s s ; 
             } 
 
             c o n t i n u e ; 
         }   / /   R e t u r n   t o   t h e   n o r m a l   w o r k   l o o p . 
 
 
         r e t u r n ; 
     }   w h i l e   ( t r u e ) ; 
 } 
 
 f u n c t i o n   p u s h D i s p a t c h e r ( )   { 
     v a r   p r e v D i s p a t c h e r   =   R e a c t C u r r e n t D i s p a t c h e r $ 2 . c u r r e n t ; 
     R e a c t C u r r e n t D i s p a t c h e r $ 2 . c u r r e n t   =   C o n t e x t O n l y D i s p a t c h e r ; 
 
     i f   ( p r e v D i s p a t c h e r   = = =   n u l l )   { 
         / /   T h e   R e a c t   i s o m o r p h i c   p a c k a g e   d o e s   n o t   i n c l u d e   a   d e f a u l t   d i s p a t c h e r . 
         / /   I n s t e a d   t h e   f i r s t   r e n d e r e r   w i l l   l a z i l y   a t t a c h   o n e ,   i n   o r d e r   t o   g i v e 
         / /   n i c e r   e r r o r   m e s s a g e s . 
         r e t u r n   C o n t e x t O n l y D i s p a t c h e r ; 
     }   e l s e   { 
         r e t u r n   p r e v D i s p a t c h e r ; 
     } 
 } 
 
 f u n c t i o n   p o p D i s p a t c h e r ( p r e v D i s p a t c h e r )   { 
     R e a c t C u r r e n t D i s p a t c h e r $ 2 . c u r r e n t   =   p r e v D i s p a t c h e r ; 
 } 
 
 f u n c t i o n   m a r k C o m m i t T i m e O f F a l l b a c k ( )   { 
     g l o b a l M o s t R e c e n t F a l l b a c k T i m e   =   n o w ( ) ; 
 } 
 f u n c t i o n   m a r k S k i p p e d U p d a t e L a n e s ( l a n e )   { 
     w o r k I n P r o g r e s s R o o t S k i p p e d L a n e s   =   m e r g e L a n e s ( l a n e ,   w o r k I n P r o g r e s s R o o t S k i p p e d L a n e s ) ; 
 } 
 f u n c t i o n   r e n d e r D i d S u s p e n d ( )   { 
     i f   ( w o r k I n P r o g r e s s R o o t E x i t S t a t u s   = = =   R o o t I n P r o g r e s s )   { 
         w o r k I n P r o g r e s s R o o t E x i t S t a t u s   =   R o o t S u s p e n d e d ; 
     } 
 } 
 f u n c t i o n   r e n d e r D i d S u s p e n d D e l a y I f P o s s i b l e ( )   { 
     i f   ( w o r k I n P r o g r e s s R o o t E x i t S t a t u s   = = =   R o o t I n P r o g r e s s   | |   w o r k I n P r o g r e s s R o o t E x i t S t a t u s   = = =   R o o t S u s p e n d e d   | |   w o r k I n P r o g r e s s R o o t E x i t S t a t u s   = = =   R o o t E r r o r e d )   { 
         w o r k I n P r o g r e s s R o o t E x i t S t a t u s   =   R o o t S u s p e n d e d W i t h D e l a y ; 
     }   / /   C h e c k   i f   t h e r e   a r e   u p d a t e s   t h a t   w e   s k i p p e d   t r e e   t h a t   m i g h t   h a v e   u n b l o c k e d 
     / /   t h i s   r e n d e r . 
 
 
     i f   ( w o r k I n P r o g r e s s R o o t   ! = =   n u l l   & &   ( i n c l u d e s N o n I d l e W o r k ( w o r k I n P r o g r e s s R o o t S k i p p e d L a n e s )   | |   i n c l u d e s N o n I d l e W o r k ( w o r k I n P r o g r e s s R o o t I n t e r l e a v e d U p d a t e d L a n e s ) ) )   { 
         / /   M a r k   t h e   c u r r e n t   r e n d e r   a s   s u s p e n d e d   s o   t h a t   w e   s w i t c h   t o   w o r k i n g   o n 
         / /   t h e   u p d a t e s   t h a t   w e r e   s k i p p e d .   U s u a l l y   w e   o n l y   s u s p e n d   a t   t h e   e n d   o f 
         / /   t h e   r e n d e r   p h a s e . 
         / /   T O D O :   W e   s h o u l d   p r o b a b l y   a l w a y s   m a r k   t h e   r o o t   a s   s u s p e n d e d   i m m e d i a t e l y 
         / /   ( i n s i d e   t h i s   f u n c t i o n ) ,   s i n c e   b y   s u s p e n d i n g   a t   t h e   e n d   o f   t h e   r e n d e r 
         / /   p h a s e   i n t r o d u c e s   a   p o t e n t i a l   m i s t a k e   w h e r e   w e   s u s p e n d   l a n e s   t h a t   w e r e 
         / /   p i n g e d   o r   u p d a t e d   w h i l e   w e   w e r e   r e n d e r i n g . 
         m a r k R o o t S u s p e n d e d $ 1 ( w o r k I n P r o g r e s s R o o t ,   w o r k I n P r o g r e s s R o o t R e n d e r L a n e s ) ; 
     } 
 } 
 f u n c t i o n   r e n d e r D i d E r r o r ( e r r o r )   { 
     i f   ( w o r k I n P r o g r e s s R o o t E x i t S t a t u s   ! = =   R o o t S u s p e n d e d W i t h D e l a y )   { 
         w o r k I n P r o g r e s s R o o t E x i t S t a t u s   =   R o o t E r r o r e d ; 
     } 
 
     i f   ( w o r k I n P r o g r e s s R o o t C o n c u r r e n t E r r o r s   = = =   n u l l )   { 
         w o r k I n P r o g r e s s R o o t C o n c u r r e n t E r r o r s   =   [ e r r o r ] ; 
     }   e l s e   { 
         w o r k I n P r o g r e s s R o o t C o n c u r r e n t E r r o r s . p u s h ( e r r o r ) ; 
     } 
 }   / /   C a l l e d   d u r i n g   r e n d e r   t o   d e t e r m i n e   i f   a n y t h i n g   h a s   s u s p e n d e d . 
 / /   R e t u r n s   f a l s e   i f   w e ' r e   n o t   s u r e . 
 
 f u n c t i o n   r e n d e r H a s N o t S u s p e n d e d Y e t ( )   { 
     / /   I f   s o m e t h i n g   e r r o r e d   o r   c o m p l e t e d ,   w e   c a n ' t   r e a l l y   b e   s u r e , 
     / /   s o   t h o s e   a r e   f a l s e . 
     r e t u r n   w o r k I n P r o g r e s s R o o t E x i t S t a t u s   = = =   R o o t I n P r o g r e s s ; 
 } 
 
 f u n c t i o n   r e n d e r R o o t S y n c ( r o o t ,   l a n e s )   { 
     v a r   p r e v E x e c u t i o n C o n t e x t   =   e x e c u t i o n C o n t e x t ; 
     e x e c u t i o n C o n t e x t   | =   R e n d e r C o n t e x t ; 
     v a r   p r e v D i s p a t c h e r   =   p u s h D i s p a t c h e r ( ) ;   / /   I f   t h e   r o o t   o r   l a n e s   h a v e   c h a n g e d ,   t h r o w   o u t   t h e   e x i s t i n g   s t a c k 
     / /   a n d   p r e p a r e   a   f r e s h   o n e .   O t h e r w i s e   w e ' l l   c o n t i n u e   w h e r e   w e   l e f t   o f f . 
 
     i f   ( w o r k I n P r o g r e s s R o o t   ! = =   r o o t   | |   w o r k I n P r o g r e s s R o o t R e n d e r L a n e s   ! = =   l a n e s )   { 
         { 
             i f   ( i s D e v T o o l s P r e s e n t )   { 
                 v a r   m e m o i z e d U p d a t e r s   =   r o o t . m e m o i z e d U p d a t e r s ; 
 
                 i f   ( m e m o i z e d U p d a t e r s . s i z e   >   0 )   { 
                     r e s t o r e P e n d i n g U p d a t e r s ( r o o t ,   w o r k I n P r o g r e s s R o o t R e n d e r L a n e s ) ; 
                     m e m o i z e d U p d a t e r s . c l e a r ( ) ; 
                 }   / /   A t   t h i s   p o i n t ,   m o v e   F i b e r s   t h a t   s c h e d u l e d   t h e   u p c o m i n g   w o r k   f r o m   t h e   M a p   t o   t h e   S e t . 
                 / /   I f   w e   b a i l o u t   o n   t h i s   w o r k ,   w e ' l l   m o v e   t h e m   b a c k   ( l i k e   a b o v e ) . 
                 / /   I t ' s   i m p o r t a n t   t o   m o v e   t h e m   n o w   i n   c a s e   t h e   w o r k   s p a w n s   m o r e   w o r k   a t   t h e   s a m e   p r i o r i t y   w i t h   d i f f e r e n t   u p d a t e r s . 
                 / /   T h a t   w a y   w e   c a n   k e e p   t h e   c u r r e n t   u p d a t e   a n d   f u t u r e   u p d a t e s   s e p a r a t e . 
 
 
                 m o v e P e n d i n g F i b e r s T o M e m o i z e d ( r o o t ,   l a n e s ) ; 
             } 
         } 
 
         w o r k I n P r o g r e s s T r a n s i t i o n s   =   g e t T r a n s i t i o n s F o r L a n e s ( ) ; 
         p r e p a r e F r e s h S t a c k ( r o o t ,   l a n e s ) ; 
     } 
 
     { 
         m a r k R e n d e r S t a r t e d ( l a n e s ) ; 
     } 
 
     d o   { 
         t r y   { 
             w o r k L o o p S y n c ( ) ; 
             b r e a k ; 
         }   c a t c h   ( t h r o w n V a l u e )   { 
             h a n d l e E r r o r ( r o o t ,   t h r o w n V a l u e ) ; 
         } 
     }   w h i l e   ( t r u e ) ; 
 
     r e s e t C o n t e x t D e p e n d e n c i e s ( ) ; 
     e x e c u t i o n C o n t e x t   =   p r e v E x e c u t i o n C o n t e x t ; 
     p o p D i s p a t c h e r ( p r e v D i s p a t c h e r ) ; 
 
     i f   ( w o r k I n P r o g r e s s   ! = =   n u l l )   { 
         / /   T h i s   i s   a   s y n c   r e n d e r ,   s o   w e   s h o u l d   h a v e   f i n i s h e d   t h e   w h o l e   t r e e . 
         t h r o w   n e w   E r r o r ( ' C a n n o t   c o m m i t   a n   i n c o m p l e t e   r o o t .   T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   a   '   +   ' b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
     } 
 
     { 
         m a r k R e n d e r S t o p p e d ( ) ; 
     }   / /   S e t   t h i s   t o   n u l l   t o   i n d i c a t e   t h e r e ' s   n o   i n - p r o g r e s s   r e n d e r . 
 
 
     w o r k I n P r o g r e s s R o o t   =   n u l l ; 
     w o r k I n P r o g r e s s R o o t R e n d e r L a n e s   =   N o L a n e s ; 
     r e t u r n   w o r k I n P r o g r e s s R o o t E x i t S t a t u s ; 
 }   / /   T h e   w o r k   l o o p   i s   a n   e x t r e m e l y   h o t   p a t h .   T e l l   C l o s u r e   n o t   t o   i n l i n e   i t . 
 
 / * *   @ n o i n l i n e   * / 
 
 
 f u n c t i o n   w o r k L o o p S y n c ( )   { 
     / /   A l r e a d y   t i m e d   o u t ,   s o   p e r f o r m   w o r k   w i t h o u t   c h e c k i n g   i f   w e   n e e d   t o   y i e l d . 
     w h i l e   ( w o r k I n P r o g r e s s   ! = =   n u l l )   { 
         p e r f o r m U n i t O f W o r k ( w o r k I n P r o g r e s s ) ; 
     } 
 } 
 
 f u n c t i o n   r e n d e r R o o t C o n c u r r e n t ( r o o t ,   l a n e s )   { 
     v a r   p r e v E x e c u t i o n C o n t e x t   =   e x e c u t i o n C o n t e x t ; 
     e x e c u t i o n C o n t e x t   | =   R e n d e r C o n t e x t ; 
     v a r   p r e v D i s p a t c h e r   =   p u s h D i s p a t c h e r ( ) ;   / /   I f   t h e   r o o t   o r   l a n e s   h a v e   c h a n g e d ,   t h r o w   o u t   t h e   e x i s t i n g   s t a c k 
     / /   a n d   p r e p a r e   a   f r e s h   o n e .   O t h e r w i s e   w e ' l l   c o n t i n u e   w h e r e   w e   l e f t   o f f . 
 
     i f   ( w o r k I n P r o g r e s s R o o t   ! = =   r o o t   | |   w o r k I n P r o g r e s s R o o t R e n d e r L a n e s   ! = =   l a n e s )   { 
         { 
             i f   ( i s D e v T o o l s P r e s e n t )   { 
                 v a r   m e m o i z e d U p d a t e r s   =   r o o t . m e m o i z e d U p d a t e r s ; 
 
                 i f   ( m e m o i z e d U p d a t e r s . s i z e   >   0 )   { 
                     r e s t o r e P e n d i n g U p d a t e r s ( r o o t ,   w o r k I n P r o g r e s s R o o t R e n d e r L a n e s ) ; 
                     m e m o i z e d U p d a t e r s . c l e a r ( ) ; 
                 }   / /   A t   t h i s   p o i n t ,   m o v e   F i b e r s   t h a t   s c h e d u l e d   t h e   u p c o m i n g   w o r k   f r o m   t h e   M a p   t o   t h e   S e t . 
                 / /   I f   w e   b a i l o u t   o n   t h i s   w o r k ,   w e ' l l   m o v e   t h e m   b a c k   ( l i k e   a b o v e ) . 
                 / /   I t ' s   i m p o r t a n t   t o   m o v e   t h e m   n o w   i n   c a s e   t h e   w o r k   s p a w n s   m o r e   w o r k   a t   t h e   s a m e   p r i o r i t y   w i t h   d i f f e r e n t   u p d a t e r s . 
                 / /   T h a t   w a y   w e   c a n   k e e p   t h e   c u r r e n t   u p d a t e   a n d   f u t u r e   u p d a t e s   s e p a r a t e . 
 
 
                 m o v e P e n d i n g F i b e r s T o M e m o i z e d ( r o o t ,   l a n e s ) ; 
             } 
         } 
 
         w o r k I n P r o g r e s s T r a n s i t i o n s   =   g e t T r a n s i t i o n s F o r L a n e s ( ) ; 
         r e s e t R e n d e r T i m e r ( ) ; 
         p r e p a r e F r e s h S t a c k ( r o o t ,   l a n e s ) ; 
     } 
 
     { 
         m a r k R e n d e r S t a r t e d ( l a n e s ) ; 
     } 
 
     d o   { 
         t r y   { 
             w o r k L o o p C o n c u r r e n t ( ) ; 
             b r e a k ; 
         }   c a t c h   ( t h r o w n V a l u e )   { 
             h a n d l e E r r o r ( r o o t ,   t h r o w n V a l u e ) ; 
         } 
     }   w h i l e   ( t r u e ) ; 
 
     r e s e t C o n t e x t D e p e n d e n c i e s ( ) ; 
     p o p D i s p a t c h e r ( p r e v D i s p a t c h e r ) ; 
     e x e c u t i o n C o n t e x t   =   p r e v E x e c u t i o n C o n t e x t ; 
 
 
     i f   ( w o r k I n P r o g r e s s   ! = =   n u l l )   { 
         / /   S t i l l   w o r k   r e m a i n i n g . 
         { 
             m a r k R e n d e r Y i e l d e d ( ) ; 
         } 
 
         r e t u r n   R o o t I n P r o g r e s s ; 
     }   e l s e   { 
         / /   C o m p l e t e d   t h e   t r e e . 
         { 
             m a r k R e n d e r S t o p p e d ( ) ; 
         }   / /   S e t   t h i s   t o   n u l l   t o   i n d i c a t e   t h e r e ' s   n o   i n - p r o g r e s s   r e n d e r . 
 
 
         w o r k I n P r o g r e s s R o o t   =   n u l l ; 
         w o r k I n P r o g r e s s R o o t R e n d e r L a n e s   =   N o L a n e s ;   / /   R e t u r n   t h e   f i n a l   e x i t   s t a t u s . 
 
         r e t u r n   w o r k I n P r o g r e s s R o o t E x i t S t a t u s ; 
     } 
 } 
 / * *   @ n o i n l i n e   * / 
 
 
 f u n c t i o n   w o r k L o o p C o n c u r r e n t ( )   { 
     / /   P e r f o r m   w o r k   u n t i l   S c h e d u l e r   a s k s   u s   t o   y i e l d 
     w h i l e   ( w o r k I n P r o g r e s s   ! = =   n u l l   & &   ! s h o u l d Y i e l d ( ) )   { 
         p e r f o r m U n i t O f W o r k ( w o r k I n P r o g r e s s ) ; 
     } 
 } 
 
 f u n c t i o n   p e r f o r m U n i t O f W o r k ( u n i t O f W o r k )   { 
     / /   T h e   c u r r e n t ,   f l u s h e d ,   s t a t e   o f   t h i s   f i b e r   i s   t h e   a l t e r n a t e .   I d e a l l y 
     / /   n o t h i n g   s h o u l d   r e l y   o n   t h i s ,   b u t   r e l y i n g   o n   i t   h e r e   m e a n s   t h a t   w e   d o n ' t 
     / /   n e e d   a n   a d d i t i o n a l   f i e l d   o n   t h e   w o r k   i n   p r o g r e s s . 
     v a r   c u r r e n t   =   u n i t O f W o r k . a l t e r n a t e ; 
     s e t C u r r e n t F i b e r ( u n i t O f W o r k ) ; 
     v a r   n e x t ; 
 
     i f   (   ( u n i t O f W o r k . m o d e   &   P r o f i l e M o d e )   ! = =   N o M o d e )   { 
         s t a r t P r o f i l e r T i m e r ( u n i t O f W o r k ) ; 
         n e x t   =   b e g i n W o r k $ 1 ( c u r r e n t ,   u n i t O f W o r k ,   s u b t r e e R e n d e r L a n e s ) ; 
         s t o p P r o f i l e r T i m e r I f R u n n i n g A n d R e c o r d D e l t a ( u n i t O f W o r k ,   t r u e ) ; 
     }   e l s e   { 
         n e x t   =   b e g i n W o r k $ 1 ( c u r r e n t ,   u n i t O f W o r k ,   s u b t r e e R e n d e r L a n e s ) ; 
     } 
 
     r e s e t C u r r e n t F i b e r ( ) ; 
     u n i t O f W o r k . m e m o i z e d P r o p s   =   u n i t O f W o r k . p e n d i n g P r o p s ; 
 
     i f   ( n e x t   = = =   n u l l )   { 
         / /   I f   t h i s   d o e s n ' t   s p a w n   n e w   w o r k ,   c o m p l e t e   t h e   c u r r e n t   w o r k . 
         c o m p l e t e U n i t O f W o r k ( u n i t O f W o r k ) ; 
     }   e l s e   { 
         w o r k I n P r o g r e s s   =   n e x t ; 
     } 
 
     R e a c t C u r r e n t O w n e r $ 2 . c u r r e n t   =   n u l l ; 
 } 
 
 f u n c t i o n   c o m p l e t e U n i t O f W o r k ( u n i t O f W o r k )   { 
     / /   A t t e m p t   t o   c o m p l e t e   t h e   c u r r e n t   u n i t   o f   w o r k ,   t h e n   m o v e   t o   t h e   n e x t 
     / /   s i b l i n g .   I f   t h e r e   a r e   n o   m o r e   s i b l i n g s ,   r e t u r n   t o   t h e   p a r e n t   f i b e r . 
     v a r   c o m p l e t e d W o r k   =   u n i t O f W o r k ; 
 
     d o   { 
         / /   T h e   c u r r e n t ,   f l u s h e d ,   s t a t e   o f   t h i s   f i b e r   i s   t h e   a l t e r n a t e .   I d e a l l y 
         / /   n o t h i n g   s h o u l d   r e l y   o n   t h i s ,   b u t   r e l y i n g   o n   i t   h e r e   m e a n s   t h a t   w e   d o n ' t 
         / /   n e e d   a n   a d d i t i o n a l   f i e l d   o n   t h e   w o r k   i n   p r o g r e s s . 
         v a r   c u r r e n t   =   c o m p l e t e d W o r k . a l t e r n a t e ; 
         v a r   r e t u r n F i b e r   =   c o m p l e t e d W o r k . r e t u r n ;   / /   C h e c k   i f   t h e   w o r k   c o m p l e t e d   o r   i f   s o m e t h i n g   t h r e w . 
 
         i f   ( ( c o m p l e t e d W o r k . f l a g s   &   I n c o m p l e t e )   = = =   N o F l a g s )   { 
             s e t C u r r e n t F i b e r ( c o m p l e t e d W o r k ) ; 
             v a r   n e x t   =   v o i d   0 ; 
 
             i f   (   ( c o m p l e t e d W o r k . m o d e   &   P r o f i l e M o d e )   = = =   N o M o d e )   { 
                 n e x t   =   c o m p l e t e W o r k ( c u r r e n t ,   c o m p l e t e d W o r k ,   s u b t r e e R e n d e r L a n e s ) ; 
             }   e l s e   { 
                 s t a r t P r o f i l e r T i m e r ( c o m p l e t e d W o r k ) ; 
                 n e x t   =   c o m p l e t e W o r k ( c u r r e n t ,   c o m p l e t e d W o r k ,   s u b t r e e R e n d e r L a n e s ) ;   / /   U p d a t e   r e n d e r   d u r a t i o n   a s s u m i n g   w e   d i d n ' t   e r r o r . 
 
                 s t o p P r o f i l e r T i m e r I f R u n n i n g A n d R e c o r d D e l t a ( c o m p l e t e d W o r k ,   f a l s e ) ; 
             } 
 
             r e s e t C u r r e n t F i b e r ( ) ; 
 
             i f   ( n e x t   ! = =   n u l l )   { 
                 / /   C o m p l e t i n g   t h i s   f i b e r   s p a w n e d   n e w   w o r k .   W o r k   o n   t h a t   n e x t . 
                 w o r k I n P r o g r e s s   =   n e x t ; 
                 r e t u r n ; 
             } 
         }   e l s e   { 
             / /   T h i s   f i b e r   d i d   n o t   c o m p l e t e   b e c a u s e   s o m e t h i n g   t h r e w .   P o p   v a l u e s   o f f 
             / /   t h e   s t a c k   w i t h o u t   e n t e r i n g   t h e   c o m p l e t e   p h a s e .   I f   t h i s   i s   a   b o u n d a r y , 
             / /   c a p t u r e   v a l u e s   i f   p o s s i b l e . 
             v a r   _ n e x t   =   u n w i n d W o r k ( c u r r e n t ,   c o m p l e t e d W o r k ) ;   / /   B e c a u s e   t h i s   f i b e r   d i d   n o t   c o m p l e t e ,   d o n ' t   r e s e t   i t s   l a n e s . 
 
 
             i f   ( _ n e x t   ! = =   n u l l )   { 
                 / /   I f   c o m p l e t i n g   t h i s   w o r k   s p a w n e d   n e w   w o r k ,   d o   t h a t   n e x t .   W e ' l l   c o m e 
                 / /   b a c k   h e r e   a g a i n . 
                 / /   S i n c e   w e ' r e   r e s t a r t i n g ,   r e m o v e   a n y t h i n g   t h a t   i s   n o t   a   h o s t   e f f e c t 
                 / /   f r o m   t h e   e f f e c t   t a g . 
                 _ n e x t . f l a g s   & =   H o s t E f f e c t M a s k ; 
                 w o r k I n P r o g r e s s   =   _ n e x t ; 
                 r e t u r n ; 
             } 
 
             i f   (   ( c o m p l e t e d W o r k . m o d e   &   P r o f i l e M o d e )   ! = =   N o M o d e )   { 
                 / /   R e c o r d   t h e   r e n d e r   d u r a t i o n   f o r   t h e   f i b e r   t h a t   e r r o r e d . 
                 s t o p P r o f i l e r T i m e r I f R u n n i n g A n d R e c o r d D e l t a ( c o m p l e t e d W o r k ,   f a l s e ) ;   / /   I n c l u d e   t h e   t i m e   s p e n t   w o r k i n g   o n   f a i l e d   c h i l d r e n   b e f o r e   c o n t i n u i n g . 
 
                 v a r   a c t u a l D u r a t i o n   =   c o m p l e t e d W o r k . a c t u a l D u r a t i o n ; 
                 v a r   c h i l d   =   c o m p l e t e d W o r k . c h i l d ; 
 
                 w h i l e   ( c h i l d   ! = =   n u l l )   { 
                     a c t u a l D u r a t i o n   + =   c h i l d . a c t u a l D u r a t i o n ; 
                     c h i l d   =   c h i l d . s i b l i n g ; 
                 } 
 
                 c o m p l e t e d W o r k . a c t u a l D u r a t i o n   =   a c t u a l D u r a t i o n ; 
             } 
 
             i f   ( r e t u r n F i b e r   ! = =   n u l l )   { 
                 / /   M a r k   t h e   p a r e n t   f i b e r   a s   i n c o m p l e t e   a n d   c l e a r   i t s   s u b t r e e   f l a g s . 
                 r e t u r n F i b e r . f l a g s   | =   I n c o m p l e t e ; 
                 r e t u r n F i b e r . s u b t r e e F l a g s   =   N o F l a g s ; 
                 r e t u r n F i b e r . d e l e t i o n s   =   n u l l ; 
             }   e l s e   { 
                 / /   W e ' v e   u n w o u n d   a l l   t h e   w a y   t o   t h e   r o o t . 
                 w o r k I n P r o g r e s s R o o t E x i t S t a t u s   =   R o o t D i d N o t C o m p l e t e ; 
                 w o r k I n P r o g r e s s   =   n u l l ; 
                 r e t u r n ; 
             } 
         } 
 
         v a r   s i b l i n g F i b e r   =   c o m p l e t e d W o r k . s i b l i n g ; 
 
         i f   ( s i b l i n g F i b e r   ! = =   n u l l )   { 
             / /   I f   t h e r e   i s   m o r e   w o r k   t o   d o   i n   t h i s   r e t u r n F i b e r ,   d o   t h a t   n e x t . 
             w o r k I n P r o g r e s s   =   s i b l i n g F i b e r ; 
             r e t u r n ; 
         }   / /   O t h e r w i s e ,   r e t u r n   t o   t h e   p a r e n t 
 
 
         c o m p l e t e d W o r k   =   r e t u r n F i b e r ;   / /   U p d a t e   t h e   n e x t   t h i n g   w e ' r e   w o r k i n g   o n   i n   c a s e   s o m e t h i n g   t h r o w s . 
 
         w o r k I n P r o g r e s s   =   c o m p l e t e d W o r k ; 
     }   w h i l e   ( c o m p l e t e d W o r k   ! = =   n u l l ) ;   / /   W e ' v e   r e a c h e d   t h e   r o o t . 
 
 
     i f   ( w o r k I n P r o g r e s s R o o t E x i t S t a t u s   = = =   R o o t I n P r o g r e s s )   { 
         w o r k I n P r o g r e s s R o o t E x i t S t a t u s   =   R o o t C o m p l e t e d ; 
     } 
 } 
 
 f u n c t i o n   c o m m i t R o o t ( r o o t ,   r e c o v e r a b l e E r r o r s ,   t r a n s i t i o n s )   { 
     / /   T O D O :   T h i s   n o   l o n g e r   m a k e s   a n y   s e n s e .   W e   a l r e a d y   w r a p   t h e   m u t a t i o n   a n d 
     / /   l a y o u t   p h a s e s .   S h o u l d   b e   a b l e   t o   r e m o v e . 
     v a r   p r e v i o u s U p d a t e L a n e P r i o r i t y   =   g e t C u r r e n t U p d a t e P r i o r i t y ( ) ; 
     v a r   p r e v T r a n s i t i o n   =   R e a c t C u r r e n t B a t c h C o n f i g $ 3 . t r a n s i t i o n ; 
 
     t r y   { 
         R e a c t C u r r e n t B a t c h C o n f i g $ 3 . t r a n s i t i o n   =   n u l l ; 
         s e t C u r r e n t U p d a t e P r i o r i t y ( D i s c r e t e E v e n t P r i o r i t y ) ; 
         c o m m i t R o o t I m p l ( r o o t ,   r e c o v e r a b l e E r r o r s ,   t r a n s i t i o n s ,   p r e v i o u s U p d a t e L a n e P r i o r i t y ) ; 
     }   f i n a l l y   { 
         R e a c t C u r r e n t B a t c h C o n f i g $ 3 . t r a n s i t i o n   =   p r e v T r a n s i t i o n ; 
         s e t C u r r e n t U p d a t e P r i o r i t y ( p r e v i o u s U p d a t e L a n e P r i o r i t y ) ; 
     } 
 
     r e t u r n   n u l l ; 
 } 
 
 f u n c t i o n   c o m m i t R o o t I m p l ( r o o t ,   r e c o v e r a b l e E r r o r s ,   t r a n s i t i o n s ,   r e n d e r P r i o r i t y L e v e l )   { 
     d o   { 
         / /   ` f l u s h P a s s i v e E f f e c t s `   w i l l   c a l l   ` f l u s h S y n c U p d a t e Q u e u e `   a t   t h e   e n d ,   w h i c h 
         / /   m e a n s   ` f l u s h P a s s i v e E f f e c t s `   w i l l   s o m e t i m e s   r e s u l t   i n   a d d i t i o n a l 
         / /   p a s s i v e   e f f e c t s .   S o   w e   n e e d   t o   k e e p   f l u s h i n g   i n   a   l o o p   u n t i l   t h e r e   a r e 
         / /   n o   m o r e   p e n d i n g   e f f e c t s . 
         / /   T O D O :   M i g h t   b e   b e t t e r   i f   ` f l u s h P a s s i v e E f f e c t s `   d i d   n o t   a u t o m a t i c a l l y 
         / /   f l u s h   s y n c h r o n o u s   w o r k   a t   t h e   e n d ,   t o   a v o i d   f a c t o r i n g   h a z a r d s   l i k e   t h i s . 
         f l u s h P a s s i v e E f f e c t s ( ) ; 
     }   w h i l e   ( r o o t W i t h P e n d i n g P a s s i v e E f f e c t s   ! = =   n u l l ) ; 
 
     f l u s h R e n d e r P h a s e S t r i c t M o d e W a r n i n g s I n D E V ( ) ; 
 
     i f   ( ( e x e c u t i o n C o n t e x t   &   ( R e n d e r C o n t e x t   |   C o m m i t C o n t e x t ) )   ! = =   N o C o n t e x t )   { 
         t h r o w   n e w   E r r o r ( ' S h o u l d   n o t   a l r e a d y   b e   w o r k i n g . ' ) ; 
     } 
 
     v a r   f i n i s h e d W o r k   =   r o o t . f i n i s h e d W o r k ; 
     v a r   l a n e s   =   r o o t . f i n i s h e d L a n e s ; 
 
     { 
         m a r k C o m m i t S t a r t e d ( l a n e s ) ; 
     } 
 
     i f   ( f i n i s h e d W o r k   = = =   n u l l )   { 
 
         { 
             m a r k C o m m i t S t o p p e d ( ) ; 
         } 
 
         r e t u r n   n u l l ; 
     }   e l s e   { 
         { 
             i f   ( l a n e s   = = =   N o L a n e s )   { 
                 e r r o r ( ' r o o t . f i n i s h e d L a n e s   s h o u l d   n o t   b e   e m p t y   d u r i n g   a   c o m m i t .   T h i s   i s   a   '   +   ' b u g   i n   R e a c t . ' ) ; 
             } 
         } 
     } 
 
     r o o t . f i n i s h e d W o r k   =   n u l l ; 
     r o o t . f i n i s h e d L a n e s   =   N o L a n e s ; 
 
     i f   ( f i n i s h e d W o r k   = = =   r o o t . c u r r e n t )   { 
         t h r o w   n e w   E r r o r ( ' C a n n o t   c o m m i t   t h e   s a m e   t r e e   a s   b e f o r e .   T h i s   e r r o r   i s   l i k e l y   c a u s e d   b y   '   +   ' a   b u g   i n   R e a c t .   P l e a s e   f i l e   a n   i s s u e . ' ) ; 
     }   / /   c o m m i t R o o t   n e v e r   r e t u r n s   a   c o n t i n u a t i o n ;   i t   a l w a y s   f i n i s h e s   s y n c h r o n o u s l y . 
     / /   S o   w e   c a n   c l e a r   t h e s e   n o w   t o   a l l o w   a   n e w   c a l l b a c k   t o   b e   s c h e d u l e d . 
 
 
     r o o t . c a l l b a c k N o d e   =   n u l l ; 
     r o o t . c a l l b a c k P r i o r i t y   =   N o L a n e ;   / /   U p d a t e   t h e   f i r s t   a n d   l a s t   p e n d i n g   t i m e s   o n   t h i s   r o o t .   T h e   n e w   f i r s t 
     / /   p e n d i n g   t i m e   i s   w h a t e v e r   i s   l e f t   o n   t h e   r o o t   f i b e r . 
 
     v a r   r e m a i n i n g L a n e s   =   m e r g e L a n e s ( f i n i s h e d W o r k . l a n e s ,   f i n i s h e d W o r k . c h i l d L a n e s ) ; 
     m a r k R o o t F i n i s h e d ( r o o t ,   r e m a i n i n g L a n e s ) ; 
 
     i f   ( r o o t   = = =   w o r k I n P r o g r e s s R o o t )   { 
         / /   W e   c a n   r e s e t   t h e s e   n o w   t h a t   t h e y   a r e   f i n i s h e d . 
         w o r k I n P r o g r e s s R o o t   =   n u l l ; 
         w o r k I n P r o g r e s s   =   n u l l ; 
         w o r k I n P r o g r e s s R o o t R e n d e r L a n e s   =   N o L a n e s ; 
     }   / /   I f   t h e r e   a r e   p e n d i n g   p a s s i v e   e f f e c t s ,   s c h e d u l e   a   c a l l b a c k   t o   p r o c e s s   t h e m . 
     / /   D o   t h i s   a s   e a r l y   a s   p o s s i b l e ,   s o   i t   i s   q u e u e d   b e f o r e   a n y t h i n g   e l s e   t h a t 
     / /   m i g h t   g e t   s c h e d u l e d   i n   t h e   c o m m i t   p h a s e .   ( S e e   # 1 6 7 1 4 . ) 
     / /   T O D O :   D e l e t e   a l l   o t h e r   p l a c e s   t h a t   s c h e d u l e   t h e   p a s s i v e   e f f e c t   c a l l b a c k 
     / /   T h e y ' r e   r e d u n d a n t . 
 
 
     i f   ( ( f i n i s h e d W o r k . s u b t r e e F l a g s   &   P a s s i v e M a s k )   ! = =   N o F l a g s   | |   ( f i n i s h e d W o r k . f l a g s   &   P a s s i v e M a s k )   ! = =   N o F l a g s )   { 
         i f   ( ! r o o t D o e s H a v e P a s s i v e E f f e c t s )   { 
             r o o t D o e s H a v e P a s s i v e E f f e c t s   =   t r u e ; 
             / /   t o   s t o r e   i t   i n   p e n d i n g P a s s i v e T r a n s i t i o n s   u n t i l   t h e y   g e t   p r o c e s s e d 
             / /   W e   n e e d   t o   p a s s   t h i s   t h r o u g h   a s   a n   a r g u m e n t   t o   c o m m i t R o o t 
             / /   b e c a u s e   w o r k I n P r o g r e s s T r a n s i t i o n s   m i g h t   h a v e   c h a n g e d   b e t w e e n 
             / /   t h e   p r e v i o u s   r e n d e r   a n d   c o m m i t   i f   w e   t h r o t t l e   t h e   c o m m i t 
             / /   w i t h   s e t T i m e o u t 
 
             p e n d i n g P a s s i v e T r a n s i t i o n s   =   t r a n s i t i o n s ; 
             s c h e d u l e C a l l b a c k $ 1 ( N o r m a l P r i o r i t y ,   f u n c t i o n   ( )   { 
                 f l u s h P a s s i v e E f f e c t s ( ) ;   / /   T h i s   r e n d e r   t r i g g e r e d   p a s s i v e   e f f e c t s :   r e l e a s e   t h e   r o o t   c a c h e   p o o l 
                 / /   * a f t e r *   p a s s i v e   e f f e c t s   f i r e   t o   a v o i d   f r e e i n g   a   c a c h e   p o o l   t h a t   m a y 
                 / /   b e   r e f e r e n c e d   b y   a   n o d e   i n   t h e   t r e e   ( H o s t R o o t ,   C a c h e   b o u n d a r y   e t c ) 
 
                 r e t u r n   n u l l ; 
             } ) ; 
         } 
     }   / /   C h e c k   i f   t h e r e   a r e   a n y   e f f e c t s   i n   t h e   w h o l e   t r e e . 
     / /   T O D O :   T h i s   i s   l e f t   o v e r   f r o m   t h e   e f f e c t   l i s t   i m p l e m e n t a t i o n ,   w h e r e   w e   h a d 
     / /   t o   c h e c k   f o r   t h e   e x i s t e n c e   o f   ` f i r s t E f f e c t `   t o   s a t i s f y   F l o w .   I   t h i n k   t h e 
     / /   o n l y   o t h e r   r e a s o n   t h i s   o p t i m i z a t i o n   e x i s t s   i s   b e c a u s e   i t   a f f e c t s   p r o f i l i n g . 
     / /   R e c o n s i d e r   w h e t h e r   t h i s   i s   n e c e s s a r y . 
 
 
     v a r   s u b t r e e H a s E f f e c t s   =   ( f i n i s h e d W o r k . s u b t r e e F l a g s   &   ( B e f o r e M u t a t i o n M a s k   |   M u t a t i o n M a s k   |   L a y o u t M a s k   |   P a s s i v e M a s k ) )   ! = =   N o F l a g s ; 
     v a r   r o o t H a s E f f e c t   =   ( f i n i s h e d W o r k . f l a g s   &   ( B e f o r e M u t a t i o n M a s k   |   M u t a t i o n M a s k   |   L a y o u t M a s k   |   P a s s i v e M a s k ) )   ! = =   N o F l a g s ; 
 
     i f   ( s u b t r e e H a s E f f e c t s   | |   r o o t H a s E f f e c t )   { 
         v a r   p r e v T r a n s i t i o n   =   R e a c t C u r r e n t B a t c h C o n f i g $ 3 . t r a n s i t i o n ; 
         R e a c t C u r r e n t B a t c h C o n f i g $ 3 . t r a n s i t i o n   =   n u l l ; 
         v a r   p r e v i o u s P r i o r i t y   =   g e t C u r r e n t U p d a t e P r i o r i t y ( ) ; 
         s e t C u r r e n t U p d a t e P r i o r i t y ( D i s c r e t e E v e n t P r i o r i t y ) ; 
         v a r   p r e v E x e c u t i o n C o n t e x t   =   e x e c u t i o n C o n t e x t ; 
         e x e c u t i o n C o n t e x t   | =   C o m m i t C o n t e x t ;   / /   R e s e t   t h i s   t o   n u l l   b e f o r e   c a l l i n g   l i f e c y c l e s 
 
         R e a c t C u r r e n t O w n e r $ 2 . c u r r e n t   =   n u l l ;   / /   T h e   c o m m i t   p h a s e   i s   b r o k e n   i n t o   s e v e r a l   s u b - p h a s e s .   W e   d o   a   s e p a r a t e   p a s s 
         / /   o f   t h e   e f f e c t   l i s t   f o r   e a c h   p h a s e :   a l l   m u t a t i o n   e f f e c t s   c o m e   b e f o r e   a l l 
         / /   l a y o u t   e f f e c t s ,   a n d   s o   o n . 
         / /   T h e   f i r s t   p h a s e   a   " b e f o r e   m u t a t i o n "   p h a s e .   W e   u s e   t h i s   p h a s e   t o   r e a d   t h e 
         / /   s t a t e   o f   t h e   h o s t   t r e e   r i g h t   b e f o r e   w e   m u t a t e   i t .   T h i s   i s   w h e r e 
         / /   g e t S n a p s h o t B e f o r e U p d a t e   i s   c a l l e d . 
 
         v a r   s h o u l d F i r e A f t e r A c t i v e I n s t a n c e B l u r   =   c o m m i t B e f o r e M u t a t i o n E f f e c t s ( r o o t ,   f i n i s h e d W o r k ) ; 
 
         { 
             / /   M a r k   t h e   c u r r e n t   c o m m i t   t i m e   t o   b e   s h a r e d   b y   a l l   P r o f i l e r s   i n   t h i s 
             / /   b a t c h .   T h i s   e n a b l e s   t h e m   t o   b e   g r o u p e d   l a t e r . 
             r e c o r d C o m m i t T i m e ( ) ; 
         } 
 
 
         c o m m i t M u t a t i o n E f f e c t s ( r o o t ,   f i n i s h e d W o r k ,   l a n e s ) ; 
 
         r e s e t A f t e r C o m m i t ( r o o t . c o n t a i n e r I n f o ) ;   / /   T h e   w o r k - i n - p r o g r e s s   t r e e   i s   n o w   t h e   c u r r e n t   t r e e .   T h i s   m u s t   c o m e   a f t e r 
         / /   t h e   m u t a t i o n   p h a s e ,   s o   t h a t   t h e   p r e v i o u s   t r e e   i s   s t i l l   c u r r e n t   d u r i n g 
         / /   c o m p o n e n t W i l l U n m o u n t ,   b u t   b e f o r e   t h e   l a y o u t   p h a s e ,   s o   t h a t   t h e   f i n i s h e d 
         / /   w o r k   i s   c u r r e n t   d u r i n g   c o m p o n e n t D i d M o u n t / U p d a t e . 
 
         r o o t . c u r r e n t   =   f i n i s h e d W o r k ;   / /   T h e   n e x t   p h a s e   i s   t h e   l a y o u t   p h a s e ,   w h e r e   w e   c a l l   e f f e c t s   t h a t   r e a d 
 
         { 
             m a r k L a y o u t E f f e c t s S t a r t e d ( l a n e s ) ; 
         } 
 
         c o m m i t L a y o u t E f f e c t s ( f i n i s h e d W o r k ,   r o o t ,   l a n e s ) ; 
 
         { 
             m a r k L a y o u t E f f e c t s S t o p p e d ( ) ; 
         } 
         / /   o p p o r t u n i t y   t o   p a i n t . 
 
 
         r e q u e s t P a i n t ( ) ; 
         e x e c u t i o n C o n t e x t   =   p r e v E x e c u t i o n C o n t e x t ;   / /   R e s e t   t h e   p r i o r i t y   t o   t h e   p r e v i o u s   n o n - s y n c   v a l u e . 
 
         s e t C u r r e n t U p d a t e P r i o r i t y ( p r e v i o u s P r i o r i t y ) ; 
         R e a c t C u r r e n t B a t c h C o n f i g $ 3 . t r a n s i t i o n   =   p r e v T r a n s i t i o n ; 
     }   e l s e   { 
         / /   N o   e f f e c t s . 
         r o o t . c u r r e n t   =   f i n i s h e d W o r k ;   / /   M e a s u r e   t h e s e   a n y w a y   s o   t h e   f l a m e g r a p h   e x p l i c i t l y   s h o w s   t h a t   t h e r e   w e r e 
         / /   n o   e f f e c t s . 
         / /   T O D O :   M a y b e   t h e r e ' s   a   b e t t e r   w a y   t o   r e p o r t   t h i s . 
 
         { 
             r e c o r d C o m m i t T i m e ( ) ; 
         } 
     } 
 
     v a r   r o o t D i d H a v e P a s s i v e E f f e c t s   =   r o o t D o e s H a v e P a s s i v e E f f e c t s ; 
 
     i f   ( r o o t D o e s H a v e P a s s i v e E f f e c t s )   { 
         / /   T h i s   c o m m i t   h a s   p a s s i v e   e f f e c t s .   S t a s h   a   r e f e r e n c e   t o   t h e m .   B u t   d o n ' t 
         / /   s c h e d u l e   a   c a l l b a c k   u n t i l   a f t e r   f l u s h i n g   l a y o u t   w o r k . 
         r o o t D o e s H a v e P a s s i v e E f f e c t s   =   f a l s e ; 
         r o o t W i t h P e n d i n g P a s s i v e E f f e c t s   =   r o o t ; 
         p e n d i n g P a s s i v e E f f e c t s L a n e s   =   l a n e s ; 
     }   e l s e   { 
 
         { 
             n e s t e d P a s s i v e U p d a t e C o u n t   =   0 ; 
             r o o t W i t h P a s s i v e N e s t e d U p d a t e s   =   n u l l ; 
         } 
     }   / /   R e a d   t h i s   a g a i n ,   s i n c e   a n   e f f e c t   m i g h t   h a v e   u p d a t e d   i t 
 
 
     r e m a i n i n g L a n e s   =   r o o t . p e n d i n g L a n e s ;   / /   C h e c k   i f   t h e r e ' s   r e m a i n i n g   w o r k   o n   t h i s   r o o t 
     / /   T O D O :   T h i s   i s   p a r t   o f   t h e   ` c o m p o n e n t D i d C a t c h `   i m p l e m e n t a t i o n .   I t s   p u r p o s e 
     / /   i s   t o   d e t e c t   w h e t h e r   s o m e t h i n g   m i g h t   h a v e   c a l l e d   s e t S t a t e   i n s i d e 
     / /   ` c o m p o n e n t D i d C a t c h ` .   T h e   m e c h a n i s m   i s   k n o w n   t o   b e   f l a w e d   b e c a u s e   ` s e t S t a t e ` 
     / /   i n s i d e   ` c o m p o n e n t D i d C a t c h `   i s   i t s e l f   f l a w e d      t h a t ' s   w h y   w e   r e c o m m e n d 
     / /   ` g e t D e r i v e d S t a t e F r o m E r r o r `   i n s t e a d .   H o w e v e r ,   i t   c o u l d   b e   i m p r o v e d   b y 
     / /   c h e c k i n g   i f   r e m a i n i n g L a n e s   i n c l u d e s   S y n c   w o r k ,   i n s t e a d   o f   w h e t h e r   t h e r e ' s 
     / /   a n y   w o r k   r e m a i n i n g   a t   a l l   ( w h i c h   w o u l d   a l s o   i n c l u d e   s t u f f   l i k e   S u s p e n s e 
     / /   r e t r i e s   o r   t r a n s i t i o n s ) .   I t ' s   b e e n   l i k e   t h i s   f o r   a   w h i l e ,   t h o u g h ,   s o   f i x i n g 
     / /   i t   p r o b a b l y   i s n ' t   t h a t   u r g e n t . 
 
     i f   ( r e m a i n i n g L a n e s   = = =   N o L a n e s )   { 
         / /   I f   t h e r e ' s   n o   r e m a i n i n g   w o r k ,   w e   c a n   c l e a r   t h e   s e t   o f   a l r e a d y   f a i l e d 
         / /   e r r o r   b o u n d a r i e s . 
         l e g a c y E r r o r B o u n d a r i e s T h a t A l r e a d y F a i l e d   =   n u l l ; 
     } 
 
     { 
         i f   ( ! r o o t D i d H a v e P a s s i v e E f f e c t s )   { 
             c o m m i t D o u b l e I n v o k e E f f e c t s I n D E V ( r o o t . c u r r e n t ,   f a l s e ) ; 
         } 
     } 
 
     o n C o m m i t R o o t ( f i n i s h e d W o r k . s t a t e N o d e ,   r e n d e r P r i o r i t y L e v e l ) ; 
 
     { 
         i f   ( i s D e v T o o l s P r e s e n t )   { 
             r o o t . m e m o i z e d U p d a t e r s . c l e a r ( ) ; 
         } 
     } 
 
     { 
         o n C o m m i t R o o t $ 1 ( ) ; 
     }   / /   A l w a y s   c a l l   t h i s   b e f o r e   e x i t i n g   ` c o m m i t R o o t ` ,   t o   e n s u r e   t h a t   a n y 
     / /   a d d i t i o n a l   w o r k   o n   t h i s   r o o t   i s   s c h e d u l e d . 
 
 
     e n s u r e R o o t I s S c h e d u l e d ( r o o t ,   n o w ( ) ) ; 
 
     i f   ( r e c o v e r a b l e E r r o r s   ! = =   n u l l )   { 
         / /   T h e r e   w e r e   e r r o r s   d u r i n g   t h i s   r e n d e r ,   b u t   r e c o v e r e d   f r o m   t h e m   w i t h o u t 
         / /   n e e d i n g   t o   s u r f a c e   i t   t o   t h e   U I .   W e   l o g   t h e m   h e r e . 
         v a r   o n R e c o v e r a b l e E r r o r   =   r o o t . o n R e c o v e r a b l e E r r o r ; 
 
         f o r   ( v a r   i   =   0 ;   i   <   r e c o v e r a b l e E r r o r s . l e n g t h ;   i + + )   { 
             v a r   r e c o v e r a b l e E r r o r   =   r e c o v e r a b l e E r r o r s [ i ] ; 
             o n R e c o v e r a b l e E r r o r ( r e c o v e r a b l e E r r o r ) ; 
         } 
     } 
 
     i f   ( h a s U n c a u g h t E r r o r )   { 
         h a s U n c a u g h t E r r o r   =   f a l s e ; 
         v a r   e r r o r $ 1   =   f i r s t U n c a u g h t E r r o r ; 
         f i r s t U n c a u g h t E r r o r   =   n u l l ; 
         t h r o w   e r r o r $ 1 ; 
     }   / /   I f   t h e   p a s s i v e   e f f e c t s   a r e   t h e   r e s u l t   o f   a   d i s c r e t e   r e n d e r ,   f l u s h   t h e m 
     / /   s y n c h r o n o u s l y   a t   t h e   e n d   o f   t h e   c u r r e n t   t a s k   s o   t h a t   t h e   r e s u l t   i s 
     / /   i m m e d i a t e l y   o b s e r v a b l e .   O t h e r w i s e ,   w e   a s s u m e   t h a t   t h e y   a r e   n o t 
     / /   o r d e r - d e p e n d e n t   a n d   d o   n o t   n e e d   t o   b e   o b s e r v e d   b y   e x t e r n a l   s y s t e m s ,   s o   w e 
     / /   c a n   w a i t   u n t i l   a f t e r   p a i n t . 
     / /   T O D O :   W e   c a n   o p t i m i z e   t h i s   b y   n o t   s c h e d u l i n g   t h e   c a l l b a c k   e a r l i e r .   S i n c e   w e 
     / /   c u r r e n t l y   s c h e d u l e   t h e   c a l l b a c k   i n   m u l t i p l e   p l a c e s ,   w i l l   w a i t   u n t i l   t h o s e 
     / /   a r e   c o n s o l i d a t e d . 
 
 
     i f   ( i n c l u d e s S o m e L a n e ( p e n d i n g P a s s i v e E f f e c t s L a n e s ,   S y n c L a n e )   & &   r o o t . t a g   ! = =   L e g a c y R o o t )   { 
         f l u s h P a s s i v e E f f e c t s ( ) ; 
     }   / /   R e a d   t h i s   a g a i n ,   s i n c e   a   p a s s i v e   e f f e c t   m i g h t   h a v e   u p d a t e d   i t 
 
 
     r e m a i n i n g L a n e s   =   r o o t . p e n d i n g L a n e s ; 
 
     i f   ( i n c l u d e s S o m e L a n e ( r e m a i n i n g L a n e s ,   S y n c L a n e ) )   { 
         { 
             m a r k N e s t e d U p d a t e S c h e d u l e d ( ) ; 
         }   / /   C o u n t   t h e   n u m b e r   o f   t i m e s   t h e   r o o t   s y n c h r o n o u s l y   r e - r e n d e r s   w i t h o u t 
         / /   f i n i s h i n g .   I f   t h e r e   a r e   t o o   m a n y ,   i t   i n d i c a t e s   a n   i n f i n i t e   u p d a t e   l o o p . 
 
 
         i f   ( r o o t   = = =   r o o t W i t h N e s t e d U p d a t e s )   { 
             n e s t e d U p d a t e C o u n t + + ; 
         }   e l s e   { 
             n e s t e d U p d a t e C o u n t   =   0 ; 
             r o o t W i t h N e s t e d U p d a t e s   =   r o o t ; 
         } 
     }   e l s e   { 
         n e s t e d U p d a t e C o u n t   =   0 ; 
     }   / /   I f   l a y o u t   w o r k   w a s   s c h e d u l e d ,   f l u s h   i t   n o w . 
 
 
     f l u s h S y n c C a l l b a c k s ( ) ; 
 
     { 
         m a r k C o m m i t S t o p p e d ( ) ; 
     } 
 
     r e t u r n   n u l l ; 
 } 
 
 f u n c t i o n   f l u s h P a s s i v e E f f e c t s ( )   { 
     / /   R e t u r n s   w h e t h e r   p a s s i v e   e f f e c t s   w e r e   f l u s h e d . 
     / /   T O D O :   C o m b i n e   t h i s   c h e c k   w i t h   t h e   o n e   i n   f l u s h P a s s i v e E F f e c t s I m p l .   W e   s h o u l d 
     / /   p r o b a b l y   j u s t   c o m b i n e   t h e   t w o   f u n c t i o n s .   I   b e l i e v e   t h e y   w e r e   o n l y   s e p a r a t e 
     / /   i n   t h e   f i r s t   p l a c e   b e c a u s e   w e   u s e d   t o   w r a p   i t   w i t h 
     / /   ` S c h e d u l e r . r u n W i t h P r i o r i t y ` ,   w h i c h   a c c e p t s   a   f u n c t i o n .   B u t   n o w   w e   t r a c k   t h e 
     / /   p r i o r i t y   w i t h i n   R e a c t   i t s e l f ,   s o   w e   c a n   m u t a t e   t h e   v a r i a b l e   d i r e c t l y . 
     i f   ( r o o t W i t h P e n d i n g P a s s i v e E f f e c t s   ! = =   n u l l )   { 
         v a r   r e n d e r P r i o r i t y   =   l a n e s T o E v e n t P r i o r i t y ( p e n d i n g P a s s i v e E f f e c t s L a n e s ) ; 
         v a r   p r i o r i t y   =   l o w e r E v e n t P r i o r i t y ( D e f a u l t E v e n t P r i o r i t y ,   r e n d e r P r i o r i t y ) ; 
         v a r   p r e v T r a n s i t i o n   =   R e a c t C u r r e n t B a t c h C o n f i g $ 3 . t r a n s i t i o n ; 
         v a r   p r e v i o u s P r i o r i t y   =   g e t C u r r e n t U p d a t e P r i o r i t y ( ) ; 
 
         t r y   { 
             R e a c t C u r r e n t B a t c h C o n f i g $ 3 . t r a n s i t i o n   =   n u l l ; 
             s e t C u r r e n t U p d a t e P r i o r i t y ( p r i o r i t y ) ; 
             r e t u r n   f l u s h P a s s i v e E f f e c t s I m p l ( ) ; 
         }   f i n a l l y   { 
             s e t C u r r e n t U p d a t e P r i o r i t y ( p r e v i o u s P r i o r i t y ) ; 
             R e a c t C u r r e n t B a t c h C o n f i g $ 3 . t r a n s i t i o n   =   p r e v T r a n s i t i o n ;   / /   O n c e   p a s s i v e   e f f e c t s   h a v e   r u n   f o r   t h e   t r e e   -   g i v i n g   c o m p o n e n t s   a 
         } 
     } 
 
     r e t u r n   f a l s e ; 
 } 
 f u n c t i o n   e n q u e u e P e n d i n g P a s s i v e P r o f i l e r E f f e c t ( f i b e r )   { 
     { 
         p e n d i n g P a s s i v e P r o f i l e r E f f e c t s . p u s h ( f i b e r ) ; 
 
         i f   ( ! r o o t D o e s H a v e P a s s i v e E f f e c t s )   { 
             r o o t D o e s H a v e P a s s i v e E f f e c t s   =   t r u e ; 
             s c h e d u l e C a l l b a c k $ 1 ( N o r m a l P r i o r i t y ,   f u n c t i o n   ( )   { 
                 f l u s h P a s s i v e E f f e c t s ( ) ; 
                 r e t u r n   n u l l ; 
             } ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   f l u s h P a s s i v e E f f e c t s I m p l ( )   { 
     i f   ( r o o t W i t h P e n d i n g P a s s i v e E f f e c t s   = = =   n u l l )   { 
         r e t u r n   f a l s e ; 
     }   / /   C a c h e   a n d   c l e a r   t h e   t r a n s i t i o n s   f l a g 
 
 
     v a r   t r a n s i t i o n s   =   p e n d i n g P a s s i v e T r a n s i t i o n s ; 
     p e n d i n g P a s s i v e T r a n s i t i o n s   =   n u l l ; 
     v a r   r o o t   =   r o o t W i t h P e n d i n g P a s s i v e E f f e c t s ; 
     v a r   l a n e s   =   p e n d i n g P a s s i v e E f f e c t s L a n e s ; 
     r o o t W i t h P e n d i n g P a s s i v e E f f e c t s   =   n u l l ;   / /   T O D O :   T h i s   i s   s o m e t i m e s   o u t   o f   s y n c   w i t h   r o o t W i t h P e n d i n g P a s s i v e E f f e c t s . 
     / /   F i g u r e   o u t   w h y   a n d   f i x   i t .   I t ' s   n o t   c a u s i n g   a n y   k n o w n   i s s u e s   ( p r o b a b l y 
     / /   b e c a u s e   i t ' s   o n l y   u s e d   f o r   p r o f i l i n g ) ,   b u t   i t ' s   a   r e f a c t o r   h a z a r d . 
 
     p e n d i n g P a s s i v e E f f e c t s L a n e s   =   N o L a n e s ; 
 
     i f   ( ( e x e c u t i o n C o n t e x t   &   ( R e n d e r C o n t e x t   |   C o m m i t C o n t e x t ) )   ! = =   N o C o n t e x t )   { 
         t h r o w   n e w   E r r o r ( ' C a n n o t   f l u s h   p a s s i v e   e f f e c t s   w h i l e   a l r e a d y   r e n d e r i n g . ' ) ; 
     } 
 
     { 
         i s F l u s h i n g P a s s i v e E f f e c t s   =   t r u e ; 
         d i d S c h e d u l e U p d a t e D u r i n g P a s s i v e E f f e c t s   =   f a l s e ; 
     } 
 
     { 
         m a r k P a s s i v e E f f e c t s S t a r t e d ( l a n e s ) ; 
     } 
 
     v a r   p r e v E x e c u t i o n C o n t e x t   =   e x e c u t i o n C o n t e x t ; 
     e x e c u t i o n C o n t e x t   | =   C o m m i t C o n t e x t ; 
     c o m m i t P a s s i v e U n m o u n t E f f e c t s ( r o o t . c u r r e n t ) ; 
     c o m m i t P a s s i v e M o u n t E f f e c t s ( r o o t ,   r o o t . c u r r e n t ,   l a n e s ,   t r a n s i t i o n s ) ;   / /   T O D O :   M o v e   t o   c o m m i t P a s s i v e M o u n t E f f e c t s 
 
     { 
         v a r   p r o f i l e r E f f e c t s   =   p e n d i n g P a s s i v e P r o f i l e r E f f e c t s ; 
         p e n d i n g P a s s i v e P r o f i l e r E f f e c t s   =   [ ] ; 
 
         f o r   ( v a r   i   =   0 ;   i   <   p r o f i l e r E f f e c t s . l e n g t h ;   i + + )   { 
             v a r   _ f i b e r   =   p r o f i l e r E f f e c t s [ i ] ; 
             c o m m i t P a s s i v e E f f e c t D u r a t i o n s ( r o o t ,   _ f i b e r ) ; 
         } 
     } 
 
     { 
         m a r k P a s s i v e E f f e c t s S t o p p e d ( ) ; 
     } 
 
     { 
         c o m m i t D o u b l e I n v o k e E f f e c t s I n D E V ( r o o t . c u r r e n t ,   t r u e ) ; 
     } 
 
     e x e c u t i o n C o n t e x t   =   p r e v E x e c u t i o n C o n t e x t ; 
     f l u s h S y n c C a l l b a c k s ( ) ; 
 
     { 
         / /   I f   a d d i t i o n a l   p a s s i v e   e f f e c t s   w e r e   s c h e d u l e d ,   i n c r e m e n t   a   c o u n t e r .   I f   t h i s 
         / /   e x c e e d s   t h e   l i m i t ,   w e ' l l   f i r e   a   w a r n i n g . 
         i f   ( d i d S c h e d u l e U p d a t e D u r i n g P a s s i v e E f f e c t s )   { 
             i f   ( r o o t   = = =   r o o t W i t h P a s s i v e N e s t e d U p d a t e s )   { 
                 n e s t e d P a s s i v e U p d a t e C o u n t + + ; 
             }   e l s e   { 
                 n e s t e d P a s s i v e U p d a t e C o u n t   =   0 ; 
                 r o o t W i t h P a s s i v e N e s t e d U p d a t e s   =   r o o t ; 
             } 
         }   e l s e   { 
             n e s t e d P a s s i v e U p d a t e C o u n t   =   0 ; 
         } 
 
         i s F l u s h i n g P a s s i v e E f f e c t s   =   f a l s e ; 
         d i d S c h e d u l e U p d a t e D u r i n g P a s s i v e E f f e c t s   =   f a l s e ; 
     }   / /   T O D O :   M o v e   t o   c o m m i t P a s s i v e M o u n t E f f e c t s 
 
 
     o n P o s t C o m m i t R o o t ( r o o t ) ; 
 
     { 
         v a r   s t a t e N o d e   =   r o o t . c u r r e n t . s t a t e N o d e ; 
         s t a t e N o d e . e f f e c t D u r a t i o n   =   0 ; 
         s t a t e N o d e . p a s s i v e E f f e c t D u r a t i o n   =   0 ; 
     } 
 
     r e t u r n   t r u e ; 
 } 
 
 f u n c t i o n   i s A l r e a d y F a i l e d L e g a c y E r r o r B o u n d a r y ( i n s t a n c e )   { 
     r e t u r n   l e g a c y E r r o r B o u n d a r i e s T h a t A l r e a d y F a i l e d   ! = =   n u l l   & &   l e g a c y E r r o r B o u n d a r i e s T h a t A l r e a d y F a i l e d . h a s ( i n s t a n c e ) ; 
 } 
 f u n c t i o n   m a r k L e g a c y E r r o r B o u n d a r y A s F a i l e d ( i n s t a n c e )   { 
     i f   ( l e g a c y E r r o r B o u n d a r i e s T h a t A l r e a d y F a i l e d   = = =   n u l l )   { 
         l e g a c y E r r o r B o u n d a r i e s T h a t A l r e a d y F a i l e d   =   n e w   S e t ( [ i n s t a n c e ] ) ; 
     }   e l s e   { 
         l e g a c y E r r o r B o u n d a r i e s T h a t A l r e a d y F a i l e d . a d d ( i n s t a n c e ) ; 
     } 
 } 
 
 f u n c t i o n   p r e p a r e T o T h r o w U n c a u g h t E r r o r ( e r r o r )   { 
     i f   ( ! h a s U n c a u g h t E r r o r )   { 
         h a s U n c a u g h t E r r o r   =   t r u e ; 
         f i r s t U n c a u g h t E r r o r   =   e r r o r ; 
     } 
 } 
 
 v a r   o n U n c a u g h t E r r o r   =   p r e p a r e T o T h r o w U n c a u g h t E r r o r ; 
 
 f u n c t i o n   c a p t u r e C o m m i t P h a s e E r r o r O n R o o t ( r o o t F i b e r ,   s o u r c e F i b e r ,   e r r o r )   { 
     v a r   e r r o r I n f o   =   c r e a t e C a p t u r e d V a l u e ( e r r o r ,   s o u r c e F i b e r ) ; 
     v a r   u p d a t e   =   c r e a t e R o o t E r r o r U p d a t e ( r o o t F i b e r ,   e r r o r I n f o ,   S y n c L a n e ) ; 
     e n q u e u e U p d a t e ( r o o t F i b e r ,   u p d a t e ) ; 
     v a r   e v e n t T i m e   =   r e q u e s t E v e n t T i m e ( ) ; 
     v a r   r o o t   =   m a r k U p d a t e L a n e F r o m F i b e r T o R o o t ( r o o t F i b e r ,   S y n c L a n e ) ; 
 
     i f   ( r o o t   ! = =   n u l l )   { 
         m a r k R o o t U p d a t e d ( r o o t ,   S y n c L a n e ,   e v e n t T i m e ) ; 
         e n s u r e R o o t I s S c h e d u l e d ( r o o t ,   e v e n t T i m e ) ; 
     } 
 } 
 
 f u n c t i o n   c a p t u r e C o m m i t P h a s e E r r o r ( s o u r c e F i b e r ,   n e a r e s t M o u n t e d A n c e s t o r ,   e r r o r $ 1 )   { 
     { 
         r e p o r t U n c a u g h t E r r o r I n D E V ( e r r o r $ 1 ) ; 
         s e t I s R u n n i n g I n s e r t i o n E f f e c t ( f a l s e ) ; 
     } 
 
     i f   ( s o u r c e F i b e r . t a g   = = =   H o s t R o o t )   { 
         / /   E r r o r   w a s   t h r o w n   a t   t h e   r o o t .   T h e r e   i s   n o   p a r e n t ,   s o   t h e   r o o t 
         / /   i t s e l f   s h o u l d   c a p t u r e   i t . 
         c a p t u r e C o m m i t P h a s e E r r o r O n R o o t ( s o u r c e F i b e r ,   s o u r c e F i b e r ,   e r r o r $ 1 ) ; 
         r e t u r n ; 
     } 
 
     v a r   f i b e r   =   n u l l ; 
 
     { 
         f i b e r   =   n e a r e s t M o u n t e d A n c e s t o r ; 
     } 
 
     w h i l e   ( f i b e r   ! = =   n u l l )   { 
         i f   ( f i b e r . t a g   = = =   H o s t R o o t )   { 
             c a p t u r e C o m m i t P h a s e E r r o r O n R o o t ( f i b e r ,   s o u r c e F i b e r ,   e r r o r $ 1 ) ; 
             r e t u r n ; 
         }   e l s e   i f   ( f i b e r . t a g   = = =   C l a s s C o m p o n e n t )   { 
             v a r   c t o r   =   f i b e r . t y p e ; 
             v a r   i n s t a n c e   =   f i b e r . s t a t e N o d e ; 
 
             i f   ( t y p e o f   c t o r . g e t D e r i v e d S t a t e F r o m E r r o r   = = =   ' f u n c t i o n '   | |   t y p e o f   i n s t a n c e . c o m p o n e n t D i d C a t c h   = = =   ' f u n c t i o n '   & &   ! i s A l r e a d y F a i l e d L e g a c y E r r o r B o u n d a r y ( i n s t a n c e ) )   { 
                 v a r   e r r o r I n f o   =   c r e a t e C a p t u r e d V a l u e ( e r r o r $ 1 ,   s o u r c e F i b e r ) ; 
                 v a r   u p d a t e   =   c r e a t e C l a s s E r r o r U p d a t e ( f i b e r ,   e r r o r I n f o ,   S y n c L a n e ) ; 
                 e n q u e u e U p d a t e ( f i b e r ,   u p d a t e ) ; 
                 v a r   e v e n t T i m e   =   r e q u e s t E v e n t T i m e ( ) ; 
                 v a r   r o o t   =   m a r k U p d a t e L a n e F r o m F i b e r T o R o o t ( f i b e r ,   S y n c L a n e ) ; 
 
                 i f   ( r o o t   ! = =   n u l l )   { 
                     m a r k R o o t U p d a t e d ( r o o t ,   S y n c L a n e ,   e v e n t T i m e ) ; 
                     e n s u r e R o o t I s S c h e d u l e d ( r o o t ,   e v e n t T i m e ) ; 
                 } 
 
                 r e t u r n ; 
             } 
         } 
 
         f i b e r   =   f i b e r . r e t u r n ; 
     } 
 
     { 
         / /   T O D O :   U n t i l   w e   r e - l a n d   s k i p U n m o u n t e d B o u n d a r i e s   ( s e e   # 2 0 1 4 7 ) ,   t h i s   w a r n i n g 
         / /   w i l l   f i r e   f o r   e r r o r s   t h a t   a r e   t h r o w n   b y   d e s t r o y   f u n c t i o n s   i n s i d e   d e l e t e d 
         / /   t r e e s .   W h a t   i t   s h o u l d   i n s t e a d   d o   i s   p r o p a g a t e   t h e   e r r o r   t o   t h e   p a r e n t   o f 
         / /   t h e   d e l e t e d   t r e e .   I n   t h e   m e a n t i m e ,   d o   n o t   a d d   t h i s   w a r n i n g   t o   t h e 
         / /   a l l o w l i s t ;   t h i s   i s   o n l y   f o r   o u r   i n t e r n a l   u s e . 
         e r r o r ( ' I n t e r n a l   R e a c t   e r r o r :   A t t e m p t e d   t o   c a p t u r e   a   c o m m i t   p h a s e   e r r o r   '   +   ' i n s i d e   a   d e t a c h e d   t r e e .   T h i s   i n d i c a t e s   a   b u g   i n   R e a c t .   L i k e l y   '   +   ' c a u s e s   i n c l u d e   d e l e t i n g   t h e   s a m e   f i b e r   m o r e   t h a n   o n c e ,   c o m m i t t i n g   a n   '   +   ' a l r e a d y - f i n i s h e d   t r e e ,   o r   a n   i n c o n s i s t e n t   r e t u r n   p o i n t e r . \ n \ n '   +   ' E r r o r   m e s s a g e : \ n \ n % s ' ,   e r r o r $ 1 ) ; 
     } 
 } 
 f u n c t i o n   p i n g S u s p e n d e d R o o t ( r o o t ,   w a k e a b l e ,   p i n g e d L a n e s )   { 
     v a r   p i n g C a c h e   =   r o o t . p i n g C a c h e ; 
 
     i f   ( p i n g C a c h e   ! = =   n u l l )   { 
         / /   T h e   w a k e a b l e   r e s o l v e d ,   s o   w e   n o   l o n g e r   n e e d   t o   m e m o i z e ,   b e c a u s e   i t   w i l l 
         / /   n e v e r   b e   t h r o w n   a g a i n . 
         p i n g C a c h e . d e l e t e ( w a k e a b l e ) ; 
     } 
 
     v a r   e v e n t T i m e   =   r e q u e s t E v e n t T i m e ( ) ; 
     m a r k R o o t P i n g e d ( r o o t ,   p i n g e d L a n e s ) ; 
     w a r n I f S u s p e n s e R e s o l u t i o n N o t W r a p p e d W i t h A c t D E V ( r o o t ) ; 
 
     i f   ( w o r k I n P r o g r e s s R o o t   = = =   r o o t   & &   i s S u b s e t O f L a n e s ( w o r k I n P r o g r e s s R o o t R e n d e r L a n e s ,   p i n g e d L a n e s ) )   { 
         / /   R e c e i v e d   a   p i n g   a t   t h e   s a m e   p r i o r i t y   l e v e l   a t   w h i c h   w e ' r e   c u r r e n t l y 
         / /   r e n d e r i n g .   W e   m i g h t   w a n t   t o   r e s t a r t   t h i s   r e n d e r .   T h i s   s h o u l d   m i r r o r 
         / /   t h e   l o g i c   o f   w h e t h e r   o r   n o t   a   r o o t   s u s p e n d s   o n c e   i t   c o m p l e t e s . 
         / /   T O D O :   I f   w e ' r e   r e n d e r i n g   s y n c   e i t h e r   d u e   t o   S y n c ,   B a t c h e d   o r   e x p i r e d , 
         / /   w e   s h o u l d   p r o b a b l y   n e v e r   r e s t a r t . 
         / /   I f   w e ' r e   s u s p e n d e d   w i t h   d e l a y ,   o r   i f   i t ' s   a   r e t r y ,   w e ' l l   a l w a y s   s u s p e n d 
         / /   s o   w e   c a n   a l w a y s   r e s t a r t . 
         i f   ( w o r k I n P r o g r e s s R o o t E x i t S t a t u s   = = =   R o o t S u s p e n d e d W i t h D e l a y   | |   w o r k I n P r o g r e s s R o o t E x i t S t a t u s   = = =   R o o t S u s p e n d e d   & &   i n c l u d e s O n l y R e t r i e s ( w o r k I n P r o g r e s s R o o t R e n d e r L a n e s )   & &   n o w ( )   -   g l o b a l M o s t R e c e n t F a l l b a c k T i m e   <   F A L L B A C K _ T H R O T T L E _ M S )   { 
             / /   R e s t a r t   f r o m   t h e   r o o t . 
             p r e p a r e F r e s h S t a c k ( r o o t ,   N o L a n e s ) ; 
         }   e l s e   { 
             / /   E v e n   t h o u g h   w e   c a n ' t   r e s t a r t   r i g h t   n o w ,   w e   m i g h t   g e t   a n 
             / /   o p p o r t u n i t y   l a t e r .   S o   w e   m a r k   t h i s   r e n d e r   a s   h a v i n g   a   p i n g . 
             w o r k I n P r o g r e s s R o o t P i n g e d L a n e s   =   m e r g e L a n e s ( w o r k I n P r o g r e s s R o o t P i n g e d L a n e s ,   p i n g e d L a n e s ) ; 
         } 
     } 
 
     e n s u r e R o o t I s S c h e d u l e d ( r o o t ,   e v e n t T i m e ) ; 
 } 
 
 f u n c t i o n   r e t r y T i m e d O u t B o u n d a r y ( b o u n d a r y F i b e r ,   r e t r y L a n e )   { 
     / /   T h e   b o u n d a r y   f i b e r   ( a   S u s p e n s e   c o m p o n e n t   o r   S u s p e n s e L i s t   c o m p o n e n t ) 
     / /   p r e v i o u s l y   w a s   r e n d e r e d   i n   i t s   f a l l b a c k   s t a t e .   O n e   o f   t h e   p r o m i s e s   t h a t 
     / /   s u s p e n d e d   i t   h a s   r e s o l v e d ,   w h i c h   m e a n s   a t   l e a s t   p a r t   o f   t h e   t r e e   w a s 
     / /   l i k e l y   u n b l o c k e d .   T r y   r e n d e r i n g   a g a i n ,   a t   a   n e w   l a n e s . 
     i f   ( r e t r y L a n e   = = =   N o L a n e )   { 
         / /   T O D O :   A s s i g n   t h i s   t o   ` s u s p e n s e S t a t e . r e t r y L a n e ` ?   t o   a v o i d 
         / /   u n n e c e s s a r y   e n t a n g l e m e n t ? 
         r e t r y L a n e   =   r e q u e s t R e t r y L a n e ( b o u n d a r y F i b e r ) ; 
     }   / /   T O D O :   S p e c i a l   c a s e   i d l e   p r i o r i t y ? 
 
 
     v a r   e v e n t T i m e   =   r e q u e s t E v e n t T i m e ( ) ; 
     v a r   r o o t   =   m a r k U p d a t e L a n e F r o m F i b e r T o R o o t ( b o u n d a r y F i b e r ,   r e t r y L a n e ) ; 
 
     i f   ( r o o t   ! = =   n u l l )   { 
         m a r k R o o t U p d a t e d ( r o o t ,   r e t r y L a n e ,   e v e n t T i m e ) ; 
         e n s u r e R o o t I s S c h e d u l e d ( r o o t ,   e v e n t T i m e ) ; 
     } 
 } 
 
 f u n c t i o n   r e t r y D e h y d r a t e d S u s p e n s e B o u n d a r y ( b o u n d a r y F i b e r )   { 
     v a r   s u s p e n s e S t a t e   =   b o u n d a r y F i b e r . m e m o i z e d S t a t e ; 
     v a r   r e t r y L a n e   =   N o L a n e ; 
 
     i f   ( s u s p e n s e S t a t e   ! = =   n u l l )   { 
         r e t r y L a n e   =   s u s p e n s e S t a t e . r e t r y L a n e ; 
     } 
 
     r e t r y T i m e d O u t B o u n d a r y ( b o u n d a r y F i b e r ,   r e t r y L a n e ) ; 
 } 
 f u n c t i o n   r e s o l v e R e t r y W a k e a b l e ( b o u n d a r y F i b e r ,   w a k e a b l e )   { 
     v a r   r e t r y L a n e   =   N o L a n e ;   / /   D e f a u l t 
 
     v a r   r e t r y C a c h e ; 
 
     s w i t c h   ( b o u n d a r y F i b e r . t a g )   { 
         c a s e   S u s p e n s e C o m p o n e n t : 
             r e t r y C a c h e   =   b o u n d a r y F i b e r . s t a t e N o d e ; 
             v a r   s u s p e n s e S t a t e   =   b o u n d a r y F i b e r . m e m o i z e d S t a t e ; 
 
             i f   ( s u s p e n s e S t a t e   ! = =   n u l l )   { 
                 r e t r y L a n e   =   s u s p e n s e S t a t e . r e t r y L a n e ; 
             } 
 
             b r e a k ; 
 
         c a s e   S u s p e n s e L i s t C o m p o n e n t : 
             r e t r y C a c h e   =   b o u n d a r y F i b e r . s t a t e N o d e ; 
             b r e a k ; 
 
         d e f a u l t : 
             t h r o w   n e w   E r r o r ( ' P i n g e d   u n k n o w n   s u s p e n s e   b o u n d a r y   t y p e .   '   +   ' T h i s   i s   p r o b a b l y   a   b u g   i n   R e a c t . ' ) ; 
     } 
 
     i f   ( r e t r y C a c h e   ! = =   n u l l )   { 
         / /   T h e   w a k e a b l e   r e s o l v e d ,   s o   w e   n o   l o n g e r   n e e d   t o   m e m o i z e ,   b e c a u s e   i t   w i l l 
         / /   n e v e r   b e   t h r o w n   a g a i n . 
         r e t r y C a c h e . d e l e t e ( w a k e a b l e ) ; 
     } 
 
     r e t r y T i m e d O u t B o u n d a r y ( b o u n d a r y F i b e r ,   r e t r y L a n e ) ; 
 }   / /   C o m p u t e s   t h e   n e x t   J u s t   N o t i c e a b l e   D i f f e r e n c e   ( J N D )   b o u n d a r y . 
 / /   T h e   t h e o r y   i s   t h a t   a   p e r s o n   c a n ' t   t e l l   t h e   d i f f e r e n c e   b e t w e e n   s m a l l   d i f f e r e n c e s   i n   t i m e . 
 / /   T h e r e f o r e ,   i f   w e   w a i t   a   b i t   l o n g e r   t h a n   n e c e s s a r y   t h a t   w o n ' t   t r a n s l a t e   t o   a   n o t i c e a b l e 
 / /   d i f f e r e n c e   i n   t h e   e x p e r i e n c e .   H o w e v e r ,   w a i t i n g   f o r   l o n g e r   m i g h t   m e a n   t h a t   w e   c a n   a v o i d 
 / /   s h o w i n g   a n   i n t e r m e d i a t e   l o a d i n g   s t a t e .   T h e   l o n g e r   w e   h a v e   a l r e a d y   w a i t e d ,   t h e   h a r d e r   i t 
 / /   i s   t o   t e l l   s m a l l   d i f f e r e n c e s   i n   t i m e .   T h e r e f o r e ,   t h e   l o n g e r   w e ' v e   a l r e a d y   w a i t e d , 
 / /   t h e   l o n g e r   w e   c a n   w a i t   a d d i t i o n a l l y .   A t   s o m e   p o i n t   w e   h a v e   t o   g i v e   u p   t h o u g h . 
 / /   W e   p i c k   a   t r a i n   m o d e l   w h e r e   t h e   n e x t   b o u n d a r y   c o m m i t s   a t   a   c o n s i s t e n t   s c h e d u l e . 
 / /   T h e s e   p a r t i c u l a r   n u m b e r s   a r e   v a g u e   e s t i m a t e s .   W e   e x p e c t   t o   a d j u s t   t h e m   b a s e d   o n   r e s e a r c h . 
 
 f u n c t i o n   j n d ( t i m e E l a p s e d )   { 
     r e t u r n   t i m e E l a p s e d   <   1 2 0   ?   1 2 0   :   t i m e E l a p s e d   <   4 8 0   ?   4 8 0   :   t i m e E l a p s e d   <   1 0 8 0   ?   1 0 8 0   :   t i m e E l a p s e d   <   1 9 2 0   ?   1 9 2 0   :   t i m e E l a p s e d   <   3 0 0 0   ?   3 0 0 0   :   t i m e E l a p s e d   <   4 3 2 0   ?   4 3 2 0   :   c e i l ( t i m e E l a p s e d   /   1 9 6 0 )   *   1 9 6 0 ; 
 } 
 
 f u n c t i o n   c h e c k F o r N e s t e d U p d a t e s ( )   { 
     i f   ( n e s t e d U p d a t e C o u n t   >   N E S T E D _ U P D A T E _ L I M I T )   { 
         n e s t e d U p d a t e C o u n t   =   0 ; 
         r o o t W i t h N e s t e d U p d a t e s   =   n u l l ; 
         t h r o w   n e w   E r r o r ( ' M a x i m u m   u p d a t e   d e p t h   e x c e e d e d .   T h i s   c a n   h a p p e n   w h e n   a   c o m p o n e n t   '   +   ' r e p e a t e d l y   c a l l s   s e t S t a t e   i n s i d e   c o m p o n e n t W i l l U p d a t e   o r   '   +   ' c o m p o n e n t D i d U p d a t e .   R e a c t   l i m i t s   t h e   n u m b e r   o f   n e s t e d   u p d a t e s   t o   '   +   ' p r e v e n t   i n f i n i t e   l o o p s . ' ) ; 
     } 
 
     { 
         i f   ( n e s t e d P a s s i v e U p d a t e C o u n t   >   N E S T E D _ P A S S I V E _ U P D A T E _ L I M I T )   { 
             n e s t e d P a s s i v e U p d a t e C o u n t   =   0 ; 
             r o o t W i t h P a s s i v e N e s t e d U p d a t e s   =   n u l l ; 
 
             e r r o r ( ' M a x i m u m   u p d a t e   d e p t h   e x c e e d e d .   T h i s   c a n   h a p p e n   w h e n   a   c o m p o n e n t   '   +   " c a l l s   s e t S t a t e   i n s i d e   u s e E f f e c t ,   b u t   u s e E f f e c t   e i t h e r   d o e s n ' t   "   +   ' h a v e   a   d e p e n d e n c y   a r r a y ,   o r   o n e   o f   t h e   d e p e n d e n c i e s   c h a n g e s   o n   '   +   ' e v e r y   r e n d e r . ' ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   f l u s h R e n d e r P h a s e S t r i c t M o d e W a r n i n g s I n D E V ( )   { 
     { 
         R e a c t S t r i c t M o d e W a r n i n g s . f l u s h L e g a c y C o n t e x t W a r n i n g ( ) ; 
 
         { 
             R e a c t S t r i c t M o d e W a r n i n g s . f l u s h P e n d i n g U n s a f e L i f e c y c l e W a r n i n g s ( ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   c o m m i t D o u b l e I n v o k e E f f e c t s I n D E V ( f i b e r ,   h a s P a s s i v e E f f e c t s )   { 
     { 
         / /   T O D O   ( S t r i c t E f f e c t s )   S h o u l d   w e   s e t   a   m a r k e r   o n   t h e   r o o t   i f   i t   c o n t a i n s   s t r i c t   e f f e c t s 
         / /   s o   w e   d o n ' t   t r a v e r s e   u n n e c e s s a r i l y ?   s i m i l a r   t o   s u b t r e e F l a g s   b u t   j u s t   a t   t h e   r o o t   l e v e l . 
         / /   M a y b e   n o t   a   b i g   d e a l   s i n c e   t h i s   i s   D E V   o n l y   b e h a v i o r . 
         s e t C u r r e n t F i b e r ( f i b e r ) ; 
         i n v o k e E f f e c t s I n D e v ( f i b e r ,   M o u n t L a y o u t D e v ,   i n v o k e L a y o u t E f f e c t U n m o u n t I n D E V ) ; 
 
         i f   ( h a s P a s s i v e E f f e c t s )   { 
             i n v o k e E f f e c t s I n D e v ( f i b e r ,   M o u n t P a s s i v e D e v ,   i n v o k e P a s s i v e E f f e c t U n m o u n t I n D E V ) ; 
         } 
 
         i n v o k e E f f e c t s I n D e v ( f i b e r ,   M o u n t L a y o u t D e v ,   i n v o k e L a y o u t E f f e c t M o u n t I n D E V ) ; 
 
         i f   ( h a s P a s s i v e E f f e c t s )   { 
             i n v o k e E f f e c t s I n D e v ( f i b e r ,   M o u n t P a s s i v e D e v ,   i n v o k e P a s s i v e E f f e c t M o u n t I n D E V ) ; 
         } 
 
         r e s e t C u r r e n t F i b e r ( ) ; 
     } 
 } 
 
 f u n c t i o n   i n v o k e E f f e c t s I n D e v ( f i r s t C h i l d ,   f i b e r F l a g s ,   i n v o k e E f f e c t F n )   { 
     { 
         / /   W e   d o n ' t   n e e d   t o   r e - c h e c k   S t r i c t E f f e c t s M o d e   h e r e . 
         / /   T h i s   f u n c t i o n   i s   o n l y   c a l l e d   i f   t h a t   c h e c k   h a s   a l r e a d y   p a s s e d . 
         v a r   c u r r e n t   =   f i r s t C h i l d ; 
         v a r   s u b t r e e R o o t   =   n u l l ; 
 
         w h i l e   ( c u r r e n t   ! = =   n u l l )   { 
             v a r   p r i m a r y S u b t r e e F l a g   =   c u r r e n t . s u b t r e e F l a g s   &   f i b e r F l a g s ; 
 
             i f   ( c u r r e n t   ! = =   s u b t r e e R o o t   & &   c u r r e n t . c h i l d   ! = =   n u l l   & &   p r i m a r y S u b t r e e F l a g   ! = =   N o F l a g s )   { 
                 c u r r e n t   =   c u r r e n t . c h i l d ; 
             }   e l s e   { 
                 i f   ( ( c u r r e n t . f l a g s   &   f i b e r F l a g s )   ! = =   N o F l a g s )   { 
                     i n v o k e E f f e c t F n ( c u r r e n t ) ; 
                 } 
 
                 i f   ( c u r r e n t . s i b l i n g   ! = =   n u l l )   { 
                     c u r r e n t   =   c u r r e n t . s i b l i n g ; 
                 }   e l s e   { 
                     c u r r e n t   =   s u b t r e e R o o t   =   c u r r e n t . r e t u r n ; 
                 } 
             } 
         } 
     } 
 } 
 
 v a r   d i d W a r n S t a t e U p d a t e F o r N o t Y e t M o u n t e d C o m p o n e n t   =   n u l l ; 
 
 f u n c t i o n   w a r n A b o u t U p d a t e O n N o t Y e t M o u n t e d F i b e r I n D E V ( f i b e r )   { 
     { 
         i f   ( ( e x e c u t i o n C o n t e x t   &   R e n d e r C o n t e x t )   ! = =   N o C o n t e x t )   { 
             / /   W e   l e t   t h e   o t h e r   w a r n i n g   a b o u t   r e n d e r   p h a s e   u p d a t e s   d e a l   w i t h   t h i s   o n e . 
             r e t u r n ; 
         } 
 
         i f   ( ! ( f i b e r . m o d e   &   C o n c u r r e n t M o d e ) )   { 
             r e t u r n ; 
         } 
 
         v a r   t a g   =   f i b e r . t a g ; 
 
         i f   ( t a g   ! = =   I n d e t e r m i n a t e C o m p o n e n t   & &   t a g   ! = =   H o s t R o o t   & &   t a g   ! = =   C l a s s C o m p o n e n t   & &   t a g   ! = =   F u n c t i o n C o m p o n e n t   & &   t a g   ! = =   F o r w a r d R e f   & &   t a g   ! = =   M e m o C o m p o n e n t   & &   t a g   ! = =   S i m p l e M e m o C o m p o n e n t )   { 
             / /   O n l y   w a r n   f o r   u s e r - d e f i n e d   c o m p o n e n t s ,   n o t   i n t e r n a l   o n e s   l i k e   S u s p e n s e . 
             r e t u r n ; 
         }   / /   W e   s h o w   t h e   w h o l e   s t a c k   b u t   d e d u p e   o n   t h e   t o p   c o m p o n e n t ' s   n a m e   b e c a u s e 
         / /   t h e   p r o b l e m a t i c   c o d e   a l m o s t   a l w a y s   l i e s   i n s i d e   t h a t   c o m p o n e n t . 
 
 
         v a r   c o m p o n e n t N a m e   =   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i b e r )   | |   ' R e a c t C o m p o n e n t ' ; 
 
         i f   ( d i d W a r n S t a t e U p d a t e F o r N o t Y e t M o u n t e d C o m p o n e n t   ! = =   n u l l )   { 
             i f   ( d i d W a r n S t a t e U p d a t e F o r N o t Y e t M o u n t e d C o m p o n e n t . h a s ( c o m p o n e n t N a m e ) )   { 
                 r e t u r n ; 
             } 
 
             d i d W a r n S t a t e U p d a t e F o r N o t Y e t M o u n t e d C o m p o n e n t . a d d ( c o m p o n e n t N a m e ) ; 
         }   e l s e   { 
             d i d W a r n S t a t e U p d a t e F o r N o t Y e t M o u n t e d C o m p o n e n t   =   n e w   S e t ( [ c o m p o n e n t N a m e ] ) ; 
         } 
 
         v a r   p r e v i o u s F i b e r   =   c u r r e n t ; 
 
         t r y   { 
             s e t C u r r e n t F i b e r ( f i b e r ) ; 
 
             e r r o r ( " C a n ' t   p e r f o r m   a   R e a c t   s t a t e   u p d a t e   o n   a   c o m p o n e n t   t h a t   h a s n ' t   m o u n t e d   y e t .   "   +   ' T h i s   i n d i c a t e s   t h a t   y o u   h a v e   a   s i d e - e f f e c t   i n   y o u r   r e n d e r   f u n c t i o n   t h a t   '   +   ' a s y n c h r o n o u s l y   l a t e r   c a l l s   t r i e s   t o   u p d a t e   t h e   c o m p o n e n t .   M o v e   t h i s   w o r k   t o   '   +   ' u s e E f f e c t   i n s t e a d . ' ) ; 
         }   f i n a l l y   { 
             i f   ( p r e v i o u s F i b e r )   { 
                 s e t C u r r e n t F i b e r ( f i b e r ) ; 
             }   e l s e   { 
                 r e s e t C u r r e n t F i b e r ( ) ; 
             } 
         } 
     } 
 } 
 
 v a r   b e g i n W o r k $ 1 ; 
 
 { 
     v a r   d u m m y F i b e r   =   n u l l ; 
 
     b e g i n W o r k $ 1   =   f u n c t i o n   ( c u r r e n t ,   u n i t O f W o r k ,   l a n e s )   { 
         / /   I f   a   c o m p o n e n t   t h r o w s   a n   e r r o r ,   w e   r e p l a y   i t   a g a i n   i n   a   s y n c h r o n o u s l y 
         / /   d i s p a t c h e d   e v e n t ,   s o   t h a t   t h e   d e b u g g e r   w i l l   t r e a t   i t   a s   a n   u n c a u g h t 
         / /   e r r o r   S e e   R e a c t E r r o r U t i l s   f o r   m o r e   i n f o r m a t i o n . 
         / /   B e f o r e   e n t e r i n g   t h e   b e g i n   p h a s e ,   c o p y   t h e   w o r k - i n - p r o g r e s s   o n t o   a   d u m m y 
         / /   f i b e r .   I f   b e g i n W o r k   t h r o w s ,   w e ' l l   u s e   t h i s   t o   r e s e t   t h e   s t a t e . 
         v a r   o r i g i n a l W o r k I n P r o g r e s s C o p y   =   a s s i g n F i b e r P r o p e r t i e s I n D E V ( d u m m y F i b e r ,   u n i t O f W o r k ) ; 
 
         t r y   { 
             r e t u r n   b e g i n W o r k ( c u r r e n t ,   u n i t O f W o r k ,   l a n e s ) ; 
         }   c a t c h   ( o r i g i n a l E r r o r )   { 
             i f   ( o r i g i n a l E r r o r   ! = =   n u l l   & &   t y p e o f   o r i g i n a l E r r o r   = = =   ' o b j e c t '   & &   t y p e o f   o r i g i n a l E r r o r . t h e n   = = =   ' f u n c t i o n ' )   { 
                 / /   D o n ' t   r e p l a y   p r o m i s e s .   T r e a t   e v e r y t h i n g   e l s e   l i k e   a n   e r r o r . 
                 t h r o w   o r i g i n a l E r r o r ; 
             }   / /   K e e p   t h i s   c o d e   i n   s y n c   w i t h   h a n d l e E r r o r ;   a n y   c h a n g e s   h e r e   m u s t   h a v e 
             / /   c o r r e s p o n d i n g   c h a n g e s   t h e r e . 
 
 
             r e s e t C o n t e x t D e p e n d e n c i e s ( ) ; 
             r e s e t H o o k s A f t e r T h r o w ( ) ;   / /   D o n ' t   r e s e t   c u r r e n t   d e b u g   f i b e r ,   s i n c e   w e ' r e   a b o u t   t o   w o r k   o n   t h e 
             / /   s a m e   f i b e r   a g a i n . 
             / /   U n w i n d   t h e   f a i l e d   s t a c k   f r a m e 
 
             u n w i n d I n t e r r u p t e d W o r k ( c u r r e n t ,   u n i t O f W o r k ) ;   / /   R e s t o r e   t h e   o r i g i n a l   p r o p e r t i e s   o f   t h e   f i b e r . 
 
             a s s i g n F i b e r P r o p e r t i e s I n D E V ( u n i t O f W o r k ,   o r i g i n a l W o r k I n P r o g r e s s C o p y ) ; 
 
             i f   (   u n i t O f W o r k . m o d e   &   P r o f i l e M o d e )   { 
                 / /   R e s e t   t h e   p r o f i l e r   t i m e r . 
                 s t a r t P r o f i l e r T i m e r ( u n i t O f W o r k ) ; 
             }   / /   R u n   b e g i n W o r k   a g a i n . 
 
 
             i n v o k e G u a r d e d C a l l b a c k ( n u l l ,   b e g i n W o r k ,   n u l l ,   c u r r e n t ,   u n i t O f W o r k ,   l a n e s ) ; 
 
             i f   ( h a s C a u g h t E r r o r ( ) )   { 
                 v a r   r e p l a y E r r o r   =   c l e a r C a u g h t E r r o r ( ) ; 
 
                 i f   ( t y p e o f   r e p l a y E r r o r   = = =   ' o b j e c t '   & &   r e p l a y E r r o r   ! = =   n u l l   & &   r e p l a y E r r o r . _ s u p p r e s s L o g g i n g   & &   t y p e o f   o r i g i n a l E r r o r   = = =   ' o b j e c t '   & &   o r i g i n a l E r r o r   ! = =   n u l l   & &   ! o r i g i n a l E r r o r . _ s u p p r e s s L o g g i n g )   { 
                     / /   I f   s u p p r e s s e d ,   l e t   t h e   f l a g   c a r r y   o v e r   t o   t h e   o r i g i n a l   e r r o r   w h i c h   i s   t h e   o n e   w e ' l l   r e t h r o w . 
                     o r i g i n a l E r r o r . _ s u p p r e s s L o g g i n g   =   t r u e ; 
                 } 
             }   / /   W e   a l w a y s   t h r o w   t h e   o r i g i n a l   e r r o r   i n   c a s e   t h e   s e c o n d   r e n d e r   p a s s   i s   n o t   i d e m p o t e n t . 
             / /   T h i s   c a n   h a p p e n   i f   a   m e m o i z e d   f u n c t i o n   o r   C o m m o n J S   m o d u l e   d o e s n ' t   t h r o w   a f t e r   f i r s t   i n v o c a t i o n . 
 
 
             t h r o w   o r i g i n a l E r r o r ; 
         } 
     } ; 
 } 
 
 v a r   d i d W a r n A b o u t U p d a t e I n R e n d e r   =   f a l s e ; 
 v a r   d i d W a r n A b o u t U p d a t e I n R e n d e r F o r A n o t h e r C o m p o n e n t ; 
 
 { 
     d i d W a r n A b o u t U p d a t e I n R e n d e r F o r A n o t h e r C o m p o n e n t   =   n e w   S e t ( ) ; 
 } 
 
 f u n c t i o n   w a r n A b o u t R e n d e r P h a s e U p d a t e s I n D E V ( f i b e r )   { 
     { 
         i f   ( i s R e n d e r i n g   & &   ! g e t I s U p d a t i n g O p a q u e V a l u e I n R e n d e r P h a s e I n D E V ( ) )   { 
             s w i t c h   ( f i b e r . t a g )   { 
                 c a s e   F u n c t i o n C o m p o n e n t : 
                 c a s e   F o r w a r d R e f : 
                 c a s e   S i m p l e M e m o C o m p o n e n t : 
                     { 
                         v a r   r e n d e r i n g C o m p o n e n t N a m e   =   w o r k I n P r o g r e s s   & &   g e t C o m p o n e n t N a m e F r o m F i b e r ( w o r k I n P r o g r e s s )   | |   ' U n k n o w n ' ;   / /   D e d u p e   b y   t h e   r e n d e r i n g   c o m p o n e n t   b e c a u s e   i t ' s   t h e   o n e   t h a t   n e e d s   t o   b e   f i x e d . 
 
                         v a r   d e d u p e K e y   =   r e n d e r i n g C o m p o n e n t N a m e ; 
 
                         i f   ( ! d i d W a r n A b o u t U p d a t e I n R e n d e r F o r A n o t h e r C o m p o n e n t . h a s ( d e d u p e K e y ) )   { 
                             d i d W a r n A b o u t U p d a t e I n R e n d e r F o r A n o t h e r C o m p o n e n t . a d d ( d e d u p e K e y ) ; 
                             v a r   s e t S t a t e C o m p o n e n t N a m e   =   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i b e r )   | |   ' U n k n o w n ' ; 
 
                             e r r o r ( ' C a n n o t   u p d a t e   a   c o m p o n e n t   ( ` % s ` )   w h i l e   r e n d e r i n g   a   '   +   ' d i f f e r e n t   c o m p o n e n t   ( ` % s ` ) .   T o   l o c a t e   t h e   b a d   s e t S t a t e ( )   c a l l   i n s i d e   ` % s ` ,   '   +   ' f o l l o w   t h e   s t a c k   t r a c e   a s   d e s c r i b e d   i n   h t t p s : / / r e a c t j s . o r g / l i n k / s e t s t a t e - i n - r e n d e r ' ,   s e t S t a t e C o m p o n e n t N a m e ,   r e n d e r i n g C o m p o n e n t N a m e ,   r e n d e r i n g C o m p o n e n t N a m e ) ; 
                         } 
 
                         b r e a k ; 
                     } 
 
                 c a s e   C l a s s C o m p o n e n t : 
                     { 
                         i f   ( ! d i d W a r n A b o u t U p d a t e I n R e n d e r )   { 
                             e r r o r ( ' C a n n o t   u p d a t e   d u r i n g   a n   e x i s t i n g   s t a t e   t r a n s i t i o n   ( s u c h   a s   '   +   ' w i t h i n   ` r e n d e r ` ) .   R e n d e r   m e t h o d s   s h o u l d   b e   a   p u r e   '   +   ' f u n c t i o n   o f   p r o p s   a n d   s t a t e . ' ) ; 
 
                             d i d W a r n A b o u t U p d a t e I n R e n d e r   =   t r u e ; 
                         } 
 
                         b r e a k ; 
                     } 
             } 
         } 
     } 
 } 
 
 f u n c t i o n   r e s t o r e P e n d i n g U p d a t e r s ( r o o t ,   l a n e s )   { 
     { 
         i f   ( i s D e v T o o l s P r e s e n t )   { 
             v a r   m e m o i z e d U p d a t e r s   =   r o o t . m e m o i z e d U p d a t e r s ; 
             m e m o i z e d U p d a t e r s . f o r E a c h ( f u n c t i o n   ( s c h e d u l i n g F i b e r )   { 
                 a d d F i b e r T o L a n e s M a p ( r o o t ,   s c h e d u l i n g F i b e r ,   l a n e s ) ; 
             } ) ;   / /   T h i s   f u n c t i o n   i n t e n t i o n a l l y   d o e s   n o t   c l e a r   m e m o i z e d   u p d a t e r s . 
             / /   T h o s e   m a y   s t i l l   b e   r e l e v a n t   t o   t h e   c u r r e n t   c o m m i t 
             / /   a n d   a   f u t u r e   o n e   ( e . g .   S u s p e n s e ) . 
         } 
     } 
 } 
 v a r   f a k e A c t C a l l b a c k N o d e   =   { } ; 
 
 f u n c t i o n   s c h e d u l e C a l l b a c k $ 1 ( p r i o r i t y L e v e l ,   c a l l b a c k )   { 
     { 
         / /   I f   w e ' r e   c u r r e n t l y   i n s i d e   a n   ` a c t `   s c o p e ,   b y p a s s   S c h e d u l e r   a n d   p u s h   t o 
         / /   t h e   ` a c t `   q u e u e   i n s t e a d . 
         v a r   a c t Q u e u e   =   R e a c t C u r r e n t A c t Q u e u e $ 1 . c u r r e n t ; 
 
         i f   ( a c t Q u e u e   ! = =   n u l l )   { 
             a c t Q u e u e . p u s h ( c a l l b a c k ) ; 
             r e t u r n   f a k e A c t C a l l b a c k N o d e ; 
         }   e l s e   { 
             r e t u r n   s c h e d u l e C a l l b a c k ( p r i o r i t y L e v e l ,   c a l l b a c k ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   c a n c e l C a l l b a c k $ 1 ( c a l l b a c k N o d e )   { 
     i f   (   c a l l b a c k N o d e   = = =   f a k e A c t C a l l b a c k N o d e )   { 
         r e t u r n ; 
     }   / /   I n   p r o d u c t i o n ,   a l w a y s   c a l l   S c h e d u l e r .   T h i s   f u n c t i o n   w i l l   b e   s t r i p p e d   o u t . 
 
 
     r e t u r n   c a n c e l C a l l b a c k ( c a l l b a c k N o d e ) ; 
 } 
 
 f u n c t i o n   s h o u l d F o r c e F l u s h F a l l b a c k s I n D E V ( )   { 
     / /   N e v e r   f o r c e   f l u s h   i n   p r o d u c t i o n .   T h i s   f u n c t i o n   s h o u l d   g e t   s t r i p p e d   o u t . 
     r e t u r n     R e a c t C u r r e n t A c t Q u e u e $ 1 . c u r r e n t   ! = =   n u l l ; 
 } 
 
 f u n c t i o n   w a r n I f U p d a t e s N o t W r a p p e d W i t h A c t D E V ( f i b e r )   { 
     { 
         i f   ( f i b e r . m o d e   &   C o n c u r r e n t M o d e )   { 
             i f   ( ! i s C o n c u r r e n t A c t E n v i r o n m e n t ( ) )   { 
                 / /   N o t   i n   a n   a c t   e n v i r o n m e n t .   N o   n e e d   t o   w a r n . 
                 r e t u r n ; 
             } 
         }   e l s e   { 
             / /   L e g a c y   m o d e   h a s   a d d i t i o n a l   c a s e s   w h e r e   w e   s u p p r e s s   a   w a r n i n g . 
             i f   ( ! i s L e g a c y A c t E n v i r o n m e n t ( ) )   { 
                 / /   N o t   i n   a n   a c t   e n v i r o n m e n t .   N o   n e e d   t o   w a r n . 
                 r e t u r n ; 
             } 
 
             i f   ( e x e c u t i o n C o n t e x t   ! = =   N o C o n t e x t )   { 
                 / /   L e g a c y   m o d e   d o e s n ' t   w a r n   i f   t h e   u p d a t e   i s   b a t c h e d ,   i . e . 
                 / /   b a t c h e d U p d a t e s   o r   f l u s h S y n c . 
                 r e t u r n ; 
             } 
 
             i f   ( f i b e r . t a g   ! = =   F u n c t i o n C o m p o n e n t   & &   f i b e r . t a g   ! = =   F o r w a r d R e f   & &   f i b e r . t a g   ! = =   S i m p l e M e m o C o m p o n e n t )   { 
                 / /   F o r   b a c k w a r d s   c o m p a t i b i l i t y   w i t h   p r e - h o o k s   c o d e ,   l e g a c y   m o d e   o n l y 
                 / /   w a r n s   f o r   u p d a t e s   t h a t   o r i g i n a t e   f r o m   a   h o o k . 
                 r e t u r n ; 
             } 
         } 
 
         i f   ( R e a c t C u r r e n t A c t Q u e u e $ 1 . c u r r e n t   = = =   n u l l )   { 
             v a r   p r e v i o u s F i b e r   =   c u r r e n t ; 
 
             t r y   { 
                 s e t C u r r e n t F i b e r ( f i b e r ) ; 
 
                 e r r o r ( ' A n   u p d a t e   t o   % s   i n s i d e   a   t e s t   w a s   n o t   w r a p p e d   i n   a c t ( . . . ) . \ n \ n '   +   ' W h e n   t e s t i n g ,   c o d e   t h a t   c a u s e s   R e a c t   s t a t e   u p d a t e s   s h o u l d   b e   '   +   ' w r a p p e d   i n t o   a c t ( . . . ) : \ n \ n '   +   ' a c t ( ( )   = >   { \ n '   +   '     / *   f i r e   e v e n t s   t h a t   u p d a t e   s t a t e   * / \ n '   +   ' } ) ; \ n '   +   ' / *   a s s e r t   o n   t h e   o u t p u t   * / \ n \ n '   +   " T h i s   e n s u r e s   t h a t   y o u ' r e   t e s t i n g   t h e   b e h a v i o r   t h e   u s e r   w o u l d   s e e   "   +   ' i n   t h e   b r o w s e r . '   +   '   L e a r n   m o r e   a t   h t t p s : / / r e a c t j s . o r g / l i n k / w r a p - t e s t s - w i t h - a c t ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i b e r ) ) ; 
             }   f i n a l l y   { 
                 i f   ( p r e v i o u s F i b e r )   { 
                     s e t C u r r e n t F i b e r ( f i b e r ) ; 
                 }   e l s e   { 
                     r e s e t C u r r e n t F i b e r ( ) ; 
                 } 
             } 
         } 
     } 
 } 
 
 f u n c t i o n   w a r n I f S u s p e n s e R e s o l u t i o n N o t W r a p p e d W i t h A c t D E V ( r o o t )   { 
     { 
         i f   ( r o o t . t a g   ! = =   L e g a c y R o o t   & &   i s C o n c u r r e n t A c t E n v i r o n m e n t ( )   & &   R e a c t C u r r e n t A c t Q u e u e $ 1 . c u r r e n t   = = =   n u l l )   { 
             e r r o r ( ' A   s u s p e n d e d   r e s o u r c e   f i n i s h e d   l o a d i n g   i n s i d e   a   t e s t ,   b u t   t h e   e v e n t   '   +   ' w a s   n o t   w r a p p e d   i n   a c t ( . . . ) . \ n \ n '   +   ' W h e n   t e s t i n g ,   c o d e   t h a t   r e s o l v e s   s u s p e n d e d   d a t a   s h o u l d   b e   w r a p p e d   '   +   ' i n t o   a c t ( . . . ) : \ n \ n '   +   ' a c t ( ( )   = >   { \ n '   +   '     / *   f i n i s h   l o a d i n g   s u s p e n d e d   d a t a   * / \ n '   +   ' } ) ; \ n '   +   ' / *   a s s e r t   o n   t h e   o u t p u t   * / \ n \ n '   +   " T h i s   e n s u r e s   t h a t   y o u ' r e   t e s t i n g   t h e   b e h a v i o r   t h e   u s e r   w o u l d   s e e   "   +   ' i n   t h e   b r o w s e r . '   +   '   L e a r n   m o r e   a t   h t t p s : / / r e a c t j s . o r g / l i n k / w r a p - t e s t s - w i t h - a c t ' ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   s e t I s R u n n i n g I n s e r t i o n E f f e c t ( i s R u n n i n g )   { 
     { 
         i s R u n n i n g I n s e r t i o n E f f e c t   =   i s R u n n i n g ; 
     } 
 } 
 
 / *   e s l i n t - d i s a b l e   r e a c t - i n t e r n a l / p r o d - e r r o r - c o d e s   * / 
 v a r   r e s o l v e F a m i l y   =   n u l l ;   / /   $ F l o w F i x M e   F l o w   g e t s   c o n f u s e d   b y   a   W e a k S e t   f e a t u r e   c h e c k   b e l o w . 
 
 v a r   f a i l e d B o u n d a r i e s   =   n u l l ; 
 v a r   s e t R e f r e s h H a n d l e r   =   f u n c t i o n   ( h a n d l e r )   { 
     { 
         r e s o l v e F a m i l y   =   h a n d l e r ; 
     } 
 } ; 
 f u n c t i o n   r e s o l v e F u n c t i o n F o r H o t R e l o a d i n g ( t y p e )   { 
     { 
         i f   ( r e s o l v e F a m i l y   = = =   n u l l )   { 
             / /   H o t   r e l o a d i n g   i s   d i s a b l e d . 
             r e t u r n   t y p e ; 
         } 
 
         v a r   f a m i l y   =   r e s o l v e F a m i l y ( t y p e ) ; 
 
         i f   ( f a m i l y   = = =   u n d e f i n e d )   { 
             r e t u r n   t y p e ; 
         }   / /   U s e   t h e   l a t e s t   k n o w n   i m p l e m e n t a t i o n . 
 
 
         r e t u r n   f a m i l y . c u r r e n t ; 
     } 
 } 
 f u n c t i o n   r e s o l v e C l a s s F o r H o t R e l o a d i n g ( t y p e )   { 
     / /   N o   i m p l e m e n t a t i o n   d i f f e r e n c e s . 
     r e t u r n   r e s o l v e F u n c t i o n F o r H o t R e l o a d i n g ( t y p e ) ; 
 } 
 f u n c t i o n   r e s o l v e F o r w a r d R e f F o r H o t R e l o a d i n g ( t y p e )   { 
     { 
         i f   ( r e s o l v e F a m i l y   = = =   n u l l )   { 
             / /   H o t   r e l o a d i n g   i s   d i s a b l e d . 
             r e t u r n   t y p e ; 
         } 
 
         v a r   f a m i l y   =   r e s o l v e F a m i l y ( t y p e ) ; 
 
         i f   ( f a m i l y   = = =   u n d e f i n e d )   { 
             / /   C h e c k   i f   w e ' r e   d e a l i n g   w i t h   a   r e a l   f o r w a r d R e f .   D o n ' t   w a n t   t o   c r a s h   e a r l y . 
             i f   ( t y p e   ! = =   n u l l   & &   t y p e   ! = =   u n d e f i n e d   & &   t y p e o f   t y p e . r e n d e r   = = =   ' f u n c t i o n ' )   { 
                 / /   F o r w a r d R e f   i s   s p e c i a l   b e c a u s e   i t s   r e s o l v e d   . t y p e   i s   a n   o b j e c t , 
                 / /   b u t   i t ' s   p o s s i b l e   t h a t   w e   o n l y   h a v e   i t s   i n n e r   r e n d e r   f u n c t i o n   i n   t h e   m a p . 
                 / /   I f   t h a t   i n n e r   r e n d e r   f u n c t i o n   i s   d i f f e r e n t ,   w e ' l l   b u i l d   a   n e w   f o r w a r d R e f   t y p e . 
                 v a r   c u r r e n t R e n d e r   =   r e s o l v e F u n c t i o n F o r H o t R e l o a d i n g ( t y p e . r e n d e r ) ; 
 
                 i f   ( t y p e . r e n d e r   ! = =   c u r r e n t R e n d e r )   { 
                     v a r   s y n t h e t i c T y p e   =   { 
                         $ $ t y p e o f :   R E A C T _ F O R W A R D _ R E F _ T Y P E , 
                         r e n d e r :   c u r r e n t R e n d e r 
                     } ; 
 
                     i f   ( t y p e . d i s p l a y N a m e   ! = =   u n d e f i n e d )   { 
                         s y n t h e t i c T y p e . d i s p l a y N a m e   =   t y p e . d i s p l a y N a m e ; 
                     } 
 
                     r e t u r n   s y n t h e t i c T y p e ; 
                 } 
             } 
 
             r e t u r n   t y p e ; 
         }   / /   U s e   t h e   l a t e s t   k n o w n   i m p l e m e n t a t i o n . 
 
 
         r e t u r n   f a m i l y . c u r r e n t ; 
     } 
 } 
 f u n c t i o n   i s C o m p a t i b l e F a m i l y F o r H o t R e l o a d i n g ( f i b e r ,   e l e m e n t )   { 
     { 
         i f   ( r e s o l v e F a m i l y   = = =   n u l l )   { 
             / /   H o t   r e l o a d i n g   i s   d i s a b l e d . 
             r e t u r n   f a l s e ; 
         } 
 
         v a r   p r e v T y p e   =   f i b e r . e l e m e n t T y p e ; 
         v a r   n e x t T y p e   =   e l e m e n t . t y p e ;   / /   I f   w e   g o t   h e r e ,   w e   k n o w   t y p e s   a r e n ' t   = = =   e q u a l . 
 
         v a r   n e e d s C o m p a r e F a m i l i e s   =   f a l s e ; 
         v a r   $ $ t y p e o f N e x t T y p e   =   t y p e o f   n e x t T y p e   = = =   ' o b j e c t '   & &   n e x t T y p e   ! = =   n u l l   ?   n e x t T y p e . $ $ t y p e o f   :   n u l l ; 
 
         s w i t c h   ( f i b e r . t a g )   { 
             c a s e   C l a s s C o m p o n e n t : 
                 { 
                     i f   ( t y p e o f   n e x t T y p e   = = =   ' f u n c t i o n ' )   { 
                         n e e d s C o m p a r e F a m i l i e s   =   t r u e ; 
                     } 
 
                     b r e a k ; 
                 } 
 
             c a s e   F u n c t i o n C o m p o n e n t : 
                 { 
                     i f   ( t y p e o f   n e x t T y p e   = = =   ' f u n c t i o n ' )   { 
                         n e e d s C o m p a r e F a m i l i e s   =   t r u e ; 
                     }   e l s e   i f   ( $ $ t y p e o f N e x t T y p e   = = =   R E A C T _ L A Z Y _ T Y P E )   { 
                         / /   W e   d o n ' t   k n o w   t h e   i n n e r   t y p e   y e t . 
                         / /   W e ' r e   g o i n g   t o   a s s u m e   t h a t   t h e   l a z y   i n n e r   t y p e   i s   s t a b l e , 
                         / /   a n d   s o   i t   i s   s u f f i c i e n t   t o   a v o i d   r e c o n c i l i n g   i t   a w a y . 
                         / /   W e ' r e   n o t   g o i n g   t o   u n w r a p   o r   a c t u a l l y   u s e   t h e   n e w   l a z y   t y p e . 
                         n e e d s C o m p a r e F a m i l i e s   =   t r u e ; 
                     } 
 
                     b r e a k ; 
                 } 
 
             c a s e   F o r w a r d R e f : 
                 { 
                     i f   ( $ $ t y p e o f N e x t T y p e   = = =   R E A C T _ F O R W A R D _ R E F _ T Y P E )   { 
                         n e e d s C o m p a r e F a m i l i e s   =   t r u e ; 
                     }   e l s e   i f   ( $ $ t y p e o f N e x t T y p e   = = =   R E A C T _ L A Z Y _ T Y P E )   { 
                         n e e d s C o m p a r e F a m i l i e s   =   t r u e ; 
                     } 
 
                     b r e a k ; 
                 } 
 
             c a s e   M e m o C o m p o n e n t : 
             c a s e   S i m p l e M e m o C o m p o n e n t : 
                 { 
                     i f   ( $ $ t y p e o f N e x t T y p e   = = =   R E A C T _ M E M O _ T Y P E )   { 
                         / /   T O D O :   i f   i t   w a s   b u t   c a n   n o   l o n g e r   b e   s i m p l e , 
                         / /   w e   s h o u l d n ' t   s e t   t h i s . 
                         n e e d s C o m p a r e F a m i l i e s   =   t r u e ; 
                     }   e l s e   i f   ( $ $ t y p e o f N e x t T y p e   = = =   R E A C T _ L A Z Y _ T Y P E )   { 
                         n e e d s C o m p a r e F a m i l i e s   =   t r u e ; 
                     } 
 
                     b r e a k ; 
                 } 
 
             d e f a u l t : 
                 r e t u r n   f a l s e ; 
         }   / /   C h e c k   i f   b o t h   t y p e s   h a v e   a   f a m i l y   a n d   i t ' s   t h e   s a m e   o n e . 
 
 
         i f   ( n e e d s C o m p a r e F a m i l i e s )   { 
             / /   N o t e :   m e m o ( )   a n d   f o r w a r d R e f ( )   w e ' l l   c o m p a r e   o u t e r   r a t h e r   t h a n   i n n e r   t y p e . 
             / /   T h i s   m e a n s   b o t h   o f   t h e m   n e e d   t o   b e   r e g i s t e r e d   t o   p r e s e r v e   s t a t e . 
             / /   I f   w e   u n w r a p p e d   a n d   c o m p a r e d   t h e   i n n e r   t y p e s   f o r   w r a p p e r s   i n s t e a d , 
             / /   t h e n   w e   w o u l d   r i s k   f a l s e l y   s a y i n g   t w o   s e p a r a t e   m e m o ( F o o ) 
             / /   c a l l s   a r e   e q u i v a l e n t   b e c a u s e   t h e y   w r a p   t h e   s a m e   F o o   f u n c t i o n . 
             v a r   p r e v F a m i l y   =   r e s o l v e F a m i l y ( p r e v T y p e ) ; 
 
             i f   ( p r e v F a m i l y   ! = =   u n d e f i n e d   & &   p r e v F a m i l y   = = =   r e s o l v e F a m i l y ( n e x t T y p e ) )   { 
                 r e t u r n   t r u e ; 
             } 
         } 
 
         r e t u r n   f a l s e ; 
     } 
 } 
 f u n c t i o n   m a r k F a i l e d E r r o r B o u n d a r y F o r H o t R e l o a d i n g ( f i b e r )   { 
     { 
         i f   ( r e s o l v e F a m i l y   = = =   n u l l )   { 
             / /   H o t   r e l o a d i n g   i s   d i s a b l e d . 
             r e t u r n ; 
         } 
 
         i f   ( t y p e o f   W e a k S e t   ! = =   ' f u n c t i o n ' )   { 
             r e t u r n ; 
         } 
 
         i f   ( f a i l e d B o u n d a r i e s   = = =   n u l l )   { 
             f a i l e d B o u n d a r i e s   =   n e w   W e a k S e t ( ) ; 
         } 
 
         f a i l e d B o u n d a r i e s . a d d ( f i b e r ) ; 
     } 
 } 
 v a r   s c h e d u l e R e f r e s h   =   f u n c t i o n   ( r o o t ,   u p d a t e )   { 
     { 
         i f   ( r e s o l v e F a m i l y   = = =   n u l l )   { 
             / /   H o t   r e l o a d i n g   i s   d i s a b l e d . 
             r e t u r n ; 
         } 
 
         v a r   s t a l e F a m i l i e s   =   u p d a t e . s t a l e F a m i l i e s , 
                 u p d a t e d F a m i l i e s   =   u p d a t e . u p d a t e d F a m i l i e s ; 
         f l u s h P a s s i v e E f f e c t s ( ) ; 
         f l u s h S y n c ( f u n c t i o n   ( )   { 
             s c h e d u l e F i b e r s W i t h F a m i l i e s R e c u r s i v e l y ( r o o t . c u r r e n t ,   u p d a t e d F a m i l i e s ,   s t a l e F a m i l i e s ) ; 
         } ) ; 
     } 
 } ; 
 v a r   s c h e d u l e R o o t   =   f u n c t i o n   ( r o o t ,   e l e m e n t )   { 
     { 
         i f   ( r o o t . c o n t e x t   ! = =   e m p t y C o n t e x t O b j e c t )   { 
             / /   S u p e r   e d g e   c a s e :   r o o t   h a s   a   l e g a c y   _ r e n d e r S u b t r e e   c o n t e x t 
             / /   b u t   w e   d o n ' t   k n o w   t h e   p a r e n t C o m p o n e n t   s o   w e   c a n ' t   p a s s   i t . 
             / /   J u s t   i g n o r e .   W e ' l l   d e l e t e   t h i s   w i t h   _ r e n d e r S u b t r e e   c o d e   p a t h   l a t e r . 
             r e t u r n ; 
         } 
 
         f l u s h P a s s i v e E f f e c t s ( ) ; 
         f l u s h S y n c ( f u n c t i o n   ( )   { 
             u p d a t e C o n t a i n e r ( e l e m e n t ,   r o o t ,   n u l l ,   n u l l ) ; 
         } ) ; 
     } 
 } ; 
 
 f u n c t i o n   s c h e d u l e F i b e r s W i t h F a m i l i e s R e c u r s i v e l y ( f i b e r ,   u p d a t e d F a m i l i e s ,   s t a l e F a m i l i e s )   { 
     { 
         v a r   a l t e r n a t e   =   f i b e r . a l t e r n a t e , 
                 c h i l d   =   f i b e r . c h i l d , 
                 s i b l i n g   =   f i b e r . s i b l i n g , 
                 t a g   =   f i b e r . t a g , 
                 t y p e   =   f i b e r . t y p e ; 
         v a r   c a n d i d a t e T y p e   =   n u l l ; 
 
         s w i t c h   ( t a g )   { 
             c a s e   F u n c t i o n C o m p o n e n t : 
             c a s e   S i m p l e M e m o C o m p o n e n t : 
             c a s e   C l a s s C o m p o n e n t : 
                 c a n d i d a t e T y p e   =   t y p e ; 
                 b r e a k ; 
 
             c a s e   F o r w a r d R e f : 
                 c a n d i d a t e T y p e   =   t y p e . r e n d e r ; 
                 b r e a k ; 
         } 
 
         i f   ( r e s o l v e F a m i l y   = = =   n u l l )   { 
             t h r o w   n e w   E r r o r ( ' E x p e c t e d   r e s o l v e F a m i l y   t o   b e   s e t   d u r i n g   h o t   r e l o a d . ' ) ; 
         } 
 
         v a r   n e e d s R e n d e r   =   f a l s e ; 
         v a r   n e e d s R e m o u n t   =   f a l s e ; 
 
         i f   ( c a n d i d a t e T y p e   ! = =   n u l l )   { 
             v a r   f a m i l y   =   r e s o l v e F a m i l y ( c a n d i d a t e T y p e ) ; 
 
             i f   ( f a m i l y   ! = =   u n d e f i n e d )   { 
                 i f   ( s t a l e F a m i l i e s . h a s ( f a m i l y ) )   { 
                     n e e d s R e m o u n t   =   t r u e ; 
                 }   e l s e   i f   ( u p d a t e d F a m i l i e s . h a s ( f a m i l y ) )   { 
                     i f   ( t a g   = = =   C l a s s C o m p o n e n t )   { 
                         n e e d s R e m o u n t   =   t r u e ; 
                     }   e l s e   { 
                         n e e d s R e n d e r   =   t r u e ; 
                     } 
                 } 
             } 
         } 
 
         i f   ( f a i l e d B o u n d a r i e s   ! = =   n u l l )   { 
             i f   ( f a i l e d B o u n d a r i e s . h a s ( f i b e r )   | |   a l t e r n a t e   ! = =   n u l l   & &   f a i l e d B o u n d a r i e s . h a s ( a l t e r n a t e ) )   { 
                 n e e d s R e m o u n t   =   t r u e ; 
             } 
         } 
 
         i f   ( n e e d s R e m o u n t )   { 
             f i b e r . _ d e b u g N e e d s R e m o u n t   =   t r u e ; 
         } 
 
         i f   ( n e e d s R e m o u n t   | |   n e e d s R e n d e r )   { 
             s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   S y n c L a n e ,   N o T i m e s t a m p ) ; 
         } 
 
         i f   ( c h i l d   ! = =   n u l l   & &   ! n e e d s R e m o u n t )   { 
             s c h e d u l e F i b e r s W i t h F a m i l i e s R e c u r s i v e l y ( c h i l d ,   u p d a t e d F a m i l i e s ,   s t a l e F a m i l i e s ) ; 
         } 
 
         i f   ( s i b l i n g   ! = =   n u l l )   { 
             s c h e d u l e F i b e r s W i t h F a m i l i e s R e c u r s i v e l y ( s i b l i n g ,   u p d a t e d F a m i l i e s ,   s t a l e F a m i l i e s ) ; 
         } 
     } 
 } 
 
 v a r   f i n d H o s t I n s t a n c e s F o r R e f r e s h   =   f u n c t i o n   ( r o o t ,   f a m i l i e s )   { 
     { 
         v a r   h o s t I n s t a n c e s   =   n e w   S e t ( ) ; 
         v a r   t y p e s   =   n e w   S e t ( f a m i l i e s . m a p ( f u n c t i o n   ( f a m i l y )   { 
             r e t u r n   f a m i l y . c u r r e n t ; 
         } ) ) ; 
         f i n d H o s t I n s t a n c e s F o r M a t c h i n g F i b e r s R e c u r s i v e l y ( r o o t . c u r r e n t ,   t y p e s ,   h o s t I n s t a n c e s ) ; 
         r e t u r n   h o s t I n s t a n c e s ; 
     } 
 } ; 
 
 f u n c t i o n   f i n d H o s t I n s t a n c e s F o r M a t c h i n g F i b e r s R e c u r s i v e l y ( f i b e r ,   t y p e s ,   h o s t I n s t a n c e s )   { 
     { 
         v a r   c h i l d   =   f i b e r . c h i l d , 
                 s i b l i n g   =   f i b e r . s i b l i n g , 
                 t a g   =   f i b e r . t a g , 
                 t y p e   =   f i b e r . t y p e ; 
         v a r   c a n d i d a t e T y p e   =   n u l l ; 
 
         s w i t c h   ( t a g )   { 
             c a s e   F u n c t i o n C o m p o n e n t : 
             c a s e   S i m p l e M e m o C o m p o n e n t : 
             c a s e   C l a s s C o m p o n e n t : 
                 c a n d i d a t e T y p e   =   t y p e ; 
                 b r e a k ; 
 
             c a s e   F o r w a r d R e f : 
                 c a n d i d a t e T y p e   =   t y p e . r e n d e r ; 
                 b r e a k ; 
         } 
 
         v a r   d i d M a t c h   =   f a l s e ; 
 
         i f   ( c a n d i d a t e T y p e   ! = =   n u l l )   { 
             i f   ( t y p e s . h a s ( c a n d i d a t e T y p e ) )   { 
                 d i d M a t c h   =   t r u e ; 
             } 
         } 
 
         i f   ( d i d M a t c h )   { 
             / /   W e   h a v e   a   m a t c h .   T h i s   o n l y   d r i l l s   d o w n   t o   t h e   c l o s e s t   h o s t   c o m p o n e n t s . 
             / /   T h e r e ' s   n o   n e e d   t o   s e a r c h   d e e p e r   b e c a u s e   f o r   t h e   p u r p o s e   o f   g i v i n g 
             / /   v i s u a l   f e e d b a c k ,   " f l a s h i n g "   o u t e r m o s t   p a r e n t   r e c t a n g l e s   i s   s u f f i c i e n t . 
             f i n d H o s t I n s t a n c e s F o r F i b e r S h a l l o w l y ( f i b e r ,   h o s t I n s t a n c e s ) ; 
         }   e l s e   { 
             / /   I f   t h e r e ' s   n o   m a t c h ,   m a y b e   t h e r e   w i l l   b e   o n e   f u r t h e r   d o w n   i n   t h e   c h i l d   t r e e . 
             i f   ( c h i l d   ! = =   n u l l )   { 
                 f i n d H o s t I n s t a n c e s F o r M a t c h i n g F i b e r s R e c u r s i v e l y ( c h i l d ,   t y p e s ,   h o s t I n s t a n c e s ) ; 
             } 
         } 
 
         i f   ( s i b l i n g   ! = =   n u l l )   { 
             f i n d H o s t I n s t a n c e s F o r M a t c h i n g F i b e r s R e c u r s i v e l y ( s i b l i n g ,   t y p e s ,   h o s t I n s t a n c e s ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   f i n d H o s t I n s t a n c e s F o r F i b e r S h a l l o w l y ( f i b e r ,   h o s t I n s t a n c e s )   { 
     { 
         v a r   f o u n d H o s t I n s t a n c e s   =   f i n d C h i l d H o s t I n s t a n c e s F o r F i b e r S h a l l o w l y ( f i b e r ,   h o s t I n s t a n c e s ) ; 
 
         i f   ( f o u n d H o s t I n s t a n c e s )   { 
             r e t u r n ; 
         }   / /   I f   w e   d i d n ' t   f i n d   a n y   h o s t   c h i l d r e n ,   f a l l b a c k   t o   c l o s e s t   h o s t   p a r e n t . 
 
 
         v a r   n o d e   =   f i b e r ; 
 
         w h i l e   ( t r u e )   { 
             s w i t c h   ( n o d e . t a g )   { 
                 c a s e   H o s t C o m p o n e n t : 
                     h o s t I n s t a n c e s . a d d ( n o d e . s t a t e N o d e ) ; 
                     r e t u r n ; 
 
                 c a s e   H o s t P o r t a l : 
                     h o s t I n s t a n c e s . a d d ( n o d e . s t a t e N o d e . c o n t a i n e r I n f o ) ; 
                     r e t u r n ; 
 
                 c a s e   H o s t R o o t : 
                     h o s t I n s t a n c e s . a d d ( n o d e . s t a t e N o d e . c o n t a i n e r I n f o ) ; 
                     r e t u r n ; 
             } 
 
             i f   ( n o d e . r e t u r n   = = =   n u l l )   { 
                 t h r o w   n e w   E r r o r ( ' E x p e c t e d   t o   r e a c h   r o o t   f i r s t . ' ) ; 
             } 
 
             n o d e   =   n o d e . r e t u r n ; 
         } 
     } 
 } 
 
 f u n c t i o n   f i n d C h i l d H o s t I n s t a n c e s F o r F i b e r S h a l l o w l y ( f i b e r ,   h o s t I n s t a n c e s )   { 
     { 
         v a r   n o d e   =   f i b e r ; 
         v a r   f o u n d H o s t I n s t a n c e s   =   f a l s e ; 
 
         w h i l e   ( t r u e )   { 
             i f   ( n o d e . t a g   = = =   H o s t C o m p o n e n t )   { 
                 / /   W e   g o t   a   m a t c h . 
                 f o u n d H o s t I n s t a n c e s   =   t r u e ; 
                 h o s t I n s t a n c e s . a d d ( n o d e . s t a t e N o d e ) ;   / /   T h e r e   m a y   s t i l l   b e   m o r e ,   s o   k e e p   s e a r c h i n g . 
             }   e l s e   i f   ( n o d e . c h i l d   ! = =   n u l l )   { 
                 n o d e . c h i l d . r e t u r n   =   n o d e ; 
                 n o d e   =   n o d e . c h i l d ; 
                 c o n t i n u e ; 
             } 
 
             i f   ( n o d e   = = =   f i b e r )   { 
                 r e t u r n   f o u n d H o s t I n s t a n c e s ; 
             } 
 
             w h i l e   ( n o d e . s i b l i n g   = = =   n u l l )   { 
                 i f   ( n o d e . r e t u r n   = = =   n u l l   | |   n o d e . r e t u r n   = = =   f i b e r )   { 
                     r e t u r n   f o u n d H o s t I n s t a n c e s ; 
                 } 
 
                 n o d e   =   n o d e . r e t u r n ; 
             } 
 
             n o d e . s i b l i n g . r e t u r n   =   n o d e . r e t u r n ; 
             n o d e   =   n o d e . s i b l i n g ; 
         } 
     } 
 
     r e t u r n   f a l s e ; 
 } 
 
 v a r   h a s B a d M a p P o l y f i l l ; 
 
 { 
     h a s B a d M a p P o l y f i l l   =   f a l s e ; 
 
     t r y   { 
         v a r   n o n E x t e n s i b l e O b j e c t   =   O b j e c t . p r e v e n t E x t e n s i o n s ( { } ) ; 
         / *   e s l i n t - d i s a b l e   n o - n e w   * / 
 
         n e w   M a p ( [ [ n o n E x t e n s i b l e O b j e c t ,   n u l l ] ] ) ; 
         n e w   S e t ( [ n o n E x t e n s i b l e O b j e c t ] ) ; 
         / *   e s l i n t - e n a b l e   n o - n e w   * / 
     }   c a t c h   ( e )   { 
         / /   T O D O :   C o n s i d e r   w a r n i n g   a b o u t   b a d   p o l y f i l l s 
         h a s B a d M a p P o l y f i l l   =   t r u e ; 
     } 
 } 
 
 f u n c t i o n   F i b e r N o d e ( t a g ,   p e n d i n g P r o p s ,   k e y ,   m o d e )   { 
     / /   I n s t a n c e 
     t h i s . t a g   =   t a g ; 
     t h i s . k e y   =   k e y ; 
     t h i s . e l e m e n t T y p e   =   n u l l ; 
     t h i s . t y p e   =   n u l l ; 
     t h i s . s t a t e N o d e   =   n u l l ;   / /   F i b e r 
 
     t h i s . r e t u r n   =   n u l l ; 
     t h i s . c h i l d   =   n u l l ; 
     t h i s . s i b l i n g   =   n u l l ; 
     t h i s . i n d e x   =   0 ; 
     t h i s . r e f   =   n u l l ; 
     t h i s . p e n d i n g P r o p s   =   p e n d i n g P r o p s ; 
     t h i s . m e m o i z e d P r o p s   =   n u l l ; 
     t h i s . u p d a t e Q u e u e   =   n u l l ; 
     t h i s . m e m o i z e d S t a t e   =   n u l l ; 
     t h i s . d e p e n d e n c i e s   =   n u l l ; 
     t h i s . m o d e   =   m o d e ;   / /   E f f e c t s 
 
     t h i s . f l a g s   =   N o F l a g s ; 
     t h i s . s u b t r e e F l a g s   =   N o F l a g s ; 
     t h i s . d e l e t i o n s   =   n u l l ; 
     t h i s . l a n e s   =   N o L a n e s ; 
     t h i s . c h i l d L a n e s   =   N o L a n e s ; 
     t h i s . a l t e r n a t e   =   n u l l ; 
 
     { 
         / /   N o t e :   T h e   f o l l o w i n g   i s   d o n e   t o   a v o i d   a   v 8   p e r f o r m a n c e   c l i f f . 
         / / 
         / /   I n i t i a l i z i n g   t h e   f i e l d s   b e l o w   t o   s m i s   a n d   l a t e r   u p d a t i n g   t h e m   w i t h 
         / /   d o u b l e   v a l u e s   w i l l   c a u s e   F i b e r s   t o   e n d   u p   h a v i n g   s e p a r a t e   s h a p e s . 
         / /   T h i s   b e h a v i o r / b u g   h a s   s o m e t h i n g   t o   d o   w i t h   O b j e c t . p r e v e n t E x t e n s i o n ( ) . 
         / /   F o r t u n a t e l y   t h i s   o n l y   i m p a c t s   D E V   b u i l d s . 
         / /   U n f o r t u n a t e l y   i t   m a k e s   R e a c t   u n u s a b l y   s l o w   f o r   s o m e   a p p l i c a t i o n s . 
         / /   T o   w o r k   a r o u n d   t h i s ,   i n i t i a l i z e   t h e   f i e l d s   b e l o w   w i t h   d o u b l e s . 
         / / 
         / /   L e a r n   m o r e   a b o u t   t h i s   h e r e : 
         / /   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 4 3 6 5 
         / /   h t t p s : / / b u g s . c h r o m i u m . o r g / p / v 8 / i s s u e s / d e t a i l ? i d = 8 5 3 8 
         t h i s . a c t u a l D u r a t i o n   =   N u m b e r . N a N ; 
         t h i s . a c t u a l S t a r t T i m e   =   N u m b e r . N a N ; 
         t h i s . s e l f B a s e D u r a t i o n   =   N u m b e r . N a N ; 
         t h i s . t r e e B a s e D u r a t i o n   =   N u m b e r . N a N ;   / /   I t ' s   o k a y   t o   r e p l a c e   t h e   i n i t i a l   d o u b l e s   w i t h   s m i s   a f t e r   i n i t i a l i z a t i o n . 
         / /   T h i s   w o n ' t   t r i g g e r   t h e   p e r f o r m a n c e   c l i f f   m e n t i o n e d   a b o v e , 
         / /   a n d   i t   s i m p l i f i e s   o t h e r   p r o f i l e r   c o d e   ( i n c l u d i n g   D e v T o o l s ) . 
 
         t h i s . a c t u a l D u r a t i o n   =   0 ; 
         t h i s . a c t u a l S t a r t T i m e   =   - 1 ; 
         t h i s . s e l f B a s e D u r a t i o n   =   0 ; 
         t h i s . t r e e B a s e D u r a t i o n   =   0 ; 
     } 
 
     { 
         / /   T h i s   i s n ' t   d i r e c t l y   u s e d   b u t   i s   h a n d y   f o r   d e b u g g i n g   i n t e r n a l s : 
         t h i s . _ d e b u g S o u r c e   =   n u l l ; 
         t h i s . _ d e b u g O w n e r   =   n u l l ; 
         t h i s . _ d e b u g N e e d s R e m o u n t   =   f a l s e ; 
         t h i s . _ d e b u g H o o k T y p e s   =   n u l l ; 
 
         i f   ( ! h a s B a d M a p P o l y f i l l   & &   t y p e o f   O b j e c t . p r e v e n t E x t e n s i o n s   = = =   ' f u n c t i o n ' )   { 
             O b j e c t . p r e v e n t E x t e n s i o n s ( t h i s ) ; 
         } 
     } 
 }   / /   T h i s   i s   a   c o n s t r u c t o r   f u n c t i o n ,   r a t h e r   t h a n   a   P O J O   c o n s t r u c t o r ,   s t i l l 
 / /   p l e a s e   e n s u r e   w e   d o   t h e   f o l l o w i n g : 
 / /   1 )   N o b o d y   s h o u l d   a d d   a n y   i n s t a n c e   m e t h o d s   o n   t h i s .   I n s t a n c e   m e t h o d s   c a n   b e 
 / /         m o r e   d i f f i c u l t   t o   p r e d i c t   w h e n   t h e y   g e t   o p t i m i z e d   a n d   t h e y   a r e   a l m o s t 
 / /         n e v e r   i n l i n e d   p r o p e r l y   i n   s t a t i c   c o m p i l e r s . 
 / /   2 )   N o b o d y   s h o u l d   r e l y   o n   ` i n s t a n c e o f   F i b e r `   f o r   t y p e   t e s t i n g .   W e   s h o u l d 
 / /         a l w a y s   k n o w   w h e n   i t   i s   a   f i b e r . 
 / /   3 )   W e   m i g h t   w a n t   t o   e x p e r i m e n t   w i t h   u s i n g   n u m e r i c   k e y s   s i n c e   t h e y   a r e   e a s i e r 
 / /         t o   o p t i m i z e   i n   a   n o n - J I T   e n v i r o n m e n t . 
 / /   4 )   W e   c a n   e a s i l y   g o   f r o m   a   c o n s t r u c t o r   t o   a   c r e a t e F i b e r   o b j e c t   l i t e r a l   i f   t h a t 
 / /         i s   f a s t e r . 
 / /   5 )   I t   s h o u l d   b e   e a s y   t o   p o r t   t h i s   t o   a   C   s t r u c t   a n d   k e e p   a   C   i m p l e m e n t a t i o n 
 / /         c o m p a t i b l e . 
 
 
 v a r   c r e a t e F i b e r   =   f u n c t i o n   ( t a g ,   p e n d i n g P r o p s ,   k e y ,   m o d e )   { 
     / /   $ F l o w F i x M e :   t h e   s h a p e s   a r e   e x a c t   h e r e   b u t   F l o w   d o e s n ' t   l i k e   c o n s t r u c t o r s 
     r e t u r n   n e w   F i b e r N o d e ( t a g ,   p e n d i n g P r o p s ,   k e y ,   m o d e ) ; 
 } ; 
 
 f u n c t i o n   s h o u l d C o n s t r u c t $ 1 ( C o m p o n e n t )   { 
     v a r   p r o t o t y p e   =   C o m p o n e n t . p r o t o t y p e ; 
     r e t u r n   ! ! ( p r o t o t y p e   & &   p r o t o t y p e . i s R e a c t C o m p o n e n t ) ; 
 } 
 
 f u n c t i o n   i s S i m p l e F u n c t i o n C o m p o n e n t ( t y p e )   { 
     r e t u r n   t y p e o f   t y p e   = = =   ' f u n c t i o n '   & &   ! s h o u l d C o n s t r u c t $ 1 ( t y p e )   & &   t y p e . d e f a u l t P r o p s   = = =   u n d e f i n e d ; 
 } 
 f u n c t i o n   r e s o l v e L a z y C o m p o n e n t T a g ( C o m p o n e n t )   { 
     i f   ( t y p e o f   C o m p o n e n t   = = =   ' f u n c t i o n ' )   { 
         r e t u r n   s h o u l d C o n s t r u c t $ 1 ( C o m p o n e n t )   ?   C l a s s C o m p o n e n t   :   F u n c t i o n C o m p o n e n t ; 
     }   e l s e   i f   ( C o m p o n e n t   ! = =   u n d e f i n e d   & &   C o m p o n e n t   ! = =   n u l l )   { 
         v a r   $ $ t y p e o f   =   C o m p o n e n t . $ $ t y p e o f ; 
 
         i f   ( $ $ t y p e o f   = = =   R E A C T _ F O R W A R D _ R E F _ T Y P E )   { 
             r e t u r n   F o r w a r d R e f ; 
         } 
 
         i f   ( $ $ t y p e o f   = = =   R E A C T _ M E M O _ T Y P E )   { 
             r e t u r n   M e m o C o m p o n e n t ; 
         } 
     } 
 
     r e t u r n   I n d e t e r m i n a t e C o m p o n e n t ; 
 }   / /   T h i s   i s   u s e d   t o   c r e a t e   a n   a l t e r n a t e   f i b e r   t o   d o   w o r k   o n . 
 
 f u n c t i o n   c r e a t e W o r k I n P r o g r e s s ( c u r r e n t ,   p e n d i n g P r o p s )   { 
     v a r   w o r k I n P r o g r e s s   =   c u r r e n t . a l t e r n a t e ; 
 
     i f   ( w o r k I n P r o g r e s s   = = =   n u l l )   { 
         / /   W e   u s e   a   d o u b l e   b u f f e r i n g   p o o l i n g   t e c h n i q u e   b e c a u s e   w e   k n o w   t h a t   w e ' l l 
         / /   o n l y   e v e r   n e e d   a t   m o s t   t w o   v e r s i o n s   o f   a   t r e e .   W e   p o o l   t h e   " o t h e r "   u n u s e d 
         / /   n o d e   t h a t   w e ' r e   f r e e   t o   r e u s e .   T h i s   i s   l a z i l y   c r e a t e d   t o   a v o i d   a l l o c a t i n g 
         / /   e x t r a   o b j e c t s   f o r   t h i n g s   t h a t   a r e   n e v e r   u p d a t e d .   I t   a l s o   a l l o w   u s   t o 
         / /   r e c l a i m   t h e   e x t r a   m e m o r y   i f   n e e d e d . 
         w o r k I n P r o g r e s s   =   c r e a t e F i b e r ( c u r r e n t . t a g ,   p e n d i n g P r o p s ,   c u r r e n t . k e y ,   c u r r e n t . m o d e ) ; 
         w o r k I n P r o g r e s s . e l e m e n t T y p e   =   c u r r e n t . e l e m e n t T y p e ; 
         w o r k I n P r o g r e s s . t y p e   =   c u r r e n t . t y p e ; 
         w o r k I n P r o g r e s s . s t a t e N o d e   =   c u r r e n t . s t a t e N o d e ; 
 
         { 
             / /   D E V - o n l y   f i e l d s 
             w o r k I n P r o g r e s s . _ d e b u g S o u r c e   =   c u r r e n t . _ d e b u g S o u r c e ; 
             w o r k I n P r o g r e s s . _ d e b u g O w n e r   =   c u r r e n t . _ d e b u g O w n e r ; 
             w o r k I n P r o g r e s s . _ d e b u g H o o k T y p e s   =   c u r r e n t . _ d e b u g H o o k T y p e s ; 
         } 
 
         w o r k I n P r o g r e s s . a l t e r n a t e   =   c u r r e n t ; 
         c u r r e n t . a l t e r n a t e   =   w o r k I n P r o g r e s s ; 
     }   e l s e   { 
         w o r k I n P r o g r e s s . p e n d i n g P r o p s   =   p e n d i n g P r o p s ;   / /   N e e d e d   b e c a u s e   B l o c k s   s t o r e   d a t a   o n   t y p e . 
 
         w o r k I n P r o g r e s s . t y p e   =   c u r r e n t . t y p e ;   / /   W e   a l r e a d y   h a v e   a n   a l t e r n a t e . 
         / /   R e s e t   t h e   e f f e c t   t a g . 
 
         w o r k I n P r o g r e s s . f l a g s   =   N o F l a g s ;   / /   T h e   e f f e c t s   a r e   n o   l o n g e r   v a l i d . 
 
         w o r k I n P r o g r e s s . s u b t r e e F l a g s   =   N o F l a g s ; 
         w o r k I n P r o g r e s s . d e l e t i o n s   =   n u l l ; 
 
         { 
             / /   W e   i n t e n t i o n a l l y   r e s e t ,   r a t h e r   t h a n   c o p y ,   a c t u a l D u r a t i o n   &   a c t u a l S t a r t T i m e . 
             / /   T h i s   p r e v e n t s   t i m e   f r o m   e n d l e s s l y   a c c u m u l a t i n g   i n   n e w   c o m m i t s . 
             / /   T h i s   h a s   t h e   d o w n s i d e   o f   r e s e t t i n g   v a l u e s   f o r   d i f f e r e n t   p r i o r i t y   r e n d e r s , 
             / /   B u t   w o r k s   f o r   y i e l d i n g   ( t h e   c o m m o n   c a s e )   a n d   s h o u l d   s u p p o r t   r e s u m i n g . 
             w o r k I n P r o g r e s s . a c t u a l D u r a t i o n   =   0 ; 
             w o r k I n P r o g r e s s . a c t u a l S t a r t T i m e   =   - 1 ; 
         } 
     }   / /   R e s e t   a l l   e f f e c t s   e x c e p t   s t a t i c   o n e s . 
     / /   S t a t i c   e f f e c t s   a r e   n o t   s p e c i f i c   t o   a   r e n d e r . 
 
 
     w o r k I n P r o g r e s s . f l a g s   =   c u r r e n t . f l a g s   &   S t a t i c M a s k ; 
     w o r k I n P r o g r e s s . c h i l d L a n e s   =   c u r r e n t . c h i l d L a n e s ; 
     w o r k I n P r o g r e s s . l a n e s   =   c u r r e n t . l a n e s ; 
     w o r k I n P r o g r e s s . c h i l d   =   c u r r e n t . c h i l d ; 
     w o r k I n P r o g r e s s . m e m o i z e d P r o p s   =   c u r r e n t . m e m o i z e d P r o p s ; 
     w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   c u r r e n t . m e m o i z e d S t a t e ; 
     w o r k I n P r o g r e s s . u p d a t e Q u e u e   =   c u r r e n t . u p d a t e Q u e u e ;   / /   C l o n e   t h e   d e p e n d e n c i e s   o b j e c t .   T h i s   i s   m u t a t e d   d u r i n g   t h e   r e n d e r   p h a s e ,   s o 
     / /   i t   c a n n o t   b e   s h a r e d   w i t h   t h e   c u r r e n t   f i b e r . 
 
     v a r   c u r r e n t D e p e n d e n c i e s   =   c u r r e n t . d e p e n d e n c i e s ; 
     w o r k I n P r o g r e s s . d e p e n d e n c i e s   =   c u r r e n t D e p e n d e n c i e s   = = =   n u l l   ?   n u l l   :   { 
         l a n e s :   c u r r e n t D e p e n d e n c i e s . l a n e s , 
         f i r s t C o n t e x t :   c u r r e n t D e p e n d e n c i e s . f i r s t C o n t e x t 
     } ;   / /   T h e s e   w i l l   b e   o v e r r i d d e n   d u r i n g   t h e   p a r e n t ' s   r e c o n c i l i a t i o n 
 
     w o r k I n P r o g r e s s . s i b l i n g   =   c u r r e n t . s i b l i n g ; 
     w o r k I n P r o g r e s s . i n d e x   =   c u r r e n t . i n d e x ; 
     w o r k I n P r o g r e s s . r e f   =   c u r r e n t . r e f ; 
 
     { 
         w o r k I n P r o g r e s s . s e l f B a s e D u r a t i o n   =   c u r r e n t . s e l f B a s e D u r a t i o n ; 
         w o r k I n P r o g r e s s . t r e e B a s e D u r a t i o n   =   c u r r e n t . t r e e B a s e D u r a t i o n ; 
     } 
 
     { 
         w o r k I n P r o g r e s s . _ d e b u g N e e d s R e m o u n t   =   c u r r e n t . _ d e b u g N e e d s R e m o u n t ; 
 
         s w i t c h   ( w o r k I n P r o g r e s s . t a g )   { 
             c a s e   I n d e t e r m i n a t e C o m p o n e n t : 
             c a s e   F u n c t i o n C o m p o n e n t : 
             c a s e   S i m p l e M e m o C o m p o n e n t : 
                 w o r k I n P r o g r e s s . t y p e   =   r e s o l v e F u n c t i o n F o r H o t R e l o a d i n g ( c u r r e n t . t y p e ) ; 
                 b r e a k ; 
 
             c a s e   C l a s s C o m p o n e n t : 
                 w o r k I n P r o g r e s s . t y p e   =   r e s o l v e C l a s s F o r H o t R e l o a d i n g ( c u r r e n t . t y p e ) ; 
                 b r e a k ; 
 
             c a s e   F o r w a r d R e f : 
                 w o r k I n P r o g r e s s . t y p e   =   r e s o l v e F o r w a r d R e f F o r H o t R e l o a d i n g ( c u r r e n t . t y p e ) ; 
                 b r e a k ; 
         } 
     } 
 
     r e t u r n   w o r k I n P r o g r e s s ; 
 }   / /   U s e d   t o   r e u s e   a   F i b e r   f o r   a   s e c o n d   p a s s . 
 
 f u n c t i o n   r e s e t W o r k I n P r o g r e s s ( w o r k I n P r o g r e s s ,   r e n d e r L a n e s )   { 
     / /   T h i s   r e s e t s   t h e   F i b e r   t o   w h a t   c r e a t e F i b e r   o r   c r e a t e W o r k I n P r o g r e s s   w o u l d 
     / /   h a v e   s e t   t h e   v a l u e s   t o   b e f o r e   d u r i n g   t h e   f i r s t   p a s s .   I d e a l l y   t h i s   w o u l d n ' t 
     / /   b e   n e c e s s a r y   b u t   u n f o r t u n a t e l y   m a n y   c o d e   p a t h s   r e a d s   f r o m   t h e   w o r k I n P r o g r e s s 
     / /   w h e n   t h e y   s h o u l d   b e   r e a d i n g   f r o m   c u r r e n t   a n d   w r i t i n g   t o   w o r k I n P r o g r e s s . 
     / /   W e   a s s u m e   p e n d i n g P r o p s ,   i n d e x ,   k e y ,   r e f ,   r e t u r n   a r e   s t i l l   u n t o u c h e d   t o 
     / /   a v o i d   d o i n g   a n o t h e r   r e c o n c i l i a t i o n . 
     / /   R e s e t   t h e   e f f e c t   f l a g s   b u t   k e e p   a n y   P l a c e m e n t   t a g s ,   s i n c e   t h a t ' s   s o m e t h i n g 
     / /   t h a t   c h i l d   f i b e r   i s   s e t t i n g ,   n o t   t h e   r e c o n c i l i a t i o n . 
     w o r k I n P r o g r e s s . f l a g s   & =   S t a t i c M a s k   |   P l a c e m e n t ;   / /   T h e   e f f e c t s   a r e   n o   l o n g e r   v a l i d . 
 
     v a r   c u r r e n t   =   w o r k I n P r o g r e s s . a l t e r n a t e ; 
 
     i f   ( c u r r e n t   = = =   n u l l )   { 
         / /   R e s e t   t o   c r e a t e F i b e r ' s   i n i t i a l   v a l u e s . 
         w o r k I n P r o g r e s s . c h i l d L a n e s   =   N o L a n e s ; 
         w o r k I n P r o g r e s s . l a n e s   =   r e n d e r L a n e s ; 
         w o r k I n P r o g r e s s . c h i l d   =   n u l l ; 
         w o r k I n P r o g r e s s . s u b t r e e F l a g s   =   N o F l a g s ; 
         w o r k I n P r o g r e s s . m e m o i z e d P r o p s   =   n u l l ; 
         w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   n u l l ; 
         w o r k I n P r o g r e s s . u p d a t e Q u e u e   =   n u l l ; 
         w o r k I n P r o g r e s s . d e p e n d e n c i e s   =   n u l l ; 
         w o r k I n P r o g r e s s . s t a t e N o d e   =   n u l l ; 
 
         { 
             / /   N o t e :   W e   d o n ' t   r e s e t   t h e   a c t u a l T i m e   c o u n t s .   I t ' s   u s e f u l   t o   a c c u m u l a t e 
             / /   a c t u a l   t i m e   a c r o s s   m u l t i p l e   r e n d e r   p a s s e s . 
             w o r k I n P r o g r e s s . s e l f B a s e D u r a t i o n   =   0 ; 
             w o r k I n P r o g r e s s . t r e e B a s e D u r a t i o n   =   0 ; 
         } 
     }   e l s e   { 
         / /   R e s e t   t o   t h e   c l o n e d   v a l u e s   t h a t   c r e a t e W o r k I n P r o g r e s s   w o u l d ' v e . 
         w o r k I n P r o g r e s s . c h i l d L a n e s   =   c u r r e n t . c h i l d L a n e s ; 
         w o r k I n P r o g r e s s . l a n e s   =   c u r r e n t . l a n e s ; 
         w o r k I n P r o g r e s s . c h i l d   =   c u r r e n t . c h i l d ; 
         w o r k I n P r o g r e s s . s u b t r e e F l a g s   =   N o F l a g s ; 
         w o r k I n P r o g r e s s . d e l e t i o n s   =   n u l l ; 
         w o r k I n P r o g r e s s . m e m o i z e d P r o p s   =   c u r r e n t . m e m o i z e d P r o p s ; 
         w o r k I n P r o g r e s s . m e m o i z e d S t a t e   =   c u r r e n t . m e m o i z e d S t a t e ; 
         w o r k I n P r o g r e s s . u p d a t e Q u e u e   =   c u r r e n t . u p d a t e Q u e u e ;   / /   N e e d e d   b e c a u s e   B l o c k s   s t o r e   d a t a   o n   t y p e . 
 
         w o r k I n P r o g r e s s . t y p e   =   c u r r e n t . t y p e ;   / /   C l o n e   t h e   d e p e n d e n c i e s   o b j e c t .   T h i s   i s   m u t a t e d   d u r i n g   t h e   r e n d e r   p h a s e ,   s o 
         / /   i t   c a n n o t   b e   s h a r e d   w i t h   t h e   c u r r e n t   f i b e r . 
 
         v a r   c u r r e n t D e p e n d e n c i e s   =   c u r r e n t . d e p e n d e n c i e s ; 
         w o r k I n P r o g r e s s . d e p e n d e n c i e s   =   c u r r e n t D e p e n d e n c i e s   = = =   n u l l   ?   n u l l   :   { 
             l a n e s :   c u r r e n t D e p e n d e n c i e s . l a n e s , 
             f i r s t C o n t e x t :   c u r r e n t D e p e n d e n c i e s . f i r s t C o n t e x t 
         } ; 
 
         { 
             / /   N o t e :   W e   d o n ' t   r e s e t   t h e   a c t u a l T i m e   c o u n t s .   I t ' s   u s e f u l   t o   a c c u m u l a t e 
             / /   a c t u a l   t i m e   a c r o s s   m u l t i p l e   r e n d e r   p a s s e s . 
             w o r k I n P r o g r e s s . s e l f B a s e D u r a t i o n   =   c u r r e n t . s e l f B a s e D u r a t i o n ; 
             w o r k I n P r o g r e s s . t r e e B a s e D u r a t i o n   =   c u r r e n t . t r e e B a s e D u r a t i o n ; 
         } 
     } 
 
     r e t u r n   w o r k I n P r o g r e s s ; 
 } 
 f u n c t i o n   c r e a t e H o s t R o o t F i b e r ( t a g ,   i s S t r i c t M o d e ,   c o n c u r r e n t U p d a t e s B y D e f a u l t O v e r r i d e )   { 
     v a r   m o d e ; 
 
     i f   ( t a g   = = =   C o n c u r r e n t R o o t )   { 
         m o d e   =   C o n c u r r e n t M o d e ; 
 
         i f   ( i s S t r i c t M o d e   = = =   t r u e )   { 
             m o d e   | =   S t r i c t L e g a c y M o d e ; 
 
             { 
                 m o d e   | =   S t r i c t E f f e c t s M o d e ; 
             } 
         } 
     }   e l s e   { 
         m o d e   =   N o M o d e ; 
     } 
 
     i f   (   i s D e v T o o l s P r e s e n t )   { 
         / /   A l w a y s   c o l l e c t   p r o f i l e   t i m i n g s   w h e n   D e v T o o l s   a r e   p r e s e n t . 
         / /   T h i s   e n a b l e s   D e v T o o l s   t o   s t a r t   c a p t u r i n g   t i m i n g   a t   a n y   p o i n t  
         / /   W i t h o u t   s o m e   n o d e s   i n   t h e   t r e e   h a v i n g   e m p t y   b a s e   t i m e s . 
         m o d e   | =   P r o f i l e M o d e ; 
     } 
 
     r e t u r n   c r e a t e F i b e r ( H o s t R o o t ,   n u l l ,   n u l l ,   m o d e ) ; 
 } 
 f u n c t i o n   c r e a t e F i b e r F r o m T y p e A n d P r o p s ( t y p e ,   / /   R e a c t $ E l e m e n t T y p e 
 k e y ,   p e n d i n g P r o p s ,   o w n e r ,   m o d e ,   l a n e s )   { 
     v a r   f i b e r T a g   =   I n d e t e r m i n a t e C o m p o n e n t ;   / /   T h e   r e s o l v e d   t y p e   i s   s e t   i f   w e   k n o w   w h a t   t h e   f i n a l   t y p e   w i l l   b e .   I . e .   i t ' s   n o t   l a z y . 
 
     v a r   r e s o l v e d T y p e   =   t y p e ; 
 
     i f   ( t y p e o f   t y p e   = = =   ' f u n c t i o n ' )   { 
         i f   ( s h o u l d C o n s t r u c t $ 1 ( t y p e ) )   { 
             f i b e r T a g   =   C l a s s C o m p o n e n t ; 
 
             { 
                 r e s o l v e d T y p e   =   r e s o l v e C l a s s F o r H o t R e l o a d i n g ( r e s o l v e d T y p e ) ; 
             } 
         }   e l s e   { 
             { 
                 r e s o l v e d T y p e   =   r e s o l v e F u n c t i o n F o r H o t R e l o a d i n g ( r e s o l v e d T y p e ) ; 
             } 
         } 
     }   e l s e   i f   ( t y p e o f   t y p e   = = =   ' s t r i n g ' )   { 
         f i b e r T a g   =   H o s t C o m p o n e n t ; 
     }   e l s e   { 
         g e t T a g :   s w i t c h   ( t y p e )   { 
             c a s e   R E A C T _ F R A G M E N T _ T Y P E : 
                 r e t u r n   c r e a t e F i b e r F r o m F r a g m e n t ( p e n d i n g P r o p s . c h i l d r e n ,   m o d e ,   l a n e s ,   k e y ) ; 
 
             c a s e   R E A C T _ S T R I C T _ M O D E _ T Y P E : 
                 f i b e r T a g   =   M o d e ; 
                 m o d e   | =   S t r i c t L e g a c y M o d e ; 
 
                 i f   (   ( m o d e   &   C o n c u r r e n t M o d e )   ! = =   N o M o d e )   { 
                     / /   S t r i c t   e f f e c t s   s h o u l d   n e v e r   r u n   o n   l e g a c y   r o o t s 
                     m o d e   | =   S t r i c t E f f e c t s M o d e ; 
                 } 
 
                 b r e a k ; 
 
             c a s e   R E A C T _ P R O F I L E R _ T Y P E : 
                 r e t u r n   c r e a t e F i b e r F r o m P r o f i l e r ( p e n d i n g P r o p s ,   m o d e ,   l a n e s ,   k e y ) ; 
 
             c a s e   R E A C T _ S U S P E N S E _ T Y P E : 
                 r e t u r n   c r e a t e F i b e r F r o m S u s p e n s e ( p e n d i n g P r o p s ,   m o d e ,   l a n e s ,   k e y ) ; 
 
             c a s e   R E A C T _ S U S P E N S E _ L I S T _ T Y P E : 
                 r e t u r n   c r e a t e F i b e r F r o m S u s p e n s e L i s t ( p e n d i n g P r o p s ,   m o d e ,   l a n e s ,   k e y ) ; 
 
             c a s e   R E A C T _ O F F S C R E E N _ T Y P E : 
                 r e t u r n   c r e a t e F i b e r F r o m O f f s c r e e n ( p e n d i n g P r o p s ,   m o d e ,   l a n e s ,   k e y ) ; 
 
             c a s e   R E A C T _ L E G A C Y _ H I D D E N _ T Y P E : 
 
             / /   e s l i n t - d i s a b l e - n e x t - l i n e   n o - f a l l t h r o u g h 
 
             c a s e   R E A C T _ S C O P E _ T Y P E : 
 
             / /   e s l i n t - d i s a b l e - n e x t - l i n e   n o - f a l l t h r o u g h 
 
             c a s e   R E A C T _ C A C H E _ T Y P E : 
 
             / /   e s l i n t - d i s a b l e - n e x t - l i n e   n o - f a l l t h r o u g h 
 
             c a s e   R E A C T _ T R A C I N G _ M A R K E R _ T Y P E : 
 
             / /   e s l i n t - d i s a b l e - n e x t - l i n e   n o - f a l l t h r o u g h 
 
             c a s e   R E A C T _ D E B U G _ T R A C I N G _ M O D E _ T Y P E : 
 
             / /   e s l i n t - d i s a b l e - n e x t - l i n e   n o - f a l l t h r o u g h 
 
             d e f a u l t : 
                 { 
                     i f   ( t y p e o f   t y p e   = = =   ' o b j e c t '   & &   t y p e   ! = =   n u l l )   { 
                         s w i t c h   ( t y p e . $ $ t y p e o f )   { 
                             c a s e   R E A C T _ P R O V I D E R _ T Y P E : 
                                 f i b e r T a g   =   C o n t e x t P r o v i d e r ; 
                                 b r e a k   g e t T a g ; 
 
                             c a s e   R E A C T _ C O N T E X T _ T Y P E : 
                                 / /   T h i s   i s   a   c o n s u m e r 
                                 f i b e r T a g   =   C o n t e x t C o n s u m e r ; 
                                 b r e a k   g e t T a g ; 
 
                             c a s e   R E A C T _ F O R W A R D _ R E F _ T Y P E : 
                                 f i b e r T a g   =   F o r w a r d R e f ; 
 
                                 { 
                                     r e s o l v e d T y p e   =   r e s o l v e F o r w a r d R e f F o r H o t R e l o a d i n g ( r e s o l v e d T y p e ) ; 
                                 } 
 
                                 b r e a k   g e t T a g ; 
 
                             c a s e   R E A C T _ M E M O _ T Y P E : 
                                 f i b e r T a g   =   M e m o C o m p o n e n t ; 
                                 b r e a k   g e t T a g ; 
 
                             c a s e   R E A C T _ L A Z Y _ T Y P E : 
                                 f i b e r T a g   =   L a z y C o m p o n e n t ; 
                                 r e s o l v e d T y p e   =   n u l l ; 
                                 b r e a k   g e t T a g ; 
                         } 
                     } 
 
                     v a r   i n f o   =   ' ' ; 
 
                     { 
                         i f   ( t y p e   = = =   u n d e f i n e d   | |   t y p e o f   t y p e   = = =   ' o b j e c t '   & &   t y p e   ! = =   n u l l   & &   O b j e c t . k e y s ( t y p e ) . l e n g t h   = = =   0 )   { 
                             i n f o   + =   '   Y o u   l i k e l y   f o r g o t   t o   e x p o r t   y o u r   c o m p o n e n t   f r o m   t h e   f i l e   '   +   " i t ' s   d e f i n e d   i n ,   o r   y o u   m i g h t   h a v e   m i x e d   u p   d e f a u l t   a n d   "   +   ' n a m e d   i m p o r t s . ' ; 
                         } 
 
                         v a r   o w n e r N a m e   =   o w n e r   ?   g e t C o m p o n e n t N a m e F r o m F i b e r ( o w n e r )   :   n u l l ; 
 
                         i f   ( o w n e r N a m e )   { 
                             i n f o   + =   ' \ n \ n C h e c k   t h e   r e n d e r   m e t h o d   o f   ` '   +   o w n e r N a m e   +   ' ` . ' ; 
                         } 
                     } 
 
                     t h r o w   n e w   E r r o r ( ' E l e m e n t   t y p e   i s   i n v a l i d :   e x p e c t e d   a   s t r i n g   ( f o r   b u i l t - i n   '   +   ' c o m p o n e n t s )   o r   a   c l a s s / f u n c t i o n   ( f o r   c o m p o s i t e   c o m p o n e n t s )   '   +   ( " b u t   g o t :   "   +   ( t y p e   = =   n u l l   ?   t y p e   :   t y p e o f   t y p e )   +   " . "   +   i n f o ) ) ; 
                 } 
         } 
     } 
 
     v a r   f i b e r   =   c r e a t e F i b e r ( f i b e r T a g ,   p e n d i n g P r o p s ,   k e y ,   m o d e ) ; 
     f i b e r . e l e m e n t T y p e   =   t y p e ; 
     f i b e r . t y p e   =   r e s o l v e d T y p e ; 
     f i b e r . l a n e s   =   l a n e s ; 
 
     { 
         f i b e r . _ d e b u g O w n e r   =   o w n e r ; 
     } 
 
     r e t u r n   f i b e r ; 
 } 
 f u n c t i o n   c r e a t e F i b e r F r o m E l e m e n t ( e l e m e n t ,   m o d e ,   l a n e s )   { 
     v a r   o w n e r   =   n u l l ; 
 
     { 
         o w n e r   =   e l e m e n t . _ o w n e r ; 
     } 
 
     v a r   t y p e   =   e l e m e n t . t y p e ; 
     v a r   k e y   =   e l e m e n t . k e y ; 
     v a r   p e n d i n g P r o p s   =   e l e m e n t . p r o p s ; 
     v a r   f i b e r   =   c r e a t e F i b e r F r o m T y p e A n d P r o p s ( t y p e ,   k e y ,   p e n d i n g P r o p s ,   o w n e r ,   m o d e ,   l a n e s ) ; 
 
     { 
         f i b e r . _ d e b u g S o u r c e   =   e l e m e n t . _ s o u r c e ; 
         f i b e r . _ d e b u g O w n e r   =   e l e m e n t . _ o w n e r ; 
     } 
 
     r e t u r n   f i b e r ; 
 } 
 f u n c t i o n   c r e a t e F i b e r F r o m F r a g m e n t ( e l e m e n t s ,   m o d e ,   l a n e s ,   k e y )   { 
     v a r   f i b e r   =   c r e a t e F i b e r ( F r a g m e n t ,   e l e m e n t s ,   k e y ,   m o d e ) ; 
     f i b e r . l a n e s   =   l a n e s ; 
     r e t u r n   f i b e r ; 
 } 
 
 f u n c t i o n   c r e a t e F i b e r F r o m P r o f i l e r ( p e n d i n g P r o p s ,   m o d e ,   l a n e s ,   k e y )   { 
     { 
         i f   ( t y p e o f   p e n d i n g P r o p s . i d   ! = =   ' s t r i n g ' )   { 
             e r r o r ( ' P r o f i l e r   m u s t   s p e c i f y   a n   " i d "   o f   t y p e   ` s t r i n g `   a s   a   p r o p .   R e c e i v e d   t h e   t y p e   ` % s `   i n s t e a d . ' ,   t y p e o f   p e n d i n g P r o p s . i d ) ; 
         } 
     } 
 
     v a r   f i b e r   =   c r e a t e F i b e r ( P r o f i l e r ,   p e n d i n g P r o p s ,   k e y ,   m o d e   |   P r o f i l e M o d e ) ; 
     f i b e r . e l e m e n t T y p e   =   R E A C T _ P R O F I L E R _ T Y P E ; 
     f i b e r . l a n e s   =   l a n e s ; 
 
     { 
         f i b e r . s t a t e N o d e   =   { 
             e f f e c t D u r a t i o n :   0 , 
             p a s s i v e E f f e c t D u r a t i o n :   0 
         } ; 
     } 
 
     r e t u r n   f i b e r ; 
 } 
 
 f u n c t i o n   c r e a t e F i b e r F r o m S u s p e n s e ( p e n d i n g P r o p s ,   m o d e ,   l a n e s ,   k e y )   { 
     v a r   f i b e r   =   c r e a t e F i b e r ( S u s p e n s e C o m p o n e n t ,   p e n d i n g P r o p s ,   k e y ,   m o d e ) ; 
     f i b e r . e l e m e n t T y p e   =   R E A C T _ S U S P E N S E _ T Y P E ; 
     f i b e r . l a n e s   =   l a n e s ; 
     r e t u r n   f i b e r ; 
 } 
 f u n c t i o n   c r e a t e F i b e r F r o m S u s p e n s e L i s t ( p e n d i n g P r o p s ,   m o d e ,   l a n e s ,   k e y )   { 
     v a r   f i b e r   =   c r e a t e F i b e r ( S u s p e n s e L i s t C o m p o n e n t ,   p e n d i n g P r o p s ,   k e y ,   m o d e ) ; 
     f i b e r . e l e m e n t T y p e   =   R E A C T _ S U S P E N S E _ L I S T _ T Y P E ; 
     f i b e r . l a n e s   =   l a n e s ; 
     r e t u r n   f i b e r ; 
 } 
 f u n c t i o n   c r e a t e F i b e r F r o m O f f s c r e e n ( p e n d i n g P r o p s ,   m o d e ,   l a n e s ,   k e y )   { 
     v a r   f i b e r   =   c r e a t e F i b e r ( O f f s c r e e n C o m p o n e n t ,   p e n d i n g P r o p s ,   k e y ,   m o d e ) ; 
     f i b e r . e l e m e n t T y p e   =   R E A C T _ O F F S C R E E N _ T Y P E ; 
     f i b e r . l a n e s   =   l a n e s ; 
     v a r   p r i m a r y C h i l d I n s t a n c e   =   { } ; 
     f i b e r . s t a t e N o d e   =   p r i m a r y C h i l d I n s t a n c e ; 
     r e t u r n   f i b e r ; 
 } 
 f u n c t i o n   c r e a t e F i b e r F r o m T e x t ( c o n t e n t ,   m o d e ,   l a n e s )   { 
     v a r   f i b e r   =   c r e a t e F i b e r ( H o s t T e x t ,   c o n t e n t ,   n u l l ,   m o d e ) ; 
     f i b e r . l a n e s   =   l a n e s ; 
     r e t u r n   f i b e r ; 
 } 
 f u n c t i o n   c r e a t e F i b e r F r o m H o s t I n s t a n c e F o r D e l e t i o n ( )   { 
     v a r   f i b e r   =   c r e a t e F i b e r ( H o s t C o m p o n e n t ,   n u l l ,   n u l l ,   N o M o d e ) ; 
     f i b e r . e l e m e n t T y p e   =   ' D E L E T E D ' ; 
     r e t u r n   f i b e r ; 
 } 
 f u n c t i o n   c r e a t e F i b e r F r o m D e h y d r a t e d F r a g m e n t ( d e h y d r a t e d N o d e )   { 
     v a r   f i b e r   =   c r e a t e F i b e r ( D e h y d r a t e d F r a g m e n t ,   n u l l ,   n u l l ,   N o M o d e ) ; 
     f i b e r . s t a t e N o d e   =   d e h y d r a t e d N o d e ; 
     r e t u r n   f i b e r ; 
 } 
 f u n c t i o n   c r e a t e F i b e r F r o m P o r t a l ( p o r t a l ,   m o d e ,   l a n e s )   { 
     v a r   p e n d i n g P r o p s   =   p o r t a l . c h i l d r e n   ! = =   n u l l   ?   p o r t a l . c h i l d r e n   :   [ ] ; 
     v a r   f i b e r   =   c r e a t e F i b e r ( H o s t P o r t a l ,   p e n d i n g P r o p s ,   p o r t a l . k e y ,   m o d e ) ; 
     f i b e r . l a n e s   =   l a n e s ; 
     f i b e r . s t a t e N o d e   =   { 
         c o n t a i n e r I n f o :   p o r t a l . c o n t a i n e r I n f o , 
         p e n d i n g C h i l d r e n :   n u l l , 
         / /   U s e d   b y   p e r s i s t e n t   u p d a t e s 
         i m p l e m e n t a t i o n :   p o r t a l . i m p l e m e n t a t i o n 
     } ; 
     r e t u r n   f i b e r ; 
 }   / /   U s e d   f o r   s t a s h i n g   W I P   p r o p e r t i e s   t o   r e p l a y   f a i l e d   w o r k   i n   D E V . 
 
 f u n c t i o n   a s s i g n F i b e r P r o p e r t i e s I n D E V ( t a r g e t ,   s o u r c e )   { 
     i f   ( t a r g e t   = = =   n u l l )   { 
         / /   T h i s   F i b e r ' s   i n i t i a l   p r o p e r t i e s   w i l l   a l w a y s   b e   o v e r w r i t t e n . 
         / /   W e   o n l y   u s e   a   F i b e r   t o   e n s u r e   t h e   s a m e   h i d d e n   c l a s s   s o   D E V   i s n ' t   s l o w . 
         t a r g e t   =   c r e a t e F i b e r ( I n d e t e r m i n a t e C o m p o n e n t ,   n u l l ,   n u l l ,   N o M o d e ) ; 
     }   / /   T h i s   i s   i n t e n t i o n a l l y   w r i t t e n   a s   a   l i s t   o f   a l l   p r o p e r t i e s . 
     / /   W e   t r i e d   t o   u s e   O b j e c t . a s s i g n ( )   i n s t e a d   b u t   t h i s   i s   c a l l e d   i n 
     / /   t h e   h o t t e s t   p a t h ,   a n d   O b j e c t . a s s i g n ( )   w a s   t o o   s l o w : 
     / /   h t t p s : / / g i t h u b . c o m / f a c e b o o k / r e a c t / i s s u e s / 1 2 5 0 2 
     / /   T h i s   c o d e   i s   D E V - o n l y   s o   s i z e   i s   n o t   a   c o n c e r n . 
 
 
     t a r g e t . t a g   =   s o u r c e . t a g ; 
     t a r g e t . k e y   =   s o u r c e . k e y ; 
     t a r g e t . e l e m e n t T y p e   =   s o u r c e . e l e m e n t T y p e ; 
     t a r g e t . t y p e   =   s o u r c e . t y p e ; 
     t a r g e t . s t a t e N o d e   =   s o u r c e . s t a t e N o d e ; 
     t a r g e t . r e t u r n   =   s o u r c e . r e t u r n ; 
     t a r g e t . c h i l d   =   s o u r c e . c h i l d ; 
     t a r g e t . s i b l i n g   =   s o u r c e . s i b l i n g ; 
     t a r g e t . i n d e x   =   s o u r c e . i n d e x ; 
     t a r g e t . r e f   =   s o u r c e . r e f ; 
     t a r g e t . p e n d i n g P r o p s   =   s o u r c e . p e n d i n g P r o p s ; 
     t a r g e t . m e m o i z e d P r o p s   =   s o u r c e . m e m o i z e d P r o p s ; 
     t a r g e t . u p d a t e Q u e u e   =   s o u r c e . u p d a t e Q u e u e ; 
     t a r g e t . m e m o i z e d S t a t e   =   s o u r c e . m e m o i z e d S t a t e ; 
     t a r g e t . d e p e n d e n c i e s   =   s o u r c e . d e p e n d e n c i e s ; 
     t a r g e t . m o d e   =   s o u r c e . m o d e ; 
     t a r g e t . f l a g s   =   s o u r c e . f l a g s ; 
     t a r g e t . s u b t r e e F l a g s   =   s o u r c e . s u b t r e e F l a g s ; 
     t a r g e t . d e l e t i o n s   =   s o u r c e . d e l e t i o n s ; 
     t a r g e t . l a n e s   =   s o u r c e . l a n e s ; 
     t a r g e t . c h i l d L a n e s   =   s o u r c e . c h i l d L a n e s ; 
     t a r g e t . a l t e r n a t e   =   s o u r c e . a l t e r n a t e ; 
 
     { 
         t a r g e t . a c t u a l D u r a t i o n   =   s o u r c e . a c t u a l D u r a t i o n ; 
         t a r g e t . a c t u a l S t a r t T i m e   =   s o u r c e . a c t u a l S t a r t T i m e ; 
         t a r g e t . s e l f B a s e D u r a t i o n   =   s o u r c e . s e l f B a s e D u r a t i o n ; 
         t a r g e t . t r e e B a s e D u r a t i o n   =   s o u r c e . t r e e B a s e D u r a t i o n ; 
     } 
 
     t a r g e t . _ d e b u g S o u r c e   =   s o u r c e . _ d e b u g S o u r c e ; 
     t a r g e t . _ d e b u g O w n e r   =   s o u r c e . _ d e b u g O w n e r ; 
     t a r g e t . _ d e b u g N e e d s R e m o u n t   =   s o u r c e . _ d e b u g N e e d s R e m o u n t ; 
     t a r g e t . _ d e b u g H o o k T y p e s   =   s o u r c e . _ d e b u g H o o k T y p e s ; 
     r e t u r n   t a r g e t ; 
 } 
 
 f u n c t i o n   F i b e r R o o t N o d e ( c o n t a i n e r I n f o ,   t a g ,   h y d r a t e ,   i d e n t i f i e r P r e f i x ,   o n R e c o v e r a b l e E r r o r )   { 
     t h i s . t a g   =   t a g ; 
     t h i s . c o n t a i n e r I n f o   =   c o n t a i n e r I n f o ; 
     t h i s . p e n d i n g C h i l d r e n   =   n u l l ; 
     t h i s . c u r r e n t   =   n u l l ; 
     t h i s . p i n g C a c h e   =   n u l l ; 
     t h i s . f i n i s h e d W o r k   =   n u l l ; 
     t h i s . t i m e o u t H a n d l e   =   n o T i m e o u t ; 
     t h i s . c o n t e x t   =   n u l l ; 
     t h i s . p e n d i n g C o n t e x t   =   n u l l ; 
     t h i s . c a l l b a c k N o d e   =   n u l l ; 
     t h i s . c a l l b a c k P r i o r i t y   =   N o L a n e ; 
     t h i s . e v e n t T i m e s   =   c r e a t e L a n e M a p ( N o L a n e s ) ; 
     t h i s . e x p i r a t i o n T i m e s   =   c r e a t e L a n e M a p ( N o T i m e s t a m p ) ; 
     t h i s . p e n d i n g L a n e s   =   N o L a n e s ; 
     t h i s . s u s p e n d e d L a n e s   =   N o L a n e s ; 
     t h i s . p i n g e d L a n e s   =   N o L a n e s ; 
     t h i s . e x p i r e d L a n e s   =   N o L a n e s ; 
     t h i s . m u t a b l e R e a d L a n e s   =   N o L a n e s ; 
     t h i s . f i n i s h e d L a n e s   =   N o L a n e s ; 
     t h i s . e n t a n g l e d L a n e s   =   N o L a n e s ; 
     t h i s . e n t a n g l e m e n t s   =   c r e a t e L a n e M a p ( N o L a n e s ) ; 
     t h i s . i d e n t i f i e r P r e f i x   =   i d e n t i f i e r P r e f i x ; 
     t h i s . o n R e c o v e r a b l e E r r o r   =   o n R e c o v e r a b l e E r r o r ; 
 
     { 
         t h i s . m u t a b l e S o u r c e E a g e r H y d r a t i o n D a t a   =   n u l l ; 
     } 
 
     { 
         t h i s . e f f e c t D u r a t i o n   =   0 ; 
         t h i s . p a s s i v e E f f e c t D u r a t i o n   =   0 ; 
     } 
 
     { 
         t h i s . m e m o i z e d U p d a t e r s   =   n e w   S e t ( ) ; 
         v a r   p e n d i n g U p d a t e r s L a n e M a p   =   t h i s . p e n d i n g U p d a t e r s L a n e M a p   =   [ ] ; 
 
         f o r   ( v a r   _ i   =   0 ;   _ i   <   T o t a l L a n e s ;   _ i + + )   { 
             p e n d i n g U p d a t e r s L a n e M a p . p u s h ( n e w   S e t ( ) ) ; 
         } 
     } 
 
     { 
         s w i t c h   ( t a g )   { 
             c a s e   C o n c u r r e n t R o o t : 
                 t h i s . _ d e b u g R o o t T y p e   =   h y d r a t e   ?   ' h y d r a t e R o o t ( ) '   :   ' c r e a t e R o o t ( ) ' ; 
                 b r e a k ; 
 
             c a s e   L e g a c y R o o t : 
                 t h i s . _ d e b u g R o o t T y p e   =   h y d r a t e   ?   ' h y d r a t e ( ) '   :   ' r e n d e r ( ) ' ; 
                 b r e a k ; 
         } 
     } 
 } 
 
 f u n c t i o n   c r e a t e F i b e r R o o t ( c o n t a i n e r I n f o ,   t a g ,   h y d r a t e ,   i n i t i a l C h i l d r e n ,   h y d r a t i o n C a l l b a c k s ,   i s S t r i c t M o d e ,   c o n c u r r e n t U p d a t e s B y D e f a u l t O v e r r i d e ,   / /   T O D O :   W e   h a v e   s e v e r a l   o f   t h e s e   a r g u m e n t s   t h a t   a r e   c o n c e p t u a l l y   p a r t   o f   t h e 
 / /   h o s t   c o n f i g ,   b u t   b e c a u s e   t h e y   a r e   p a s s e d   i n   a t   r u n t i m e ,   w e   h a v e   t o   t h r e a d 
 / /   t h e m   t h r o u g h   t h e   r o o t   c o n s t r u c t o r .   P e r h a p s   w e   s h o u l d   p u t   t h e m   a l l   i n t o   a 
 / /   s i n g l e   t y p e ,   l i k e   a   D y n a m i c H o s t C o n f i g   t h a t   i s   d e f i n e d   b y   t h e   r e n d e r e r . 
 i d e n t i f i e r P r e f i x ,   o n R e c o v e r a b l e E r r o r ,   t r a n s i t i o n C a l l b a c k s )   { 
     v a r   r o o t   =   n e w   F i b e r R o o t N o d e ( c o n t a i n e r I n f o ,   t a g ,   h y d r a t e ,   i d e n t i f i e r P r e f i x ,   o n R e c o v e r a b l e E r r o r ) ; 
     / /   s t a t e N o d e   i s   a n y . 
 
 
     v a r   u n i n i t i a l i z e d F i b e r   =   c r e a t e H o s t R o o t F i b e r ( t a g ,   i s S t r i c t M o d e ) ; 
     r o o t . c u r r e n t   =   u n i n i t i a l i z e d F i b e r ; 
     u n i n i t i a l i z e d F i b e r . s t a t e N o d e   =   r o o t ; 
 
     { 
         v a r   _ i n i t i a l S t a t e   =   { 
             e l e m e n t :   i n i t i a l C h i l d r e n , 
             i s D e h y d r a t e d :   h y d r a t e , 
             c a c h e :   n u l l , 
             / /   n o t   e n a b l e d   y e t 
             t r a n s i t i o n s :   n u l l , 
             p e n d i n g S u s p e n s e B o u n d a r i e s :   n u l l 
         } ; 
         u n i n i t i a l i z e d F i b e r . m e m o i z e d S t a t e   =   _ i n i t i a l S t a t e ; 
     } 
 
     i n i t i a l i z e U p d a t e Q u e u e ( u n i n i t i a l i z e d F i b e r ) ; 
     r e t u r n   r o o t ; 
 } 
 
 v a r   R e a c t V e r s i o n   =   ' 1 8 . 1 . 0 ' ; 
 
 f u n c t i o n   c r e a t e P o r t a l ( c h i l d r e n ,   c o n t a i n e r I n f o ,   / /   T O D O :   f i g u r e   o u t   t h e   A P I   f o r   c r o s s - r e n d e r e r   i m p l e m e n t a t i o n . 
 i m p l e m e n t a t i o n )   { 
     v a r   k e y   =   a r g u m e n t s . l e n g t h   >   3   & &   a r g u m e n t s [ 3 ]   ! = =   u n d e f i n e d   ?   a r g u m e n t s [ 3 ]   :   n u l l ; 
 
     { 
         c h e c k K e y S t r i n g C o e r c i o n ( k e y ) ; 
     } 
 
     r e t u r n   { 
         / /   T h i s   t a g   a l l o w   u s   t o   u n i q u e l y   i d e n t i f y   t h i s   a s   a   R e a c t   P o r t a l 
         $ $ t y p e o f :   R E A C T _ P O R T A L _ T Y P E , 
         k e y :   k e y   = =   n u l l   ?   n u l l   :   ' '   +   k e y , 
         c h i l d r e n :   c h i l d r e n , 
         c o n t a i n e r I n f o :   c o n t a i n e r I n f o , 
         i m p l e m e n t a t i o n :   i m p l e m e n t a t i o n 
     } ; 
 } 
 
 v a r   d i d W a r n A b o u t N e s t e d U p d a t e s ; 
 v a r   d i d W a r n A b o u t F i n d N o d e I n S t r i c t M o d e ; 
 
 { 
     d i d W a r n A b o u t N e s t e d U p d a t e s   =   f a l s e ; 
     d i d W a r n A b o u t F i n d N o d e I n S t r i c t M o d e   =   { } ; 
 } 
 
 f u n c t i o n   g e t C o n t e x t F o r S u b t r e e ( p a r e n t C o m p o n e n t )   { 
     i f   ( ! p a r e n t C o m p o n e n t )   { 
         r e t u r n   e m p t y C o n t e x t O b j e c t ; 
     } 
 
     v a r   f i b e r   =   g e t ( p a r e n t C o m p o n e n t ) ; 
     v a r   p a r e n t C o n t e x t   =   f i n d C u r r e n t U n m a s k e d C o n t e x t ( f i b e r ) ; 
 
     i f   ( f i b e r . t a g   = = =   C l a s s C o m p o n e n t )   { 
         v a r   C o m p o n e n t   =   f i b e r . t y p e ; 
 
         i f   ( i s C o n t e x t P r o v i d e r ( C o m p o n e n t ) )   { 
             r e t u r n   p r o c e s s C h i l d C o n t e x t ( f i b e r ,   C o m p o n e n t ,   p a r e n t C o n t e x t ) ; 
         } 
     } 
 
     r e t u r n   p a r e n t C o n t e x t ; 
 } 
 
 f u n c t i o n   f i n d H o s t I n s t a n c e W i t h W a r n i n g ( c o m p o n e n t ,   m e t h o d N a m e )   { 
     { 
         v a r   f i b e r   =   g e t ( c o m p o n e n t ) ; 
 
         i f   ( f i b e r   = = =   u n d e f i n e d )   { 
             i f   ( t y p e o f   c o m p o n e n t . r e n d e r   = = =   ' f u n c t i o n ' )   { 
                 t h r o w   n e w   E r r o r ( ' U n a b l e   t o   f i n d   n o d e   o n   a n   u n m o u n t e d   c o m p o n e n t . ' ) ; 
             }   e l s e   { 
                 v a r   k e y s   =   O b j e c t . k e y s ( c o m p o n e n t ) . j o i n ( ' , ' ) ; 
                 t h r o w   n e w   E r r o r ( " A r g u m e n t   a p p e a r s   t o   n o t   b e   a   R e a c t C o m p o n e n t .   K e y s :   "   +   k e y s ) ; 
             } 
         } 
 
         v a r   h o s t F i b e r   =   f i n d C u r r e n t H o s t F i b e r ( f i b e r ) ; 
 
         i f   ( h o s t F i b e r   = = =   n u l l )   { 
             r e t u r n   n u l l ; 
         } 
 
         i f   ( h o s t F i b e r . m o d e   &   S t r i c t L e g a c y M o d e )   { 
             v a r   c o m p o n e n t N a m e   =   g e t C o m p o n e n t N a m e F r o m F i b e r ( f i b e r )   | |   ' C o m p o n e n t ' ; 
 
             i f   ( ! d i d W a r n A b o u t F i n d N o d e I n S t r i c t M o d e [ c o m p o n e n t N a m e ] )   { 
                 d i d W a r n A b o u t F i n d N o d e I n S t r i c t M o d e [ c o m p o n e n t N a m e ]   =   t r u e ; 
                 v a r   p r e v i o u s F i b e r   =   c u r r e n t ; 
 
                 t r y   { 
                     s e t C u r r e n t F i b e r ( h o s t F i b e r ) ; 
 
                     i f   ( f i b e r . m o d e   &   S t r i c t L e g a c y M o d e )   { 
                         e r r o r ( ' % s   i s   d e p r e c a t e d   i n   S t r i c t M o d e .   '   +   ' % s   w a s   p a s s e d   a n   i n s t a n c e   o f   % s   w h i c h   i s   i n s i d e   S t r i c t M o d e .   '   +   ' I n s t e a d ,   a d d   a   r e f   d i r e c t l y   t o   t h e   e l e m e n t   y o u   w a n t   t o   r e f e r e n c e .   '   +   ' L e a r n   m o r e   a b o u t   u s i n g   r e f s   s a f e l y   h e r e :   '   +   ' h t t p s : / / r e a c t j s . o r g / l i n k / s t r i c t - m o d e - f i n d - n o d e ' ,   m e t h o d N a m e ,   m e t h o d N a m e ,   c o m p o n e n t N a m e ) ; 
                     }   e l s e   { 
                         e r r o r ( ' % s   i s   d e p r e c a t e d   i n   S t r i c t M o d e .   '   +   ' % s   w a s   p a s s e d   a n   i n s t a n c e   o f   % s   w h i c h   r e n d e r s   S t r i c t M o d e   c h i l d r e n .   '   +   ' I n s t e a d ,   a d d   a   r e f   d i r e c t l y   t o   t h e   e l e m e n t   y o u   w a n t   t o   r e f e r e n c e .   '   +   ' L e a r n   m o r e   a b o u t   u s i n g   r e f s   s a f e l y   h e r e :   '   +   ' h t t p s : / / r e a c t j s . o r g / l i n k / s t r i c t - m o d e - f i n d - n o d e ' ,   m e t h o d N a m e ,   m e t h o d N a m e ,   c o m p o n e n t N a m e ) ; 
                     } 
                 }   f i n a l l y   { 
                     / /   I d e a l l y   t h i s   s h o u l d   r e s e t   t o   p r e v i o u s   b u t   t h i s   s h o u l d n ' t   b e   c a l l e d   i n 
                     / /   r e n d e r   a n d   t h e r e ' s   a n o t h e r   w a r n i n g   f o r   t h a t   a n y w a y . 
                     i f   ( p r e v i o u s F i b e r )   { 
                         s e t C u r r e n t F i b e r ( p r e v i o u s F i b e r ) ; 
                     }   e l s e   { 
                         r e s e t C u r r e n t F i b e r ( ) ; 
                     } 
                 } 
             } 
         } 
 
         r e t u r n   h o s t F i b e r . s t a t e N o d e ; 
     } 
 } 
 
 f u n c t i o n   c r e a t e C o n t a i n e r ( c o n t a i n e r I n f o ,   t a g ,   h y d r a t i o n C a l l b a c k s ,   i s S t r i c t M o d e ,   c o n c u r r e n t U p d a t e s B y D e f a u l t O v e r r i d e ,   i d e n t i f i e r P r e f i x ,   o n R e c o v e r a b l e E r r o r ,   t r a n s i t i o n C a l l b a c k s )   { 
     v a r   h y d r a t e   =   f a l s e ; 
     v a r   i n i t i a l C h i l d r e n   =   n u l l ; 
     r e t u r n   c r e a t e F i b e r R o o t ( c o n t a i n e r I n f o ,   t a g ,   h y d r a t e ,   i n i t i a l C h i l d r e n ,   h y d r a t i o n C a l l b a c k s ,   i s S t r i c t M o d e ,   c o n c u r r e n t U p d a t e s B y D e f a u l t O v e r r i d e ,   i d e n t i f i e r P r e f i x ,   o n R e c o v e r a b l e E r r o r ) ; 
 } 
 f u n c t i o n   c r e a t e H y d r a t i o n C o n t a i n e r ( i n i t i a l C h i l d r e n ,   / /   T O D O :   R e m o v e   ` c a l l b a c k `   w h e n   w e   d e l e t e   l e g a c y   m o d e . 
 c a l l b a c k ,   c o n t a i n e r I n f o ,   t a g ,   h y d r a t i o n C a l l b a c k s ,   i s S t r i c t M o d e ,   c o n c u r r e n t U p d a t e s B y D e f a u l t O v e r r i d e ,   i d e n t i f i e r P r e f i x ,   o n R e c o v e r a b l e E r r o r ,   t r a n s i t i o n C a l l b a c k s )   { 
     v a r   h y d r a t e   =   t r u e ; 
     v a r   r o o t   =   c r e a t e F i b e r R o o t ( c o n t a i n e r I n f o ,   t a g ,   h y d r a t e ,   i n i t i a l C h i l d r e n ,   h y d r a t i o n C a l l b a c k s ,   i s S t r i c t M o d e ,   c o n c u r r e n t U p d a t e s B y D e f a u l t O v e r r i d e ,   i d e n t i f i e r P r e f i x ,   o n R e c o v e r a b l e E r r o r ) ;   / /   T O D O :   M o v e   t h i s   t o   F i b e r R o o t   c o n s t r u c t o r 
 
     r o o t . c o n t e x t   =   g e t C o n t e x t F o r S u b t r e e ( n u l l ) ;   / /   S c h e d u l e   t h e   i n i t i a l   r e n d e r .   I n   a   h y d r a t i o n   r o o t ,   t h i s   i s   d i f f e r e n t   f r o m 
     / /   a   r e g u l a r   u p d a t e   b e c a u s e   t h e   i n i t i a l   r e n d e r   m u s t   m a t c h   w a s   w a s   r e n d e r e d 
     / /   o n   t h e   s e r v e r . 
     / /   N O T E :   T h i s   u p d a t e   i n t e n t i o n a l l y   d o e s n ' t   h a v e   a   p a y l o a d .   W e ' r e   o n l y   u s i n g 
     / /   t h e   u p d a t e   t o   s c h e d u l e   w o r k   o n   t h e   r o o t   f i b e r   ( a n d ,   f o r   l e g a c y   r o o t s ,   t o 
     / /   e n q u e u e   t h e   c a l l b a c k   i f   o n e   i s   p r o v i d e d ) . 
 
     v a r   c u r r e n t   =   r o o t . c u r r e n t ; 
     v a r   e v e n t T i m e   =   r e q u e s t E v e n t T i m e ( ) ; 
     v a r   l a n e   =   r e q u e s t U p d a t e L a n e ( c u r r e n t ) ; 
     v a r   u p d a t e   =   c r e a t e U p d a t e ( e v e n t T i m e ,   l a n e ) ; 
     u p d a t e . c a l l b a c k   =   c a l l b a c k   ! = =   u n d e f i n e d   & &   c a l l b a c k   ! = =   n u l l   ?   c a l l b a c k   :   n u l l ; 
     e n q u e u e U p d a t e ( c u r r e n t ,   u p d a t e ) ; 
     s c h e d u l e I n i t i a l H y d r a t i o n O n R o o t ( r o o t ,   l a n e ,   e v e n t T i m e ) ; 
     r e t u r n   r o o t ; 
 } 
 f u n c t i o n   u p d a t e C o n t a i n e r ( e l e m e n t ,   c o n t a i n e r ,   p a r e n t C o m p o n e n t ,   c a l l b a c k )   { 
     { 
         o n S c h e d u l e R o o t ( c o n t a i n e r ,   e l e m e n t ) ; 
     } 
 
     v a r   c u r r e n t $ 1   =   c o n t a i n e r . c u r r e n t ; 
     v a r   e v e n t T i m e   =   r e q u e s t E v e n t T i m e ( ) ; 
     v a r   l a n e   =   r e q u e s t U p d a t e L a n e ( c u r r e n t $ 1 ) ; 
 
     { 
         m a r k R e n d e r S c h e d u l e d ( l a n e ) ; 
     } 
 
     v a r   c o n t e x t   =   g e t C o n t e x t F o r S u b t r e e ( p a r e n t C o m p o n e n t ) ; 
 
     i f   ( c o n t a i n e r . c o n t e x t   = = =   n u l l )   { 
         c o n t a i n e r . c o n t e x t   =   c o n t e x t ; 
     }   e l s e   { 
         c o n t a i n e r . p e n d i n g C o n t e x t   =   c o n t e x t ; 
     } 
 
     { 
         i f   ( i s R e n d e r i n g   & &   c u r r e n t   ! = =   n u l l   & &   ! d i d W a r n A b o u t N e s t e d U p d a t e s )   { 
             d i d W a r n A b o u t N e s t e d U p d a t e s   =   t r u e ; 
 
             e r r o r ( ' R e n d e r   m e t h o d s   s h o u l d   b e   a   p u r e   f u n c t i o n   o f   p r o p s   a n d   s t a t e ;   '   +   ' t r i g g e r i n g   n e s t e d   c o m p o n e n t   u p d a t e s   f r o m   r e n d e r   i s   n o t   a l l o w e d .   '   +   ' I f   n e c e s s a r y ,   t r i g g e r   n e s t e d   u p d a t e s   i n   c o m p o n e n t D i d U p d a t e . \ n \ n '   +   ' C h e c k   t h e   r e n d e r   m e t h o d   o f   % s . ' ,   g e t C o m p o n e n t N a m e F r o m F i b e r ( c u r r e n t )   | |   ' U n k n o w n ' ) ; 
         } 
     } 
 
     v a r   u p d a t e   =   c r e a t e U p d a t e ( e v e n t T i m e ,   l a n e ) ;   / /   C a u t i o n :   R e a c t   D e v T o o l s   c u r r e n t l y   d e p e n d s   o n   t h i s   p r o p e r t y 
     / /   b e i n g   c a l l e d   " e l e m e n t " . 
 
     u p d a t e . p a y l o a d   =   { 
         e l e m e n t :   e l e m e n t 
     } ; 
     c a l l b a c k   =   c a l l b a c k   = = =   u n d e f i n e d   ?   n u l l   :   c a l l b a c k ; 
 
     i f   ( c a l l b a c k   ! = =   n u l l )   { 
         { 
             i f   ( t y p e o f   c a l l b a c k   ! = =   ' f u n c t i o n ' )   { 
                 e r r o r ( ' r e n d e r ( . . . ) :   E x p e c t e d   t h e   l a s t   o p t i o n a l   ` c a l l b a c k `   a r g u m e n t   t o   b e   a   '   +   ' f u n c t i o n .   I n s t e a d   r e c e i v e d :   % s . ' ,   c a l l b a c k ) ; 
             } 
         } 
 
         u p d a t e . c a l l b a c k   =   c a l l b a c k ; 
     } 
 
     e n q u e u e U p d a t e ( c u r r e n t $ 1 ,   u p d a t e ) ; 
     v a r   r o o t   =   s c h e d u l e U p d a t e O n F i b e r ( c u r r e n t $ 1 ,   l a n e ,   e v e n t T i m e ) ; 
 
     i f   ( r o o t   ! = =   n u l l )   { 
         e n t a n g l e T r a n s i t i o n s ( r o o t ,   c u r r e n t $ 1 ,   l a n e ) ; 
     } 
 
     r e t u r n   l a n e ; 
 } 
 f u n c t i o n   g e t P u b l i c R o o t I n s t a n c e ( c o n t a i n e r )   { 
     v a r   c o n t a i n e r F i b e r   =   c o n t a i n e r . c u r r e n t ; 
 
     i f   ( ! c o n t a i n e r F i b e r . c h i l d )   { 
         r e t u r n   n u l l ; 
     } 
 
     s w i t c h   ( c o n t a i n e r F i b e r . c h i l d . t a g )   { 
         c a s e   H o s t C o m p o n e n t : 
             r e t u r n   g e t P u b l i c I n s t a n c e ( c o n t a i n e r F i b e r . c h i l d . s t a t e N o d e ) ; 
 
         d e f a u l t : 
             r e t u r n   c o n t a i n e r F i b e r . c h i l d . s t a t e N o d e ; 
     } 
 } 
 f u n c t i o n   a t t e m p t S y n c h r o n o u s H y d r a t i o n $ 1 ( f i b e r )   { 
     s w i t c h   ( f i b e r . t a g )   { 
         c a s e   H o s t R o o t : 
             v a r   r o o t   =   f i b e r . s t a t e N o d e ; 
 
             i f   ( i s R o o t D e h y d r a t e d ( r o o t ) )   { 
                 / /   F l u s h   t h e   f i r s t   s c h e d u l e d   " u p d a t e " . 
                 v a r   l a n e s   =   g e t H i g h e s t P r i o r i t y P e n d i n g L a n e s ( r o o t ) ; 
                 f l u s h R o o t ( r o o t ,   l a n e s ) ; 
             } 
 
             b r e a k ; 
 
         c a s e   S u s p e n s e C o m p o n e n t : 
             v a r   e v e n t T i m e   =   r e q u e s t E v e n t T i m e ( ) ; 
             f l u s h S y n c ( f u n c t i o n   ( )   { 
                 r e t u r n   s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   S y n c L a n e ,   e v e n t T i m e ) ; 
             } ) ;   / /   I f   w e ' r e   s t i l l   b l o c k e d   a f t e r   t h i s ,   w e   n e e d   t o   i n c r e a s e 
             / /   t h e   p r i o r i t y   o f   a n y   p r o m i s e s   r e s o l v i n g   w i t h i n   t h i s 
             / /   b o u n d a r y   s o   t h a t   t h e y   n e x t   a t t e m p t   a l s o   h a s   h i g h e r   p r i . 
 
             v a r   r e t r y L a n e   =   S y n c L a n e ; 
             m a r k R e t r y L a n e I f N o t H y d r a t e d ( f i b e r ,   r e t r y L a n e ) ; 
             b r e a k ; 
     } 
 } 
 
 f u n c t i o n   m a r k R e t r y L a n e I m p l ( f i b e r ,   r e t r y L a n e )   { 
     v a r   s u s p e n s e S t a t e   =   f i b e r . m e m o i z e d S t a t e ; 
 
     i f   ( s u s p e n s e S t a t e   ! = =   n u l l   & &   s u s p e n s e S t a t e . d e h y d r a t e d   ! = =   n u l l )   { 
         s u s p e n s e S t a t e . r e t r y L a n e   =   h i g h e r P r i o r i t y L a n e ( s u s p e n s e S t a t e . r e t r y L a n e ,   r e t r y L a n e ) ; 
     } 
 }   / /   I n c r e a s e s   t h e   p r i o r i t y   o f   t h e n a b l e s   w h e n   t h e y   r e s o l v e   w i t h i n   t h i s   b o u n d a r y . 
 
 
 f u n c t i o n   m a r k R e t r y L a n e I f N o t H y d r a t e d ( f i b e r ,   r e t r y L a n e )   { 
     m a r k R e t r y L a n e I m p l ( f i b e r ,   r e t r y L a n e ) ; 
     v a r   a l t e r n a t e   =   f i b e r . a l t e r n a t e ; 
 
     i f   ( a l t e r n a t e )   { 
         m a r k R e t r y L a n e I m p l ( a l t e r n a t e ,   r e t r y L a n e ) ; 
     } 
 } 
 f u n c t i o n   a t t e m p t C o n t i n u o u s H y d r a t i o n $ 1 ( f i b e r )   { 
     i f   ( f i b e r . t a g   ! = =   S u s p e n s e C o m p o n e n t )   { 
         / /   W e   i g n o r e   H o s t R o o t s   h e r e   b e c a u s e   w e   c a n ' t   i n c r e a s e 
         / /   t h e i r   p r i o r i t y   a n d   t h e y   s h o u l d   n o t   s u s p e n d   o n   I / O , 
         / /   s i n c e   y o u   h a v e   t o   w r a p   a n y t h i n g   t h a t   m i g h t   s u s p e n d   i n 
         / /   S u s p e n s e . 
         r e t u r n ; 
     } 
 
     v a r   e v e n t T i m e   =   r e q u e s t E v e n t T i m e ( ) ; 
     v a r   l a n e   =   S e l e c t i v e H y d r a t i o n L a n e ; 
     s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   l a n e ,   e v e n t T i m e ) ; 
     m a r k R e t r y L a n e I f N o t H y d r a t e d ( f i b e r ,   l a n e ) ; 
 } 
 f u n c t i o n   a t t e m p t H y d r a t i o n A t C u r r e n t P r i o r i t y $ 1 ( f i b e r )   { 
     i f   ( f i b e r . t a g   ! = =   S u s p e n s e C o m p o n e n t )   { 
         / /   W e   i g n o r e   H o s t R o o t s   h e r e   b e c a u s e   w e   c a n ' t   i n c r e a s e 
         / /   t h e i r   p r i o r i t y   o t h e r   t h a n   s y n c h r o n o u s l y   f l u s h   i t . 
         r e t u r n ; 
     } 
 
     v a r   e v e n t T i m e   =   r e q u e s t E v e n t T i m e ( ) ; 
     v a r   l a n e   =   r e q u e s t U p d a t e L a n e ( f i b e r ) ; 
     s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   l a n e ,   e v e n t T i m e ) ; 
     m a r k R e t r y L a n e I f N o t H y d r a t e d ( f i b e r ,   l a n e ) ; 
 } 
 f u n c t i o n   f i n d H o s t I n s t a n c e W i t h N o P o r t a l s ( f i b e r )   { 
     v a r   h o s t F i b e r   =   f i n d C u r r e n t H o s t F i b e r W i t h N o P o r t a l s ( f i b e r ) ; 
 
     i f   ( h o s t F i b e r   = = =   n u l l )   { 
         r e t u r n   n u l l ; 
     } 
 
     r e t u r n   h o s t F i b e r . s t a t e N o d e ; 
 } 
 
 v a r   s h o u l d E r r o r I m p l   =   f u n c t i o n   ( f i b e r )   { 
     r e t u r n   n u l l ; 
 } ; 
 
 f u n c t i o n   s h o u l d E r r o r ( f i b e r )   { 
     r e t u r n   s h o u l d E r r o r I m p l ( f i b e r ) ; 
 } 
 
 v a r   s h o u l d S u s p e n d I m p l   =   f u n c t i o n   ( f i b e r )   { 
     r e t u r n   f a l s e ; 
 } ; 
 
 f u n c t i o n   s h o u l d S u s p e n d ( f i b e r )   { 
     r e t u r n   s h o u l d S u s p e n d I m p l ( f i b e r ) ; 
 } 
 v a r   o v e r r i d e H o o k S t a t e   =   n u l l ; 
 v a r   o v e r r i d e H o o k S t a t e D e l e t e P a t h   =   n u l l ; 
 v a r   o v e r r i d e H o o k S t a t e R e n a m e P a t h   =   n u l l ; 
 v a r   o v e r r i d e P r o p s   =   n u l l ; 
 v a r   o v e r r i d e P r o p s D e l e t e P a t h   =   n u l l ; 
 v a r   o v e r r i d e P r o p s R e n a m e P a t h   =   n u l l ; 
 v a r   s c h e d u l e U p d a t e   =   n u l l ; 
 v a r   s e t E r r o r H a n d l e r   =   n u l l ; 
 v a r   s e t S u s p e n s e H a n d l e r   =   n u l l ; 
 
 { 
     v a r   c o p y W i t h D e l e t e I m p l   =   f u n c t i o n   ( o b j ,   p a t h ,   i n d e x )   { 
         v a r   k e y   =   p a t h [ i n d e x ] ; 
         v a r   u p d a t e d   =   i s A r r a y ( o b j )   ?   o b j . s l i c e ( )   :   a s s i g n ( { } ,   o b j ) ; 
 
         i f   ( i n d e x   +   1   = = =   p a t h . l e n g t h )   { 
             i f   ( i s A r r a y ( u p d a t e d ) )   { 
                 u p d a t e d . s p l i c e ( k e y ,   1 ) ; 
             }   e l s e   { 
                 d e l e t e   u p d a t e d [ k e y ] ; 
             } 
 
             r e t u r n   u p d a t e d ; 
         }   / /   $ F l o w F i x M e   n u m b e r   o r   s t r i n g   i s   f i n e   h e r e 
 
 
         u p d a t e d [ k e y ]   =   c o p y W i t h D e l e t e I m p l ( o b j [ k e y ] ,   p a t h ,   i n d e x   +   1 ) ; 
         r e t u r n   u p d a t e d ; 
     } ; 
 
     v a r   c o p y W i t h D e l e t e   =   f u n c t i o n   ( o b j ,   p a t h )   { 
         r e t u r n   c o p y W i t h D e l e t e I m p l ( o b j ,   p a t h ,   0 ) ; 
     } ; 
 
     v a r   c o p y W i t h R e n a m e I m p l   =   f u n c t i o n   ( o b j ,   o l d P a t h ,   n e w P a t h ,   i n d e x )   { 
         v a r   o l d K e y   =   o l d P a t h [ i n d e x ] ; 
         v a r   u p d a t e d   =   i s A r r a y ( o b j )   ?   o b j . s l i c e ( )   :   a s s i g n ( { } ,   o b j ) ; 
 
         i f   ( i n d e x   +   1   = = =   o l d P a t h . l e n g t h )   { 
             v a r   n e w K e y   =   n e w P a t h [ i n d e x ] ;   / /   $ F l o w F i x M e   n u m b e r   o r   s t r i n g   i s   f i n e   h e r e 
 
             u p d a t e d [ n e w K e y ]   =   u p d a t e d [ o l d K e y ] ; 
 
             i f   ( i s A r r a y ( u p d a t e d ) )   { 
                 u p d a t e d . s p l i c e ( o l d K e y ,   1 ) ; 
             }   e l s e   { 
                 d e l e t e   u p d a t e d [ o l d K e y ] ; 
             } 
         }   e l s e   { 
             / /   $ F l o w F i x M e   n u m b e r   o r   s t r i n g   i s   f i n e   h e r e 
             u p d a t e d [ o l d K e y ]   =   c o p y W i t h R e n a m e I m p l (   / /   $ F l o w F i x M e   n u m b e r   o r   s t r i n g   i s   f i n e   h e r e 
             o b j [ o l d K e y ] ,   o l d P a t h ,   n e w P a t h ,   i n d e x   +   1 ) ; 
         } 
 
         r e t u r n   u p d a t e d ; 
     } ; 
 
     v a r   c o p y W i t h R e n a m e   =   f u n c t i o n   ( o b j ,   o l d P a t h ,   n e w P a t h )   { 
         i f   ( o l d P a t h . l e n g t h   ! = =   n e w P a t h . l e n g t h )   { 
             w a r n ( ' c o p y W i t h R e n a m e ( )   e x p e c t s   p a t h s   o f   t h e   s a m e   l e n g t h ' ) ; 
 
             r e t u r n ; 
         }   e l s e   { 
             f o r   ( v a r   i   =   0 ;   i   <   n e w P a t h . l e n g t h   -   1 ;   i + + )   { 
                 i f   ( o l d P a t h [ i ]   ! = =   n e w P a t h [ i ] )   { 
                     w a r n ( ' c o p y W i t h R e n a m e ( )   e x p e c t s   p a t h s   t o   b e   t h e   s a m e   e x c e p t   f o r   t h e   d e e p e s t   k e y ' ) ; 
 
                     r e t u r n ; 
                 } 
             } 
         } 
 
         r e t u r n   c o p y W i t h R e n a m e I m p l ( o b j ,   o l d P a t h ,   n e w P a t h ,   0 ) ; 
     } ; 
 
     v a r   c o p y W i t h S e t I m p l   =   f u n c t i o n   ( o b j ,   p a t h ,   i n d e x ,   v a l u e )   { 
         i f   ( i n d e x   > =   p a t h . l e n g t h )   { 
             r e t u r n   v a l u e ; 
         } 
 
         v a r   k e y   =   p a t h [ i n d e x ] ; 
         v a r   u p d a t e d   =   i s A r r a y ( o b j )   ?   o b j . s l i c e ( )   :   a s s i g n ( { } ,   o b j ) ;   / /   $ F l o w F i x M e   n u m b e r   o r   s t r i n g   i s   f i n e   h e r e 
 
         u p d a t e d [ k e y ]   =   c o p y W i t h S e t I m p l ( o b j [ k e y ] ,   p a t h ,   i n d e x   +   1 ,   v a l u e ) ; 
         r e t u r n   u p d a t e d ; 
     } ; 
 
     v a r   c o p y W i t h S e t   =   f u n c t i o n   ( o b j ,   p a t h ,   v a l u e )   { 
         r e t u r n   c o p y W i t h S e t I m p l ( o b j ,   p a t h ,   0 ,   v a l u e ) ; 
     } ; 
 
     v a r   f i n d H o o k   =   f u n c t i o n   ( f i b e r ,   i d )   { 
         / /   F o r   n o w ,   t h e   " i d "   o f   s t a t e f u l   h o o k s   i s   j u s t   t h e   s t a t e f u l   h o o k   i n d e x . 
         / /   T h i s   m a y   c h a n g e   i n   t h e   f u t u r e   w i t h   e . g .   n e s t e d   h o o k s . 
         v a r   c u r r e n t H o o k   =   f i b e r . m e m o i z e d S t a t e ; 
 
         w h i l e   ( c u r r e n t H o o k   ! = =   n u l l   & &   i d   >   0 )   { 
             c u r r e n t H o o k   =   c u r r e n t H o o k . n e x t ; 
             i d - - ; 
         } 
 
         r e t u r n   c u r r e n t H o o k ; 
     } ;   / /   S u p p o r t   D e v T o o l s   e d i t a b l e   v a l u e s   f o r   u s e S t a t e   a n d   u s e R e d u c e r . 
 
 
     o v e r r i d e H o o k S t a t e   =   f u n c t i o n   ( f i b e r ,   i d ,   p a t h ,   v a l u e )   { 
         v a r   h o o k   =   f i n d H o o k ( f i b e r ,   i d ) ; 
 
         i f   ( h o o k   ! = =   n u l l )   { 
             v a r   n e w S t a t e   =   c o p y W i t h S e t ( h o o k . m e m o i z e d S t a t e ,   p a t h ,   v a l u e ) ; 
             h o o k . m e m o i z e d S t a t e   =   n e w S t a t e ; 
             h o o k . b a s e S t a t e   =   n e w S t a t e ;   / /   W e   a r e n ' t   a c t u a l l y   a d d i n g   a n   u p d a t e   t o   t h e   q u e u e , 
             / /   b e c a u s e   t h e r e   i s   n o   u p d a t e   w e   c a n   a d d   f o r   u s e R e d u c e r   h o o k s   t h a t   w o n ' t   t r i g g e r   a n   e r r o r . 
             / /   ( T h e r e ' s   n o   a p p r o p r i a t e   a c t i o n   t y p e   f o r   D e v T o o l s   o v e r r i d e s . ) 
             / /   A s   a   r e s u l t   t h o u g h ,   R e a c t   w i l l   s e e   t h e   s c h e d u l e d   u p d a t e   a s   a   n o o p   a n d   b a i l o u t . 
             / /   S h a l l o w   c l o n i n g   p r o p s   w o r k s   a s   a   w o r k a r o u n d   f o r   n o w   t o   b y p a s s   t h e   b a i l o u t   c h e c k . 
 
             f i b e r . m e m o i z e d P r o p s   =   a s s i g n ( { } ,   f i b e r . m e m o i z e d P r o p s ) ; 
             s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   S y n c L a n e ,   N o T i m e s t a m p ) ; 
         } 
     } ; 
 
     o v e r r i d e H o o k S t a t e D e l e t e P a t h   =   f u n c t i o n   ( f i b e r ,   i d ,   p a t h )   { 
         v a r   h o o k   =   f i n d H o o k ( f i b e r ,   i d ) ; 
 
         i f   ( h o o k   ! = =   n u l l )   { 
             v a r   n e w S t a t e   =   c o p y W i t h D e l e t e ( h o o k . m e m o i z e d S t a t e ,   p a t h ) ; 
             h o o k . m e m o i z e d S t a t e   =   n e w S t a t e ; 
             h o o k . b a s e S t a t e   =   n e w S t a t e ;   / /   W e   a r e n ' t   a c t u a l l y   a d d i n g   a n   u p d a t e   t o   t h e   q u e u e , 
             / /   b e c a u s e   t h e r e   i s   n o   u p d a t e   w e   c a n   a d d   f o r   u s e R e d u c e r   h o o k s   t h a t   w o n ' t   t r i g g e r   a n   e r r o r . 
             / /   ( T h e r e ' s   n o   a p p r o p r i a t e   a c t i o n   t y p e   f o r   D e v T o o l s   o v e r r i d e s . ) 
             / /   A s   a   r e s u l t   t h o u g h ,   R e a c t   w i l l   s e e   t h e   s c h e d u l e d   u p d a t e   a s   a   n o o p   a n d   b a i l o u t . 
             / /   S h a l l o w   c l o n i n g   p r o p s   w o r k s   a s   a   w o r k a r o u n d   f o r   n o w   t o   b y p a s s   t h e   b a i l o u t   c h e c k . 
 
             f i b e r . m e m o i z e d P r o p s   =   a s s i g n ( { } ,   f i b e r . m e m o i z e d P r o p s ) ; 
             s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   S y n c L a n e ,   N o T i m e s t a m p ) ; 
         } 
     } ; 
 
     o v e r r i d e H o o k S t a t e R e n a m e P a t h   =   f u n c t i o n   ( f i b e r ,   i d ,   o l d P a t h ,   n e w P a t h )   { 
         v a r   h o o k   =   f i n d H o o k ( f i b e r ,   i d ) ; 
 
         i f   ( h o o k   ! = =   n u l l )   { 
             v a r   n e w S t a t e   =   c o p y W i t h R e n a m e ( h o o k . m e m o i z e d S t a t e ,   o l d P a t h ,   n e w P a t h ) ; 
             h o o k . m e m o i z e d S t a t e   =   n e w S t a t e ; 
             h o o k . b a s e S t a t e   =   n e w S t a t e ;   / /   W e   a r e n ' t   a c t u a l l y   a d d i n g   a n   u p d a t e   t o   t h e   q u e u e , 
             / /   b e c a u s e   t h e r e   i s   n o   u p d a t e   w e   c a n   a d d   f o r   u s e R e d u c e r   h o o k s   t h a t   w o n ' t   t r i g g e r   a n   e r r o r . 
             / /   ( T h e r e ' s   n o   a p p r o p r i a t e   a c t i o n   t y p e   f o r   D e v T o o l s   o v e r r i d e s . ) 
             / /   A s   a   r e s u l t   t h o u g h ,   R e a c t   w i l l   s e e   t h e   s c h e d u l e d   u p d a t e   a s   a   n o o p   a n d   b a i l o u t . 
             / /   S h a l l o w   c l o n i n g   p r o p s   w o r k s   a s   a   w o r k a r o u n d   f o r   n o w   t o   b y p a s s   t h e   b a i l o u t   c h e c k . 
 
             f i b e r . m e m o i z e d P r o p s   =   a s s i g n ( { } ,   f i b e r . m e m o i z e d P r o p s ) ; 
             s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   S y n c L a n e ,   N o T i m e s t a m p ) ; 
         } 
     } ;   / /   S u p p o r t   D e v T o o l s   p r o p s   f o r   f u n c t i o n   c o m p o n e n t s ,   f o r w a r d R e f ,   m e m o ,   h o s t   c o m p o n e n t s ,   e t c . 
 
 
     o v e r r i d e P r o p s   =   f u n c t i o n   ( f i b e r ,   p a t h ,   v a l u e )   { 
         f i b e r . p e n d i n g P r o p s   =   c o p y W i t h S e t ( f i b e r . m e m o i z e d P r o p s ,   p a t h ,   v a l u e ) ; 
 
         i f   ( f i b e r . a l t e r n a t e )   { 
             f i b e r . a l t e r n a t e . p e n d i n g P r o p s   =   f i b e r . p e n d i n g P r o p s ; 
         } 
 
         s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   S y n c L a n e ,   N o T i m e s t a m p ) ; 
     } ; 
 
     o v e r r i d e P r o p s D e l e t e P a t h   =   f u n c t i o n   ( f i b e r ,   p a t h )   { 
         f i b e r . p e n d i n g P r o p s   =   c o p y W i t h D e l e t e ( f i b e r . m e m o i z e d P r o p s ,   p a t h ) ; 
 
         i f   ( f i b e r . a l t e r n a t e )   { 
             f i b e r . a l t e r n a t e . p e n d i n g P r o p s   =   f i b e r . p e n d i n g P r o p s ; 
         } 
 
         s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   S y n c L a n e ,   N o T i m e s t a m p ) ; 
     } ; 
 
     o v e r r i d e P r o p s R e n a m e P a t h   =   f u n c t i o n   ( f i b e r ,   o l d P a t h ,   n e w P a t h )   { 
         f i b e r . p e n d i n g P r o p s   =   c o p y W i t h R e n a m e ( f i b e r . m e m o i z e d P r o p s ,   o l d P a t h ,   n e w P a t h ) ; 
 
         i f   ( f i b e r . a l t e r n a t e )   { 
             f i b e r . a l t e r n a t e . p e n d i n g P r o p s   =   f i b e r . p e n d i n g P r o p s ; 
         } 
 
         s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   S y n c L a n e ,   N o T i m e s t a m p ) ; 
     } ; 
 
     s c h e d u l e U p d a t e   =   f u n c t i o n   ( f i b e r )   { 
         s c h e d u l e U p d a t e O n F i b e r ( f i b e r ,   S y n c L a n e ,   N o T i m e s t a m p ) ; 
     } ; 
 
     s e t E r r o r H a n d l e r   =   f u n c t i o n   ( n e w S h o u l d E r r o r I m p l )   { 
         s h o u l d E r r o r I m p l   =   n e w S h o u l d E r r o r I m p l ; 
     } ; 
 
     s e t S u s p e n s e H a n d l e r   =   f u n c t i o n   ( n e w S h o u l d S u s p e n d I m p l )   { 
         s h o u l d S u s p e n d I m p l   =   n e w S h o u l d S u s p e n d I m p l ; 
     } ; 
 } 
 
 f u n c t i o n   f i n d H o s t I n s t a n c e B y F i b e r ( f i b e r )   { 
     v a r   h o s t F i b e r   =   f i n d C u r r e n t H o s t F i b e r ( f i b e r ) ; 
 
     i f   ( h o s t F i b e r   = = =   n u l l )   { 
         r e t u r n   n u l l ; 
     } 
 
     r e t u r n   h o s t F i b e r . s t a t e N o d e ; 
 } 
 
 f u n c t i o n   e m p t y F i n d F i b e r B y H o s t I n s t a n c e ( i n s t a n c e )   { 
     r e t u r n   n u l l ; 
 } 
 
 f u n c t i o n   g e t C u r r e n t F i b e r F o r D e v T o o l s ( )   { 
     r e t u r n   c u r r e n t ; 
 } 
 
 f u n c t i o n   i n j e c t I n t o D e v T o o l s ( d e v T o o l s C o n f i g )   { 
     v a r   f i n d F i b e r B y H o s t I n s t a n c e   =   d e v T o o l s C o n f i g . f i n d F i b e r B y H o s t I n s t a n c e ; 
     v a r   R e a c t C u r r e n t D i s p a t c h e r   =   R e a c t S h a r e d I n t e r n a l s . R e a c t C u r r e n t D i s p a t c h e r ; 
     r e t u r n   i n j e c t I n t e r n a l s ( { 
         b u n d l e T y p e :   d e v T o o l s C o n f i g . b u n d l e T y p e , 
         v e r s i o n :   d e v T o o l s C o n f i g . v e r s i o n , 
         r e n d e r e r P a c k a g e N a m e :   d e v T o o l s C o n f i g . r e n d e r e r P a c k a g e N a m e , 
         r e n d e r e r C o n f i g :   d e v T o o l s C o n f i g . r e n d e r e r C o n f i g , 
         o v e r r i d e H o o k S t a t e :   o v e r r i d e H o o k S t a t e , 
         o v e r r i d e H o o k S t a t e D e l e t e P a t h :   o v e r r i d e H o o k S t a t e D e l e t e P a t h , 
         o v e r r i d e H o o k S t a t e R e n a m e P a t h :   o v e r r i d e H o o k S t a t e R e n a m e P a t h , 
         o v e r r i d e P r o p s :   o v e r r i d e P r o p s , 
         o v e r r i d e P r o p s D e l e t e P a t h :   o v e r r i d e P r o p s D e l e t e P a t h , 
         o v e r r i d e P r o p s R e n a m e P a t h :   o v e r r i d e P r o p s R e n a m e P a t h , 
         s e t E r r o r H a n d l e r :   s e t E r r o r H a n d l e r , 
         s e t S u s p e n s e H a n d l e r :   s e t S u s p e n s e H a n d l e r , 
         s c h e d u l e U p d a t e :   s c h e d u l e U p d a t e , 
         c u r r e n t D i s p a t c h e r R e f :   R e a c t C u r r e n t D i s p a t c h e r , 
         f i n d H o s t I n s t a n c e B y F i b e r :   f i n d H o s t I n s t a n c e B y F i b e r , 
         f i n d F i b e r B y H o s t I n s t a n c e :   f i n d F i b e r B y H o s t I n s t a n c e   | |   e m p t y F i n d F i b e r B y H o s t I n s t a n c e , 
         / /   R e a c t   R e f r e s h 
         f i n d H o s t I n s t a n c e s F o r R e f r e s h :     f i n d H o s t I n s t a n c e s F o r R e f r e s h   , 
         s c h e d u l e R e f r e s h :     s c h e d u l e R e f r e s h   , 
         s c h e d u l e R o o t :     s c h e d u l e R o o t   , 
         s e t R e f r e s h H a n d l e r :     s e t R e f r e s h H a n d l e r   , 
         / /   E n a b l e s   D e v T o o l s   t o   a p p e n d   o w n e r   s t a c k s   t o   e r r o r   m e s s a g e s   i n   D E V   m o d e . 
         g e t C u r r e n t F i b e r :     g e t C u r r e n t F i b e r F o r D e v T o o l s   , 
         / /   E n a b l e s   D e v T o o l s   t o   d e t e c t   r e c o n c i l e r   v e r s i o n   r a t h e r   t h a n   r e n d e r e r   v e r s i o n 
         / /   w h i c h   m a y   n o t   m a t c h   f o r   t h i r d   p a r t y   r e n d e r e r s . 
         r e c o n c i l e r V e r s i o n :   R e a c t V e r s i o n 
     } ) ; 
 } 
 
 / *   g l o b a l   r e p o r t E r r o r   * / 
 
 v a r   d e f a u l t O n R e c o v e r a b l e E r r o r   =   t y p e o f   r e p o r t E r r o r   = = =   ' f u n c t i o n '   ?   / /   I n   m o d e r n   b r o w s e r s ,   r e p o r t E r r o r   w i l l   d i s p a t c h   a n   e r r o r   e v e n t , 
 / /   e m u l a t i n g   a n   u n c a u g h t   J a v a S c r i p t   e r r o r . 
 r e p o r t E r r o r   :   f u n c t i o n   ( e r r o r )   { 
     / /   I n   o l d e r   b r o w s e r s   a n d   t e s t   e n v i r o n m e n t s ,   f a l l b a c k   t o   c o n s o l e . e r r o r . 
     / /   e s l i n t - d i s a b l e - n e x t - l i n e   r e a c t - i n t e r n a l / n o - p r o d u c t i o n - l o g g i n g 
     c o n s o l e [ ' e r r o r ' ] ( e r r o r ) ; 
 } ; 
 
 f u n c t i o n   R e a c t D O M R o o t ( i n t e r n a l R o o t )   { 
     t h i s . _ i n t e r n a l R o o t   =   i n t e r n a l R o o t ; 
 } 
 
 R e a c t D O M H y d r a t i o n R o o t . p r o t o t y p e . r e n d e r   =   R e a c t D O M R o o t . p r o t o t y p e . r e n d e r   =   f u n c t i o n   ( c h i l d r e n )   { 
     v a r   r o o t   =   t h i s . _ i n t e r n a l R o o t ; 
 
     i f   ( r o o t   = = =   n u l l )   { 
         t h r o w   n e w   E r r o r ( ' C a n n o t   u p d a t e   a n   u n m o u n t e d   r o o t . ' ) ; 
     } 
 
     { 
         i f   ( t y p e o f   a r g u m e n t s [ 1 ]   = = =   ' f u n c t i o n ' )   { 
             e r r o r ( ' r e n d e r ( . . . ) :   d o e s   n o t   s u p p o r t   t h e   s e c o n d   c a l l b a c k   a r g u m e n t .   '   +   ' T o   e x e c u t e   a   s i d e   e f f e c t   a f t e r   r e n d e r i n g ,   d e c l a r e   i t   i n   a   c o m p o n e n t   b o d y   w i t h   u s e E f f e c t ( ) . ' ) ; 
         }   e l s e   i f   ( i s V a l i d C o n t a i n e r ( a r g u m e n t s [ 1 ] ) )   { 
             e r r o r ( ' Y o u   p a s s e d   a   c o n t a i n e r   t o   t h e   s e c o n d   a r g u m e n t   o f   r o o t . r e n d e r ( . . . ) .   '   +   " Y o u   d o n ' t   n e e d   t o   p a s s   i t   a g a i n   s i n c e   y o u   a l r e a d y   p a s s e d   i t   t o   c r e a t e   t h e   r o o t . " ) ; 
         }   e l s e   i f   ( t y p e o f   a r g u m e n t s [ 1 ]   ! = =   ' u n d e f i n e d ' )   { 
             e r r o r ( ' Y o u   p a s s e d   a   s e c o n d   a r g u m e n t   t o   r o o t . r e n d e r ( . . . )   b u t   i t   o n l y   a c c e p t s   '   +   ' o n e   a r g u m e n t . ' ) ; 
         } 
 
         v a r   c o n t a i n e r   =   r o o t . c o n t a i n e r I n f o ; 
 
         i f   ( c o n t a i n e r . n o d e T y p e   ! = =   C O M M E N T _ N O D E )   { 
             v a r   h o s t I n s t a n c e   =   f i n d H o s t I n s t a n c e W i t h N o P o r t a l s ( r o o t . c u r r e n t ) ; 
 
             i f   ( h o s t I n s t a n c e )   { 
                 i f   ( h o s t I n s t a n c e . p a r e n t N o d e   ! = =   c o n t a i n e r )   { 
                     e r r o r ( ' r e n d e r ( . . . ) :   I t   l o o k s   l i k e   t h e   R e a c t - r e n d e r e d   c o n t e n t   o f   t h e   '   +   ' r o o t   c o n t a i n e r   w a s   r e m o v e d   w i t h o u t   u s i n g   R e a c t .   T h i s   i s   n o t   '   +   ' s u p p o r t e d   a n d   w i l l   c a u s e   e r r o r s .   I n s t e a d ,   c a l l   '   +   " r o o t . u n m o u n t ( )   t o   e m p t y   a   r o o t ' s   c o n t a i n e r . " ) ; 
                 } 
             } 
         } 
     } 
 
     u p d a t e C o n t a i n e r ( c h i l d r e n ,   r o o t ,   n u l l ,   n u l l ) ; 
 } ; 
 
 R e a c t D O M H y d r a t i o n R o o t . p r o t o t y p e . u n m o u n t   =   R e a c t D O M R o o t . p r o t o t y p e . u n m o u n t   =   f u n c t i o n   ( )   { 
     { 
         i f   ( t y p e o f   a r g u m e n t s [ 0 ]   = = =   ' f u n c t i o n ' )   { 
             e r r o r ( ' u n m o u n t ( . . . ) :   d o e s   n o t   s u p p o r t   a   c a l l b a c k   a r g u m e n t .   '   +   ' T o   e x e c u t e   a   s i d e   e f f e c t   a f t e r   r e n d e r i n g ,   d e c l a r e   i t   i n   a   c o m p o n e n t   b o d y   w i t h   u s e E f f e c t ( ) . ' ) ; 
         } 
     } 
 
     v a r   r o o t   =   t h i s . _ i n t e r n a l R o o t ; 
 
     i f   ( r o o t   ! = =   n u l l )   { 
         t h i s . _ i n t e r n a l R o o t   =   n u l l ; 
         v a r   c o n t a i n e r   =   r o o t . c o n t a i n e r I n f o ; 
 
         { 
             i f   ( i s A l r e a d y R e n d e r i n g ( ) )   { 
                 e r r o r ( ' A t t e m p t e d   t o   s y n c h r o n o u s l y   u n m o u n t   a   r o o t   w h i l e   R e a c t   w a s   a l r e a d y   '   +   ' r e n d e r i n g .   R e a c t   c a n n o t   f i n i s h   u n m o u n t i n g   t h e   r o o t   u n t i l   t h e   '   +   ' c u r r e n t   r e n d e r   h a s   c o m p l e t e d ,   w h i c h   m a y   l e a d   t o   a   r a c e   c o n d i t i o n . ' ) ; 
             } 
         } 
 
         f l u s h S y n c ( f u n c t i o n   ( )   { 
             u p d a t e C o n t a i n e r ( n u l l ,   r o o t ,   n u l l ,   n u l l ) ; 
         } ) ; 
         u n m a r k C o n t a i n e r A s R o o t ( c o n t a i n e r ) ; 
     } 
 } ; 
 
 f u n c t i o n   c r e a t e R o o t ( c o n t a i n e r ,   o p t i o n s )   { 
     i f   ( ! i s V a l i d C o n t a i n e r ( c o n t a i n e r ) )   { 
         t h r o w   n e w   E r r o r ( ' c r e a t e R o o t ( . . . ) :   T a r g e t   c o n t a i n e r   i s   n o t   a   D O M   e l e m e n t . ' ) ; 
     } 
 
     w a r n I f R e a c t D O M C o n t a i n e r I n D E V ( c o n t a i n e r ) ; 
     v a r   i s S t r i c t M o d e   =   f a l s e ; 
     v a r   c o n c u r r e n t U p d a t e s B y D e f a u l t O v e r r i d e   =   f a l s e ; 
     v a r   i d e n t i f i e r P r e f i x   =   ' ' ; 
     v a r   o n R e c o v e r a b l e E r r o r   =   d e f a u l t O n R e c o v e r a b l e E r r o r ; 
     v a r   t r a n s i t i o n C a l l b a c k s   =   n u l l ; 
 
     i f   ( o p t i o n s   ! = =   n u l l   & &   o p t i o n s   ! = =   u n d e f i n e d )   { 
         { 
             i f   ( o p t i o n s . h y d r a t e )   { 
                 w a r n ( ' h y d r a t e   t h r o u g h   c r e a t e R o o t   i s   d e p r e c a t e d .   U s e   R e a c t D O M C l i e n t . h y d r a t e R o o t ( c o n t a i n e r ,   < A p p   / > )   i n s t e a d . ' ) ; 
             }   e l s e   { 
                 i f   ( t y p e o f   o p t i o n s   = = =   ' o b j e c t '   & &   o p t i o n s   ! = =   n u l l   & &   o p t i o n s . $ $ t y p e o f   = = =   R E A C T _ E L E M E N T _ T Y P E )   { 
                     e r r o r ( ' Y o u   p a s s e d   a   J S X   e l e m e n t   t o   c r e a t e R o o t .   Y o u   p r o b a b l y   m e a n t   t o   '   +   ' c a l l   r o o t . r e n d e r   i n s t e a d .   '   +   ' E x a m p l e   u s a g e : \ n \ n '   +   '     l e t   r o o t   =   c r e a t e R o o t ( d o m C o n t a i n e r ) ; \ n '   +   '     r o o t . r e n d e r ( < A p p   / > ) ; ' ) ; 
                 } 
             } 
         } 
 
         i f   ( o p t i o n s . u n s t a b l e _ s t r i c t M o d e   = = =   t r u e )   { 
             i s S t r i c t M o d e   =   t r u e ; 
         } 
 
         i f   ( o p t i o n s . i d e n t i f i e r P r e f i x   ! = =   u n d e f i n e d )   { 
             i d e n t i f i e r P r e f i x   =   o p t i o n s . i d e n t i f i e r P r e f i x ; 
         } 
 
         i f   ( o p t i o n s . o n R e c o v e r a b l e E r r o r   ! = =   u n d e f i n e d )   { 
             o n R e c o v e r a b l e E r r o r   =   o p t i o n s . o n R e c o v e r a b l e E r r o r ; 
         } 
 
         i f   ( o p t i o n s . t r a n s i t i o n C a l l b a c k s   ! = =   u n d e f i n e d )   { 
             t r a n s i t i o n C a l l b a c k s   =   o p t i o n s . t r a n s i t i o n C a l l b a c k s ; 
         } 
     } 
 
     v a r   r o o t   =   c r e a t e C o n t a i n e r ( c o n t a i n e r ,   C o n c u r r e n t R o o t ,   n u l l ,   i s S t r i c t M o d e ,   c o n c u r r e n t U p d a t e s B y D e f a u l t O v e r r i d e ,   i d e n t i f i e r P r e f i x ,   o n R e c o v e r a b l e E r r o r ) ; 
     m a r k C o n t a i n e r A s R o o t ( r o o t . c u r r e n t ,   c o n t a i n e r ) ; 
     v a r   r o o t C o n t a i n e r E l e m e n t   =   c o n t a i n e r . n o d e T y p e   = = =   C O M M E N T _ N O D E   ?   c o n t a i n e r . p a r e n t N o d e   :   c o n t a i n e r ; 
     l i s t e n T o A l l S u p p o r t e d E v e n t s ( r o o t C o n t a i n e r E l e m e n t ) ; 
     r e t u r n   n e w   R e a c t D O M R o o t ( r o o t ) ; 
 } 
 
 f u n c t i o n   R e a c t D O M H y d r a t i o n R o o t ( i n t e r n a l R o o t )   { 
     t h i s . _ i n t e r n a l R o o t   =   i n t e r n a l R o o t ; 
 } 
 
 f u n c t i o n   s c h e d u l e H y d r a t i o n ( t a r g e t )   { 
     i f   ( t a r g e t )   { 
         q u e u e E x p l i c i t H y d r a t i o n T a r g e t ( t a r g e t ) ; 
     } 
 } 
 
 R e a c t D O M H y d r a t i o n R o o t . p r o t o t y p e . u n s t a b l e _ s c h e d u l e H y d r a t i o n   =   s c h e d u l e H y d r a t i o n ; 
 f u n c t i o n   h y d r a t e R o o t ( c o n t a i n e r ,   i n i t i a l C h i l d r e n ,   o p t i o n s )   { 
     i f   ( ! i s V a l i d C o n t a i n e r ( c o n t a i n e r ) )   { 
         t h r o w   n e w   E r r o r ( ' h y d r a t e R o o t ( . . . ) :   T a r g e t   c o n t a i n e r   i s   n o t   a   D O M   e l e m e n t . ' ) ; 
     } 
 
     w a r n I f R e a c t D O M C o n t a i n e r I n D E V ( c o n t a i n e r ) ; 
 
     { 
         i f   ( i n i t i a l C h i l d r e n   = = =   u n d e f i n e d )   { 
             e r r o r ( ' M u s t   p r o v i d e   i n i t i a l   c h i l d r e n   a s   s e c o n d   a r g u m e n t   t o   h y d r a t e R o o t .   '   +   ' E x a m p l e   u s a g e :   h y d r a t e R o o t ( d o m C o n t a i n e r ,   < A p p   / > ) ' ) ; 
         } 
     }   / /   F o r   n o w   w e   r e u s e   t h e   w h o l e   b a g   o f   o p t i o n s   s i n c e   t h e y   c o n t a i n 
     / /   t h e   h y d r a t i o n   c a l l b a c k s . 
 
 
     v a r   h y d r a t i o n C a l l b a c k s   =   o p t i o n s   ! =   n u l l   ?   o p t i o n s   :   n u l l ;   / /   T O D O :   D e l e t e   t h i s   o p t i o n 
 
     v a r   m u t a b l e S o u r c e s   =   o p t i o n s   ! =   n u l l   & &   o p t i o n s . h y d r a t e d S o u r c e s   | |   n u l l ; 
     v a r   i s S t r i c t M o d e   =   f a l s e ; 
     v a r   c o n c u r r e n t U p d a t e s B y D e f a u l t O v e r r i d e   =   f a l s e ; 
     v a r   i d e n t i f i e r P r e f i x   =   ' ' ; 
     v a r   o n R e c o v e r a b l e E r r o r   =   d e f a u l t O n R e c o v e r a b l e E r r o r ; 
 
     i f   ( o p t i o n s   ! = =   n u l l   & &   o p t i o n s   ! = =   u n d e f i n e d )   { 
         i f   ( o p t i o n s . u n s t a b l e _ s t r i c t M o d e   = = =   t r u e )   { 
             i s S t r i c t M o d e   =   t r u e ; 
         } 
 
         i f   ( o p t i o n s . i d e n t i f i e r P r e f i x   ! = =   u n d e f i n e d )   { 
             i d e n t i f i e r P r e f i x   =   o p t i o n s . i d e n t i f i e r P r e f i x ; 
         } 
 
         i f   ( o p t i o n s . o n R e c o v e r a b l e E r r o r   ! = =   u n d e f i n e d )   { 
             o n R e c o v e r a b l e E r r o r   =   o p t i o n s . o n R e c o v e r a b l e E r r o r ; 
         } 
     } 
 
     v a r   r o o t   =   c r e a t e H y d r a t i o n C o n t a i n e r ( i n i t i a l C h i l d r e n ,   n u l l ,   c o n t a i n e r ,   C o n c u r r e n t R o o t ,   h y d r a t i o n C a l l b a c k s ,   i s S t r i c t M o d e ,   c o n c u r r e n t U p d a t e s B y D e f a u l t O v e r r i d e ,   i d e n t i f i e r P r e f i x ,   o n R e c o v e r a b l e E r r o r ) ; 
     m a r k C o n t a i n e r A s R o o t ( r o o t . c u r r e n t ,   c o n t a i n e r ) ;   / /   T h i s   c a n ' t   b e   a   c o m m e n t   n o d e   s i n c e   h y d r a t i o n   d o e s n ' t   w o r k   o n   c o m m e n t   n o d e s   a n y w a y . 
 
     l i s t e n T o A l l S u p p o r t e d E v e n t s ( c o n t a i n e r ) ; 
 
     i f   ( m u t a b l e S o u r c e s )   { 
         f o r   ( v a r   i   =   0 ;   i   <   m u t a b l e S o u r c e s . l e n g t h ;   i + + )   { 
             v a r   m u t a b l e S o u r c e   =   m u t a b l e S o u r c e s [ i ] ; 
             r e g i s t e r M u t a b l e S o u r c e F o r H y d r a t i o n ( r o o t ,   m u t a b l e S o u r c e ) ; 
         } 
     } 
 
     r e t u r n   n e w   R e a c t D O M H y d r a t i o n R o o t ( r o o t ) ; 
 } 
 f u n c t i o n   i s V a l i d C o n t a i n e r ( n o d e )   { 
     r e t u r n   ! ! ( n o d e   & &   ( n o d e . n o d e T y p e   = = =   E L E M E N T _ N O D E   | |   n o d e . n o d e T y p e   = = =   D O C U M E N T _ N O D E   | |   n o d e . n o d e T y p e   = = =   D O C U M E N T _ F R A G M E N T _ N O D E   | |   ! d i s a b l e C o m m e n t s A s D O M C o n t a i n e r s     ) ) ; 
 }   / /   T O D O :   R e m o v e   t h i s   f u n c t i o n   w h i c h   a l s o   i n c l u d e s   c o m m e n t   n o d e s . 
 / /   W e   o n l y   u s e   i t   i n   p l a c e s   t h a t   a r e   c u r r e n t l y   m o r e   r e l a x e d . 
 
 f u n c t i o n   i s V a l i d C o n t a i n e r L e g a c y ( n o d e )   { 
     r e t u r n   ! ! ( n o d e   & &   ( n o d e . n o d e T y p e   = = =   E L E M E N T _ N O D E   | |   n o d e . n o d e T y p e   = = =   D O C U M E N T _ N O D E   | |   n o d e . n o d e T y p e   = = =   D O C U M E N T _ F R A G M E N T _ N O D E   | |   n o d e . n o d e T y p e   = = =   C O M M E N T _ N O D E   & &   n o d e . n o d e V a l u e   = = =   '   r e a c t - m o u n t - p o i n t - u n s t a b l e   ' ) ) ; 
 } 
 
 f u n c t i o n   w a r n I f R e a c t D O M C o n t a i n e r I n D E V ( c o n t a i n e r )   { 
     { 
         i f   ( c o n t a i n e r . n o d e T y p e   = = =   E L E M E N T _ N O D E   & &   c o n t a i n e r . t a g N a m e   & &   c o n t a i n e r . t a g N a m e . t o U p p e r C a s e ( )   = = =   ' B O D Y ' )   { 
             e r r o r ( ' c r e a t e R o o t ( ) :   C r e a t i n g   r o o t s   d i r e c t l y   w i t h   d o c u m e n t . b o d y   i s   '   +   ' d i s c o u r a g e d ,   s i n c e   i t s   c h i l d r e n   a r e   o f t e n   m a n i p u l a t e d   b y   t h i r d - p a r t y   '   +   ' s c r i p t s   a n d   b r o w s e r   e x t e n s i o n s .   T h i s   m a y   l e a d   t o   s u b t l e   '   +   ' r e c o n c i l i a t i o n   i s s u e s .   T r y   u s i n g   a   c o n t a i n e r   e l e m e n t   c r e a t e d   '   +   ' f o r   y o u r   a p p . ' ) ; 
         } 
 
         i f   ( i s C o n t a i n e r M a r k e d A s R o o t ( c o n t a i n e r ) )   { 
             i f   ( c o n t a i n e r . _ r e a c t R o o t C o n t a i n e r )   { 
                 e r r o r ( ' Y o u   a r e   c a l l i n g   R e a c t D O M C l i e n t . c r e a t e R o o t ( )   o n   a   c o n t a i n e r   t h a t   w a s   p r e v i o u s l y   '   +   ' p a s s e d   t o   R e a c t D O M . r e n d e r ( ) .   T h i s   i s   n o t   s u p p o r t e d . ' ) ; 
             }   e l s e   { 
                 e r r o r ( ' Y o u   a r e   c a l l i n g   R e a c t D O M C l i e n t . c r e a t e R o o t ( )   o n   a   c o n t a i n e r   t h a t   '   +   ' h a s   a l r e a d y   b e e n   p a s s e d   t o   c r e a t e R o o t ( )   b e f o r e .   I n s t e a d ,   c a l l   '   +   ' r o o t . r e n d e r ( )   o n   t h e   e x i s t i n g   r o o t   i n s t e a d   i f   y o u   w a n t   t o   u p d a t e   i t . ' ) ; 
             } 
         } 
     } 
 } 
 
 v a r   R e a c t C u r r e n t O w n e r $ 3   =   R e a c t S h a r e d I n t e r n a l s . R e a c t C u r r e n t O w n e r ; 
 v a r   t o p L e v e l U p d a t e W a r n i n g s ; 
 
 { 
     t o p L e v e l U p d a t e W a r n i n g s   =   f u n c t i o n   ( c o n t a i n e r )   { 
         i f   ( c o n t a i n e r . _ r e a c t R o o t C o n t a i n e r   & &   c o n t a i n e r . n o d e T y p e   ! = =   C O M M E N T _ N O D E )   { 
             v a r   h o s t I n s t a n c e   =   f i n d H o s t I n s t a n c e W i t h N o P o r t a l s ( c o n t a i n e r . _ r e a c t R o o t C o n t a i n e r . c u r r e n t ) ; 
 
             i f   ( h o s t I n s t a n c e )   { 
                 i f   ( h o s t I n s t a n c e . p a r e n t N o d e   ! = =   c o n t a i n e r )   { 
                     e r r o r ( ' r e n d e r ( . . . ) :   I t   l o o k s   l i k e   t h e   R e a c t - r e n d e r e d   c o n t e n t   o f   t h i s   '   +   ' c o n t a i n e r   w a s   r e m o v e d   w i t h o u t   u s i n g   R e a c t .   T h i s   i s   n o t   '   +   ' s u p p o r t e d   a n d   w i l l   c a u s e   e r r o r s .   I n s t e a d ,   c a l l   '   +   ' R e a c t D O M . u n m o u n t C o m p o n e n t A t N o d e   t o   e m p t y   a   c o n t a i n e r . ' ) ; 
                 } 
             } 
         } 
 
         v a r   i s R o o t R e n d e r e d B y S o m e R e a c t   =   ! ! c o n t a i n e r . _ r e a c t R o o t C o n t a i n e r ; 
         v a r   r o o t E l   =   g e t R e a c t R o o t E l e m e n t I n C o n t a i n e r ( c o n t a i n e r ) ; 
         v a r   h a s N o n R o o t R e a c t C h i l d   =   ! ! ( r o o t E l   & &   g e t I n s t a n c e F r o m N o d e ( r o o t E l ) ) ; 
 
         i f   ( h a s N o n R o o t R e a c t C h i l d   & &   ! i s R o o t R e n d e r e d B y S o m e R e a c t )   { 
             e r r o r ( ' r e n d e r ( . . . ) :   R e p l a c i n g   R e a c t - r e n d e r e d   c h i l d r e n   w i t h   a   n e w   r o o t   '   +   ' c o m p o n e n t .   I f   y o u   i n t e n d e d   t o   u p d a t e   t h e   c h i l d r e n   o f   t h i s   n o d e ,   '   +   ' y o u   s h o u l d   i n s t e a d   h a v e   t h e   e x i s t i n g   c h i l d r e n   u p d a t e   t h e i r   s t a t e   '   +   ' a n d   r e n d e r   t h e   n e w   c o m p o n e n t s   i n s t e a d   o f   c a l l i n g   R e a c t D O M . r e n d e r . ' ) ; 
         } 
 
         i f   ( c o n t a i n e r . n o d e T y p e   = = =   E L E M E N T _ N O D E   & &   c o n t a i n e r . t a g N a m e   & &   c o n t a i n e r . t a g N a m e . t o U p p e r C a s e ( )   = = =   ' B O D Y ' )   { 
             e r r o r ( ' r e n d e r ( ) :   R e n d e r i n g   c o m p o n e n t s   d i r e c t l y   i n t o   d o c u m e n t . b o d y   i s   '   +   ' d i s c o u r a g e d ,   s i n c e   i t s   c h i l d r e n   a r e   o f t e n   m a n i p u l a t e d   b y   t h i r d - p a r t y   '   +   ' s c r i p t s   a n d   b r o w s e r   e x t e n s i o n s .   T h i s   m a y   l e a d   t o   s u b t l e   '   +   ' r e c o n c i l i a t i o n   i s s u e s .   T r y   r e n d e r i n g   i n t o   a   c o n t a i n e r   e l e m e n t   c r e a t e d   '   +   ' f o r   y o u r   a p p . ' ) ; 
         } 
     } ; 
 } 
 
 f u n c t i o n   g e t R e a c t R o o t E l e m e n t I n C o n t a i n e r ( c o n t a i n e r )   { 
     i f   ( ! c o n t a i n e r )   { 
         r e t u r n   n u l l ; 
     } 
 
     i f   ( c o n t a i n e r . n o d e T y p e   = = =   D O C U M E N T _ N O D E )   { 
         r e t u r n   c o n t a i n e r . d o c u m e n t E l e m e n t ; 
     }   e l s e   { 
         r e t u r n   c o n t a i n e r . f i r s t C h i l d ; 
     } 
 } 
 
 f u n c t i o n   n o o p O n R e c o v e r a b l e E r r o r ( )   { / /   T h i s   i s n ' t   r e a c h a b l e   b e c a u s e   o n R e c o v e r a b l e E r r o r   i s n ' t   c a l l e d   i n   t h e 
     / /   l e g a c y   A P I . 
 } 
 
 f u n c t i o n   l e g a c y C r e a t e R o o t F r o m D O M C o n t a i n e r ( c o n t a i n e r ,   i n i t i a l C h i l d r e n ,   p a r e n t C o m p o n e n t ,   c a l l b a c k ,   i s H y d r a t i o n C o n t a i n e r )   { 
     i f   ( i s H y d r a t i o n C o n t a i n e r )   { 
         i f   ( t y p e o f   c a l l b a c k   = = =   ' f u n c t i o n ' )   { 
             v a r   o r i g i n a l C a l l b a c k   =   c a l l b a c k ; 
 
             c a l l b a c k   =   f u n c t i o n   ( )   { 
                 v a r   i n s t a n c e   =   g e t P u b l i c R o o t I n s t a n c e ( r o o t ) ; 
                 o r i g i n a l C a l l b a c k . c a l l ( i n s t a n c e ) ; 
             } ; 
         } 
 
         v a r   r o o t   =   c r e a t e H y d r a t i o n C o n t a i n e r ( i n i t i a l C h i l d r e n ,   c a l l b a c k ,   c o n t a i n e r ,   L e g a c y R o o t ,   n u l l ,   / /   h y d r a t i o n C a l l b a c k s 
         f a l s e ,   / /   i s S t r i c t M o d e 
         f a l s e ,   / /   c o n c u r r e n t U p d a t e s B y D e f a u l t O v e r r i d e , 
         ' ' ,   / /   i d e n t i f i e r P r e f i x 
         n o o p O n R e c o v e r a b l e E r r o r ) ; 
         c o n t a i n e r . _ r e a c t R o o t C o n t a i n e r   =   r o o t ; 
         m a r k C o n t a i n e r A s R o o t ( r o o t . c u r r e n t ,   c o n t a i n e r ) ; 
         v a r   r o o t C o n t a i n e r E l e m e n t   =   c o n t a i n e r . n o d e T y p e   = = =   C O M M E N T _ N O D E   ?   c o n t a i n e r . p a r e n t N o d e   :   c o n t a i n e r ; 
         l i s t e n T o A l l S u p p o r t e d E v e n t s ( r o o t C o n t a i n e r E l e m e n t ) ; 
         f l u s h S y n c ( ) ; 
         r e t u r n   r o o t ; 
     }   e l s e   { 
         / /   F i r s t   c l e a r   a n y   e x i s t i n g   c o n t e n t . 
         v a r   r o o t S i b l i n g ; 
 
         w h i l e   ( r o o t S i b l i n g   =   c o n t a i n e r . l a s t C h i l d )   { 
             c o n t a i n e r . r e m o v e C h i l d ( r o o t S i b l i n g ) ; 
         } 
 
         i f   ( t y p e o f   c a l l b a c k   = = =   ' f u n c t i o n ' )   { 
             v a r   _ o r i g i n a l C a l l b a c k   =   c a l l b a c k ; 
 
             c a l l b a c k   =   f u n c t i o n   ( )   { 
                 v a r   i n s t a n c e   =   g e t P u b l i c R o o t I n s t a n c e ( _ r o o t ) ; 
 
                 _ o r i g i n a l C a l l b a c k . c a l l ( i n s t a n c e ) ; 
             } ; 
         } 
 
         v a r   _ r o o t   =   c r e a t e C o n t a i n e r ( c o n t a i n e r ,   L e g a c y R o o t ,   n u l l ,   / /   h y d r a t i o n C a l l b a c k s 
         f a l s e ,   / /   i s S t r i c t M o d e 
         f a l s e ,   / /   c o n c u r r e n t U p d a t e s B y D e f a u l t O v e r r i d e , 
         ' ' ,   / /   i d e n t i f i e r P r e f i x 
         n o o p O n R e c o v e r a b l e E r r o r ) ; 
 
         c o n t a i n e r . _ r e a c t R o o t C o n t a i n e r   =   _ r o o t ; 
         m a r k C o n t a i n e r A s R o o t ( _ r o o t . c u r r e n t ,   c o n t a i n e r ) ; 
 
         v a r   _ r o o t C o n t a i n e r E l e m e n t   =   c o n t a i n e r . n o d e T y p e   = = =   C O M M E N T _ N O D E   ?   c o n t a i n e r . p a r e n t N o d e   :   c o n t a i n e r ; 
 
         l i s t e n T o A l l S u p p o r t e d E v e n t s ( _ r o o t C o n t a i n e r E l e m e n t ) ;   / /   I n i t i a l   m o u n t   s h o u l d   n o t   b e   b a t c h e d . 
 
         f l u s h S y n c ( f u n c t i o n   ( )   { 
             u p d a t e C o n t a i n e r ( i n i t i a l C h i l d r e n ,   _ r o o t ,   p a r e n t C o m p o n e n t ,   c a l l b a c k ) ; 
         } ) ; 
         r e t u r n   _ r o o t ; 
     } 
 } 
 
 f u n c t i o n   w a r n O n I n v a l i d C a l l b a c k $ 1 ( c a l l b a c k ,   c a l l e r N a m e )   { 
     { 
         i f   ( c a l l b a c k   ! = =   n u l l   & &   t y p e o f   c a l l b a c k   ! = =   ' f u n c t i o n ' )   { 
             e r r o r ( ' % s ( . . . ) :   E x p e c t e d   t h e   l a s t   o p t i o n a l   ` c a l l b a c k `   a r g u m e n t   t o   b e   a   '   +   ' f u n c t i o n .   I n s t e a d   r e c e i v e d :   % s . ' ,   c a l l e r N a m e ,   c a l l b a c k ) ; 
         } 
     } 
 } 
 
 f u n c t i o n   l e g a c y R e n d e r S u b t r e e I n t o C o n t a i n e r ( p a r e n t C o m p o n e n t ,   c h i l d r e n ,   c o n t a i n e r ,   f o r c e H y d r a t e ,   c a l l b a c k )   { 
     { 
         t o p L e v e l U p d a t e W a r n i n g s ( c o n t a i n e r ) ; 
         w a r n O n I n v a l i d C a l l b a c k $ 1 ( c a l l b a c k   = = =   u n d e f i n e d   ?   n u l l   :   c a l l b a c k ,   ' r e n d e r ' ) ; 
     } 
 
     v a r   m a y b e R o o t   =   c o n t a i n e r . _ r e a c t R o o t C o n t a i n e r ; 
     v a r   r o o t ; 
 
     i f   ( ! m a y b e R o o t )   { 
         / /   I n i t i a l   m o u n t 
         r o o t   =   l e g a c y C r e a t e R o o t F r o m D O M C o n t a i n e r ( c o n t a i n e r ,   c h i l d r e n ,   p a r e n t C o m p o n e n t ,   c a l l b a c k ,   f o r c e H y d r a t e ) ; 
     }   e l s e   { 
         r o o t   =   m a y b e R o o t ; 
 
         i f   ( t y p e o f   c a l l b a c k   = = =   ' f u n c t i o n ' )   { 
             v a r   o r i g i n a l C a l l b a c k   =   c a l l b a c k ; 
 
             c a l l b a c k   =   f u n c t i o n   ( )   { 
                 v a r   i n s t a n c e   =   g e t P u b l i c R o o t I n s t a n c e ( r o o t ) ; 
                 o r i g i n a l C a l l b a c k . c a l l ( i n s t a n c e ) ; 
             } ; 
         }   / /   U p d a t e 
 
 
         u p d a t e C o n t a i n e r ( c h i l d r e n ,   r o o t ,   p a r e n t C o m p o n e n t ,   c a l l b a c k ) ; 
     } 
 
     r e t u r n   g e t P u b l i c R o o t I n s t a n c e ( r o o t ) ; 
 } 
 
 f u n c t i o n   f i n d D O M N o d e ( c o m p o n e n t O r E l e m e n t )   { 
     { 
         v a r   o w n e r   =   R e a c t C u r r e n t O w n e r $ 3 . c u r r e n t ; 
 
         i f   ( o w n e r   ! = =   n u l l   & &   o w n e r . s t a t e N o d e   ! = =   n u l l )   { 
             v a r   w a r n e d A b o u t R e f s I n R e n d e r   =   o w n e r . s t a t e N o d e . _ w a r n e d A b o u t R e f s I n R e n d e r ; 
 
             i f   ( ! w a r n e d A b o u t R e f s I n R e n d e r )   { 
                 e r r o r ( ' % s   i s   a c c e s s i n g   f i n d D O M N o d e   i n s i d e   i t s   r e n d e r ( ) .   '   +   ' r e n d e r ( )   s h o u l d   b e   a   p u r e   f u n c t i o n   o f   p r o p s   a n d   s t a t e .   I t   s h o u l d   '   +   ' n e v e r   a c c e s s   s o m e t h i n g   t h a t   r e q u i r e s   s t a l e   d a t a   f r o m   t h e   p r e v i o u s   '   +   ' r e n d e r ,   s u c h   a s   r e f s .   M o v e   t h i s   l o g i c   t o   c o m p o n e n t D i d M o u n t   a n d   '   +   ' c o m p o n e n t D i d U p d a t e   i n s t e a d . ' ,   g e t C o m p o n e n t N a m e F r o m T y p e ( o w n e r . t y p e )   | |   ' A   c o m p o n e n t ' ) ; 
             } 
 
             o w n e r . s t a t e N o d e . _ w a r n e d A b o u t R e f s I n R e n d e r   =   t r u e ; 
         } 
     } 
 
     i f   ( c o m p o n e n t O r E l e m e n t   = =   n u l l )   { 
         r e t u r n   n u l l ; 
     } 
 
     i f   ( c o m p o n e n t O r E l e m e n t . n o d e T y p e   = = =   E L E M E N T _ N O D E )   { 
         r e t u r n   c o m p o n e n t O r E l e m e n t ; 
     } 
 
     { 
         r e t u r n   f i n d H o s t I n s t a n c e W i t h W a r n i n g ( c o m p o n e n t O r E l e m e n t ,   ' f i n d D O M N o d e ' ) ; 
     } 
 } 
 f u n c t i o n   h y d r a t e ( e l e m e n t ,   c o n t a i n e r ,   c a l l b a c k )   { 
     { 
         e r r o r ( ' R e a c t D O M . h y d r a t e   i s   n o   l o n g e r   s u p p o r t e d   i n   R e a c t   1 8 .   U s e   h y d r a t e R o o t   '   +   ' i n s t e a d .   U n t i l   y o u   s w i t c h   t o   t h e   n e w   A P I ,   y o u r   a p p   w i l l   b e h a v e   a s   '   +   " i f   i t ' s   r u n n i n g   R e a c t   1 7 .   L e a r n   "   +   ' m o r e :   h t t p s : / / r e a c t j s . o r g / l i n k / s w i t c h - t o - c r e a t e r o o t ' ) ; 
     } 
 
     i f   ( ! i s V a l i d C o n t a i n e r L e g a c y ( c o n t a i n e r ) )   { 
         t h r o w   n e w   E r r o r ( ' T a r g e t   c o n t a i n e r   i s   n o t   a   D O M   e l e m e n t . ' ) ; 
     } 
 
     { 
         v a r   i s M o d e r n R o o t   =   i s C o n t a i n e r M a r k e d A s R o o t ( c o n t a i n e r )   & &   c o n t a i n e r . _ r e a c t R o o t C o n t a i n e r   = = =   u n d e f i n e d ; 
 
         i f   ( i s M o d e r n R o o t )   { 
             e r r o r ( ' Y o u   a r e   c a l l i n g   R e a c t D O M . h y d r a t e ( )   o n   a   c o n t a i n e r   t h a t   w a s   p r e v i o u s l y   '   +   ' p a s s e d   t o   R e a c t D O M C l i e n t . c r e a t e R o o t ( ) .   T h i s   i s   n o t   s u p p o r t e d .   '   +   ' D i d   y o u   m e a n   t o   c a l l   h y d r a t e R o o t ( c o n t a i n e r ,   e l e m e n t ) ? ' ) ; 
         } 
     }   / /   T O D O :   t h r o w   o r   w a r n   i f   w e   c o u l d n ' t   h y d r a t e ? 
 
 
     r e t u r n   l e g a c y R e n d e r S u b t r e e I n t o C o n t a i n e r ( n u l l ,   e l e m e n t ,   c o n t a i n e r ,   t r u e ,   c a l l b a c k ) ; 
 } 
 f u n c t i o n   r e n d e r ( e l e m e n t ,   c o n t a i n e r ,   c a l l b a c k )   { 
     { 
         e r r o r ( ' R e a c t D O M . r e n d e r   i s   n o   l o n g e r   s u p p o r t e d   i n   R e a c t   1 8 .   U s e   c r e a t e R o o t   '   +   ' i n s t e a d .   U n t i l   y o u   s w i t c h   t o   t h e   n e w   A P I ,   y o u r   a p p   w i l l   b e h a v e   a s   '   +   " i f   i t ' s   r u n n i n g   R e a c t   1 7 .   L e a r n   "   +   ' m o r e :   h t t p s : / / r e a c t j s . o r g / l i n k / s w i t c h - t o - c r e a t e r o o t ' ) ; 
     } 
 
     i f   ( ! i s V a l i d C o n t a i n e r L e g a c y ( c o n t a i n e r ) )   { 
         t h r o w   n e w   E r r o r ( ' T a r g e t   c o n t a i n e r   i s   n o t   a   D O M   e l e m e n t . ' ) ; 
     } 
 
     { 
         v a r   i s M o d e r n R o o t   =   i s C o n t a i n e r M a r k e d A s R o o t ( c o n t a i n e r )   & &   c o n t a i n e r . _ r e a c t R o o t C o n t a i n e r   = = =   u n d e f i n e d ; 
 
         i f   ( i s M o d e r n R o o t )   { 
             e r r o r ( ' Y o u   a r e   c a l l i n g   R e a c t D O M . r e n d e r ( )   o n   a   c o n t a i n e r   t h a t   w a s   p r e v i o u s l y   '   +   ' p a s s e d   t o   R e a c t D O M C l i e n t . c r e a t e R o o t ( ) .   T h i s   i s   n o t   s u p p o r t e d .   '   +   ' D i d   y o u   m e a n   t o   c a l l   r o o t . r e n d e r ( e l e m e n t ) ? ' ) ; 
         } 
     } 
 
     r e t u r n   l e g a c y R e n d e r S u b t r e e I n t o C o n t a i n e r ( n u l l ,   e l e m e n t ,   c o n t a i n e r ,   f a l s e ,   c a l l b a c k ) ; 
 } 
 f u n c t i o n   u n s t a b l e _ r e n d e r S u b t r e e I n t o C o n t a i n e r ( p a r e n t C o m p o n e n t ,   e l e m e n t ,   c o n t a i n e r N o d e ,   c a l l b a c k )   { 
     { 
         e r r o r ( ' R e a c t D O M . u n s t a b l e _ r e n d e r S u b t r e e I n t o C o n t a i n e r ( )   i s   n o   l o n g e r   s u p p o r t e d   '   +   ' i n   R e a c t   1 8 .   C o n s i d e r   u s i n g   a   p o r t a l   i n s t e a d .   U n t i l   y o u   s w i t c h   t o   '   +   " t h e   c r e a t e R o o t   A P I ,   y o u r   a p p   w i l l   b e h a v e   a s   i f   i t ' s   r u n n i n g   R e a c t   "   +   ' 1 7 .   L e a r n   m o r e :   h t t p s : / / r e a c t j s . o r g / l i n k / s w i t c h - t o - c r e a t e r o o t ' ) ; 
     } 
 
     i f   ( ! i s V a l i d C o n t a i n e r L e g a c y ( c o n t a i n e r N o d e ) )   { 
         t h r o w   n e w   E r r o r ( ' T a r g e t   c o n t a i n e r   i s   n o t   a   D O M   e l e m e n t . ' ) ; 
     } 
 
     i f   ( p a r e n t C o m p o n e n t   = =   n u l l   | |   ! h a s ( p a r e n t C o m p o n e n t ) )   { 
         t h r o w   n e w   E r r o r ( ' p a r e n t C o m p o n e n t   m u s t   b e   a   v a l i d   R e a c t   C o m p o n e n t ' ) ; 
     } 
 
     r e t u r n   l e g a c y R e n d e r S u b t r e e I n t o C o n t a i n e r ( p a r e n t C o m p o n e n t ,   e l e m e n t ,   c o n t a i n e r N o d e ,   f a l s e ,   c a l l b a c k ) ; 
 } 
 f u n c t i o n   u n m o u n t C o m p o n e n t A t N o d e ( c o n t a i n e r )   { 
     i f   ( ! i s V a l i d C o n t a i n e r L e g a c y ( c o n t a i n e r ) )   { 
         t h r o w   n e w   E r r o r ( ' u n m o u n t C o m p o n e n t A t N o d e ( . . . ) :   T a r g e t   c o n t a i n e r   i s   n o t   a   D O M   e l e m e n t . ' ) ; 
     } 
 
     { 
         v a r   i s M o d e r n R o o t   =   i s C o n t a i n e r M a r k e d A s R o o t ( c o n t a i n e r )   & &   c o n t a i n e r . _ r e a c t R o o t C o n t a i n e r   = = =   u n d e f i n e d ; 
 
         i f   ( i s M o d e r n R o o t )   { 
             e r r o r ( ' Y o u   a r e   c a l l i n g   R e a c t D O M . u n m o u n t C o m p o n e n t A t N o d e ( )   o n   a   c o n t a i n e r   t h a t   w a s   p r e v i o u s l y   '   +   ' p a s s e d   t o   R e a c t D O M C l i e n t . c r e a t e R o o t ( ) .   T h i s   i s   n o t   s u p p o r t e d .   D i d   y o u   m e a n   t o   c a l l   r o o t . u n m o u n t ( ) ? ' ) ; 
         } 
     } 
 
     i f   ( c o n t a i n e r . _ r e a c t R o o t C o n t a i n e r )   { 
         { 
             v a r   r o o t E l   =   g e t R e a c t R o o t E l e m e n t I n C o n t a i n e r ( c o n t a i n e r ) ; 
             v a r   r e n d e r e d B y D i f f e r e n t R e a c t   =   r o o t E l   & &   ! g e t I n s t a n c e F r o m N o d e ( r o o t E l ) ; 
 
             i f   ( r e n d e r e d B y D i f f e r e n t R e a c t )   { 
                 e r r o r ( " u n m o u n t C o m p o n e n t A t N o d e ( ) :   T h e   n o d e   y o u ' r e   a t t e m p t i n g   t o   u n m o u n t   "   +   ' w a s   r e n d e r e d   b y   a n o t h e r   c o p y   o f   R e a c t . ' ) ; 
             } 
         }   / /   U n m o u n t   s h o u l d   n o t   b e   b a t c h e d . 
 
 
         f l u s h S y n c ( f u n c t i o n   ( )   { 
             l e g a c y R e n d e r S u b t r e e I n t o C o n t a i n e r ( n u l l ,   n u l l ,   c o n t a i n e r ,   f a l s e ,   f u n c t i o n   ( )   { 
                 / /   $ F l o w F i x M e   T h i s   s h o u l d   p r o b a b l y   u s e   ` d e l e t e   c o n t a i n e r . _ r e a c t R o o t C o n t a i n e r ` 
                 c o n t a i n e r . _ r e a c t R o o t C o n t a i n e r   =   n u l l ; 
                 u n m a r k C o n t a i n e r A s R o o t ( c o n t a i n e r ) ; 
             } ) ; 
         } ) ;   / /   I f   y o u   c a l l   u n m o u n t C o m p o n e n t A t N o d e   t w i c e   i n   q u i c k   s u c c e s s i o n ,   y o u ' l l 
         / /   g e t   ` t r u e `   t w i c e .   T h a t ' s   p r o b a b l y   f i n e ? 
 
         r e t u r n   t r u e ; 
     }   e l s e   { 
         { 
             v a r   _ r o o t E l   =   g e t R e a c t R o o t E l e m e n t I n C o n t a i n e r ( c o n t a i n e r ) ; 
 
             v a r   h a s N o n R o o t R e a c t C h i l d   =   ! ! ( _ r o o t E l   & &   g e t I n s t a n c e F r o m N o d e ( _ r o o t E l ) ) ;   / /   C h e c k   i f   t h e   c o n t a i n e r   i t s e l f   i s   a   R e a c t   r o o t   n o d e . 
 
             v a r   i s C o n t a i n e r R e a c t R o o t   =   c o n t a i n e r . n o d e T y p e   = = =   E L E M E N T _ N O D E   & &   i s V a l i d C o n t a i n e r L e g a c y ( c o n t a i n e r . p a r e n t N o d e )   & &   ! ! c o n t a i n e r . p a r e n t N o d e . _ r e a c t R o o t C o n t a i n e r ; 
 
             i f   ( h a s N o n R o o t R e a c t C h i l d )   { 
                 e r r o r ( " u n m o u n t C o m p o n e n t A t N o d e ( ) :   T h e   n o d e   y o u ' r e   a t t e m p t i n g   t o   u n m o u n t   "   +   ' w a s   r e n d e r e d   b y   R e a c t   a n d   i s   n o t   a   t o p - l e v e l   c o n t a i n e r .   % s ' ,   i s C o n t a i n e r R e a c t R o o t   ?   ' Y o u   m a y   h a v e   a c c i d e n t a l l y   p a s s e d   i n   a   R e a c t   r o o t   n o d e   i n s t e a d   '   +   ' o f   i t s   c o n t a i n e r . '   :   ' I n s t e a d ,   h a v e   t h e   p a r e n t   c o m p o n e n t   u p d a t e   i t s   s t a t e   a n d   '   +   ' r e r e n d e r   i n   o r d e r   t o   r e m o v e   t h i s   c o m p o n e n t . ' ) ; 
             } 
         } 
 
         r e t u r n   f a l s e ; 
     } 
 } 
 
 s e t A t t e m p t S y n c h r o n o u s H y d r a t i o n ( a t t e m p t S y n c h r o n o u s H y d r a t i o n $ 1 ) ; 
 s e t A t t e m p t C o n t i n u o u s H y d r a t i o n ( a t t e m p t C o n t i n u o u s H y d r a t i o n $ 1 ) ; 
 s e t A t t e m p t H y d r a t i o n A t C u r r e n t P r i o r i t y ( a t t e m p t H y d r a t i o n A t C u r r e n t P r i o r i t y $ 1 ) ; 
 s e t G e t C u r r e n t U p d a t e P r i o r i t y ( g e t C u r r e n t U p d a t e P r i o r i t y ) ; 
 s e t A t t e m p t H y d r a t i o n A t P r i o r i t y ( r u n W i t h P r i o r i t y ) ; 
 
 { 
     i f   ( t y p e o f   M a p   ! = =   ' f u n c t i o n '   | |   / /   $ F l o w I s s u e   F l o w   i n c o r r e c t l y   t h i n k s   M a p   h a s   n o   p r o t o t y p e 
     M a p . p r o t o t y p e   = =   n u l l   | |   t y p e o f   M a p . p r o t o t y p e . f o r E a c h   ! = =   ' f u n c t i o n '   | |   t y p e o f   S e t   ! = =   ' f u n c t i o n '   | |   / /   $ F l o w I s s u e   F l o w   i n c o r r e c t l y   t h i n k s   S e t   h a s   n o   p r o t o t y p e 
     S e t . p r o t o t y p e   = =   n u l l   | |   t y p e o f   S e t . p r o t o t y p e . c l e a r   ! = =   ' f u n c t i o n '   | |   t y p e o f   S e t . p r o t o t y p e . f o r E a c h   ! = =   ' f u n c t i o n ' )   { 
         e r r o r ( ' R e a c t   d e p e n d s   o n   M a p   a n d   S e t   b u i l t - i n   t y p e s .   M a k e   s u r e   t h a t   y o u   l o a d   a   '   +   ' p o l y f i l l   i n   o l d e r   b r o w s e r s .   h t t p s : / / r e a c t j s . o r g / l i n k / r e a c t - p o l y f i l l s ' ) ; 
     } 
 } 
 
 s e t R e s t o r e I m p l e m e n t a t i o n ( r e s t o r e C o n t r o l l e d S t a t e $ 3 ) ; 
 s e t B a t c h i n g I m p l e m e n t a t i o n ( b a t c h e d U p d a t e s $ 1 ,   d i s c r e t e U p d a t e s ,   f l u s h S y n c ) ; 
 
 f u n c t i o n   c r e a t e P o r t a l $ 1 ( c h i l d r e n ,   c o n t a i n e r )   { 
     v a r   k e y   =   a r g u m e n t s . l e n g t h   >   2   & &   a r g u m e n t s [ 2 ]   ! = =   u n d e f i n e d   ?   a r g u m e n t s [ 2 ]   :   n u l l ; 
 
     i f   ( ! i s V a l i d C o n t a i n e r ( c o n t a i n e r ) )   { 
         t h r o w   n e w   E r r o r ( ' T a r g e t   c o n t a i n e r   i s   n o t   a   D O M   e l e m e n t . ' ) ; 
     }   / /   T O D O :   p a s s   R e a c t D O M   p o r t a l   i m p l e m e n t a t i o n   a s   t h i r d   a r g u m e n t 
     / /   $ F l o w F i x M e   T h e   F l o w   t y p e   i s   o p a q u e   b u t   t h e r e ' s   n o   w a y   t o   a c t u a l l y   c r e a t e   i t . 
 
 
     r e t u r n   c r e a t e P o r t a l ( c h i l d r e n ,   c o n t a i n e r ,   n u l l ,   k e y ) ; 
 } 
 
 f u n c t i o n   r e n d e r S u b t r e e I n t o C o n t a i n e r ( p a r e n t C o m p o n e n t ,   e l e m e n t ,   c o n t a i n e r N o d e ,   c a l l b a c k )   { 
     r e t u r n   u n s t a b l e _ r e n d e r S u b t r e e I n t o C o n t a i n e r ( p a r e n t C o m p o n e n t ,   e l e m e n t ,   c o n t a i n e r N o d e ,   c a l l b a c k ) ; 
 } 
 
 v a r   I n t e r n a l s   =   { 
     u s i n g C l i e n t E n t r y P o i n t :   f a l s e , 
     / /   K e e p   i n   s y n c   w i t h   R e a c t T e s t U t i l s . j s . 
     / /   T h i s   i s   a n   a r r a y   f o r   b e t t e r   m i n i f i c a t i o n . 
     E v e n t s :   [ g e t I n s t a n c e F r o m N o d e ,   g e t N o d e F r o m I n s t a n c e ,   g e t F i b e r C u r r e n t P r o p s F r o m N o d e ,   e n q u e u e S t a t e R e s t o r e ,   r e s t o r e S t a t e I f N e e d e d ,   b a t c h e d U p d a t e s $ 1 ] 
 } ; 
 
 f u n c t i o n   c r e a t e R o o t $ 1 ( c o n t a i n e r ,   o p t i o n s )   { 
     { 
         i f   ( ! I n t e r n a l s . u s i n g C l i e n t E n t r y P o i n t   & &   ! f a l s e )   { 
             e r r o r ( ' Y o u   a r e   i m p o r t i n g   c r e a t e R o o t   f r o m   " r e a c t - d o m "   w h i c h   i s   n o t   s u p p o r t e d .   '   +   ' Y o u   s h o u l d   i n s t e a d   i m p o r t   i t   f r o m   " r e a c t - d o m / c l i e n t " . ' ) ; 
         } 
     } 
 
     r e t u r n   c r e a t e R o o t ( c o n t a i n e r ,   o p t i o n s ) ; 
 } 
 
 f u n c t i o n   h y d r a t e R o o t $ 1 ( c o n t a i n e r ,   i n i t i a l C h i l d r e n ,   o p t i o n s )   { 
     { 
         i f   ( ! I n t e r n a l s . u s i n g C l i e n t E n t r y P o i n t   & &   ! f a l s e )   { 
             e r r o r ( ' Y o u   a r e   i m p o r t i n g   h y d r a t e R o o t   f r o m   " r e a c t - d o m "   w h i c h   i s   n o t   s u p p o r t e d .   '   +   ' Y o u   s h o u l d   i n s t e a d   i m p o r t   i t   f r o m   " r e a c t - d o m / c l i e n t " . ' ) ; 
         } 
     } 
 
     r e t u r n   h y d r a t e R o o t ( c o n t a i n e r ,   i n i t i a l C h i l d r e n ,   o p t i o n s ) ; 
 }   / /   O v e r l o a d   t h e   d e f i n i t i o n   t o   t h e   t w o   v a l i d   s i g n a t u r e s . 
 / /   W a r n i n g ,   t h i s   o p t s - o u t   o f   c h e c k i n g   t h e   f u n c t i o n   b o d y . 
 
 
 / /   e s l i n t - d i s a b l e - n e x t - l i n e   n o - r e d e c l a r e 
 f u n c t i o n   f l u s h S y n c $ 1 ( f n )   { 
     { 
         i f   ( i s A l r e a d y R e n d e r i n g ( ) )   { 
             e r r o r ( ' f l u s h S y n c   w a s   c a l l e d   f r o m   i n s i d e   a   l i f e c y c l e   m e t h o d .   R e a c t   c a n n o t   '   +   ' f l u s h   w h e n   R e a c t   i s   a l r e a d y   r e n d e r i n g .   C o n s i d e r   m o v i n g   t h i s   c a l l   t o   '   +   ' a   s c h e d u l e r   t a s k   o r   m i c r o   t a s k . ' ) ; 
         } 
     } 
 
     r e t u r n   f l u s h S y n c ( f n ) ; 
 } 
 v a r   f o u n d D e v T o o l s   =   i n j e c t I n t o D e v T o o l s ( { 
     f i n d F i b e r B y H o s t I n s t a n c e :   g e t C l o s e s t I n s t a n c e F r o m N o d e , 
     b u n d l e T y p e :     1   , 
     v e r s i o n :   R e a c t V e r s i o n , 
     r e n d e r e r P a c k a g e N a m e :   ' r e a c t - d o m ' 
 } ) ; 
 
 { 
     i f   ( ! f o u n d D e v T o o l s   & &   c a n U s e D O M   & &   w i n d o w . t o p   = = =   w i n d o w . s e l f )   { 
         / /   I f   w e ' r e   i n   C h r o m e   o r   F i r e f o x ,   p r o v i d e   a   d o w n l o a d   l i n k   i f   n o t   i n s t a l l e d . 
         i f   ( n a v i g a t o r . u s e r A g e n t . i n d e x O f ( ' C h r o m e ' )   >   - 1   & &   n a v i g a t o r . u s e r A g e n t . i n d e x O f ( ' E d g e ' )   = = =   - 1   | |   n a v i g a t o r . u s e r A g e n t . i n d e x O f ( ' F i r e f o x ' )   >   - 1 )   { 
             v a r   p r o t o c o l   =   w i n d o w . l o c a t i o n . p r o t o c o l ;   / /   D o n ' t   w a r n   i n   e x o t i c   c a s e s   l i k e   c h r o m e - e x t e n s i o n : / / . 
 
             i f   ( / ^ ( h t t p s ? | f i l e ) : $ / . t e s t ( p r o t o c o l ) )   { 
                 / /   e s l i n t - d i s a b l e - n e x t - l i n e   r e a c t - i n t e r n a l / n o - p r o d u c t i o n - l o g g i n g 
                 c o n s o l e . i n f o ( ' % c D o w n l o a d   t h e   R e a c t   D e v T o o l s   '   +   ' f o r   a   b e t t e r   d e v e l o p m e n t   e x p e r i e n c e :   '   +   ' h t t p s : / / r e a c t j s . o r g / l i n k / r e a c t - d e v t o o l s '   +   ( p r o t o c o l   = = =   ' f i l e : '   ?   ' \ n Y o u   m i g h t   n e e d   t o   u s e   a   l o c a l   H T T P   s e r v e r   ( i n s t e a d   o f   f i l e : / / ) :   '   +   ' h t t p s : / / r e a c t j s . o r g / l i n k / r e a c t - d e v t o o l s - f a q '   :   ' ' ) ,   ' f o n t - w e i g h t : b o l d ' ) ; 
             } 
         } 
     } 
 } 
 
 e x p o r t s . _ _ S E C R E T _ I N T E R N A L S _ D O _ N O T _ U S E _ O R _ Y O U _ W I L L _ B E _ F I R E D   =   I n t e r n a l s ; 
 e x p o r t s . c r e a t e P o r t a l   =   c r e a t e P o r t a l $ 1 ; 
 e x p o r t s . c r e a t e R o o t   =   c r e a t e R o o t $ 1 ; 
 e x p o r t s . f i n d D O M N o d e   =   f i n d D O M N o d e ; 
 e x p o r t s . f l u s h S y n c   =   f l u s h S y n c $ 1 ; 
 e x p o r t s . h y d r a t e   =   h y d r a t e ; 
 e x p o r t s . h y d r a t e R o o t   =   h y d r a t e R o o t $ 1 ; 
 e x p o r t s . r e n d e r   =   r e n d e r ; 
 e x p o r t s . u n m o u n t C o m p o n e n t A t N o d e   =   u n m o u n t C o m p o n e n t A t N o d e ; 
 e x p o r t s . u n s t a b l e _ b a t c h e d U p d a t e s   =   b a t c h e d U p d a t e s $ 1 ; 
 e x p o r t s . u n s t a b l e _ r e n d e r S u b t r e e I n t o C o n t a i n e r   =   r e n d e r S u b t r e e I n t o C o n t a i n e r ; 
 e x p o r t s . v e r s i o n   =   R e a c t V e r s i o n ; 
                     / *   g l o b a l   _ _ R E A C T _ D E V T O O L S _ G L O B A L _ H O O K _ _   * / 
 i f   ( 
     t y p e o f   _ _ R E A C T _ D E V T O O L S _ G L O B A L _ H O O K _ _   ! = =   ' u n d e f i n e d '   & & 
     t y p e o f   _ _ R E A C T _ D E V T O O L S _ G L O B A L _ H O O K _ _ . r e g i s t e r I n t e r n a l M o d u l e S t o p   = = = 
         ' f u n c t i o n ' 
 )   { 
     _ _ R E A C T _ D E V T O O L S _ G L O B A L _ H O O K _ _ . r e g i s t e r I n t e r n a l M o d u l e S t o p ( n e w   E r r o r ( ) ) ; 
 } 
                 
     } ) ( ) ; 
 } 
 "ы'use strict';

var m = require('react-dom');
if (process.env.NODE_ENV === 'production') {
  exports.createRoot = m.createRoot;
  exports.hydrateRoot = m.hydrateRoot;
} else {
  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  exports.createRoot = function(c, o) {
    i.usingClientEntryPoint = true;
    try {
      return m.createRoot(c, o);
    } finally {
      i.usingClientEntryPoint = false;
    }
  };
  exports.hydrateRoot = function(c, h, o) {
    i.usingClientEntryPoint = true;
    try {
      return m.hydrateRoot(c, h, o);
    } finally {
      i.usingClientEntryPoint = false;
    }
  };
}
"╙
'use strict';

function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (process.env.NODE_ENV !== 'production') {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (process.env.NODE_ENV === 'production') {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = require('./cjs/react-dom.production.min.js');
} else {
  module.exports = require('./cjs/react-dom.development.js');
}
"Дн/** @license React vundefined
 * react-refresh-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE = 0xeac7;
var REACT_PORTAL_TYPE = 0xeaca;
var REACT_FRAGMENT_TYPE = 0xeacb;
var REACT_STRICT_MODE_TYPE = 0xeacc;
var REACT_PROFILER_TYPE = 0xead2;
var REACT_PROVIDER_TYPE = 0xeacd;
var REACT_CONTEXT_TYPE = 0xeace;
var REACT_FORWARD_REF_TYPE = 0xead0;
var REACT_SUSPENSE_TYPE = 0xead1;
var REACT_SUSPENSE_LIST_TYPE = 0xead8;
var REACT_MEMO_TYPE = 0xead3;
var REACT_LAZY_TYPE = 0xead4;
var REACT_SCOPE_TYPE = 0xead7;
var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
var REACT_OFFSCREEN_TYPE = 0xeae2;
var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;
var REACT_CACHE_TYPE = 0xeae4;

if (typeof Symbol === 'function' && Symbol.for) {
  var symbolFor = Symbol.for;
  REACT_ELEMENT_TYPE = symbolFor('react.element');
  REACT_PORTAL_TYPE = symbolFor('react.portal');
  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');
  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
  REACT_PROFILER_TYPE = symbolFor('react.profiler');
  REACT_PROVIDER_TYPE = symbolFor('react.provider');
  REACT_CONTEXT_TYPE = symbolFor('react.context');
  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
  REACT_MEMO_TYPE = symbolFor('react.memo');
  REACT_LAZY_TYPE = symbolFor('react.lazy');
  REACT_SCOPE_TYPE = symbolFor('react.scope');
  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
  REACT_CACHE_TYPE = symbolFor('react.cache');
}

var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map; // We never remove these associations.
// It's OK to reference families, but use WeakMap/Set for types.

var allFamiliesByID = new Map();
var allFamiliesByType = new PossiblyWeakMap();
var allSignaturesByType = new PossiblyWeakMap(); // This WeakMap is read by React, so we only put families
// that have actually been edited here. This keeps checks fast.
// $FlowIssue

var updatedFamiliesByType = new PossiblyWeakMap(); // This is cleared on every performReactRefresh() call.
// It is an array of [Family, NextType] tuples.

var pendingUpdates = []; // This is injected by the renderer via DevTools global hook.

var helpersByRendererID = new Map();
var helpersByRoot = new Map(); // We keep track of mounted roots so we can schedule updates.

var mountedRoots = new Set(); // If a root captures an error, we remember it so we can retry on edit.

var failedRoots = new Set(); // In environments that support WeakMap, we also remember the last element for every root.
// It needs to be weak because we do this even for roots that failed to mount.
// If there is no WeakMap, we won't attempt to do retrying.
// $FlowIssue

var rootElements = // $FlowIssue
typeof WeakMap === 'function' ? new WeakMap() : null;
var isPerformingRefresh = false;

function computeFullKey(signature) {
  if (signature.fullKey !== null) {
    return signature.fullKey;
  }

  var fullKey = signature.ownKey;
  var hooks;

  try {
    hooks = signature.getCustomHooks();
  } catch (err) {
    // This can happen in an edge case, e.g. if expression like Foo.useSomething
    // depends on Foo which is lazily initialized during rendering.
    // In that case just assume we'll have to remount.
    signature.forceReset = true;
    signature.fullKey = fullKey;
    return fullKey;
  }

  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];

    if (typeof hook !== 'function') {
      // Something's wrong. Assume we need to remount.
      signature.forceReset = true;
      signature.fullKey = fullKey;
      return fullKey;
    }

    var nestedHookSignature = allSignaturesByType.get(hook);

    if (nestedHookSignature === undefined) {
      // No signature means Hook wasn't in the source code, e.g. in a library.
      // We'll skip it because we can assume it won't change during this session.
      continue;
    }

    var nestedHookKey = computeFullKey(nestedHookSignature);

    if (nestedHookSignature.forceReset) {
      signature.forceReset = true;
    }

    fullKey += '\n---\n' + nestedHookKey;
  }

  signature.fullKey = fullKey;
  return fullKey;
}

function haveEqualSignatures(prevType, nextType) {
  var prevSignature = allSignaturesByType.get(prevType);
  var nextSignature = allSignaturesByType.get(nextType);

  if (prevSignature === undefined && nextSignature === undefined) {
    return true;
  }

  if (prevSignature === undefined || nextSignature === undefined) {
    return false;
  }

  if (computeFullKey(prevSignature) !== computeFullKey(nextSignature)) {
    return false;
  }

  if (nextSignature.forceReset) {
    return false;
  }

  return true;
}

function isReactClass(type) {
  return type.prototype && type.prototype.isReactComponent;
}

function canPreserveStateBetween(prevType, nextType) {
  if (isReactClass(prevType) || isReactClass(nextType)) {
    return false;
  }

  if (haveEqualSignatures(prevType, nextType)) {
    return true;
  }

  return false;
}

function resolveFamily(type) {
  // Only check updated types to keep lookups fast.
  return updatedFamiliesByType.get(type);
} // If we didn't care about IE11, we could use new Map/Set(iterable).


function cloneMap(map) {
  var clone = new Map();
  map.forEach(function (value, key) {
    clone.set(key, value);
  });
  return clone;
}

function cloneSet(set) {
  var clone = new Set();
  set.forEach(function (value) {
    clone.add(value);
  });
  return clone;
} // This is a safety mechanism to protect against rogue getters and Proxies.


function getProperty(object, property) {
  try {
    return object[property];
  } catch (err) {
    // Intentionally ignore.
    return undefined;
  }
}

function performReactRefresh() {

  if (pendingUpdates.length === 0) {
    return null;
  }

  if (isPerformingRefresh) {
    return null;
  }

  isPerformingRefresh = true;

  try {
    var staleFamilies = new Set();
    var updatedFamilies = new Set();
    var updates = pendingUpdates;
    pendingUpdates = [];
    updates.forEach(function (_ref) {
      var family = _ref[0],
          nextType = _ref[1];
      // Now that we got a real edit, we can create associations
      // that will be read by the React reconciler.
      var prevType = family.current;
      updatedFamiliesByType.set(prevType, family);
      updatedFamiliesByType.set(nextType, family);
      family.current = nextType; // Determine whether this should be a re-render or a re-mount.

      if (canPreserveStateBetween(prevType, nextType)) {
        updatedFamilies.add(family);
      } else {
        staleFamilies.add(family);
      }
    }); // TODO: rename these fields to something more meaningful.

    var update = {
      updatedFamilies: updatedFamilies,
      // Families that will re-render preserving state
      staleFamilies: staleFamilies // Families that will be remounted

    };
    helpersByRendererID.forEach(function (helpers) {
      // Even if there are no roots, set the handler on first update.
      // This ensures that if *new* roots are mounted, they'll use the resolve handler.
      helpers.setRefreshHandler(resolveFamily);
    });
    var didError = false;
    var firstError = null; // We snapshot maps and sets that are mutated during commits.
    // If we don't do this, there is a risk they will be mutated while
    // we iterate over them. For example, trying to recover a failed root
    // may cause another root to be added to the failed list -- an infinite loop.

    var failedRootsSnapshot = cloneSet(failedRoots);
    var mountedRootsSnapshot = cloneSet(mountedRoots);
    var helpersByRootSnapshot = cloneMap(helpersByRoot);
    failedRootsSnapshot.forEach(function (root) {
      var helpers = helpersByRootSnapshot.get(root);

      if (helpers === undefined) {
        throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');
      }

      if (!failedRoots.has(root)) {// No longer failed.
      }

      if (rootElements === null) {
        return;
      }

      if (!rootElements.has(root)) {
        return;
      }

      var element = rootElements.get(root);

      try {
        helpers.scheduleRoot(root, element);
      } catch (err) {
        if (!didError) {
          didError = true;
          firstError = err;
        } // Keep trying other roots.

      }
    });
    mountedRootsSnapshot.forEach(function (root) {
      var helpers = helpersByRootSnapshot.get(root);

      if (helpers === undefined) {
        throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');
      }

      if (!mountedRoots.has(root)) {// No longer mounted.
      }

      try {
        helpers.scheduleRefresh(root, update);
      } catch (err) {
        if (!didError) {
          didError = true;
          firstError = err;
        } // Keep trying other roots.

      }
    });

    if (didError) {
      throw firstError;
    }

    return update;
  } finally {
    isPerformingRefresh = false;
  }
}
function register(type, id) {
  {
    if (type === null) {
      return;
    }

    if (typeof type !== 'function' && typeof type !== 'object') {
      return;
    } // This can happen in an edge case, e.g. if we register
    // return value of a HOC but it returns a cached component.
    // Ignore anything but the first registration for each type.


    if (allFamiliesByType.has(type)) {
      return;
    } // Create family or remember to update it.
    // None of this bookkeeping affects reconciliation
    // until the first performReactRefresh() call above.


    var family = allFamiliesByID.get(id);

    if (family === undefined) {
      family = {
        current: type
      };
      allFamiliesByID.set(id, family);
    } else {
      pendingUpdates.push([family, type]);
    }

    allFamiliesByType.set(type, family); // Visit inner types because we might not have registered them.

    if (typeof type === 'object' && type !== null) {
      switch (getProperty(type, '$$typeof')) {
        case REACT_FORWARD_REF_TYPE:
          register(type.render, id + '$render');
          break;

        case REACT_MEMO_TYPE:
          register(type.type, id + '$type');
          break;
      }
    }
  }
}
function setSignature(type, key) {
  var forceReset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var getCustomHooks = arguments.length > 3 ? arguments[3] : undefined;

  {
    if (!allSignaturesByType.has(type)) {
      allSignaturesByType.set(type, {
        forceReset: forceReset,
        ownKey: key,
        fullKey: null,
        getCustomHooks: getCustomHooks || function () {
          return [];
        }
      });
    } // Visit inner types because we might not have signed them.


    if (typeof type === 'object' && type !== null) {
      switch (getProperty(type, '$$typeof')) {
        case REACT_FORWARD_REF_TYPE:
          setSignature(type.render, key, forceReset, getCustomHooks);
          break;

        case REACT_MEMO_TYPE:
          setSignature(type.type, key, forceReset, getCustomHooks);
          break;
      }
    }
  }
} // This is lazily called during first render for a type.
// It captures Hook list at that time so inline requires don't break comparisons.

function collectCustomHooksForSignature(type) {
  {
    var signature = allSignaturesByType.get(type);

    if (signature !== undefined) {
      computeFullKey(signature);
    }
  }
}
function getFamilyByID(id) {
  {
    return allFamiliesByID.get(id);
  }
}
function getFamilyByType(type) {
  {
    return allFamiliesByType.get(type);
  }
}
function findAffectedHostInstances(families) {
  {
    var affectedInstances = new Set();
    mountedRoots.forEach(function (root) {
      var helpers = helpersByRoot.get(root);

      if (helpers === undefined) {
        throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');
      }

      var instancesForRoot = helpers.findHostInstancesForRefresh(root, families);
      instancesForRoot.forEach(function (inst) {
        affectedInstances.add(inst);
      });
    });
    return affectedInstances;
  }
}
function injectIntoGlobalHook(globalObject) {
  {
    // For React Native, the global hook will be set up by require('react-devtools-core').
    // That code will run before us. So we need to monkeypatch functions on existing hook.
    // For React Web, the global hook will be set up by the extension.
    // This will also run before us.
    var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;

    if (hook === undefined) {
      // However, if there is no DevTools extension, we'll need to set up the global hook ourselves.
      // Note that in this case it's important that renderer code runs *after* this method call.
      // Otherwise, the renderer will think that there is no global hook, and won't do the injection.
      var nextID = 0;
      globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {
        renderers: new Map(),
        supportsFiber: true,
        inject: function (injected) {
          return nextID++;
        },
        onScheduleFiberRoot: function (id, root, children) {},
        onCommitFiberRoot: function (id, root, maybePriorityLevel, didError) {},
        onCommitFiberUnmount: function () {}
      };
    }

    if (hook.isDisabled) {
      // This isn't a real property on the hook, but it can be set to opt out
      // of DevTools integration and associated warnings and logs.
      // Using console['warn'] to evade Babel and ESLint
      console['warn']('Something has shimmed the React DevTools global hook (__REACT_DEVTOOLS_GLOBAL_HOOK__). ' + 'Fast Refresh is not compatible with this shim and will be disabled.');
      return;
    } // Here, we just want to get a reference to scheduleRefresh.


    var oldInject = hook.inject;

    hook.inject = function (injected) {
      var id = oldInject.apply(this, arguments);

      if (typeof injected.scheduleRefresh === 'function' && typeof injected.setRefreshHandler === 'function') {
        // This version supports React Refresh.
        helpersByRendererID.set(id, injected);
      }

      return id;
    }; // Do the same for any already injected roots.
    // This is useful if ReactDOM has already been initialized.
    // https://github.com/facebook/react/issues/17626


    hook.renderers.forEach(function (injected, id) {
      if (typeof injected.scheduleRefresh === 'function' && typeof injected.setRefreshHandler === 'function') {
        // This version supports React Refresh.
        helpersByRendererID.set(id, injected);
      }
    }); // We also want to track currently mounted roots.

    var oldOnCommitFiberRoot = hook.onCommitFiberRoot;

    var oldOnScheduleFiberRoot = hook.onScheduleFiberRoot || function () {};

    hook.onScheduleFiberRoot = function (id, root, children) {
      if (!isPerformingRefresh) {
        // If it was intentionally scheduled, don't attempt to restore.
        // This includes intentionally scheduled unmounts.
        failedRoots.delete(root);

        if (rootElements !== null) {
          rootElements.set(root, children);
        }
      }

      return oldOnScheduleFiberRoot.apply(this, arguments);
    };

    hook.onCommitFiberRoot = function (id, root, maybePriorityLevel, didError) {
      var helpers = helpersByRendererID.get(id);

      if (helpers !== undefined) {
        helpersByRoot.set(root, helpers);
        var current = root.current;
        var alternate = current.alternate; // We need to determine whether this root has just (un)mounted.
        // This logic is copy-pasted from similar logic in the DevTools backend.
        // If this breaks with some refactoring, you'll want to update DevTools too.

        if (alternate !== null) {
          var wasMounted = alternate.memoizedState != null && alternate.memoizedState.element != null;
          var isMounted = current.memoizedState != null && current.memoizedState.element != null;

          if (!wasMounted && isMounted) {
            // Mount a new root.
            mountedRoots.add(root);
            failedRoots.delete(root);
          } else if (wasMounted && isMounted) ; else if (wasMounted && !isMounted) {
            // Unmount an existing root.
            mountedRoots.delete(root);

            if (didError) {
              // We'll remount it on future edits.
              failedRoots.add(root);
            } else {
              helpersByRoot.delete(root);
            }
          } else if (!wasMounted && !isMounted) {
            if (didError) {
              // We'll remount it on future edits.
              failedRoots.add(root);
            }
          }
        } else {
          // Mount a new root.
          mountedRoots.add(root);
        }
      } // Always call the decorated DevTools hook.


      return oldOnCommitFiberRoot.apply(this, arguments);
    };
  }
}
function hasUnrecoverableErrors() {
  // TODO: delete this after removing dependency in RN.
  return false;
} // Exposed for testing.

function _getMountedRootCount() {
  {
    return mountedRoots.size;
  }
} // This is a wrapper over more primitive functions for setting signature.
// Signatures let us decide whether the Hook order has changed on refresh.
//
// This function is intended to be used as a transform target, e.g.:
// var _s = createSignatureFunctionForTransform()
//
// function Hello() {
//   const [foo, setFoo] = useState(0);
//   const value = useCustomHook();
//   _s(); /* Call without arguments triggers collecting the custom Hook list.
//          * This doesn't happen during the module evaluation because we
//          * don't want to change the module order with inline requires.
//          * Next calls are noops. */
//   return <h1>Hi</h1>;
// }
//
// /* Call with arguments attaches the signature to the type: */
// _s(
//   Hello,
//   'useState{[foo, setFoo]}(0)',
//   () => [useCustomHook], /* Lazy to avoid triggering inline requires */
// );

function createSignatureFunctionForTransform() {
  {
    var savedType;
    var hasCustomHooks;
    var didCollectHooks = false;
    return function (type, key, forceReset, getCustomHooks) {
      if (typeof key === 'string') {
        // We're in the initial phase that associates signatures
        // with the functions. Note this may be called multiple times
        // in HOC chains like _s(hoc1(_s(hoc2(_s(actualFunction))))).
        if (!savedType) {
          // We're in the innermost call, so this is the actual type.
          savedType = type;
          hasCustomHooks = typeof getCustomHooks === 'function';
        } // Set the signature for all types (even wrappers!) in case
        // they have no signatures of their own. This is to prevent
        // problems like https://github.com/facebook/react/issues/20417.


        if (type != null && (typeof type === 'function' || typeof type === 'object')) {
          setSignature(type, key, forceReset, getCustomHooks);
        }

        return type;
      } else {
        // We're in the _s() call without arguments, which means
        // this is the time to collect custom Hook signatures.
        // Only do this once. This path is hot and runs *inside* every render!
        if (!didCollectHooks && hasCustomHooks) {
          didCollectHooks = true;
          collectCustomHooksForSignature(savedType);
        }
      }
    };
  }
}
function isLikelyComponentType(type) {
  {
    switch (typeof type) {
      case 'function':
        {
          // First, deal with classes.
          if (type.prototype != null) {
            if (type.prototype.isReactComponent) {
              // React class.
              return true;
            }

            var ownNames = Object.getOwnPropertyNames(type.prototype);

            if (ownNames.length > 1 || ownNames[0] !== 'constructor') {
              // This looks like a class.
              return false;
            } // eslint-disable-next-line no-proto


            if (type.prototype.__proto__ !== Object.prototype) {
              // It has a superclass.
              return false;
            } // Pass through.
            // This looks like a regular function with empty prototype.

          } // For plain functions and arrows, use name as a heuristic.


          var name = type.name || type.displayName;
          return typeof name === 'string' && /^[A-Z]/.test(name);
        }

      case 'object':
        {
          if (type != null) {
            switch (getProperty(type, '$$typeof')) {
              case REACT_FORWARD_REF_TYPE:
              case REACT_MEMO_TYPE:
                // Definitely React components.
                return true;

              default:
                return false;
            }
          }

          return false;
        }

      default:
        {
          return false;
        }
    }
  }
}

exports._getMountedRootCount = _getMountedRootCount;
exports.collectCustomHooksForSignature = collectCustomHooksForSignature;
exports.createSignatureFunctionForTransform = createSignatureFunctionForTransform;
exports.findAffectedHostInstances = findAffectedHostInstances;
exports.getFamilyByID = getFamilyByID;
exports.getFamilyByType = getFamilyByType;
exports.hasUnrecoverableErrors = hasUnrecoverableErrors;
exports.injectIntoGlobalHook = injectIntoGlobalHook;
exports.isLikelyComponentType = isLikelyComponentType;
exports.performReactRefresh = performReactRefresh;
exports.register = register;
exports.setSignature = setSignature;
  })();
}
"▐'use strict';

if (process.env.NODE_ENV === 'production') {
  module.exports = require('./cjs/react-refresh-runtime.production.min.js');
} else {
  module.exports = require('./cjs/react-refresh-runtime.development.js');
}
"мm/**
 * NOTE: If you refactor this to split up the modules into separate files,
 * you'll need to update the rollup config for react-router-dom-v5-compat.
 */
import * as React from "react";
import type { BrowserHistory, HashHistory, History } from "history";
import { createBrowserHistory, createHashHistory } from "history";
import {
  MemoryRouter,
  Navigate,
  Outlet,
  Route,
  Router,
  Routes,
  createRoutesFromChildren,
  generatePath,
  matchRoutes,
  matchPath,
  createPath,
  parsePath,
  resolvePath,
  renderMatches,
  useHref,
  useInRouterContext,
  useLocation,
  useMatch,
  useNavigate,
  useNavigationType,
  useOutlet,
  useParams,
  useResolvedPath,
  useRoutes,
  useOutletContext,
} from "react-router";
import type { To } from "react-router";

function warning(cond: boolean, message: string): void {
  if (!cond) {
    // eslint-disable-next-line no-console
    if (typeof console !== "undefined") console.warn(message);

    try {
      // Welcome to debugging React Router!
      //
      // This error is thrown as a convenience so you can more easily
      // find the source for a warning that appears in the console by
      // enabling "pause on exceptions" in your JavaScript debugger.
      throw new Error(message);
      // eslint-disable-next-line no-empty
    } catch (e) {}
  }
}

////////////////////////////////////////////////////////////////////////////////
// RE-EXPORTS
////////////////////////////////////////////////////////////////////////////////

// Note: Keep in sync with react-router exports!
export {
  MemoryRouter,
  Navigate,
  Outlet,
  Route,
  Router,
  Routes,
  createRoutesFromChildren,
  generatePath,
  matchRoutes,
  matchPath,
  createPath,
  parsePath,
  renderMatches,
  resolvePath,
  useHref,
  useInRouterContext,
  useLocation,
  useMatch,
  useNavigate,
  useNavigationType,
  useOutlet,
  useParams,
  useResolvedPath,
  useRoutes,
  useOutletContext,
};

export { NavigationType } from "react-router";
export type {
  Hash,
  Location,
  Path,
  To,
  MemoryRouterProps,
  NavigateFunction,
  NavigateOptions,
  NavigateProps,
  Navigator,
  OutletProps,
  Params,
  PathMatch,
  RouteMatch,
  RouteObject,
  RouteProps,
  PathRouteProps,
  LayoutRouteProps,
  IndexRouteProps,
  RouterProps,
  Pathname,
  Search,
  RoutesProps,
} from "react-router";

///////////////////////////////////////////////////////////////////////////////
// DANGER! PLEASE READ ME!
// We provide these exports as an escape hatch in the event that you need any
// routing data that we don't provide an explicit API for. With that said, we
// want to cover your use case if we can, so if you feel the need to use these
// we want to hear from you. Let us know what you're building and we'll do our
// best to make sure we can support you!
//
// We consider these exports an implementation detail and do not guarantee
// against any breaking changes, regardless of the semver release. Use with
// extreme caution and only if you understand the consequences. Godspeed.
///////////////////////////////////////////////////////////////////////////////

/** @internal */
export {
  UNSAFE_NavigationContext,
  UNSAFE_LocationContext,
  UNSAFE_RouteContext,
} from "react-router";

////////////////////////////////////////////////////////////////////////////////
// COMPONENTS
////////////////////////////////////////////////////////////////////////////////

export interface BrowserRouterProps {
  basename?: string;
  children?: React.ReactNode;
  window?: Window;
}

/**
 * A `<Router>` for use in web browsers. Provides the cleanest URLs.
 */
export function BrowserRouter({
  basename,
  children,
  window,
}: BrowserRouterProps) {
  let historyRef = React.useRef<BrowserHistory>();
  if (historyRef.current == null) {
    historyRef.current = createBrowserHistory({ window });
  }

  let history = historyRef.current;
  let [state, setState] = React.useState({
    action: history.action,
    location: history.location,
  });

  React.useLayoutEffect(() => history.listen(setState), [history]);

  return (
    <Router
      basename={basename}
      children={children}
      location={state.location}
      navigationType={state.action}
      navigator={history}
    />
  );
}

export interface HashRouterProps {
  basename?: string;
  children?: React.ReactNode;
  window?: Window;
}

/**
 * A `<Router>` for use in web browsers. Stores the location in the hash
 * portion of the URL so it is not sent to the server.
 */
export function HashRouter({ basename, children, window }: HashRouterProps) {
  let historyRef = React.useRef<HashHistory>();
  if (historyRef.current == null) {
    historyRef.current = createHashHistory({ window });
  }

  let history = historyRef.current;
  let [state, setState] = React.useState({
    action: history.action,
    location: history.location,
  });

  React.useLayoutEffect(() => history.listen(setState), [history]);

  return (
    <Router
      basename={basename}
      children={children}
      location={state.location}
      navigationType={state.action}
      navigator={history}
    />
  );
}

export interface HistoryRouterProps {
  basename?: string;
  children?: React.ReactNode;
  history: History;
}

/**
 * A `<Router>` that accepts a pre-instantiated history object. It's important
 * to note that using your own history object is highly discouraged and may add
 * two versions of the history library to your bundles unless you use the same
 * version of the history library that React Router uses internally.
 */
function HistoryRouter({ basename, children, history }: HistoryRouterProps) {
  const [state, setState] = React.useState({
    action: history.action,
    location: history.location,
  });

  React.useLayoutEffect(() => history.listen(setState), [history]);

  return (
    <Router
      basename={basename}
      children={children}
      location={state.location}
      navigationType={state.action}
      navigator={history}
    />
  );
}

if (__DEV__) {
  HistoryRouter.displayName = "unstable_HistoryRouter";
}

export { HistoryRouter as unstable_HistoryRouter };

function isModifiedEvent(event: React.MouseEvent) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}

export interface LinkProps
  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, "href"> {
  reloadDocument?: boolean;
  replace?: boolean;
  state?: any;
  to: To;
}

/**
 * The public API for rendering a history-aware <a>.
 */
export const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(
  function LinkWithRef(
    { onClick, reloadDocument, replace = false, state, target, to, ...rest },
    ref
  ) {
    let href = useHref(to);
    let internalOnClick = useLinkClickHandler(to, { replace, state, target });
    function handleClick(
      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>
    ) {
      if (onClick) onClick(event);
      if (!event.defaultPrevented && !reloadDocument) {
        internalOnClick(event);
      }
    }

    return (
      // eslint-disable-next-line jsx-a11y/anchor-has-content
      <a
        {...rest}
        href={href}
        onClick={handleClick}
        ref={ref}
        target={target}
      />
    );
  }
);

if (__DEV__) {
  Link.displayName = "Link";
}

export interface NavLinkProps
  extends Omit<LinkProps, "className" | "style" | "children"> {
  children?:
    | React.ReactNode
    | ((props: { isActive: boolean }) => React.ReactNode);
  caseSensitive?: boolean;
  className?: string | ((props: { isActive: boolean }) => string | undefined);
  end?: boolean;
  style?:
    | React.CSSProperties
    | ((props: { isActive: boolean }) => React.CSSProperties);
}

/**
 * A <Link> wrapper that knows if it's "active" or not.
 */
export const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(
  function NavLinkWithRef(
    {
      "aria-current": ariaCurrentProp = "page",
      caseSensitive = false,
      className: classNameProp = "",
      end = false,
      style: styleProp,
      to,
      children,
      ...rest
    },
    ref
  ) {
    let location = useLocation();
    let path = useResolvedPath(to);

    let locationPathname = location.pathname;
    let toPathname = path.pathname;
    if (!caseSensitive) {
      locationPathname = locationPathname.toLowerCase();
      toPathname = toPathname.toLowerCase();
    }

    let isActive =
      locationPathname === toPathname ||
      (!end &&
        locationPathname.startsWith(toPathname) &&
        locationPathname.charAt(toPathname.length) === "/");

    let ariaCurrent = isActive ? ariaCurrentProp : undefined;

    let className: string | undefined;
    if (typeof classNameProp === "function") {
      className = classNameProp({ isActive });
    } else {
      // If the className prop is not a function, we use a default `active`
      // class for <NavLink />s that are active. In v5 `active` was the default
      // value for `activeClassName`, but we are removing that API and can still
      // use the old default behavior for a cleaner upgrade path and keep the
      // simple styling rules working as they currently do.
      className = [classNameProp, isActive ? "active" : null]
        .filter(Boolean)
        .join(" ");
    }

    let style =
      typeof styleProp === "function" ? styleProp({ isActive }) : styleProp;

    return (
      <Link
        {...rest}
        aria-current={ariaCurrent}
        className={className}
        ref={ref}
        style={style}
        to={to}
      >
        {typeof children === "function" ? children({ isActive }) : children}
      </Link>
    );
  }
);

if (__DEV__) {
  NavLink.displayName = "NavLink";
}

////////////////////////////////////////////////////////////////////////////////
// HOOKS
////////////////////////////////////////////////////////////////////////////////

/**
 * Handles the click behavior for router `<Link>` components. This is useful if
 * you need to create custom `<Link>` components with the same click behavior we
 * use in our exported `<Link>`.
 */
export function useLinkClickHandler<E extends Element = HTMLAnchorElement>(
  to: To,
  {
    target,
    replace: replaceProp,
    state,
  }: {
    target?: React.HTMLAttributeAnchorTarget;
    replace?: boolean;
    state?: any;
  } = {}
): (event: React.MouseEvent<E, MouseEvent>) => void {
  let navigate = useNavigate();
  let location = useLocation();
  let path = useResolvedPath(to);

  return React.useCallback(
    (event: React.MouseEvent<E, MouseEvent>) => {
      if (
        event.button === 0 && // Ignore everything but left clicks
        (!target || target === "_self") && // Let browser handle "target=_blank" etc.
        !isModifiedEvent(event) // Ignore clicks with modifier keys
      ) {
        event.preventDefault();

        // If the URL hasn't changed, a regular <a> will do a replace instead of
        // a push, so do the same here.
        let replace =
          !!replaceProp || createPath(location) === createPath(path);

        navigate(to, { replace, state });
      }
    },
    [location, navigate, path, replaceProp, state, target, to]
  );
}

/**
 * A convenient wrapper for reading and writing search parameters via the
 * URLSearchParams interface.
 */
export function useSearchParams(defaultInit?: URLSearchParamsInit) {
  warning(
    typeof URLSearchParams !== "undefined",
    `You cannot use the \`useSearchParams\` hook in a browser that does not ` +
      `support the URLSearchParams API. If you need to support Internet ` +
      `Explorer 11, we recommend you load a polyfill such as ` +
      `https://github.com/ungap/url-search-params\n\n` +
      `If you're unsure how to load polyfills, we recommend you check out ` +
      `https://polyfill.io/v3/ which provides some recommendations about how ` +
      `to load polyfills only for users that need them, instead of for every ` +
      `user.`
  );

  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));

  let location = useLocation();
  let searchParams = React.useMemo(() => {
    let searchParams = createSearchParams(location.search);

    for (let key of defaultSearchParamsRef.current.keys()) {
      if (!searchParams.has(key)) {
        defaultSearchParamsRef.current.getAll(key).forEach((value) => {
          searchParams.append(key, value);
        });
      }
    }

    return searchParams;
  }, [location.search]);

  let navigate = useNavigate();
  let setSearchParams = React.useCallback(
    (
      nextInit: URLSearchParamsInit,
      navigateOptions?: { replace?: boolean; state?: any }
    ) => {
      navigate("?" + createSearchParams(nextInit), navigateOptions);
    },
    [navigate]
  );

  return [searchParams, setSearchParams] as const;
}

export type ParamKeyValuePair = [string, string];

export type URLSearchParamsInit =
  | string
  | ParamKeyValuePair[]
  | Record<string, string | string[]>
  | URLSearchParams;

/**
 * Creates a URLSearchParams object using the given initializer.
 *
 * This is identical to `new URLSearchParams(init)` except it also
 * supports arrays as values in the object form of the initializer
 * instead of just strings. This is convenient when you need multiple
 * values for a given key, but don't want to use an array initializer.
 *
 * For example, instead of:
 *
 *   let searchParams = new URLSearchParams([
 *     ['sort', 'name'],
 *     ['sort', 'price']
 *   ]);
 *
 * you can do:
 *
 *   let searchParams = createSearchParams({
 *     sort: ['name', 'price']
 *   });
 */
export function createSearchParams(
  init: URLSearchParamsInit = ""
): URLSearchParams {
  return new URLSearchParams(
    typeof init === "string" ||
    Array.isArray(init) ||
    init instanceof URLSearchParams
      ? init
      : Object.keys(init).reduce((memo, key) => {
          let value = init[key];
          return memo.concat(
            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]
          );
        }, [] as ParamKeyValuePair[])
  );
}
"╥import * as React from "react";
import type { History, Location } from "history";
import { Action as NavigationType } from "history";

import type { RouteMatch } from "./router";

/**
 * A Navigator is a "location changer"; it's how you get to different locations.
 *
 * Every history instance conforms to the Navigator interface, but the
 * distinction is useful primarily when it comes to the low-level <Router> API
 * where both the location and a navigator must be provided separately in order
 * to avoid "tearing" that may occur in a suspense-enabled app if the action
 * and/or location were to be read directly from the history instance.
 */
export type Navigator = Pick<History, "go" | "push" | "replace" | "createHref">;

interface NavigationContextObject {
  basename: string;
  navigator: Navigator;
  static: boolean;
}

export const NavigationContext = React.createContext<NavigationContextObject>(
  null!
);

if (__DEV__) {
  NavigationContext.displayName = "Navigation";
}

interface LocationContextObject {
  location: Location;
  navigationType: NavigationType;
}

export const LocationContext = React.createContext<LocationContextObject>(
  null!
);

if (__DEV__) {
  LocationContext.displayName = "Location";
}

interface RouteContextObject {
  outlet: React.ReactElement | null;
  matches: RouteMatch[];
}

export const RouteContext = React.createContext<RouteContextObject>({
  outlet: null,
  matches: [],
});

if (__DEV__) {
  RouteContext.displayName = "Route";
}
"▒Хimport type { Location, Path, To } from "history";
import { parsePath } from "history";

export function invariant(cond: any, message: string): asserts cond {
  if (!cond) throw new Error(message);
}

export function warning(cond: any, message: string): void {
  if (!cond) {
    // eslint-disable-next-line no-console
    if (typeof console !== "undefined") console.warn(message);

    try {
      // Welcome to debugging React Router!
      //
      // This error is thrown as a convenience so you can more easily
      // find the source for a warning that appears in the console by
      // enabling "pause on exceptions" in your JavaScript debugger.
      throw new Error(message);
      // eslint-disable-next-line no-empty
    } catch (e) {}
  }
}

const alreadyWarned: Record<string, boolean> = {};
export function warningOnce(key: string, cond: boolean, message: string) {
  if (!cond && !alreadyWarned[key]) {
    alreadyWarned[key] = true;
    warning(false, message);
  }
}

type ParamParseFailed = { failed: true };

type ParamParseSegment<Segment extends string> =
  // Check here if there exists a forward slash in the string.
  Segment extends `${infer LeftSegment}/${infer RightSegment}`
    ? // If there is a forward slash, then attempt to parse each side of the
      // forward slash.
      ParamParseSegment<LeftSegment> extends infer LeftResult
      ? ParamParseSegment<RightSegment> extends infer RightResult
        ? LeftResult extends string
          ? // If the left side is successfully parsed as a param, then check if
            // the right side can be successfully parsed as well. If both sides
            // can be parsed, then the result is a union of the two sides
            // (read: "foo" | "bar").
            RightResult extends string
            ? LeftResult | RightResult
            : LeftResult
          : // If the left side is not successfully parsed as a param, then check
          // if only the right side can be successfully parse as a param. If it
          // can, then the result is just right, else it's a failure.
          RightResult extends string
          ? RightResult
          : ParamParseFailed
        : ParamParseFailed
      : // If the left side didn't parse into a param, then just check the right
      // side.
      ParamParseSegment<RightSegment> extends infer RightResult
      ? RightResult extends string
        ? RightResult
        : ParamParseFailed
      : ParamParseFailed
    : // If there's no forward slash, then check if this segment starts with a
    // colon. If it does, then this is a dynamic segment, so the result is
    // just the remainder of the string. Otherwise, it's a failure.
    Segment extends `:${infer Remaining}`
    ? Remaining
    : ParamParseFailed;

// Attempt to parse the given string segment. If it fails, then just return the
// plain string type as a default fallback. Otherwise return the union of the
// parsed string literals that were referenced as dynamic segments in the route.
export type ParamParseKey<Segment extends string> =
  ParamParseSegment<Segment> extends string
    ? ParamParseSegment<Segment>
    : string;

/**
 * The parameters that were parsed from the URL path.
 */
export type Params<Key extends string = string> = {
  readonly [key in Key]: string | undefined;
};

/**
 * A route object represents a logical route, with (optionally) its child
 * routes organized in a tree-like structure.
 */
export interface RouteObject {
  caseSensitive?: boolean;
  children?: RouteObject[];
  element?: React.ReactNode;
  index?: boolean;
  path?: string;
}

/**
 * Returns a path with params interpolated.
 *
 * @see https://reactrouter.com/docs/en/v6/api#generatepath
 */
export function generatePath(path: string, params: Params = {}): string {
  return path
    .replace(/:(\w+)/g, (_, key) => {
      invariant(params[key] != null, `Missing ":${key}" param`);
      return params[key]!;
    })
    .replace(/\/*\*$/, (_) =>
      params["*"] == null ? "" : params["*"].replace(/^\/*/, "/")
    );
}

/**
 * A RouteMatch contains info about how a route matched a URL.
 */
export interface RouteMatch<ParamKey extends string = string> {
  /**
   * The names and values of dynamic parameters in the URL.
   */
  params: Params<ParamKey>;
  /**
   * The portion of the URL pathname that was matched.
   */
  pathname: string;
  /**
   * The portion of the URL pathname that was matched before child routes.
   */
  pathnameBase: string;
  /**
   * The route object that was used to match.
   */
  route: RouteObject;
}

/**
 * Matches the given routes to a location and returns the match data.
 *
 * @see https://reactrouter.com/docs/en/v6/api#matchroutes
 */
export function matchRoutes(
  routes: RouteObject[],
  locationArg: Partial<Location> | string,
  basename = "/"
): RouteMatch[] | null {
  let location =
    typeof locationArg === "string" ? parsePath(locationArg) : locationArg;

  let pathname = stripBasename(location.pathname || "/", basename);

  if (pathname == null) {
    return null;
  }

  let branches = flattenRoutes(routes);
  rankRouteBranches(branches);

  let matches = null;
  for (let i = 0; matches == null && i < branches.length; ++i) {
    matches = matchRouteBranch(branches[i], pathname);
  }

  return matches;
}

interface RouteMeta {
  relativePath: string;
  caseSensitive: boolean;
  childrenIndex: number;
  route: RouteObject;
}

interface RouteBranch {
  path: string;
  score: number;
  routesMeta: RouteMeta[];
}

function flattenRoutes(
  routes: RouteObject[],
  branches: RouteBranch[] = [],
  parentsMeta: RouteMeta[] = [],
  parentPath = ""
): RouteBranch[] {
  routes.forEach((route, index) => {
    let meta: RouteMeta = {
      relativePath: route.path || "",
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index,
      route,
    };

    if (meta.relativePath.startsWith("/")) {
      invariant(
        meta.relativePath.startsWith(parentPath),
        `Absolute route path "${meta.relativePath}" nested under path ` +
          `"${parentPath}" is not valid. An absolute child route path ` +
          `must start with the combined path of all its parent routes.`
      );

      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }

    let path = joinPaths([parentPath, meta.relativePath]);
    let routesMeta = parentsMeta.concat(meta);

    // Add the children before adding this route to the array so we traverse the
    // route tree depth-first and child routes appear before their parents in
    // the "flattened" version.
    if (route.children && route.children.length > 0) {
      invariant(
        route.index !== true,
        `Index routes must not have child routes. Please remove ` +
          `all child routes from route path "${path}".`
      );

      flattenRoutes(route.children, branches, routesMeta, path);
    }

    // Routes without a path shouldn't ever match by themselves unless they are
    // index routes, so don't add them to the list of possible branches.
    if (route.path == null && !route.index) {
      return;
    }

    branches.push({ path, score: computeScore(path, route.index), routesMeta });
  });

  return branches;
}

function rankRouteBranches(branches: RouteBranch[]): void {
  branches.sort((a, b) =>
    a.score !== b.score
      ? b.score - a.score // Higher score first
      : compareIndexes(
          a.routesMeta.map((meta) => meta.childrenIndex),
          b.routesMeta.map((meta) => meta.childrenIndex)
        )
  );
}

const paramRe = /^:\w+$/;
const dynamicSegmentValue = 3;
const indexRouteValue = 2;
const emptySegmentValue = 1;
const staticSegmentValue = 10;
const splatPenalty = -2;
const isSplat = (s: string) => s === "*";

function computeScore(path: string, index: boolean | undefined): number {
  let segments = path.split("/");
  let initialScore = segments.length;
  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }

  if (index) {
    initialScore += indexRouteValue;
  }

  return segments
    .filter((s) => !isSplat(s))
    .reduce(
      (score, segment) =>
        score +
        (paramRe.test(segment)
          ? dynamicSegmentValue
          : segment === ""
          ? emptySegmentValue
          : staticSegmentValue),
      initialScore
    );
}

function compareIndexes(a: number[], b: number[]): number {
  let siblings =
    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);

  return siblings
    ? // If two routes are siblings, we should try to match the earlier sibling
      // first. This allows people to have fine-grained control over the matching
      // behavior by simply putting routes with identical paths in the order they
      // want them tried.
      a[a.length - 1] - b[b.length - 1]
    : // Otherwise, it doesn't really make sense to rank non-siblings by index,
      // so they sort equally.
      0;
}

function matchRouteBranch<ParamKey extends string = string>(
  branch: RouteBranch,
  pathname: string
): RouteMatch<ParamKey>[] | null {
  let { routesMeta } = branch;

  let matchedParams = {};
  let matchedPathname = "/";
  let matches: RouteMatch[] = [];
  for (let i = 0; i < routesMeta.length; ++i) {
    let meta = routesMeta[i];
    let end = i === routesMeta.length - 1;
    let remainingPathname =
      matchedPathname === "/"
        ? pathname
        : pathname.slice(matchedPathname.length) || "/";
    let match = matchPath(
      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },
      remainingPathname
    );

    if (!match) return null;

    Object.assign(matchedParams, match.params);

    let route = meta.route;

    matches.push({
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match.pathname]),
      pathnameBase: normalizePathname(
        joinPaths([matchedPathname, match.pathnameBase])
      ),
      route,
    });

    if (match.pathnameBase !== "/") {
      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);
    }
  }

  return matches;
}

/**
 * A PathPattern is used to match on some portion of a URL pathname.
 */
export interface PathPattern<Path extends string = string> {
  /**
   * A string to match against a URL pathname. May contain `:id`-style segments
   * to indicate placeholders for dynamic parameters. May also end with `/*` to
   * indicate matching the rest of the URL pathname.
   */
  path: Path;
  /**
   * Should be `true` if the static portions of the `path` should be matched in
   * the same case.
   */
  caseSensitive?: boolean;
  /**
   * Should be `true` if this pattern should match the entire URL pathname.
   */
  end?: boolean;
}

/**
 * A PathMatch contains info about how a PathPattern matched on a URL pathname.
 */
export interface PathMatch<ParamKey extends string = string> {
  /**
   * The names and values of dynamic parameters in the URL.
   */
  params: Params<ParamKey>;
  /**
   * The portion of the URL pathname that was matched.
   */
  pathname: string;
  /**
   * The portion of the URL pathname that was matched before child routes.
   */
  pathnameBase: string;
  /**
   * The pattern that was used to match.
   */
  pattern: PathPattern;
}

type Mutable<T> = {
  -readonly [P in keyof T]: T[P];
};

/**
 * Performs pattern matching on a URL pathname and returns information about
 * the match.
 *
 * @see https://reactrouter.com/docs/en/v6/api#matchpath
 */
export function matchPath<
  ParamKey extends ParamParseKey<Path>,
  Path extends string
>(
  pattern: PathPattern<Path> | Path,
  pathname: string
): PathMatch<ParamKey> | null {
  if (typeof pattern === "string") {
    pattern = { path: pattern, caseSensitive: false, end: true };
  }

  let [matcher, paramNames] = compilePath(
    pattern.path,
    pattern.caseSensitive,
    pattern.end
  );

  let match = pathname.match(matcher);
  if (!match) return null;

  let matchedPathname = match[0];
  let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
  let captureGroups = match.slice(1);
  let params: Params = paramNames.reduce<Mutable<Params>>(
    (memo, paramName, index) => {
      // We need to compute the pathnameBase here using the raw splat value
      // instead of using params["*"] later because it will be decoded then
      if (paramName === "*") {
        let splatValue = captureGroups[index] || "";
        pathnameBase = matchedPathname
          .slice(0, matchedPathname.length - splatValue.length)
          .replace(/(.)\/+$/, "$1");
      }

      memo[paramName] = safelyDecodeURIComponent(
        captureGroups[index] || "",
        paramName
      );
      return memo;
    },
    {}
  );

  return {
    params,
    pathname: matchedPathname,
    pathnameBase,
    pattern,
  };
}

function compilePath(
  path: string,
  caseSensitive = false,
  end = true
): [RegExp, string[]] {
  warning(
    path === "*" || !path.endsWith("*") || path.endsWith("/*"),
    `Route path "${path}" will be treated as if it were ` +
      `"${path.replace(/\*$/, "/*")}" because the \`*\` character must ` +
      `always follow a \`/\` in the pattern. To get rid of this warning, ` +
      `please change the route path to "${path.replace(/\*$/, "/*")}".`
  );

  let paramNames: string[] = [];
  let regexpSource =
    "^" +
    path
      .replace(/\/*\*?$/, "") // Ignore trailing / and /*, we'll handle it below
      .replace(/^\/*/, "/") // Make sure it has a leading /
      .replace(/[\\.*+^$?{}|()[\]]/g, "\\$&") // Escape special regex chars
      .replace(/:(\w+)/g, (_: string, paramName: string) => {
        paramNames.push(paramName);
        return "([^\\/]+)";
      });

  if (path.endsWith("*")) {
    paramNames.push("*");
    regexpSource +=
      path === "*" || path === "/*"
        ? "(.*)$" // Already matched the initial /, just match the rest
        : "(?:\\/(.+)|\\/*)$"; // Don't include the / in params["*"]
  } else {
    regexpSource += end
      ? "\\/*$" // When matching to the end, ignore trailing slashes
      : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts
        // parent routes to matching only their own words and nothing more, e.g. parent
        // route "/home" should not match "/home2".
        // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,
        // but do not consume the character in the matched path so they can match against
        // nested paths.
        "(?:(?=[.~-]|%[0-9A-F]{2})|\\b|\\/|$)";
  }

  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : "i");

  return [matcher, paramNames];
}

function safelyDecodeURIComponent(value: string, paramName: string) {
  try {
    return decodeURIComponent(value);
  } catch (error) {
    warning(
      false,
      `The value for the URL param "${paramName}" will not be decoded because` +
        ` the string "${value}" is a malformed URL segment. This is probably` +
        ` due to a bad percent encoding (${error}).`
    );

    return value;
  }
}

/**
 * Returns a resolved path object relative to the given pathname.
 *
 * @see https://reactrouter.com/docs/en/v6/api#resolvepath
 */
export function resolvePath(to: To, fromPathname = "/"): Path {
  let {
    pathname: toPathname,
    search = "",
    hash = "",
  } = typeof to === "string" ? parsePath(to) : to;

  let pathname = toPathname
    ? toPathname.startsWith("/")
      ? toPathname
      : resolvePathname(toPathname, fromPathname)
    : fromPathname;

  return {
    pathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash),
  };
}

function resolvePathname(relativePath: string, fromPathname: string): string {
  let segments = fromPathname.replace(/\/+$/, "").split("/");
  let relativeSegments = relativePath.split("/");

  relativeSegments.forEach((segment) => {
    if (segment === "..") {
      // Keep the root "" segment so the pathname starts at /
      if (segments.length > 1) segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });

  return segments.length > 1 ? segments.join("/") : "/";
}

export function resolveTo(
  toArg: To,
  routePathnames: string[],
  locationPathname: string
): Path {
  let to = typeof toArg === "string" ? parsePath(toArg) : toArg;
  let toPathname = toArg === "" || to.pathname === "" ? "/" : to.pathname;

  // If a pathname is explicitly provided in `to`, it should be relative to the
  // route context. This is explained in `Note on `<Link to>` values` in our
  // migration guide from v5 as a means of disambiguation between `to` values
  // that begin with `/` and those that do not. However, this is problematic for
  // `to` values that do not provide a pathname. `to` can simply be a search or
  // hash string, in which case we should assume that the navigation is relative
  // to the current location's pathname and *not* the route pathname.
  let from: string;
  if (toPathname == null) {
    from = locationPathname;
  } else {
    let routePathnameIndex = routePathnames.length - 1;

    if (toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/");

      // Each leading .. segment means "go up one route" instead of "go up one
      // URL segment".  This is a key difference from how <a href> works and a
      // major reason we call this a "to" value instead of a "href".
      while (toSegments[0] === "..") {
        toSegments.shift();
        routePathnameIndex -= 1;
      }

      to.pathname = toSegments.join("/");
    }

    // If there are more ".." segments than parent routes, resolve relative to
    // the root / URL.
    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }

  let path = resolvePath(to, from);

  // Ensure the pathname has a trailing slash if the original to value had one.
  if (
    toPathname &&
    toPathname !== "/" &&
    toPathname.endsWith("/") &&
    !path.pathname.endsWith("/")
  ) {
    path.pathname += "/";
  }

  return path;
}

export function getToPathname(to: To): string | undefined {
  // Empty strings should be treated the same as / paths
  return to === "" || (to as Path).pathname === ""
    ? "/"
    : typeof to === "string"
    ? parsePath(to).pathname
    : to.pathname;
}

export function stripBasename(
  pathname: string,
  basename: string
): string | null {
  if (basename === "/") return pathname;

  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  }

  let nextChar = pathname.charAt(basename.length);
  if (nextChar && nextChar !== "/") {
    // pathname does not start with basename/
    return null;
  }

  return pathname.slice(basename.length) || "/";
}

export const joinPaths = (paths: string[]): string =>
  paths.join("/").replace(/\/\/+/g, "/");

export const normalizePathname = (pathname: string): string =>
  pathname.replace(/\/+$/, "").replace(/^\/*/, "/");

const normalizeSearch = (search: string): string =>
  !search || search === "?"
    ? ""
    : search.startsWith("?")
    ? search
    : "?" + search;

const normalizeHash = (hash: string): string =>
  !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
"╢bimport * as React from "react";
import type { Location, Path, To } from "history";
import { Action as NavigationType, parsePath } from "history";

import { LocationContext, NavigationContext, RouteContext } from "./context";
import type {
  ParamParseKey,
  Params,
  PathMatch,
  PathPattern,
  RouteMatch,
  RouteObject,
} from "./router";
import {
  getToPathname,
  invariant,
  joinPaths,
  matchPath,
  matchRoutes,
  resolveTo,
  warning,
  warningOnce,
} from "./router";

/**
 * Returns the full href for the given "to" value. This is useful for building
 * custom links that are also accessible and preserve right-click behavior.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usehref
 */
export function useHref(to: To): string {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useHref() may be used only in the context of a <Router> component.`
  );

  let { basename, navigator } = React.useContext(NavigationContext);
  let { hash, pathname, search } = useResolvedPath(to);

  let joinedPathname = pathname;
  if (basename !== "/") {
    let toPathname = getToPathname(to);
    let endsWithSlash = toPathname != null && toPathname.endsWith("/");
    joinedPathname =
      pathname === "/"
        ? basename + (endsWithSlash ? "/" : "")
        : joinPaths([basename, pathname]);
  }

  return navigator.createHref({ pathname: joinedPathname, search, hash });
}

/**
 * Returns true if this component is a descendant of a <Router>.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext
 */
export function useInRouterContext(): boolean {
  return React.useContext(LocationContext) != null;
}

/**
 * Returns the current location object, which represents the current URL in web
 * browsers.
 *
 * Note: If you're using this it may mean you're doing some of your own
 * "routing" in your app, and we'd like to know what your use case is. We may
 * be able to provide something higher-level to better suit your needs.
 *
 * @see https://reactrouter.com/docs/en/v6/api#uselocation
 */
export function useLocation(): Location {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useLocation() may be used only in the context of a <Router> component.`
  );

  return React.useContext(LocationContext).location;
}

/**
 * Returns the current navigation action which describes how the router came to
 * the current location, either by a pop, push, or replace on the history stack.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype
 */
export function useNavigationType(): NavigationType {
  return React.useContext(LocationContext).navigationType;
}

/**
 * Returns true if the URL for the given "to" value matches the current URL.
 * This is useful for components that need to know "active" state, e.g.
 * <NavLink>.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usematch
 */
export function useMatch<
  ParamKey extends ParamParseKey<Path>,
  Path extends string
>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useMatch() may be used only in the context of a <Router> component.`
  );

  let { pathname } = useLocation();
  return React.useMemo(
    () => matchPath<ParamKey, Path>(pattern, pathname),
    [pathname, pattern]
  );
}

/**
 * The interface for the navigate() function returned from useNavigate().
 */
export interface NavigateFunction {
  (to: To, options?: NavigateOptions): void;
  (delta: number): void;
}

export interface NavigateOptions {
  replace?: boolean;
  state?: any;
}

/**
 * Returns an imperative method for changing the location. Used by <Link>s, but
 * may also be used by other elements to change the location.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usenavigate
 */
export function useNavigate(): NavigateFunction {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useNavigate() may be used only in the context of a <Router> component.`
  );

  let { basename, navigator } = React.useContext(NavigationContext);
  let { matches } = React.useContext(RouteContext);
  let { pathname: locationPathname } = useLocation();

  let routePathnamesJson = JSON.stringify(
    matches.map((match) => match.pathnameBase)
  );

  let activeRef = React.useRef(false);
  React.useEffect(() => {
    activeRef.current = true;
  });

  let navigate: NavigateFunction = React.useCallback(
    (to: To | number, options: NavigateOptions = {}) => {
      warning(
        activeRef.current,
        `You should call navigate() in a React.useEffect(), not when ` +
          `your component is first rendered.`
      );

      if (!activeRef.current) return;

      if (typeof to === "number") {
        navigator.go(to);
        return;
      }

      let path = resolveTo(
        to,
        JSON.parse(routePathnamesJson),
        locationPathname
      );

      if (basename !== "/") {
        path.pathname = joinPaths([basename, path.pathname]);
      }

      (!!options.replace ? navigator.replace : navigator.push)(
        path,
        options.state
      );
    },
    [basename, navigator, routePathnamesJson, locationPathname]
  );

  return navigate;
}

const OutletContext = React.createContext<unknown>(null);

/**
 * Returns the context (if provided) for the child route at this level of the route
 * hierarchy.
 * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext
 */
export function useOutletContext<Context = unknown>(): Context {
  return React.useContext(OutletContext) as Context;
}

/**
 * Returns the element for the child route at this level of the route
 * hierarchy. Used internally by <Outlet> to render child routes.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useoutlet
 */
export function useOutlet(context?: unknown): React.ReactElement | null {
  let outlet = React.useContext(RouteContext).outlet;
  if (outlet) {
    return (
      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>
    );
  }
  return outlet;
}

/**
 * Returns an object of key/value pairs of the dynamic params from the current
 * URL that were matched by the route path.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useparams
 */
export function useParams<
  ParamsOrKey extends string | Record<string, string | undefined> = string
>(): Readonly<
  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>
> {
  let { matches } = React.useContext(RouteContext);
  let routeMatch = matches[matches.length - 1];
  return routeMatch ? (routeMatch.params as any) : {};
}

/**
 * Resolves the pathname of the given `to` value against the current location.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath
 */
export function useResolvedPath(to: To): Path {
  let { matches } = React.useContext(RouteContext);
  let { pathname: locationPathname } = useLocation();

  let routePathnamesJson = JSON.stringify(
    matches.map((match) => match.pathnameBase)
  );

  return React.useMemo(
    () => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname),
    [to, routePathnamesJson, locationPathname]
  );
}

/**
 * Returns the element of the route that matched the current location, prepared
 * with the correct context to render the remainder of the route tree. Route
 * elements in the tree must render an <Outlet> to render their child route's
 * element.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useroutes
 */
export function useRoutes(
  routes: RouteObject[],
  locationArg?: Partial<Location> | string
): React.ReactElement | null {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useRoutes() may be used only in the context of a <Router> component.`
  );

  let { matches: parentMatches } = React.useContext(RouteContext);
  let routeMatch = parentMatches[parentMatches.length - 1];
  let parentParams = routeMatch ? routeMatch.params : {};
  let parentPathname = routeMatch ? routeMatch.pathname : "/";
  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
  let parentRoute = routeMatch && routeMatch.route;

  if (__DEV__) {
    // You won't get a warning about 2 different <Routes> under a <Route>
    // without a trailing *, but this is a best-effort warning anyway since we
    // cannot even give the warning unless they land at the parent route.
    //
    // Example:
    //
    // <Routes>
    //   {/* This route path MUST end with /* because otherwise
    //       it will never match /blog/post/123 */}
    //   <Route path="blog" element={<Blog />} />
    //   <Route path="blog/feed" element={<BlogFeed />} />
    // </Routes>
    //
    // function Blog() {
    //   return (
    //     <Routes>
    //       <Route path="post/:id" element={<Post />} />
    //     </Routes>
    //   );
    // }
    let parentPath = (parentRoute && parentRoute.path) || "";
    warningOnce(
      parentPathname,
      !parentRoute || parentPath.endsWith("*"),
      `You rendered descendant <Routes> (or called \`useRoutes()\`) at ` +
        `"${parentPathname}" (under <Route path="${parentPath}">) but the ` +
        `parent route path has no trailing "*". This means if you navigate ` +
        `deeper, the parent won't match anymore and therefore the child ` +
        `routes will never render.\n\n` +
        `Please change the parent <Route path="${parentPath}"> to <Route ` +
        `path="${parentPath === "/" ? "*" : `${parentPath}/*`}">.`
    );
  }

  let locationFromContext = useLocation();

  let location;
  if (locationArg) {
    let parsedLocationArg =
      typeof locationArg === "string" ? parsePath(locationArg) : locationArg;

    invariant(
      parentPathnameBase === "/" ||
        parsedLocationArg.pathname?.startsWith(parentPathnameBase),
      `When overriding the location using \`<Routes location>\` or \`useRoutes(routes, location)\`, ` +
        `the location pathname must begin with the portion of the URL pathname that was ` +
        `matched by all parent routes. The current pathname base is "${parentPathnameBase}" ` +
        `but pathname "${parsedLocationArg.pathname}" was given in the \`location\` prop.`
    );

    location = parsedLocationArg;
  } else {
    location = locationFromContext;
  }

  let pathname = location.pathname || "/";
  let remainingPathname =
    parentPathnameBase === "/"
      ? pathname
      : pathname.slice(parentPathnameBase.length) || "/";
  let matches = matchRoutes(routes, { pathname: remainingPathname });

  if (__DEV__) {
    warning(
      parentRoute || matches != null,
      `No routes matched location "${location.pathname}${location.search}${location.hash}" `
    );

    warning(
      matches == null ||
        matches[matches.length - 1].route.element !== undefined,
      `Matched leaf route at location "${location.pathname}${location.search}${location.hash}" does not have an element. ` +
        `This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.`
    );
  }

  return _renderMatches(
    matches &&
      matches.map((match) =>
        Object.assign({}, match, {
          params: Object.assign({}, parentParams, match.params),
          pathname: joinPaths([parentPathnameBase, match.pathname]),
          pathnameBase:
            match.pathnameBase === "/"
              ? parentPathnameBase
              : joinPaths([parentPathnameBase, match.pathnameBase]),
        })
      ),
    parentMatches
  );
}

export function _renderMatches(
  matches: RouteMatch[] | null,
  parentMatches: RouteMatch[] = []
): React.ReactElement | null {
  if (matches == null) return null;

  return matches.reduceRight((outlet, match, index) => {
    return (
      <RouteContext.Provider
        children={
          match.route.element !== undefined ? match.route.element : outlet
        }
        value={{
          outlet,
          matches: parentMatches.concat(matches.slice(0, index + 1)),
        }}
      />
    );
  }, null as React.ReactElement | null);
}
"вAimport * as React from "react";
import type { InitialEntry, Location, MemoryHistory, To } from "history";
import {
  Action as NavigationType,
  createMemoryHistory,
  parsePath,
} from "history";

import { LocationContext, NavigationContext, Navigator } from "./context";
import {
  useInRouterContext,
  useNavigate,
  useOutlet,
  useRoutes,
  _renderMatches,
} from "./hooks";
import type { RouteMatch, RouteObject } from "./router";
import { invariant, normalizePathname, stripBasename, warning } from "./router";

export interface MemoryRouterProps {
  basename?: string;
  children?: React.ReactNode;
  initialEntries?: InitialEntry[];
  initialIndex?: number;
}

/**
 * A <Router> that stores all entries in memory.
 *
 * @see https://reactrouter.com/docs/en/v6/api#memoryrouter
 */
export function MemoryRouter({
  basename,
  children,
  initialEntries,
  initialIndex,
}: MemoryRouterProps): React.ReactElement {
  let historyRef = React.useRef<MemoryHistory>();
  if (historyRef.current == null) {
    historyRef.current = createMemoryHistory({ initialEntries, initialIndex });
  }

  let history = historyRef.current;
  let [state, setState] = React.useState({
    action: history.action,
    location: history.location,
  });

  React.useLayoutEffect(() => history.listen(setState), [history]);

  return (
    <Router
      basename={basename}
      children={children}
      location={state.location}
      navigationType={state.action}
      navigator={history}
    />
  );
}

export interface NavigateProps {
  to: To;
  replace?: boolean;
  state?: any;
}

/**
 * Changes the current location.
 *
 * Note: This API is mostly useful in React.Component subclasses that are not
 * able to use hooks. In functional components, we recommend you use the
 * `useNavigate` hook instead.
 *
 * @see https://reactrouter.com/docs/en/v6/api#navigate
 */
export function Navigate({ to, replace, state }: NavigateProps): null {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of
    // the router loaded. We can help them understand how to avoid that.
    `<Navigate> may be used only in the context of a <Router> component.`
  );

  warning(
    !React.useContext(NavigationContext).static,
    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +
      `This is a no-op, but you should modify your code so the <Navigate> is ` +
      `only ever rendered in response to some user interaction or state change.`
  );

  let navigate = useNavigate();
  React.useEffect(() => {
    navigate(to, { replace, state });
  });

  return null;
}

export interface OutletProps {
  context?: unknown;
}

/**
 * Renders the child route's element, if there is one.
 *
 * @see https://reactrouter.com/docs/en/v6/api#outlet
 */
export function Outlet(props: OutletProps): React.ReactElement | null {
  return useOutlet(props.context);
}

export interface RouteProps {
  caseSensitive?: boolean;
  children?: React.ReactNode;
  element?: React.ReactNode | null;
  index?: boolean;
  path?: string;
}

export interface PathRouteProps {
  caseSensitive?: boolean;
  children?: React.ReactNode;
  element?: React.ReactNode | null;
  index?: false;
  path: string;
}

export interface LayoutRouteProps {
  children?: React.ReactNode;
  element?: React.ReactNode | null;
}

export interface IndexRouteProps {
  element?: React.ReactNode | null;
  index: true;
}

/**
 * Declares an element that should be rendered at a certain URL path.
 *
 * @see https://reactrouter.com/docs/en/v6/api#route
 */
export function Route(
  _props: PathRouteProps | LayoutRouteProps | IndexRouteProps
): React.ReactElement | null {
  invariant(
    false,
    `A <Route> is only ever to be used as the child of <Routes> element, ` +
      `never rendered directly. Please wrap your <Route> in a <Routes>.`
  );
}

export interface RouterProps {
  basename?: string;
  children?: React.ReactNode;
  location: Partial<Location> | string;
  navigationType?: NavigationType;
  navigator: Navigator;
  static?: boolean;
}

/**
 * Provides location context for the rest of the app.
 *
 * Note: You usually won't render a <Router> directly. Instead, you'll render a
 * router that is more specific to your environment such as a <BrowserRouter>
 * in web browsers or a <StaticRouter> for server rendering.
 *
 * @see https://reactrouter.com/docs/en/v6/api#router
 */
export function Router({
  basename: basenameProp = "/",
  children = null,
  location: locationProp,
  navigationType = NavigationType.Pop,
  navigator,
  static: staticProp = false,
}: RouterProps): React.ReactElement | null {
  invariant(
    !useInRouterContext(),
    `You cannot render a <Router> inside another <Router>.` +
      ` You should never have more than one in your app.`
  );

  let basename = normalizePathname(basenameProp);
  let navigationContext = React.useMemo(
    () => ({ basename, navigator, static: staticProp }),
    [basename, navigator, staticProp]
  );

  if (typeof locationProp === "string") {
    locationProp = parsePath(locationProp);
  }

  let {
    pathname = "/",
    search = "",
    hash = "",
    state = null,
    key = "default",
  } = locationProp;

  let location = React.useMemo(() => {
    let trailingPathname = stripBasename(pathname, basename);

    if (trailingPathname == null) {
      return null;
    }

    return {
      pathname: trailingPathname,
      search,
      hash,
      state,
      key,
    };
  }, [basename, pathname, search, hash, state, key]);

  warning(
    location != null,
    `<Router basename="${basename}"> is not able to match the URL ` +
      `"${pathname}${search}${hash}" because it does not start with the ` +
      `basename, so the <Router> won't render anything.`
  );

  if (location == null) {
    return null;
  }

  return (
    <NavigationContext.Provider value={navigationContext}>
      <LocationContext.Provider
        children={children}
        value={{ location, navigationType }}
      />
    </NavigationContext.Provider>
  );
}

export interface RoutesProps {
  children?: React.ReactNode;
  location?: Partial<Location> | string;
}

/**
 * A container for a nested tree of <Route> elements that renders the branch
 * that best matches the current location.
 *
 * @see https://reactrouter.com/docs/en/v6/api#routes
 */
export function Routes({
  children,
  location,
}: RoutesProps): React.ReactElement | null {
  return useRoutes(createRoutesFromChildren(children), location);
}

///////////////////////////////////////////////////////////////////////////////
// UTILS
///////////////////////////////////////////////////////////////////////////////

/**
 * Creates a route config from a React "children" object, which is usually
 * either a `<Route>` element or an array of them. Used internally by
 * `<Routes>` to create a route config from its children.
 *
 * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren
 */
export function createRoutesFromChildren(
  children: React.ReactNode
): RouteObject[] {
  let routes: RouteObject[] = [];

  React.Children.forEach(children, (element) => {
    if (!React.isValidElement(element)) {
      // Ignore non-elements. This allows people to more easily inline
      // conditionals in their route config.
      return;
    }

    if (element.type === React.Fragment) {
      // Transparently support React.Fragment and its children.
      routes.push.apply(
        routes,
        createRoutesFromChildren(element.props.children)
      );
      return;
    }

    invariant(
      element.type === Route,
      `[${
        typeof element.type === "string" ? element.type : element.type.name
      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`
    );

    let route: RouteObject = {
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      index: element.props.index,
      path: element.props.path,
    };

    if (element.props.children) {
      route.children = createRoutesFromChildren(element.props.children);
    }

    routes.push(route);
  });

  return routes;
}

/**
 * Renders the result of `matchRoutes()` into a React element.
 */
export function renderMatches(
  matches: RouteMatch[] | null
): React.ReactElement | null {
  return _renderMatches(matches);
}
"Ч└/**
 * @license React
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

var React = require('react');

// -----------------------------------------------------------------------------

var enableScopeAPI = false; // Experimental Create Event Handle API.
var enableCacheElement = false;
var enableTransitionTracing = false; // No known bugs, but needs performance testing

var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
// stuff. Intended to enable React core members to more easily debug scheduling
// issues in DEV builds.

var enableDebugTracing = false; // Track which Fiber(s) schedule render work.

// ATTENTION

var REACT_ELEMENT_TYPE =  Symbol.for('react.element');
var REACT_PORTAL_TYPE =  Symbol.for('react.portal');
var REACT_FRAGMENT_TYPE =  Symbol.for('react.fragment');
var REACT_STRICT_MODE_TYPE =  Symbol.for('react.strict_mode');
var REACT_PROFILER_TYPE =  Symbol.for('react.profiler');
var REACT_PROVIDER_TYPE =  Symbol.for('react.provider');
var REACT_CONTEXT_TYPE =  Symbol.for('react.context');
var REACT_FORWARD_REF_TYPE =  Symbol.for('react.forward_ref');
var REACT_SUSPENSE_TYPE =  Symbol.for('react.suspense');
var REACT_SUSPENSE_LIST_TYPE =  Symbol.for('react.suspense_list');
var REACT_MEMO_TYPE =  Symbol.for('react.memo');
var REACT_LAZY_TYPE =  Symbol.for('react.lazy');
var REACT_OFFSCREEN_TYPE =  Symbol.for('react.offscreen');
var MAYBE_ITERATOR_SYMBOL =  Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

function error(format) {
  {
    {
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      printWarning('error', format, args);
    }
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    } // eslint-disable-next-line react-internal/safe-string-coercion


    var argsWithFormat = args.map(function (item) {
      return String(item);
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

var REACT_MODULE_REFERENCE;

{
  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
}

function isValidElementType(type) {
  if (typeof type === 'string' || typeof type === 'function') {
    return true;
  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {
    return true;
  }

  if (typeof type === 'object' && type !== null) {
    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
    // types supported by any Flight configuration anywhere since
    // we don't know which Flight build this will end up being used
    // with.
    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
      return true;
    }
  }

  return false;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var displayName = outerType.displayName;

  if (displayName) {
    return displayName;
  }

  var functionName = innerType.displayName || innerType.name || '';
  return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
} // Keep in sync with react-reconciler/getComponentNameFromFiber


function getContextName(type) {
  return type.displayName || 'Context';
} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.


function getComponentNameFromType(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return 'Profiler';

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';

  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        var outerName = type.displayName || null;

        if (outerName !== null) {
          return outerName;
        }

        return getComponentNameFromType(type.type) || 'Memo';

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentNameFromType(init(payload));
          } catch (x) {
            return null;
          }
        }

      // eslint-disable-next-line no-fallthrough
    }
  }

  return null;
}

var assign = Object.assign;

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: assign({}, props, {
          value: prevLog
        }),
        info: assign({}, props, {
          value: prevInfo
        }),
        warn: assign({}, props, {
          value: prevWarn
        }),
        error: assign({}, props, {
          value: prevError
        }),
        group: assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if ( !fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                // but we have a user-provided "displayName"
                // splice it in to make the stack more readable.


                if (fn.displayName && _frame.includes('<anonymous>')) {
                  _frame = _frame.replace('<anonymous>', fn.displayName);
                }

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case REACT_SUSPENSE_TYPE:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

var hasOwnProperty = Object.prototype.hasOwnProperty;

var loggedTypeFailures = {};
var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            // eslint-disable-next-line react-internal/prod-error-codes
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare

function isArray(a) {
  return isArrayImpl(a);
}

/*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */
// $FlowFixMe only called in DEV, so void return is not possible.
function typeName(value) {
  {
    // toStringTag is needed for namespaced types like Temporal.Instant
    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
    return type;
  }
} // $FlowFixMe only called in DEV, so void return is not possible.


function willCoercionThrow(value) {
  {
    try {
      testStringCoercion(value);
      return false;
    } catch (e) {
      return true;
    }
  }
}

function testStringCoercion(value) {
  // If you ended up here by following an exception call stack, here's what's
  // happened: you supplied an object or symbol value to React (as a prop, key,
  // DOM attribute, CSS property, string ref, etc.) and when React tried to
  // coerce it to a string using `'' + value`, an exception was thrown.
  //
  // The most common types that will cause this exception are `Symbol` instances
  // and Temporal objects like `Temporal.Instant`. But any object that has a
  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
  // exception. (Library authors do this to prevent users from using built-in
  // numeric operators like `+` or comparison operators like `>=` because custom
  // methods are needed to perform accurate arithmetic or comparison.)
  //
  // To fix the problem, coerce this object or symbol value to a string before
  // passing it to React. The most reliable way is usually `String(value)`.
  //
  // To find which value is throwing, check the browser or debugger console.
  // Before this exception was thrown, there should be `console.error` output
  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
  // problem and how that type was used: key, atrribute, input value prop, etc.
  // In most cases, this console output also shows the component and its
  // ancestor components where the exception happened.
  //
  // eslint-disable-next-line react-internal/safe-string-coercion
  return '' + value;
}
function checkKeyStringCoercion(value) {
  {
    if (willCoercionThrow(value)) {
      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}

var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown;
var specialPropRefWarningShown;
var didWarnAboutStringRefs;

{
  didWarnAboutStringRefs = {};
}

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function warnIfStringRefCannotBeAutoConverted(config, self) {
  {
    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);

      if (!didWarnAboutStringRefs[componentName]) {
        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);

        didWarnAboutStringRefs[componentName] = true;
      }
    }
  }
}

function defineKeyPropWarningGetter(props, displayName) {
  {
    var warnAboutAccessingKey = function () {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;

        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    };

    warnAboutAccessingKey.isReactWarning = true;
    Object.defineProperty(props, 'key', {
      get: warnAboutAccessingKey,
      configurable: true
    });
  }
}

function defineRefPropWarningGetter(props, displayName) {
  {
    var warnAboutAccessingRef = function () {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;

        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    };

    warnAboutAccessingRef.isReactWarning = true;
    Object.defineProperty(props, 'ref', {
      get: warnAboutAccessingRef,
      configurable: true
    });
  }
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */

function jsxDEV(type, config, maybeKey, source, self) {
  {
    var propName; // Reserved names are extracted

    var props = {};
    var key = null;
    var ref = null; // Currently, key can be spread in as a prop. This causes a potential
    // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
    // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
    // but as an intermediary step, we will use jsxDEV for everything except
    // <div {...props} key="Hi" />, because we aren't currently able to tell if
    // key is explicitly declared to be undefined or not.

    if (maybeKey !== undefined) {
      {
        checkKeyStringCoercion(maybeKey);
      }

      key = '' + maybeKey;
    }

    if (hasValidKey(config)) {
      {
        checkKeyStringCoercion(config.key);
      }

      key = '' + config.key;
    }

    if (hasValidRef(config)) {
      ref = config.ref;
      warnIfStringRefCannotBeAutoConverted(config, self);
    } // Remaining properties are added to a new props object


    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    } // Resolve default props


    if (type && type.defaultProps) {
      var defaultProps = type.defaultProps;

      for (propName in defaultProps) {
        if (props[propName] === undefined) {
          props[propName] = defaultProps[propName];
        }
      }
    }

    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }

    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
  }
}

var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement$1(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */


function isValidElement(object) {
  {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  }
}

function getDeclarationErrorAddendum() {
  {
    if (ReactCurrentOwner$1.current) {
      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);

      if (name) {
        return '\n\nCheck the render method of `' + name + '`.';
      }
    }

    return '';
  }
}

function getSourceInfoErrorAddendum(source) {
  {
    if (source !== undefined) {
      var fileName = source.fileName.replace(/^.*[\\\/]/, '');
      var lineNumber = source.lineNumber;
      return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
    }

    return '';
  }
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  {
    var info = getDeclarationErrorAddendum();

    if (!info) {
      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

      if (parentName) {
        info = "\n\nCheck the top-level render call using <" + parentName + ">.";
      }
    }

    return info;
  }
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  {
    if (!element._store || element._store.validated || element.key != null) {
      return;
    }

    element._store.validated = true;
    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
      return;
    }

    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
    // property, it may be the creator of the child that's responsible for
    // assigning it a key.

    var childOwner = '';

    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
      // Give the component that originally created this child.
      childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
    }

    setCurrentlyValidatingElement$1(element);

    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);

    setCurrentlyValidatingElement$1(null);
  }
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  {
    if (typeof node !== 'object') {
      return;
    }

    if (isArray(node)) {
      for (var i = 0; i < node.length; i++) {
        var child = node[i];

        if (isValidElement(child)) {
          validateExplicitKey(child, parentType);
        }
      }
    } else if (isValidElement(node)) {
      // This element was passed in a valid location.
      if (node._store) {
        node._store.validated = true;
      }
    } else if (node) {
      var iteratorFn = getIteratorFn(node);

      if (typeof iteratorFn === 'function') {
        // Entry iterators used to provide implicit keys,
        // but now we print a separate warning for them later.
        if (iteratorFn !== node.entries) {
          var iterator = iteratorFn.call(node);
          var step;

          while (!(step = iterator.next()).done) {
            if (isValidElement(step.value)) {
              validateExplicitKey(step.value, parentType);
            }
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  {
    var type = element.type;

    if (type === null || type === undefined || typeof type === 'string') {
      return;
    }

    var propTypes;

    if (typeof type === 'function') {
      propTypes = type.propTypes;
    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
    // Inner props are checked in the reconciler.
    type.$$typeof === REACT_MEMO_TYPE)) {
      propTypes = type.propTypes;
    } else {
      return;
    }

    if (propTypes) {
      // Intentionally inside to avoid triggering lazy initializers:
      var name = getComponentNameFromType(type);
      checkPropTypes(propTypes, element.props, 'prop', name, element);
    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

      var _name = getComponentNameFromType(type);

      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
    }

    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
    }
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  {
    var keys = Object.keys(fragment.props);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (key !== 'children' && key !== 'key') {
        setCurrentlyValidatingElement$1(fragment);

        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);

        setCurrentlyValidatingElement$1(null);
        break;
      }
    }

    if (fragment.ref !== null) {
      setCurrentlyValidatingElement$1(fragment);

      error('Invalid attribute `ref` supplied to `React.Fragment`.');

      setCurrentlyValidatingElement$1(null);
    }
  }
}

function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
  {
    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.

    if (!validType) {
      var info = '';

      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
        info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
      }

      var sourceInfo = getSourceInfoErrorAddendum(source);

      if (sourceInfo) {
        info += sourceInfo;
      } else {
        info += getDeclarationErrorAddendum();
      }

      var typeString;

      if (type === null) {
        typeString = 'null';
      } else if (isArray(type)) {
        typeString = 'array';
      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
        typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
        info = ' Did you accidentally export a JSX literal instead of a component?';
      } else {
        typeString = typeof type;
      }

      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
    }

    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.

    if (element == null) {
      return element;
    } // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)


    if (validType) {
      var children = props.children;

      if (children !== undefined) {
        if (isStaticChildren) {
          if (isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              validateChildKeys(children[i], type);
            }

            if (Object.freeze) {
              Object.freeze(children);
            }
          } else {
            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');
          }
        } else {
          validateChildKeys(children, type);
        }
      }
    }

    if (type === REACT_FRAGMENT_TYPE) {
      validateFragmentProps(element);
    } else {
      validatePropTypes(element);
    }

    return element;
  }
} // These two functions exist to still get child warnings in dev

var jsxDEV$1 =  jsxWithValidation ;

exports.Fragment = REACT_FRAGMENT_TYPE;
exports.jsxDEV = jsxDEV$1;
  })();
}
"Єк/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

if (process.env.NODE_ENV !== "production") {
  (function() {

          'use strict';

/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
}
          var ReactVersion = '18.1.0';

// -----------------------------------------------------------------------------

var enableScopeAPI = false; // Experimental Create Event Handle API.
var enableCacheElement = false;
var enableTransitionTracing = false; // No known bugs, but needs performance testing

var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
// stuff. Intended to enable React core members to more easily debug scheduling
// issues in DEV builds.

var enableDebugTracing = false; // Track which Fiber(s) schedule render work.

// ATTENTION

var REACT_ELEMENT_TYPE =  Symbol.for('react.element');
var REACT_PORTAL_TYPE =  Symbol.for('react.portal');
var REACT_FRAGMENT_TYPE =  Symbol.for('react.fragment');
var REACT_STRICT_MODE_TYPE =  Symbol.for('react.strict_mode');
var REACT_PROFILER_TYPE =  Symbol.for('react.profiler');
var REACT_PROVIDER_TYPE =  Symbol.for('react.provider');
var REACT_CONTEXT_TYPE =  Symbol.for('react.context');
var REACT_FORWARD_REF_TYPE =  Symbol.for('react.forward_ref');
var REACT_SUSPENSE_TYPE =  Symbol.for('react.suspense');
var REACT_SUSPENSE_LIST_TYPE =  Symbol.for('react.suspense_list');
var REACT_MEMO_TYPE =  Symbol.for('react.memo');
var REACT_LAZY_TYPE =  Symbol.for('react.lazy');
var REACT_OFFSCREEN_TYPE =  Symbol.for('react.offscreen');
var MAYBE_ITERATOR_SYMBOL =  Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

/**
 * Keeps track of the current dispatcher.
 */
var ReactCurrentDispatcher = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

/**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */
var ReactCurrentBatchConfig = {
  transition: null
};

var ReactCurrentActQueue = {
  current: null,
  // Used to reproduce behavior of `batchedUpdates` in legacy mode.
  isBatchingLegacy: false,
  didScheduleLegacyUpdate: false
};

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var ReactDebugCurrentFrame = {};
var currentExtraStackFrame = null;
function setExtraStackFrame(stack) {
  {
    currentExtraStackFrame = stack;
  }
}

{
  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {
    {
      currentExtraStackFrame = stack;
    }
  }; // Stack implementation injected by the current renderer.


  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var stack = ''; // Add an extra top frame while an element is being validated

    if (currentExtraStackFrame) {
      stack += currentExtraStackFrame;
    } // Delegate to the injected renderer-specific implementation


    var impl = ReactDebugCurrentFrame.getCurrentStack;

    if (impl) {
      stack += impl() || '';
    }

    return stack;
  };
}

var ReactSharedInternals = {
  ReactCurrentDispatcher: ReactCurrentDispatcher,
  ReactCurrentBatchConfig: ReactCurrentBatchConfig,
  ReactCurrentOwner: ReactCurrentOwner
};

{
  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
}

// by calls to these methods by a Babel plugin.
//
// In PROD (or in packages without access to React internals),
// they are left as they are instead.

function warn(format) {
  {
    {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      printWarning('warn', format, args);
    }
  }
}
function error(format) {
  {
    {
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      printWarning('error', format, args);
    }
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    } // eslint-disable-next-line react-internal/safe-string-coercion


    var argsWithFormat = args.map(function (item) {
      return String(item);
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var _constructor = publicInstance.constructor;
    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
    var warningKey = componentName + "." + callerName;

    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }

    error("Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);

    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}
/**
 * This is the abstract API for an update queue.
 */


var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

var assign = Object.assign;

var emptyObject = {};

{
  Object.freeze(emptyObject);
}
/**
 * Base class helpers for the updating state of a component.
 */


function Component(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
  // renderer.

  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};
/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */

Component.prototype.setState = function (partialState, callback) {
  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {
    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');
  }

  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};
/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */


Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};
/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */


{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };

  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);

        return undefined;
      }
    });
  };

  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ComponentDummy() {}

ComponentDummy.prototype = Component.prototype;
/**
 * Convenience component with default shallow equality check for sCU.
 */

function PureComponent(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}

var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.

assign(pureComponentPrototype, Component.prototype);
pureComponentPrototype.isPureReactComponent = true;

// an immutable object with a single mutable value
function createRef() {
  var refObject = {
    current: null
  };

  {
    Object.seal(refObject);
  }

  return refObject;
}

var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare

function isArray(a) {
  return isArrayImpl(a);
}

/*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */
// $FlowFixMe only called in DEV, so void return is not possible.
function typeName(value) {
  {
    // toStringTag is needed for namespaced types like Temporal.Instant
    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
    return type;
  }
} // $FlowFixMe only called in DEV, so void return is not possible.


function willCoercionThrow(value) {
  {
    try {
      testStringCoercion(value);
      return false;
    } catch (e) {
      return true;
    }
  }
}

function testStringCoercion(value) {
  // If you ended up here by following an exception call stack, here's what's
  // happened: you supplied an object or symbol value to React (as a prop, key,
  // DOM attribute, CSS property, string ref, etc.) and when React tried to
  // coerce it to a string using `'' + value`, an exception was thrown.
  //
  // The most common types that will cause this exception are `Symbol` instances
  // and Temporal objects like `Temporal.Instant`. But any object that has a
  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
  // exception. (Library authors do this to prevent users from using built-in
  // numeric operators like `+` or comparison operators like `>=` because custom
  // methods are needed to perform accurate arithmetic or comparison.)
  //
  // To fix the problem, coerce this object or symbol value to a string before
  // passing it to React. The most reliable way is usually `String(value)`.
  //
  // To find which value is throwing, check the browser or debugger console.
  // Before this exception was thrown, there should be `console.error` output
  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
  // problem and how that type was used: key, atrribute, input value prop, etc.
  // In most cases, this console output also shows the component and its
  // ancestor components where the exception happened.
  //
  // eslint-disable-next-line react-internal/safe-string-coercion
  return '' + value;
}
function checkKeyStringCoercion(value) {
  {
    if (willCoercionThrow(value)) {
      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}

function getWrappedName(outerType, innerType, wrapperName) {
  var displayName = outerType.displayName;

  if (displayName) {
    return displayName;
  }

  var functionName = innerType.displayName || innerType.name || '';
  return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
} // Keep in sync with react-reconciler/getComponentNameFromFiber


function getContextName(type) {
  return type.displayName || 'Context';
} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.


function getComponentNameFromType(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return 'Profiler';

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';

  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        var outerName = type.displayName || null;

        if (outerName !== null) {
          return outerName;
        }

        return getComponentNameFromType(type.type) || 'Memo';

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentNameFromType(init(payload));
          } catch (x) {
            return null;
          }
        }

      // eslint-disable-next-line no-fallthrough
    }
  }

  return null;
}

var hasOwnProperty = Object.prototype.hasOwnProperty;

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;

{
  didWarnAboutStringRefs = {};
}

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;

        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    }
  };

  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;

        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    }
  };

  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

function warnIfStringRefCannotBeAutoConverted(config) {
  {
    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);

      if (!didWarnAboutStringRefs[componentName]) {
        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);

        didWarnAboutStringRefs[componentName] = true;
      }
    }
  }
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */

function createElement(type, config, children) {
  var propName; // Reserved names are extracted

  var props = {};
  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;

      {
        warnIfStringRefCannotBeAutoConverted(config);
      }
    }

    if (hasValidKey(config)) {
      {
        checkKeyStringCoercion(config.key);
      }

      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }

    props.children = childArray;
  } // Resolve default props


  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;

    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }

  {
    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }
  }

  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}
function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
  return newElement;
}
/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */

function cloneElement(element, config, children) {
  if (element === null || element === undefined) {
    throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
  }

  var propName; // Original props are copied

  var props = assign({}, element.props); // Reserved names are extracted

  var key = element.key;
  var ref = element.ref; // Self is preserved since the owner is preserved.

  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.

  var source = element._source; // Owner will be preserved, unless ref is overridden

  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }

    if (hasValidKey(config)) {
      {
        checkKeyStringCoercion(config.key);
      }

      key = '' + config.key;
    } // Remaining properties override existing props


    var defaultProps;

    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */

function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';
/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = key.replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });
  return '$' + escapedString;
}
/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */


var didWarnAboutMaps = false;
var userProvidedKeyEscapeRegex = /\/+/g;

function escapeUserProvidedKey(text) {
  return text.replace(userProvidedKeyEscapeRegex, '$&/');
}
/**
 * Generate a key string that identifies a element within a set.
 *
 * @param {*} element A element that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */


function getElementKey(element, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof element === 'object' && element !== null && element.key != null) {
    // Explicit key
    {
      checkKeyStringCoercion(element.key);
    }

    return escape('' + element.key);
  } // Implicit key determined by the index in the set


  return index.toString(36);
}

function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  var invokeCallback = false;

  if (children === null) {
    invokeCallback = true;
  } else {
    switch (type) {
      case 'string':
      case 'number':
        invokeCallback = true;
        break;

      case 'object':
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
        }

    }
  }

  if (invokeCallback) {
    var _child = children;
    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows:

    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;

    if (isArray(mappedChild)) {
      var escapedChildKey = '';

      if (childKey != null) {
        escapedChildKey = escapeUserProvidedKey(childKey) + '/';
      }

      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {
        return c;
      });
    } else if (mappedChild != null) {
      if (isValidElement(mappedChild)) {
        {
          // The `if` statement here prevents auto-disabling of the safe
          // coercion ESLint rule, so we must manually disable it below.
          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {
            checkKeyStringCoercion(mappedChild.key);
          }
        }

        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
        // traverseAllChildren used to do for objects as children
        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
        // eslint-disable-next-line react-internal/safe-string-coercion
        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
      }

      array.push(mappedChild);
    }

    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.

  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getElementKey(child, i);
      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
    }
  } else {
    var iteratorFn = getIteratorFn(children);

    if (typeof iteratorFn === 'function') {
      var iterableChildren = children;

      {
        // Warn about using Maps as children
        if (iteratorFn === iterableChildren.entries) {
          if (!didWarnAboutMaps) {
            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
          }

          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(iterableChildren);
      var step;
      var ii = 0;

      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getElementKey(child, ii++);
        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
      }
    } else if (type === 'object') {
      // eslint-disable-next-line react-internal/safe-string-coercion
      var childrenString = String(children);
      throw new Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
    }
  }

  return subtreeCount;
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }

  var result = [];
  var count = 0;
  mapIntoArray(children, result, '', '', function (child) {
    return func.call(context, child, count++);
  });
  return result;
}
/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */


function countChildren(children) {
  var n = 0;
  mapChildren(children, function () {
    n++; // Don't return anything
  });
  return n;
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  mapChildren(children, function () {
    forEachFunc.apply(this, arguments); // Don't return anything.
  }, forEachContext);
}
/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */


function toArray(children) {
  return mapChildren(children, function (child) {
    return child;
  }) || [];
}
/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */


function onlyChild(children) {
  if (!isValidElement(children)) {
    throw new Error('React.Children.only expected to receive a single React element child.');
  }

  return children;
}

function createContext(defaultValue) {
  // TODO: Second argument used to be an optional `calculateChangedBits`
  // function. Warn to reserve for future use?
  var context = {
    $$typeof: REACT_CONTEXT_TYPE,
    // As a workaround to support multiple concurrent renderers, we categorize
    // some renderers as primary and others as secondary. We only expect
    // there to be two concurrent renderers at most: React Native (primary) and
    // Fabric (secondary); React DOM (primary) and React ART (secondary).
    // Secondary renderers store their context values on separate fields.
    _currentValue: defaultValue,
    _currentValue2: defaultValue,
    // Used to track how many concurrent renderers this context currently
    // supports within in a single renderer. Such as parallel server rendering.
    _threadCount: 0,
    // These are circular
    Provider: null,
    Consumer: null,
    // Add these to use same hidden class in VM as ServerContext
    _defaultValue: null,
    _globalName: null
  };
  context.Provider = {
    $$typeof: REACT_PROVIDER_TYPE,
    _context: context
  };
  var hasWarnedAboutUsingNestedContextConsumers = false;
  var hasWarnedAboutUsingConsumerProvider = false;
  var hasWarnedAboutDisplayNameOnConsumer = false;

  {
    // A separate object, but proxies back to the original context object for
    // backwards compatibility. It has a different $$typeof, so we can properly
    // warn for the incorrect usage of Context as a Consumer.
    var Consumer = {
      $$typeof: REACT_CONTEXT_TYPE,
      _context: context
    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here

    Object.defineProperties(Consumer, {
      Provider: {
        get: function () {
          if (!hasWarnedAboutUsingConsumerProvider) {
            hasWarnedAboutUsingConsumerProvider = true;

            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
          }

          return context.Provider;
        },
        set: function (_Provider) {
          context.Provider = _Provider;
        }
      },
      _currentValue: {
        get: function () {
          return context._currentValue;
        },
        set: function (_currentValue) {
          context._currentValue = _currentValue;
        }
      },
      _currentValue2: {
        get: function () {
          return context._currentValue2;
        },
        set: function (_currentValue2) {
          context._currentValue2 = _currentValue2;
        }
      },
      _threadCount: {
        get: function () {
          return context._threadCount;
        },
        set: function (_threadCount) {
          context._threadCount = _threadCount;
        }
      },
      Consumer: {
        get: function () {
          if (!hasWarnedAboutUsingNestedContextConsumers) {
            hasWarnedAboutUsingNestedContextConsumers = true;

            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
          }

          return context.Consumer;
        }
      },
      displayName: {
        get: function () {
          return context.displayName;
        },
        set: function (displayName) {
          if (!hasWarnedAboutDisplayNameOnConsumer) {
            warn('Setting `displayName` on Context.Consumer has no effect. ' + "You should set it directly on the context with Context.displayName = '%s'.", displayName);

            hasWarnedAboutDisplayNameOnConsumer = true;
          }
        }
      }
    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty

    context.Consumer = Consumer;
  }

  {
    context._currentRenderer = null;
    context._currentRenderer2 = null;
  }

  return context;
}

var Uninitialized = -1;
var Pending = 0;
var Resolved = 1;
var Rejected = 2;

function lazyInitializer(payload) {
  if (payload._status === Uninitialized) {
    var ctor = payload._result;
    var thenable = ctor(); // Transition to the next state.
    // This might throw either because it's missing or throws. If so, we treat it
    // as still uninitialized and try again next time. Which is the same as what
    // happens if the ctor or any wrappers processing the ctor throws. This might
    // end up fixing it if the resolution was a concurrency bug.

    thenable.then(function (moduleObject) {
      if (payload._status === Pending || payload._status === Uninitialized) {
        // Transition to the next state.
        var resolved = payload;
        resolved._status = Resolved;
        resolved._result = moduleObject;
      }
    }, function (error) {
      if (payload._status === Pending || payload._status === Uninitialized) {
        // Transition to the next state.
        var rejected = payload;
        rejected._status = Rejected;
        rejected._result = error;
      }
    });

    if (payload._status === Uninitialized) {
      // In case, we're still uninitialized, then we're waiting for the thenable
      // to resolve. Set it as pending in the meantime.
      var pending = payload;
      pending._status = Pending;
      pending._result = thenable;
    }
  }

  if (payload._status === Resolved) {
    var moduleObject = payload._result;

    {
      if (moduleObject === undefined) {
        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
        'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))\n\n" + 'Did you accidentally put curly braces around the import?', moduleObject);
      }
    }

    {
      if (!('default' in moduleObject)) {
        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
        'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))", moduleObject);
      }
    }

    return moduleObject.default;
  } else {
    throw payload._result;
  }
}

function lazy(ctor) {
  var payload = {
    // We use these fields to store the result.
    _status: Uninitialized,
    _result: ctor
  };
  var lazyType = {
    $$typeof: REACT_LAZY_TYPE,
    _payload: payload,
    _init: lazyInitializer
  };

  {
    // In production, this would just set it on the object.
    var defaultProps;
    var propTypes; // $FlowFixMe

    Object.defineProperties(lazyType, {
      defaultProps: {
        configurable: true,
        get: function () {
          return defaultProps;
        },
        set: function (newDefaultProps) {
          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          defaultProps = newDefaultProps; // Match production behavior more closely:
          // $FlowFixMe

          Object.defineProperty(lazyType, 'defaultProps', {
            enumerable: true
          });
        }
      },
      propTypes: {
        configurable: true,
        get: function () {
          return propTypes;
        },
        set: function (newPropTypes) {
          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          propTypes = newPropTypes; // Match production behavior more closely:
          // $FlowFixMe

          Object.defineProperty(lazyType, 'propTypes', {
            enumerable: true
          });
        }
      }
    });
  }

  return lazyType;
}

function forwardRef(render) {
  {
    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
    } else if (typeof render !== 'function') {
      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
    } else {
      if (render.length !== 0 && render.length !== 2) {
        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
      }
    }

    if (render != null) {
      if (render.defaultProps != null || render.propTypes != null) {
        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');
      }
    }
  }

  var elementType = {
    $$typeof: REACT_FORWARD_REF_TYPE,
    render: render
  };

  {
    var ownName;
    Object.defineProperty(elementType, 'displayName', {
      enumerable: false,
      configurable: true,
      get: function () {
        return ownName;
      },
      set: function (name) {
        ownName = name; // The inner component shouldn't inherit this display name in most cases,
        // because the component may be used elsewhere.
        // But it's nice for anonymous functions to inherit the name,
        // so that our component-stack generation logic will display their frames.
        // An anonymous function generally suggests a pattern like:
        //   React.forwardRef((props, ref) => {...});
        // This kind of inner function is not used elsewhere so the side effect is okay.

        if (!render.name && !render.displayName) {
          render.displayName = name;
        }
      }
    });
  }

  return elementType;
}

var REACT_MODULE_REFERENCE;

{
  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
}

function isValidElementType(type) {
  if (typeof type === 'string' || typeof type === 'function') {
    return true;
  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {
    return true;
  }

  if (typeof type === 'object' && type !== null) {
    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
    // types supported by any Flight configuration anywhere since
    // we don't know which Flight build this will end up being used
    // with.
    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
      return true;
    }
  }

  return false;
}

function memo(type, compare) {
  {
    if (!isValidElementType(type)) {
      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
    }
  }

  var elementType = {
    $$typeof: REACT_MEMO_TYPE,
    type: type,
    compare: compare === undefined ? null : compare
  };

  {
    var ownName;
    Object.defineProperty(elementType, 'displayName', {
      enumerable: false,
      configurable: true,
      get: function () {
        return ownName;
      },
      set: function (name) {
        ownName = name; // The inner component shouldn't inherit this display name in most cases,
        // because the component may be used elsewhere.
        // But it's nice for anonymous functions to inherit the name,
        // so that our component-stack generation logic will display their frames.
        // An anonymous function generally suggests a pattern like:
        //   React.memo((props) => {...});
        // This kind of inner function is not used elsewhere so the side effect is okay.

        if (!type.name && !type.displayName) {
          type.displayName = name;
        }
      }
    });
  }

  return elementType;
}

function resolveDispatcher() {
  var dispatcher = ReactCurrentDispatcher.current;

  {
    if (dispatcher === null) {
      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\n' + '2. You might be breaking the Rules of Hooks\n' + '3. You might have more than one copy of React in the same app\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');
    }
  } // Will result in a null access error if accessed outside render phase. We
  // intentionally don't throw our own error because this is in a hot path.
  // Also helps ensure this is inlined.


  return dispatcher;
}
function useContext(Context) {
  var dispatcher = resolveDispatcher();

  {
    // TODO: add a more generic warning for invalid values.
    if (Context._context !== undefined) {
      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
      // and nobody should be using this in existing code.

      if (realContext.Consumer === Context) {
        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
      } else if (realContext.Provider === Context) {
        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
      }
    }
  }

  return dispatcher.useContext(Context);
}
function useState(initialState) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useState(initialState);
}
function useReducer(reducer, initialArg, init) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useReducer(reducer, initialArg, init);
}
function useRef(initialValue) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useRef(initialValue);
}
function useEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useEffect(create, deps);
}
function useInsertionEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useInsertionEffect(create, deps);
}
function useLayoutEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useLayoutEffect(create, deps);
}
function useCallback(callback, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useCallback(callback, deps);
}
function useMemo(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useMemo(create, deps);
}
function useImperativeHandle(ref, create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useImperativeHandle(ref, create, deps);
}
function useDebugValue(value, formatterFn) {
  {
    var dispatcher = resolveDispatcher();
    return dispatcher.useDebugValue(value, formatterFn);
  }
}
function useTransition() {
  var dispatcher = resolveDispatcher();
  return dispatcher.useTransition();
}
function useDeferredValue(value) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useDeferredValue(value);
}
function useId() {
  var dispatcher = resolveDispatcher();
  return dispatcher.useId();
}
function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
}

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: assign({}, props, {
          value: prevLog
        }),
        info: assign({}, props, {
          value: prevInfo
        }),
        warn: assign({}, props, {
          value: prevWarn
        }),
        error: assign({}, props, {
          value: prevError
        }),
        group: assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if ( !fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher$1.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                // but we have a user-provided "displayName"
                // splice it in to make the stack more readable.


                if (fn.displayName && _frame.includes('<anonymous>')) {
                  _frame = _frame.replace('<anonymous>', fn.displayName);
                }

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher$1.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case REACT_SUSPENSE_TYPE:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

var loggedTypeFailures = {};
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            // eslint-disable-next-line react-internal/prod-error-codes
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

function setCurrentlyValidatingElement$1(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      setExtraStackFrame(stack);
    } else {
      setExtraStackFrame(null);
    }
  }
}

var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentNameFromType(ReactCurrentOwner.current.type);

    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }

  return '';
}

function getSourceInfoErrorAddendum(source) {
  if (source !== undefined) {
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }

  return '';
}

function getSourceInfoErrorAddendumForProps(elementProps) {
  if (elementProps !== null && elementProps !== undefined) {
    return getSourceInfoErrorAddendum(elementProps.__source);
  }

  return '';
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

    if (parentName) {
      info = "\n\nCheck the top-level render call using <" + parentName + ">.";
    }
  }

  return info;
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }

  element._store.validated = true;
  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }

  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.

  var childOwner = '';

  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
  }

  {
    setCurrentlyValidatingElement$1(element);

    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);

    setCurrentlyValidatingElement$1(null);
  }
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }

  if (isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];

      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);

    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;

        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  {
    var type = element.type;

    if (type === null || type === undefined || typeof type === 'string') {
      return;
    }

    var propTypes;

    if (typeof type === 'function') {
      propTypes = type.propTypes;
    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
    // Inner props are checked in the reconciler.
    type.$$typeof === REACT_MEMO_TYPE)) {
      propTypes = type.propTypes;
    } else {
      return;
    }

    if (propTypes) {
      // Intentionally inside to avoid triggering lazy initializers:
      var name = getComponentNameFromType(type);
      checkPropTypes(propTypes, element.props, 'prop', name, element);
    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

      var _name = getComponentNameFromType(type);

      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
    }

    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
    }
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  {
    var keys = Object.keys(fragment.props);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (key !== 'children' && key !== 'key') {
        setCurrentlyValidatingElement$1(fragment);

        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);

        setCurrentlyValidatingElement$1(null);
        break;
      }
    }

    if (fragment.ref !== null) {
      setCurrentlyValidatingElement$1(fragment);

      error('Invalid attribute `ref` supplied to `React.Fragment`.');

      setCurrentlyValidatingElement$1(null);
    }
  }
}
function createElementWithValidation(type, props, children) {
  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.

  if (!validType) {
    var info = '';

    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendumForProps(props);

    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    var typeString;

    if (type === null) {
      typeString = 'null';
    } else if (isArray(type)) {
      typeString = 'array';
    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
      typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
      info = ' Did you accidentally export a JSX literal instead of a component?';
    } else {
      typeString = typeof type;
    }

    {
      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
    }
  }

  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.

  if (element == null) {
    return element;
  } // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)


  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (type === REACT_FRAGMENT_TYPE) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}
var didWarnAboutDeprecatedCreateFactory = false;
function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  validatedFactory.type = type;

  {
    if (!didWarnAboutDeprecatedCreateFactory) {
      didWarnAboutDeprecatedCreateFactory = true;

      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');
    } // Legacy hook: remove it


    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');

        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}
function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);

  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }

  validatePropTypes(newElement);
  return newElement;
}

function startTransition(scope, options) {
  var prevTransition = ReactCurrentBatchConfig.transition;
  ReactCurrentBatchConfig.transition = {};
  var currentTransition = ReactCurrentBatchConfig.transition;

  {
    ReactCurrentBatchConfig.transition._updatedFibers = new Set();
  }

  try {
    scope();
  } finally {
    ReactCurrentBatchConfig.transition = prevTransition;

    {
      if (prevTransition === null && currentTransition._updatedFibers) {
        var updatedFibersCount = currentTransition._updatedFibers.size;

        if (updatedFibersCount > 10) {
          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');
        }

        currentTransition._updatedFibers.clear();
      }
    }
  }
}

var didWarnAboutMessageChannel = false;
var enqueueTaskImpl = null;
function enqueueTask(task) {
  if (enqueueTaskImpl === null) {
    try {
      // read require off the module object to get around the bundlers.
      // we don't want them to detect a require and bundle a Node polyfill.
      var requireString = ('require' + Math.random()).slice(0, 7);
      var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's
      // version of setImmediate, bypassing fake timers if any.

      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;
    } catch (_err) {
      // we're in a browser
      // we can't use regular timers because they may still be faked
      // so we try MessageChannel+postMessage instead
      enqueueTaskImpl = function (callback) {
        {
          if (didWarnAboutMessageChannel === false) {
            didWarnAboutMessageChannel = true;

            if (typeof MessageChannel === 'undefined') {
              error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');
            }
          }
        }

        var channel = new MessageChannel();
        channel.port1.onmessage = callback;
        channel.port2.postMessage(undefined);
      };
    }
  }

  return enqueueTaskImpl(task);
}

var actScopeDepth = 0;
var didWarnNoAwaitAct = false;
function act(callback) {
  {
    // `act` calls can be nested, so we track the depth. This represents the
    // number of `act` scopes on the stack.
    var prevActScopeDepth = actScopeDepth;
    actScopeDepth++;

    if (ReactCurrentActQueue.current === null) {
      // This is the outermost `act` scope. Initialize the queue. The reconciler
      // will detect the queue and use it instead of Scheduler.
      ReactCurrentActQueue.current = [];
    }

    var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
    var result;

    try {
      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only
      // set to `true` while the given callback is executed, not for updates
      // triggered during an async event, because this is how the legacy
      // implementation of `act` behaved.
      ReactCurrentActQueue.isBatchingLegacy = true;
      result = callback(); // Replicate behavior of original `act` implementation in legacy mode,
      // which flushed updates immediately after the scope function exits, even
      // if it's an async function.

      if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
        var queue = ReactCurrentActQueue.current;

        if (queue !== null) {
          ReactCurrentActQueue.didScheduleLegacyUpdate = false;
          flushActQueue(queue);
        }
      }
    } catch (error) {
      popActScope(prevActScopeDepth);
      throw error;
    } finally {
      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
    }

    if (result !== null && typeof result === 'object' && typeof result.then === 'function') {
      var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait
      // for it to resolve before exiting the current scope.

      var wasAwaited = false;
      var thenable = {
        then: function (resolve, reject) {
          wasAwaited = true;
          thenableResult.then(function (returnValue) {
            popActScope(prevActScopeDepth);

            if (actScopeDepth === 0) {
              // We've exited the outermost act scope. Recursively flush the
              // queue until there's no remaining work.
              recursivelyFlushAsyncActWork(returnValue, resolve, reject);
            } else {
              resolve(returnValue);
            }
          }, function (error) {
            // The callback threw an error.
            popActScope(prevActScopeDepth);
            reject(error);
          });
        }
      };

      {
        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {
          // eslint-disable-next-line no-undef
          Promise.resolve().then(function () {}).then(function () {
            if (!wasAwaited) {
              didWarnNoAwaitAct = true;

              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');
            }
          });
        }
      }

      return thenable;
    } else {
      var returnValue = result; // The callback is not an async function. Exit the current scope
      // immediately, without awaiting.

      popActScope(prevActScopeDepth);

      if (actScopeDepth === 0) {
        // Exiting the outermost act scope. Flush the queue.
        var _queue = ReactCurrentActQueue.current;

        if (_queue !== null) {
          flushActQueue(_queue);
          ReactCurrentActQueue.current = null;
        } // Return a thenable. If the user awaits it, we'll flush again in
        // case additional work was scheduled by a microtask.


        var _thenable = {
          then: function (resolve, reject) {
            // Confirm we haven't re-entered another `act` scope, in case
            // the user does something weird like await the thenable
            // multiple times.
            if (ReactCurrentActQueue.current === null) {
              // Recursively flush the queue until there's no remaining work.
              ReactCurrentActQueue.current = [];
              recursivelyFlushAsyncActWork(returnValue, resolve, reject);
            } else {
              resolve(returnValue);
            }
          }
        };
        return _thenable;
      } else {
        // Since we're inside a nested `act` scope, the returned thenable
        // immediately resolves. The outer scope will flush the queue.
        var _thenable2 = {
          then: function (resolve, reject) {
            resolve(returnValue);
          }
        };
        return _thenable2;
      }
    }
  }
}

function popActScope(prevActScopeDepth) {
  {
    if (prevActScopeDepth !== actScopeDepth - 1) {
      error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');
    }

    actScopeDepth = prevActScopeDepth;
  }
}

function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
  {
    var queue = ReactCurrentActQueue.current;

    if (queue !== null) {
      try {
        flushActQueue(queue);
        enqueueTask(function () {
          if (queue.length === 0) {
            // No additional work was scheduled. Finish.
            ReactCurrentActQueue.current = null;
            resolve(returnValue);
          } else {
            // Keep flushing work until there's none left.
            recursivelyFlushAsyncActWork(returnValue, resolve, reject);
          }
        });
      } catch (error) {
        reject(error);
      }
    } else {
      resolve(returnValue);
    }
  }
}

var isFlushing = false;

function flushActQueue(queue) {
  {
    if (!isFlushing) {
      // Prevent re-entrance.
      isFlushing = true;
      var i = 0;

      try {
        for (; i < queue.length; i++) {
          var callback = queue[i];

          do {
            callback = callback(true);
          } while (callback !== null);
        }

        queue.length = 0;
      } catch (error) {
        // If something throws, leave the remaining callbacks on the queue.
        queue = queue.slice(i + 1);
        throw error;
      } finally {
        isFlushing = false;
      }
    }
  }
}

var createElement$1 =  createElementWithValidation ;
var cloneElement$1 =  cloneElementWithValidation ;
var createFactory =  createFactoryWithValidation ;
var Children = {
  map: mapChildren,
  forEach: forEachChildren,
  count: countChildren,
  toArray: toArray,
  only: onlyChild
};

exports.Children = Children;
exports.Component = Component;
exports.Fragment = REACT_FRAGMENT_TYPE;
exports.Profiler = REACT_PROFILER_TYPE;
exports.PureComponent = PureComponent;
exports.StrictMode = REACT_STRICT_MODE_TYPE;
exports.Suspense = REACT_SUSPENSE_TYPE;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
exports.cloneElement = cloneElement$1;
exports.createContext = createContext;
exports.createElement = createElement$1;
exports.createFactory = createFactory;
exports.createRef = createRef;
exports.forwardRef = forwardRef;
exports.isValidElement = isValidElement;
exports.lazy = lazy;
exports.memo = memo;
exports.startTransition = startTransition;
exports.unstable_act = act;
exports.useCallback = useCallback;
exports.useContext = useContext;
exports.useDebugValue = useDebugValue;
exports.useDeferredValue = useDeferredValue;
exports.useEffect = useEffect;
exports.useId = useId;
exports.useImperativeHandle = useImperativeHandle;
exports.useInsertionEffect = useInsertionEffect;
exports.useLayoutEffect = useLayoutEffect;
exports.useMemo = useMemo;
exports.useReducer = useReducer;
exports.useRef = useRef;
exports.useState = useState;
exports.useSyncExternalStore = useSyncExternalStore;
exports.useTransition = useTransition;
exports.version = ReactVersion;
          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
}
        
  })();
}
"╛'use strict';

if (process.env.NODE_ENV === 'production') {
  module.exports = require('./cjs/react.production.min.js');
} else {
  module.exports = require('./cjs/react.development.js');
}
"▐'use strict';

if (process.env.NODE_ENV === 'production') {
  module.exports = require('./cjs/react-jsx-dev-runtime.production.min.js');
} else {
  module.exports = require('./cjs/react-jsx-dev-runtime.development.js');
}
"┘И/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

if (process.env.NODE_ENV !== "production") {
  (function() {

          'use strict';

/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
}
          var enableSchedulerDebugging = false;
var enableProfiling = false;
var frameYieldMs = 5;

function push(heap, node) {
  var index = heap.length;
  heap.push(node);
  siftUp(heap, node, index);
}
function peek(heap) {
  return heap.length === 0 ? null : heap[0];
}
function pop(heap) {
  if (heap.length === 0) {
    return null;
  }

  var first = heap[0];
  var last = heap.pop();

  if (last !== first) {
    heap[0] = last;
    siftDown(heap, last, 0);
  }

  return first;
}

function siftUp(heap, node, i) {
  var index = i;

  while (index > 0) {
    var parentIndex = index - 1 >>> 1;
    var parent = heap[parentIndex];

    if (compare(parent, node) > 0) {
      // The parent is larger. Swap positions.
      heap[parentIndex] = node;
      heap[index] = parent;
      index = parentIndex;
    } else {
      // The parent is smaller. Exit.
      return;
    }
  }
}

function siftDown(heap, node, i) {
  var index = i;
  var length = heap.length;
  var halfLength = length >>> 1;

  while (index < halfLength) {
    var leftIndex = (index + 1) * 2 - 1;
    var left = heap[leftIndex];
    var rightIndex = leftIndex + 1;
    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.

    if (compare(left, node) < 0) {
      if (rightIndex < length && compare(right, left) < 0) {
        heap[index] = right;
        heap[rightIndex] = node;
        index = rightIndex;
      } else {
        heap[index] = left;
        heap[leftIndex] = node;
        index = leftIndex;
      }
    } else if (rightIndex < length && compare(right, node) < 0) {
      heap[index] = right;
      heap[rightIndex] = node;
      index = rightIndex;
    } else {
      // Neither child is smaller. Exit.
      return;
    }
  }
}

function compare(a, b) {
  // Compare sort index first, then task id.
  var diff = a.sortIndex - b.sortIndex;
  return diff !== 0 ? diff : a.id - b.id;
}

// TODO: Use symbols?
var ImmediatePriority = 1;
var UserBlockingPriority = 2;
var NormalPriority = 3;
var LowPriority = 4;
var IdlePriority = 5;

function markTaskErrored(task, ms) {
}

/* eslint-disable no-var */

var hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';

if (hasPerformanceNow) {
  var localPerformance = performance;

  exports.unstable_now = function () {
    return localPerformance.now();
  };
} else {
  var localDate = Date;
  var initialTime = localDate.now();

  exports.unstable_now = function () {
    return localDate.now() - initialTime;
  };
} // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111


var maxSigned31BitInt = 1073741823; // Times out immediately

var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out

var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
var NORMAL_PRIORITY_TIMEOUT = 5000;
var LOW_PRIORITY_TIMEOUT = 10000; // Never times out

var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap

var taskQueue = [];
var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.

var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
var currentTask = null;
var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.

var isPerformingWork = false;
var isHostCallbackScheduled = false;
var isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.

var localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;
var localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;
var localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom

var isInputPending = typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;

function advanceTimers(currentTime) {
  // Check for tasks that are no longer delayed and add them to the queue.
  var timer = peek(timerQueue);

  while (timer !== null) {
    if (timer.callback === null) {
      // Timer was cancelled.
      pop(timerQueue);
    } else if (timer.startTime <= currentTime) {
      // Timer fired. Transfer to the task queue.
      pop(timerQueue);
      timer.sortIndex = timer.expirationTime;
      push(taskQueue, timer);
    } else {
      // Remaining timers are pending.
      return;
    }

    timer = peek(timerQueue);
  }
}

function handleTimeout(currentTime) {
  isHostTimeoutScheduled = false;
  advanceTimers(currentTime);

  if (!isHostCallbackScheduled) {
    if (peek(taskQueue) !== null) {
      isHostCallbackScheduled = true;
      requestHostCallback(flushWork);
    } else {
      var firstTimer = peek(timerQueue);

      if (firstTimer !== null) {
        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
      }
    }
  }
}

function flushWork(hasTimeRemaining, initialTime) {


  isHostCallbackScheduled = false;

  if (isHostTimeoutScheduled) {
    // We scheduled a timeout but it's no longer needed. Cancel it.
    isHostTimeoutScheduled = false;
    cancelHostTimeout();
  }

  isPerformingWork = true;
  var previousPriorityLevel = currentPriorityLevel;

  try {
    if (enableProfiling) {
      try {
        return workLoop(hasTimeRemaining, initialTime);
      } catch (error) {
        if (currentTask !== null) {
          var currentTime = exports.unstable_now();
          markTaskErrored(currentTask, currentTime);
          currentTask.isQueued = false;
        }

        throw error;
      }
    } else {
      // No catch in prod code path.
      return workLoop(hasTimeRemaining, initialTime);
    }
  } finally {
    currentTask = null;
    currentPriorityLevel = previousPriorityLevel;
    isPerformingWork = false;
  }
}

function workLoop(hasTimeRemaining, initialTime) {
  var currentTime = initialTime;
  advanceTimers(currentTime);
  currentTask = peek(taskQueue);

  while (currentTask !== null && !(enableSchedulerDebugging )) {
    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
      // This currentTask hasn't expired, and we've reached the deadline.
      break;
    }

    var callback = currentTask.callback;

    if (typeof callback === 'function') {
      currentTask.callback = null;
      currentPriorityLevel = currentTask.priorityLevel;
      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;

      var continuationCallback = callback(didUserCallbackTimeout);
      currentTime = exports.unstable_now();

      if (typeof continuationCallback === 'function') {
        currentTask.callback = continuationCallback;
      } else {

        if (currentTask === peek(taskQueue)) {
          pop(taskQueue);
        }
      }

      advanceTimers(currentTime);
    } else {
      pop(taskQueue);
    }

    currentTask = peek(taskQueue);
  } // Return whether there's additional work


  if (currentTask !== null) {
    return true;
  } else {
    var firstTimer = peek(timerQueue);

    if (firstTimer !== null) {
      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
    }

    return false;
  }
}

function unstable_runWithPriority(priorityLevel, eventHandler) {
  switch (priorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
    case LowPriority:
    case IdlePriority:
      break;

    default:
      priorityLevel = NormalPriority;
  }

  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
}

function unstable_next(eventHandler) {
  var priorityLevel;

  switch (currentPriorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
      // Shift down to normal priority
      priorityLevel = NormalPriority;
      break;

    default:
      // Anything lower than normal priority should remain at the current level.
      priorityLevel = currentPriorityLevel;
      break;
  }

  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
}

function unstable_wrapCallback(callback) {
  var parentPriorityLevel = currentPriorityLevel;
  return function () {
    // This is a fork of runWithPriority, inlined for performance.
    var previousPriorityLevel = currentPriorityLevel;
    currentPriorityLevel = parentPriorityLevel;

    try {
      return callback.apply(this, arguments);
    } finally {
      currentPriorityLevel = previousPriorityLevel;
    }
  };
}

function unstable_scheduleCallback(priorityLevel, callback, options) {
  var currentTime = exports.unstable_now();
  var startTime;

  if (typeof options === 'object' && options !== null) {
    var delay = options.delay;

    if (typeof delay === 'number' && delay > 0) {
      startTime = currentTime + delay;
    } else {
      startTime = currentTime;
    }
  } else {
    startTime = currentTime;
  }

  var timeout;

  switch (priorityLevel) {
    case ImmediatePriority:
      timeout = IMMEDIATE_PRIORITY_TIMEOUT;
      break;

    case UserBlockingPriority:
      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
      break;

    case IdlePriority:
      timeout = IDLE_PRIORITY_TIMEOUT;
      break;

    case LowPriority:
      timeout = LOW_PRIORITY_TIMEOUT;
      break;

    case NormalPriority:
    default:
      timeout = NORMAL_PRIORITY_TIMEOUT;
      break;
  }

  var expirationTime = startTime + timeout;
  var newTask = {
    id: taskIdCounter++,
    callback: callback,
    priorityLevel: priorityLevel,
    startTime: startTime,
    expirationTime: expirationTime,
    sortIndex: -1
  };

  if (startTime > currentTime) {
    // This is a delayed task.
    newTask.sortIndex = startTime;
    push(timerQueue, newTask);

    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
      // All tasks are delayed, and this is the task with the earliest delay.
      if (isHostTimeoutScheduled) {
        // Cancel an existing timeout.
        cancelHostTimeout();
      } else {
        isHostTimeoutScheduled = true;
      } // Schedule a timeout.


      requestHostTimeout(handleTimeout, startTime - currentTime);
    }
  } else {
    newTask.sortIndex = expirationTime;
    push(taskQueue, newTask);
    // wait until the next time we yield.


    if (!isHostCallbackScheduled && !isPerformingWork) {
      isHostCallbackScheduled = true;
      requestHostCallback(flushWork);
    }
  }

  return newTask;
}

function unstable_pauseExecution() {
}

function unstable_continueExecution() {

  if (!isHostCallbackScheduled && !isPerformingWork) {
    isHostCallbackScheduled = true;
    requestHostCallback(flushWork);
  }
}

function unstable_getFirstCallbackNode() {
  return peek(taskQueue);
}

function unstable_cancelCallback(task) {
  // remove from the queue because you can't remove arbitrary nodes from an
  // array based heap, only the first one.)


  task.callback = null;
}

function unstable_getCurrentPriorityLevel() {
  return currentPriorityLevel;
}

var isMessageLoopRunning = false;
var scheduledHostCallback = null;
var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
// thread, like user events. By default, it yields multiple times per frame.
// It does not attempt to align with frame boundaries, since most tasks don't
// need to be frame aligned; for those that do, use requestAnimationFrame.

var frameInterval = frameYieldMs;
var startTime = -1;

function shouldYieldToHost() {
  var timeElapsed = exports.unstable_now() - startTime;

  if (timeElapsed < frameInterval) {
    // The main thread has only been blocked for a really short amount of time;
    // smaller than a single frame. Don't yield yet.
    return false;
  } // The main thread has been blocked for a non-negligible amount of time. We


  return true;
}

function requestPaint() {

}

function forceFrameRate(fps) {
  if (fps < 0 || fps > 125) {
    // Using console['error'] to evade Babel and ESLint
    console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');
    return;
  }

  if (fps > 0) {
    frameInterval = Math.floor(1000 / fps);
  } else {
    // reset the framerate
    frameInterval = frameYieldMs;
  }
}

var performWorkUntilDeadline = function () {
  if (scheduledHostCallback !== null) {
    var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread
    // has been blocked.

    startTime = currentTime;
    var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the
    // error can be observed.
    //
    // Intentionally not using a try-catch, since that makes some debugging
    // techniques harder. Instead, if `scheduledHostCallback` errors, then
    // `hasMoreWork` will remain true, and we'll continue the work loop.

    var hasMoreWork = true;

    try {
      hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
    } finally {
      if (hasMoreWork) {
        // If there's more work, schedule the next message event at the end
        // of the preceding one.
        schedulePerformWorkUntilDeadline();
      } else {
        isMessageLoopRunning = false;
        scheduledHostCallback = null;
      }
    }
  } else {
    isMessageLoopRunning = false;
  } // Yielding to the browser will give it a chance to paint, so we can
};

var schedulePerformWorkUntilDeadline;

if (typeof localSetImmediate === 'function') {
  // Node.js and old IE.
  // There's a few reasons for why we prefer setImmediate.
  //
  // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.
  // (Even though this is a DOM fork of the Scheduler, you could get here
  // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)
  // https://github.com/facebook/react/issues/20756
  //
  // But also, it runs earlier which is the semantic we want.
  // If other browsers ever implement it, it's better to use it.
  // Although both of these would be inferior to native scheduling.
  schedulePerformWorkUntilDeadline = function () {
    localSetImmediate(performWorkUntilDeadline);
  };
} else if (typeof MessageChannel !== 'undefined') {
  // DOM and Worker environments.
  // We prefer MessageChannel because of the 4ms setTimeout clamping.
  var channel = new MessageChannel();
  var port = channel.port2;
  channel.port1.onmessage = performWorkUntilDeadline;

  schedulePerformWorkUntilDeadline = function () {
    port.postMessage(null);
  };
} else {
  // We should only fallback here in non-browser environments.
  schedulePerformWorkUntilDeadline = function () {
    localSetTimeout(performWorkUntilDeadline, 0);
  };
}

function requestHostCallback(callback) {
  scheduledHostCallback = callback;

  if (!isMessageLoopRunning) {
    isMessageLoopRunning = true;
    schedulePerformWorkUntilDeadline();
  }
}

function requestHostTimeout(callback, ms) {
  taskTimeoutID = localSetTimeout(function () {
    callback(exports.unstable_now());
  }, ms);
}

function cancelHostTimeout() {
  localClearTimeout(taskTimeoutID);
  taskTimeoutID = -1;
}

var unstable_requestPaint = requestPaint;
var unstable_Profiling =  null;

exports.unstable_IdlePriority = IdlePriority;
exports.unstable_ImmediatePriority = ImmediatePriority;
exports.unstable_LowPriority = LowPriority;
exports.unstable_NormalPriority = NormalPriority;
exports.unstable_Profiling = unstable_Profiling;
exports.unstable_UserBlockingPriority = UserBlockingPriority;
exports.unstable_cancelCallback = unstable_cancelCallback;
exports.unstable_continueExecution = unstable_continueExecution;
exports.unstable_forceFrameRate = forceFrameRate;
exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
exports.unstable_next = unstable_next;
exports.unstable_pauseExecution = unstable_pauseExecution;
exports.unstable_requestPaint = unstable_requestPaint;
exports.unstable_runWithPriority = unstable_runWithPriority;
exports.unstable_scheduleCallback = unstable_scheduleCallback;
exports.unstable_shouldYield = shouldYieldToHost;
exports.unstable_wrapCallback = unstable_wrapCallback;
          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
}
        
  })();
}
"╞'use strict';

if (process.env.NODE_ENV === 'production') {
  module.exports = require('./cjs/scheduler.production.min.js');
} else {
  module.exports = require('./cjs/scheduler.development.js');
}
"▌function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

import { log } from "../utils/log.js";

var WebSocketClient = /*#__PURE__*/function () {
  /**
   * @param {string} url
   */
  function WebSocketClient(url) {
    _classCallCheck(this, WebSocketClient);

    this.client = new WebSocket(url);

    this.client.onerror = function (error) {
      log.error(error);
    };
  }
  /**
   * @param {(...args: any[]) => void} f
   */


  _createClass(WebSocketClient, [{
    key: "onOpen",
    value: function onOpen(f) {
      this.client.onopen = f;
    }
    /**
     * @param {(...args: any[]) => void} f
     */

  }, {
    key: "onClose",
    value: function onClose(f) {
      this.client.onclose = f;
    } // call f with the message string as the first argument

    /**
     * @param {(...args: any[]) => void} f
     */

  }, {
    key: "onMessage",
    value: function onMessage(f) {
      this.client.onmessage = function (e) {
        f(e.data);
      };
    }
  }]);

  return WebSocketClient;
}();

export { WebSocketClient as default };"Щ7/* global __resourceQuery, __webpack_hash__ */
/// <reference types="webpack/module" />
import webpackHotLog from "webpack/hot/log.js";
import stripAnsi from "./utils/stripAnsi.js";
import parseURL from "./utils/parseURL.js";
import socket from "./socket.js";
import { formatProblem, show, hide } from "./overlay.js";
import { log, setLogLevel } from "./utils/log.js";
import sendMessage from "./utils/sendMessage.js";
import reloadApp from "./utils/reloadApp.js";
import createSocketURL from "./utils/createSocketURL.js";
/**
 * @typedef {Object} Options
 * @property {boolean} hot
 * @property {boolean} liveReload
 * @property {boolean} progress
 * @property {boolean | { warnings?: boolean, errors?: boolean, trustedTypesPolicyName?: string }} overlay
 * @property {string} [logging]
 * @property {number} [reconnect]
 */

/**
 * @typedef {Object} Status
 * @property {boolean} isUnloading
 * @property {string} currentHash
 * @property {string} [previousHash]
 */

/**
 * @type {Status}
 */

var status = {
  isUnloading: false,
  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement
  // eslint-disable-next-line camelcase
  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""
};
/** @type {Options} */

var options = {
  hot: false,
  liveReload: false,
  progress: false,
  overlay: false
};
var parsedResourceQuery = parseURL(__resourceQuery);

if (parsedResourceQuery.hot === "true") {
  options.hot = true;
  log.info("Hot Module Replacement enabled.");
}

if (parsedResourceQuery["live-reload"] === "true") {
  options.liveReload = true;
  log.info("Live Reloading enabled.");
}

if (parsedResourceQuery.logging) {
  options.logging = parsedResourceQuery.logging;
}

if (typeof parsedResourceQuery.reconnect !== "undefined") {
  options.reconnect = Number(parsedResourceQuery.reconnect);
}
/**
 * @param {string} level
 */


function setAllLogLevel(level) {
  // This is needed because the HMR logger operate separately from dev server logger
  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);
  setLogLevel(level);
}

if (options.logging) {
  setAllLogLevel(options.logging);
}

self.addEventListener("beforeunload", function () {
  status.isUnloading = true;
});
var onSocketMessage = {
  hot: function hot() {
    if (parsedResourceQuery.hot === "false") {
      return;
    }

    options.hot = true;
    log.info("Hot Module Replacement enabled.");
  },
  liveReload: function liveReload() {
    if (parsedResourceQuery["live-reload"] === "false") {
      return;
    }

    options.liveReload = true;
    log.info("Live Reloading enabled.");
  },
  invalid: function invalid() {
    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.

    if (options.overlay) {
      hide();
    }

    sendMessage("Invalid");
  },

  /**
   * @param {string} hash
   */
  hash: function hash(_hash) {
    status.previousHash = status.currentHash;
    status.currentHash = _hash;
  },
  logging: setAllLogLevel,

  /**
   * @param {boolean} value
   */
  overlay: function overlay(value) {
    if (typeof document === "undefined") {
      return;
    }

    options.overlay = value;
  },

  /**
   * @param {number} value
   */
  reconnect: function reconnect(value) {
    if (parsedResourceQuery.reconnect === "false") {
      return;
    }

    options.reconnect = value;
  },

  /**
   * @param {boolean} value
   */
  progress: function progress(value) {
    options.progress = value;
  },

  /**
   * @param {{ pluginName?: string, percent: number, msg: string }} data
   */
  "progress-update": function progressUpdate(data) {
    if (options.progress) {
      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));
    }

    sendMessage("Progress", data);
  },
  "still-ok": function stillOk() {
    log.info("Nothing changed.");

    if (options.overlay) {
      hide();
    }

    sendMessage("StillOk");
  },
  ok: function ok() {
    sendMessage("Ok");

    if (options.overlay) {
      hide();
    }

    reloadApp(options, status);
  },
  // TODO: remove in v5 in favor of 'static-changed'

  /**
   * @param {string} file
   */
  "content-changed": function contentChanged(file) {
    log.info("".concat(file ? "\"".concat(file, "\"") : "Content", " from static directory was changed. Reloading..."));
    self.location.reload();
  },

  /**
   * @param {string} file
   */
  "static-changed": function staticChanged(file) {
    log.info("".concat(file ? "\"".concat(file, "\"") : "Content", " from static directory was changed. Reloading..."));
    self.location.reload();
  },

  /**
   * @param {Error[]} warnings
   * @param {any} params
   */
  warnings: function warnings(_warnings, params) {
    log.warn("Warnings while compiling.");

    var printableWarnings = _warnings.map(function (error) {
      var _formatProblem = formatProblem("warning", error),
          header = _formatProblem.header,
          body = _formatProblem.body;

      return "".concat(header, "\n").concat(stripAnsi(body));
    });

    sendMessage("Warnings", printableWarnings);

    for (var i = 0; i < printableWarnings.length; i++) {
      log.warn(printableWarnings[i]);
    }

    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;

    if (needShowOverlayForWarnings) {
      var trustedTypesPolicyName = typeof options.overlay === "object" && options.overlay.trustedTypesPolicyName;
      show("warning", _warnings, trustedTypesPolicyName || null);
    }

    if (params && params.preventReloading) {
      return;
    }

    reloadApp(options, status);
  },

  /**
   * @param {Error[]} errors
   */
  errors: function errors(_errors) {
    log.error("Errors while compiling. Reload prevented.");

    var printableErrors = _errors.map(function (error) {
      var _formatProblem2 = formatProblem("error", error),
          header = _formatProblem2.header,
          body = _formatProblem2.body;

      return "".concat(header, "\n").concat(stripAnsi(body));
    });

    sendMessage("Errors", printableErrors);

    for (var i = 0; i < printableErrors.length; i++) {
      log.error(printableErrors[i]);
    }

    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;

    if (needShowOverlayForErrors) {
      var trustedTypesPolicyName = typeof options.overlay === "object" && options.overlay.trustedTypesPolicyName;
      show("error", _errors, trustedTypesPolicyName || null);
    }
  },

  /**
   * @param {Error} error
   */
  error: function error(_error) {
    log.error(_error);
  },
  close: function close() {
    log.info("Disconnected!");

    if (options.overlay) {
      hide();
    }

    sendMessage("Close");
  }
};
var socketURL = createSocketURL(parsedResourceQuery);
socket(socketURL, onSocketMessage, options.reconnect);"Ч╠/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./client-src/modules/logger/SyncBailHookFake.js":
/*!*******************************************************!*\
  !*** ./client-src/modules/logger/SyncBailHookFake.js ***!
  \*******************************************************/
/***/ (function(module) {


/**
 * Client stub for tapable SyncBailHook
 */

module.exports = function clientTapableSyncBailHook() {
  return {
    call: function call() {}
  };
};

/***/ }),

/***/ "./node_modules/webpack/lib/logging/Logger.js":
/*!****************************************************!*\
  !*** ./node_modules/webpack/lib/logging/Logger.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/


function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _iterableToArray(iter) {
  if (typeof (typeof Symbol !== "undefined" ? Symbol : function (i) { return i; }) !== "undefined" && iter[(typeof Symbol !== "undefined" ? Symbol : function (i) { return i; }).iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

var LogType = Object.freeze({
  error:
  /** @type {"error"} */
  "error",
  // message, c style arguments
  warn:
  /** @type {"warn"} */
  "warn",
  // message, c style arguments
  info:
  /** @type {"info"} */
  "info",
  // message, c style arguments
  log:
  /** @type {"log"} */
  "log",
  // message, c style arguments
  debug:
  /** @type {"debug"} */
  "debug",
  // message, c style arguments
  trace:
  /** @type {"trace"} */
  "trace",
  // no arguments
  group:
  /** @type {"group"} */
  "group",
  // [label]
  groupCollapsed:
  /** @type {"groupCollapsed"} */
  "groupCollapsed",
  // [label]
  groupEnd:
  /** @type {"groupEnd"} */
  "groupEnd",
  // [label]
  profile:
  /** @type {"profile"} */
  "profile",
  // [profileName]
  profileEnd:
  /** @type {"profileEnd"} */
  "profileEnd",
  // [profileName]
  time:
  /** @type {"time"} */
  "time",
  // name, time as [seconds, nanoseconds]
  clear:
  /** @type {"clear"} */
  "clear",
  // no arguments
  status:
  /** @type {"status"} */
  "status" // message, arguments

});
exports.LogType = LogType;
/** @typedef {typeof LogType[keyof typeof LogType]} LogTypeEnum */

var LOG_SYMBOL = (typeof Symbol !== "undefined" ? Symbol : function (i) { return i; })("webpack logger raw log method");
var TIMERS_SYMBOL = (typeof Symbol !== "undefined" ? Symbol : function (i) { return i; })("webpack logger times");
var TIMERS_AGGREGATES_SYMBOL = (typeof Symbol !== "undefined" ? Symbol : function (i) { return i; })("webpack logger aggregated times");

var WebpackLogger = /*#__PURE__*/function () {
  /**
   * @param {function(LogTypeEnum, any[]=): void} log log function
   * @param {function(string | function(): string): WebpackLogger} getChildLogger function to create child logger
   */
  function WebpackLogger(log, getChildLogger) {
    _classCallCheck(this, WebpackLogger);

    this[LOG_SYMBOL] = log;
    this.getChildLogger = getChildLogger;
  }

  _createClass(WebpackLogger, [{
    key: "error",
    value: function error() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      this[LOG_SYMBOL](LogType.error, args);
    }
  }, {
    key: "warn",
    value: function warn() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      this[LOG_SYMBOL](LogType.warn, args);
    }
  }, {
    key: "info",
    value: function info() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      this[LOG_SYMBOL](LogType.info, args);
    }
  }, {
    key: "log",
    value: function log() {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      this[LOG_SYMBOL](LogType.log, args);
    }
  }, {
    key: "debug",
    value: function debug() {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      this[LOG_SYMBOL](LogType.debug, args);
    }
  }, {
    key: "assert",
    value: function assert(assertion) {
      if (!assertion) {
        for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {
          args[_key6 - 1] = arguments[_key6];
        }

        this[LOG_SYMBOL](LogType.error, args);
      }
    }
  }, {
    key: "trace",
    value: function trace() {
      this[LOG_SYMBOL](LogType.trace, ["Trace"]);
    }
  }, {
    key: "clear",
    value: function clear() {
      this[LOG_SYMBOL](LogType.clear);
    }
  }, {
    key: "status",
    value: function status() {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      this[LOG_SYMBOL](LogType.status, args);
    }
  }, {
    key: "group",
    value: function group() {
      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        args[_key8] = arguments[_key8];
      }

      this[LOG_SYMBOL](LogType.group, args);
    }
  }, {
    key: "groupCollapsed",
    value: function groupCollapsed() {
      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
        args[_key9] = arguments[_key9];
      }

      this[LOG_SYMBOL](LogType.groupCollapsed, args);
    }
  }, {
    key: "groupEnd",
    value: function groupEnd() {
      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {
        args[_key10] = arguments[_key10];
      }

      this[LOG_SYMBOL](LogType.groupEnd, args);
    }
  }, {
    key: "profile",
    value: function profile(label) {
      this[LOG_SYMBOL](LogType.profile, [label]);
    }
  }, {
    key: "profileEnd",
    value: function profileEnd(label) {
      this[LOG_SYMBOL](LogType.profileEnd, [label]);
    }
  }, {
    key: "time",
    value: function time(label) {
      this[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();
      this[TIMERS_SYMBOL].set(label, process.hrtime());
    }
  }, {
    key: "timeLog",
    value: function timeLog(label) {
      var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);

      if (!prev) {
        throw new Error("No such label '".concat(label, "' for WebpackLogger.timeLog()"));
      }

      var time = process.hrtime(prev);
      this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));
    }
  }, {
    key: "timeEnd",
    value: function timeEnd(label) {
      var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);

      if (!prev) {
        throw new Error("No such label '".concat(label, "' for WebpackLogger.timeEnd()"));
      }

      var time = process.hrtime(prev);
      this[TIMERS_SYMBOL].delete(label);
      this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));
    }
  }, {
    key: "timeAggregate",
    value: function timeAggregate(label) {
      var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);

      if (!prev) {
        throw new Error("No such label '".concat(label, "' for WebpackLogger.timeAggregate()"));
      }

      var time = process.hrtime(prev);
      this[TIMERS_SYMBOL].delete(label);
      this[TIMERS_AGGREGATES_SYMBOL] = this[TIMERS_AGGREGATES_SYMBOL] || new Map();
      var current = this[TIMERS_AGGREGATES_SYMBOL].get(label);

      if (current !== undefined) {
        if (time[1] + current[1] > 1e9) {
          time[0] += current[0] + 1;
          time[1] = time[1] - 1e9 + current[1];
        } else {
          time[0] += current[0];
          time[1] += current[1];
        }
      }

      this[TIMERS_AGGREGATES_SYMBOL].set(label, time);
    }
  }, {
    key: "timeAggregateEnd",
    value: function timeAggregateEnd(label) {
      if (this[TIMERS_AGGREGATES_SYMBOL] === undefined) return;
      var time = this[TIMERS_AGGREGATES_SYMBOL].get(label);
      if (time === undefined) return;
      this[TIMERS_AGGREGATES_SYMBOL].delete(label);
      this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));
    }
  }]);

  return WebpackLogger;
}();

exports.Logger = WebpackLogger;

/***/ }),

/***/ "./node_modules/webpack/lib/logging/createConsoleLogger.js":
/*!*****************************************************************!*\
  !*** ./node_modules/webpack/lib/logging/createConsoleLogger.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/


function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _iterableToArray(iter) {
  if (typeof (typeof Symbol !== "undefined" ? Symbol : function (i) { return i; }) !== "undefined" && iter[(typeof Symbol !== "undefined" ? Symbol : function (i) { return i; }).iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

var _require = __webpack_require__(/*! ./Logger */ "./node_modules/webpack/lib/logging/Logger.js"),
    LogType = _require.LogType;
/** @typedef {import("../../declarations/WebpackOptions").FilterItemTypes} FilterItemTypes */

/** @typedef {import("../../declarations/WebpackOptions").FilterTypes} FilterTypes */

/** @typedef {import("./Logger").LogTypeEnum} LogTypeEnum */

/** @typedef {function(string): boolean} FilterFunction */

/**
 * @typedef {Object} LoggerConsole
 * @property {function(): void} clear
 * @property {function(): void} trace
 * @property {(...args: any[]) => void} info
 * @property {(...args: any[]) => void} log
 * @property {(...args: any[]) => void} warn
 * @property {(...args: any[]) => void} error
 * @property {(...args: any[]) => void=} debug
 * @property {(...args: any[]) => void=} group
 * @property {(...args: any[]) => void=} groupCollapsed
 * @property {(...args: any[]) => void=} groupEnd
 * @property {(...args: any[]) => void=} status
 * @property {(...args: any[]) => void=} profile
 * @property {(...args: any[]) => void=} profileEnd
 * @property {(...args: any[]) => void=} logTime
 */

/**
 * @typedef {Object} LoggerOptions
 * @property {false|true|"none"|"error"|"warn"|"info"|"log"|"verbose"} level loglevel
 * @property {FilterTypes|boolean} debug filter for debug logging
 * @property {LoggerConsole} console the console to log to
 */

/**
 * @param {FilterItemTypes} item an input item
 * @returns {FilterFunction} filter function
 */


var filterToFunction = function filterToFunction(item) {
  if (typeof item === "string") {
    var regExp = new RegExp("[\\\\/]".concat(item.replace( // eslint-disable-next-line no-useless-escape
    /[-[\]{}()*+?.\\^$|]/g, "\\$&"), "([\\\\/]|$|!|\\?)"));
    return function (ident) {
      return regExp.test(ident);
    };
  }

  if (item && typeof item === "object" && typeof item.test === "function") {
    return function (ident) {
      return item.test(ident);
    };
  }

  if (typeof item === "function") {
    return item;
  }

  if (typeof item === "boolean") {
    return function () {
      return item;
    };
  }
};
/**
 * @enum {number}
 */


var LogLevel = {
  none: 6,
  false: 6,
  error: 5,
  warn: 4,
  info: 3,
  log: 2,
  true: 2,
  verbose: 1
};
/**
 * @param {LoggerOptions} options options object
 * @returns {function(string, LogTypeEnum, any[]): void} logging function
 */

module.exports = function (_ref) {
  var _ref$level = _ref.level,
      level = _ref$level === void 0 ? "info" : _ref$level,
      _ref$debug = _ref.debug,
      debug = _ref$debug === void 0 ? false : _ref$debug,
      console = _ref.console;
  var debugFilters = typeof debug === "boolean" ? [function () {
    return debug;
  }] :
  /** @type {FilterItemTypes[]} */
  [].concat(debug).map(filterToFunction);
  /** @type {number} */

  var loglevel = LogLevel["".concat(level)] || 0;
  /**
   * @param {string} name name of the logger
   * @param {LogTypeEnum} type type of the log entry
   * @param {any[]} args arguments of the log entry
   * @returns {void}
   */

  var logger = function logger(name, type, args) {
    var labeledArgs = function labeledArgs() {
      if (Array.isArray(args)) {
        if (args.length > 0 && typeof args[0] === "string") {
          return ["[".concat(name, "] ").concat(args[0])].concat(_toConsumableArray(args.slice(1)));
        } else {
          return ["[".concat(name, "]")].concat(_toConsumableArray(args));
        }
      } else {
        return [];
      }
    };

    var debug = debugFilters.some(function (f) {
      return f(name);
    });

    switch (type) {
      case LogType.debug:
        if (!debug) return; // eslint-disable-next-line node/no-unsupported-features/node-builtins

        if (typeof console.debug === "function") {
          // eslint-disable-next-line node/no-unsupported-features/node-builtins
          console.debug.apply(console, _toConsumableArray(labeledArgs()));
        } else {
          console.log.apply(console, _toConsumableArray(labeledArgs()));
        }

        break;

      case LogType.log:
        if (!debug && loglevel > LogLevel.log) return;
        console.log.apply(console, _toConsumableArray(labeledArgs()));
        break;

      case LogType.info:
        if (!debug && loglevel > LogLevel.info) return;
        console.info.apply(console, _toConsumableArray(labeledArgs()));
        break;

      case LogType.warn:
        if (!debug && loglevel > LogLevel.warn) return;
        console.warn.apply(console, _toConsumableArray(labeledArgs()));
        break;

      case LogType.error:
        if (!debug && loglevel > LogLevel.error) return;
        console.error.apply(console, _toConsumableArray(labeledArgs()));
        break;

      case LogType.trace:
        if (!debug) return;
        console.trace();
        break;

      case LogType.groupCollapsed:
        if (!debug && loglevel > LogLevel.log) return;

        if (!debug && loglevel > LogLevel.verbose) {
          // eslint-disable-next-line node/no-unsupported-features/node-builtins
          if (typeof console.groupCollapsed === "function") {
            // eslint-disable-next-line node/no-unsupported-features/node-builtins
            console.groupCollapsed.apply(console, _toConsumableArray(labeledArgs()));
          } else {
            console.log.apply(console, _toConsumableArray(labeledArgs()));
          }

          break;
        }

      // falls through

      case LogType.group:
        if (!debug && loglevel > LogLevel.log) return; // eslint-disable-next-line node/no-unsupported-features/node-builtins

        if (typeof console.group === "function") {
          // eslint-disable-next-line node/no-unsupported-features/node-builtins
          console.group.apply(console, _toConsumableArray(labeledArgs()));
        } else {
          console.log.apply(console, _toConsumableArray(labeledArgs()));
        }

        break;

      case LogType.groupEnd:
        if (!debug && loglevel > LogLevel.log) return; // eslint-disable-next-line node/no-unsupported-features/node-builtins

        if (typeof console.groupEnd === "function") {
          // eslint-disable-next-line node/no-unsupported-features/node-builtins
          console.groupEnd();
        }

        break;

      case LogType.time:
        {
          if (!debug && loglevel > LogLevel.log) return;
          var ms = args[1] * 1000 + args[2] / 1000000;
          var msg = "[".concat(name, "] ").concat(args[0], ": ").concat(ms, " ms");

          if (typeof console.logTime === "function") {
            console.logTime(msg);
          } else {
            console.log(msg);
          }

          break;
        }

      case LogType.profile:
        // eslint-disable-next-line node/no-unsupported-features/node-builtins
        if (typeof console.profile === "function") {
          // eslint-disable-next-line node/no-unsupported-features/node-builtins
          console.profile.apply(console, _toConsumableArray(labeledArgs()));
        }

        break;

      case LogType.profileEnd:
        // eslint-disable-next-line node/no-unsupported-features/node-builtins
        if (typeof console.profileEnd === "function") {
          // eslint-disable-next-line node/no-unsupported-features/node-builtins
          console.profileEnd.apply(console, _toConsumableArray(labeledArgs()));
        }

        break;

      case LogType.clear:
        if (!debug && loglevel > LogLevel.log) return; // eslint-disable-next-line node/no-unsupported-features/node-builtins

        if (typeof console.clear === "function") {
          // eslint-disable-next-line node/no-unsupported-features/node-builtins
          console.clear();
        }

        break;

      case LogType.status:
        if (!debug && loglevel > LogLevel.info) return;

        if (typeof console.status === "function") {
          if (args.length === 0) {
            console.status();
          } else {
            console.status.apply(console, _toConsumableArray(labeledArgs()));
          }
        } else {
          if (args.length !== 0) {
            console.info.apply(console, _toConsumableArray(labeledArgs()));
          }
        }

        break;

      default:
        throw new Error("Unexpected LogType ".concat(type));
    }
  };

  return logger;
};

/***/ }),

/***/ "./node_modules/webpack/lib/logging/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/webpack/lib/logging/runtime.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/


function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var SyncBailHook = __webpack_require__(/*! tapable/lib/SyncBailHook */ "./client-src/modules/logger/SyncBailHookFake.js");

var _require = __webpack_require__(/*! ./Logger */ "./node_modules/webpack/lib/logging/Logger.js"),
    Logger = _require.Logger;

var createConsoleLogger = __webpack_require__(/*! ./createConsoleLogger */ "./node_modules/webpack/lib/logging/createConsoleLogger.js");
/** @type {createConsoleLogger.LoggerOptions} */


var currentDefaultLoggerOptions = {
  level: "info",
  debug: false,
  console: console
};
var currentDefaultLogger = createConsoleLogger(currentDefaultLoggerOptions);
/**
 * @param {string} name name of the logger
 * @returns {Logger} a logger
 */

exports.getLogger = function (name) {
  return new Logger(function (type, args) {
    if (exports.hooks.log.call(name, type, args) === undefined) {
      currentDefaultLogger(name, type, args);
    }
  }, function (childName) {
    return exports.getLogger("".concat(name, "/").concat(childName));
  });
};
/**
 * @param {createConsoleLogger.LoggerOptions} options new options, merge with old options
 * @returns {void}
 */


exports.configureDefaultLogger = function (options) {
  _extends(currentDefaultLoggerOptions, options);

  currentDefaultLogger = createConsoleLogger(currentDefaultLoggerOptions);
};

exports.hooks = {
  log: new SyncBailHook(["origin", "type", "args"])
};

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
!function() {
/*!********************************************!*\
  !*** ./client-src/modules/logger/index.js ***!
  \********************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* reexport default export from named module */ webpack_lib_logging_runtime_js__WEBPACK_IMPORTED_MODULE_0__; }
/* harmony export */ });
/* harmony import */ var webpack_lib_logging_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! webpack/lib/logging/runtime.js */ "./node_modules/webpack/lib/logging/runtime.js");

}();
var __webpack_export_target__ = exports;
for(var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];
if(__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, "__esModule", { value: true });
/******/ })()
;"С:// The error overlay is inspired (and mostly copied) from Create React App (https://github.com/facebookincubator/create-react-app)
// They, in turn, got inspired by webpack-hot-middleware (https://github.com/glenjamin/webpack-hot-middleware).
import ansiHTML from "ansi-html-community";
import { encode } from "html-entities";
var colors = {
  reset: ["transparent", "transparent"],
  black: "181818",
  red: "E36049",
  green: "B3CB74",
  yellow: "FFD080",
  blue: "7CAFC2",
  magenta: "7FACCA",
  cyan: "C3C2EF",
  lightgrey: "EBE7E3",
  darkgrey: "6D7891"
};
/** @type {HTMLIFrameElement | null | undefined} */

var iframeContainerElement;
/** @type {HTMLDivElement | null | undefined} */

var containerElement;
/** @type {Array<(element: HTMLDivElement) => void>} */

var onLoadQueue = [];
/** @type {TrustedTypePolicy | undefined} */

var overlayTrustedTypesPolicy;
ansiHTML.setColors(colors);
/**
 * @param {string | null} trustedTypesPolicyName
 */

function createContainer(trustedTypesPolicyName) {
  // Enable Trusted Types if they are available in the current browser.
  if (window.trustedTypes) {
    overlayTrustedTypesPolicy = window.trustedTypes.createPolicy(trustedTypesPolicyName || "webpack-dev-server#overlay", {
      createHTML: function createHTML(value) {
        return value;
      }
    });
  }

  iframeContainerElement = document.createElement("iframe");
  iframeContainerElement.id = "webpack-dev-server-client-overlay";
  iframeContainerElement.src = "about:blank";
  iframeContainerElement.style.position = "fixed";
  iframeContainerElement.style.left = 0;
  iframeContainerElement.style.top = 0;
  iframeContainerElement.style.right = 0;
  iframeContainerElement.style.bottom = 0;
  iframeContainerElement.style.width = "100vw";
  iframeContainerElement.style.height = "100vh";
  iframeContainerElement.style.border = "none";
  iframeContainerElement.style.zIndex = 9999999999;

  iframeContainerElement.onload = function () {
    containerElement =
    /** @type {Document} */

    /** @type {HTMLIFrameElement} */
    iframeContainerElement.contentDocument.createElement("div");
    containerElement.id = "webpack-dev-server-client-overlay-div";
    containerElement.style.position = "fixed";
    containerElement.style.boxSizing = "border-box";
    containerElement.style.left = 0;
    containerElement.style.top = 0;
    containerElement.style.right = 0;
    containerElement.style.bottom = 0;
    containerElement.style.width = "100vw";
    containerElement.style.height = "100vh";
    containerElement.style.backgroundColor = "rgba(0, 0, 0, 0.85)";
    containerElement.style.color = "#E8E8E8";
    containerElement.style.fontFamily = "Menlo, Consolas, monospace";
    containerElement.style.fontSize = "large";
    containerElement.style.padding = "2rem";
    containerElement.style.lineHeight = "1.2";
    containerElement.style.whiteSpace = "pre-wrap";
    containerElement.style.overflow = "auto";
    var headerElement = document.createElement("span");
    headerElement.innerText = "Compiled with problems:";
    var closeButtonElement = document.createElement("button");
    closeButtonElement.innerText = "X";
    closeButtonElement.style.background = "transparent";
    closeButtonElement.style.border = "none";
    closeButtonElement.style.fontSize = "20px";
    closeButtonElement.style.fontWeight = "bold";
    closeButtonElement.style.color = "white";
    closeButtonElement.style.cursor = "pointer";
    closeButtonElement.style.cssFloat = "right"; // @ts-ignore

    closeButtonElement.style.styleFloat = "right";
    closeButtonElement.addEventListener("click", function () {
      hide();
    });
    containerElement.appendChild(headerElement);
    containerElement.appendChild(closeButtonElement);
    containerElement.appendChild(document.createElement("br"));
    containerElement.appendChild(document.createElement("br"));
    /** @type {Document} */

    /** @type {HTMLIFrameElement} */
    iframeContainerElement.contentDocument.body.appendChild(containerElement);
    onLoadQueue.forEach(function (onLoad) {
      onLoad(
      /** @type {HTMLDivElement} */
      containerElement);
    });
    onLoadQueue = [];
    /** @type {HTMLIFrameElement} */

    iframeContainerElement.onload = null;
  };

  document.body.appendChild(iframeContainerElement);
}
/**
 * @param {(element: HTMLDivElement) => void} callback
 * @param {string | null} trustedTypesPolicyName
 */


function ensureOverlayExists(callback, trustedTypesPolicyName) {
  if (containerElement) {
    // Everything is ready, call the callback right away.
    callback(containerElement);
    return;
  }

  onLoadQueue.push(callback);

  if (iframeContainerElement) {
    return;
  }

  createContainer(trustedTypesPolicyName);
} // Successful compilation.


function hide() {
  if (!iframeContainerElement) {
    return;
  } // Clean up and reset internal state.


  document.body.removeChild(iframeContainerElement);
  iframeContainerElement = null;
  containerElement = null;
}
/**
 * @param {string} type
 * @param {string  | { file?: string, moduleName?: string, loc?: string, message?: string }} item
 * @returns {{ header: string, body: string }}
 */


function formatProblem(type, item) {
  var header = type === "warning" ? "WARNING" : "ERROR";
  var body = "";

  if (typeof item === "string") {
    body += item;
  } else {
    var file = item.file || ""; // eslint-disable-next-line no-nested-ternary

    var moduleName = item.moduleName ? item.moduleName.indexOf("!") !== -1 ? "".concat(item.moduleName.replace(/^(\s|\S)*!/, ""), " (").concat(item.moduleName, ")") : "".concat(item.moduleName) : "";
    var loc = item.loc;
    header += "".concat(moduleName || file ? " in ".concat(moduleName ? "".concat(moduleName).concat(file ? " (".concat(file, ")") : "") : file).concat(loc ? " ".concat(loc) : "") : "");
    body += item.message || "";
  }

  return {
    header: header,
    body: body
  };
} // Compilation with errors (e.g. syntax error or missing modules).

/**
 * @param {string} type
 * @param {Array<string  | { file?: string, moduleName?: string, loc?: string, message?: string }>} messages
 * @param {string | null} trustedTypesPolicyName
 */


function show(type, messages, trustedTypesPolicyName) {
  ensureOverlayExists(function () {
    messages.forEach(function (message) {
      var entryElement = document.createElement("div");
      var typeElement = document.createElement("span");

      var _formatProblem = formatProblem(type, message),
          header = _formatProblem.header,
          body = _formatProblem.body;

      typeElement.innerText = header;
      typeElement.style.color = "#".concat(colors.red); // Make it look similar to our terminal.

      var text = ansiHTML(encode(body));
      var messageTextNode = document.createElement("div");
      messageTextNode.innerHTML = overlayTrustedTypesPolicy ? overlayTrustedTypesPolicy.createHTML(text) : text;
      entryElement.appendChild(typeElement);
      entryElement.appendChild(document.createElement("br"));
      entryElement.appendChild(document.createElement("br"));
      entryElement.appendChild(messageTextNode);
      entryElement.appendChild(document.createElement("br"));
      entryElement.appendChild(document.createElement("br"));
      /** @type {HTMLDivElement} */

      containerElement.appendChild(entryElement);
    });
  }, trustedTypesPolicyName);
}

export { formatProblem, show, hide };"ё/* global __webpack_dev_server_client__ */
import WebSocketClient from "./clients/WebSocketClient.js";
import { log } from "./utils/log.js"; // this WebsocketClient is here as a default fallback, in case the client is not injected

/* eslint-disable camelcase */

var Client = // eslint-disable-next-line no-nested-ternary
typeof __webpack_dev_server_client__ !== "undefined" ? typeof __webpack_dev_server_client__.default !== "undefined" ? __webpack_dev_server_client__.default : __webpack_dev_server_client__ : WebSocketClient;
/* eslint-enable camelcase */

var retries = 0;
var maxRetries = 10; // Initialized client is exported so external consumers can utilize the same instance
// It is mutable to enforce singleton
// eslint-disable-next-line import/no-mutable-exports

export var client = null;
/**
 * @param {string} url
 * @param {{ [handler: string]: (data?: any, params?: any) => any }} handlers
 * @param {number} [reconnect]
 */

var socket = function initSocket(url, handlers, reconnect) {
  client = new Client(url);
  client.onOpen(function () {
    retries = 0;

    if (typeof reconnect !== "undefined") {
      maxRetries = reconnect;
    }
  });
  client.onClose(function () {
    if (retries === 0) {
      handlers.close();
    } // Try to reconnect.


    client = null; // After 10 retries stop trying, to prevent logspam.

    if (retries < maxRetries) {
      // Exponentially increase timeout to reconnect.
      // Respectfully copied from the package `got`.
      // eslint-disable-next-line no-restricted-properties
      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;
      retries += 1;
      log.info("Trying to reconnect...");
      setTimeout(function () {
        socket(url, handlers, reconnect);
      }, retryInMs);
    }
  });
  client.onMessage(
  /**
   * @param {any} data
   */
  function (data) {
    var message = JSON.parse(data);

    if (handlers[message.type]) {
      handlers[message.type](message.data, message.params);
    }
  });
};

export default socket;"Ы"/**
 * @param {{ protocol?: string, auth?: string, hostname?: string, port?: string, pathname?: string, search?: string, hash?: string, slashes?: boolean }} objURL
 * @returns {string}
 */
function format(objURL) {
  var protocol = objURL.protocol || "";

  if (protocol && protocol.substr(-1) !== ":") {
    protocol += ":";
  }

  var auth = objURL.auth || "";

  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ":");
    auth += "@";
  }

  var host = "";

  if (objURL.hostname) {
    host = auth + (objURL.hostname.indexOf(":") === -1 ? objURL.hostname : "[".concat(objURL.hostname, "]"));

    if (objURL.port) {
      host += ":".concat(objURL.port);
    }
  }

  var pathname = objURL.pathname || "";

  if (objURL.slashes) {
    host = "//".concat(host || "");

    if (pathname && pathname.charAt(0) !== "/") {
      pathname = "/".concat(pathname);
    }
  } else if (!host) {
    host = "";
  }

  var search = objURL.search || "";

  if (search && search.charAt(0) !== "?") {
    search = "?".concat(search);
  }

  var hash = objURL.hash || "";

  if (hash && hash.charAt(0) !== "#") {
    hash = "#".concat(hash);
  }

  pathname = pathname.replace(/[?#]/g,
  /**
   * @param {string} match
   * @returns {string}
   */
  function (match) {
    return encodeURIComponent(match);
  });
  search = search.replace("#", "%23");
  return "".concat(protocol).concat(host).concat(pathname).concat(search).concat(hash);
}
/**
 * @param {URL & { fromCurrentScript?: boolean }} parsedURL
 * @returns {string}
 */


function createSocketURL(parsedURL) {
  var hostname = parsedURL.hostname; // Node.js module parses it as `::`
  // `new URL(urlString, [baseURLString])` parses it as '[::]'

  var isInAddrAny = hostname === "0.0.0.0" || hostname === "::" || hostname === "[::]"; // why do we need this check?
  // hostname n/a for file protocol (example, when using electron, ionic)
  // see: https://github.com/webpack/webpack-dev-server/pull/384

  if (isInAddrAny && self.location.hostname && self.location.protocol.indexOf("http") === 0) {
    hostname = self.location.hostname;
  }

  var socketURLProtocol = parsedURL.protocol || self.location.protocol; // When https is used in the app, secure web sockets are always necessary because the browser doesn't accept non-secure web sockets.

  if (socketURLProtocol === "auto:" || hostname && isInAddrAny && self.location.protocol === "https:") {
    socketURLProtocol = self.location.protocol;
  }

  socketURLProtocol = socketURLProtocol.replace(/^(?:http|.+-extension|file)/i, "ws");
  var socketURLAuth = ""; // `new URL(urlString, [baseURLstring])` doesn't have `auth` property
  // Parse authentication credentials in case we need them

  if (parsedURL.username) {
    socketURLAuth = parsedURL.username; // Since HTTP basic authentication does not allow empty username,
    // we only include password if the username is not empty.

    if (parsedURL.password) {
      // Result: <username>:<password>
      socketURLAuth = socketURLAuth.concat(":", parsedURL.password);
    }
  } // In case the host is a raw IPv6 address, it can be enclosed in
  // the brackets as the brackets are needed in the final URL string.
  // Need to remove those as url.format blindly adds its own set of brackets
  // if the host string contains colons. That would lead to non-working
  // double brackets (e.g. [[::]]) host
  //
  // All of these web socket url params are optionally passed in through resourceQuery,
  // so we need to fall back to the default if they are not provided


  var socketURLHostname = (hostname || self.location.hostname || "localhost").replace(/^\[(.*)\]$/, "$1");
  var socketURLPort = parsedURL.port;

  if (!socketURLPort || socketURLPort === "0") {
    socketURLPort = self.location.port;
  } // If path is provided it'll be passed in via the resourceQuery as a
  // query param so it has to be parsed out of the querystring in order for the
  // client to open the socket to the correct location.


  var socketURLPathname = "/ws";

  if (parsedURL.pathname && !parsedURL.fromCurrentScript) {
    socketURLPathname = parsedURL.pathname;
  }

  return format({
    protocol: socketURLProtocol,
    auth: socketURLAuth,
    hostname: socketURLHostname,
    port: socketURLPort,
    pathname: socketURLPathname,
    slashes: true
  });
}

export default createSocketURL;"ф/**
 * @returns {string}
 */
function getCurrentScriptSource() {
  // `document.currentScript` is the most accurate way to find the current script,
  // but is not supported in all browsers.
  if (document.currentScript) {
    return document.currentScript.getAttribute("src");
  } // Fallback to getting all scripts running in the document.


  var scriptElements = document.scripts || [];
  var scriptElementsWithSrc = Array.prototype.filter.call(scriptElements, function (element) {
    return element.getAttribute("src");
  });

  if (scriptElementsWithSrc.length > 0) {
    var currentScript = scriptElementsWithSrc[scriptElementsWithSrc.length - 1];
    return currentScript.getAttribute("src");
  } // Fail as there was no script to use.


  throw new Error("[webpack-dev-server] Failed to get current script source.");
}

export default getCurrentScriptSource;"дimport logger from "../modules/logger/index.js";
var name = "webpack-dev-server"; // default level is set on the client side, so it does not need
// to be set by the CLI or API

var defaultLevel = "info"; // options new options, merge with old options

/**
 * @param {false | true | "none" | "error" | "warn" | "info" | "log" | "verbose"} level
 * @returns {void}
 */

function setLogLevel(level) {
  logger.configureDefaultLogger({
    level: level
  });
}

setLogLevel(defaultLevel);
var log = logger.getLogger(name);
export { log, setLogLevel };"А
import getCurrentScriptSource from "./getCurrentScriptSource.js";
/**
 * @param {string} resourceQuery
 * @returns {{ [key: string]: string | boolean }}
 */

function parseURL(resourceQuery) {
  /** @type {{ [key: string]: string }} */
  var options = {};

  if (typeof resourceQuery === "string" && resourceQuery !== "") {
    var searchParams = resourceQuery.slice(1).split("&");

    for (var i = 0; i < searchParams.length; i++) {
      var pair = searchParams[i].split("=");
      options[pair[0]] = decodeURIComponent(pair[1]);
    }
  } else {
    // Else, get the url from the <script> this file was called with.
    var scriptSource = getCurrentScriptSource();
    var scriptSourceURL;

    try {
      // The placeholder `baseURL` with `window.location.href`,
      // is to allow parsing of path-relative or protocol-relative URLs,
      // and will have no effect if `scriptSource` is a fully valid URL.
      scriptSourceURL = new URL(scriptSource, self.location.href);
    } catch (error) {// URL parsing failed, do nothing.
      // We will still proceed to see if we can recover using `resourceQuery`
    }

    if (scriptSourceURL) {
      options = scriptSourceURL;
      options.fromCurrentScript = true;
    }
  }

  return options;
}

export default parseURL;"оimport hotEmitter from "webpack/hot/emitter.js";
import { log } from "./log.js";
/** @typedef {import("../index").Options} Options
/** @typedef {import("../index").Status} Status

/**
 * @param {Options} options
 * @param {Status} status
 */

function reloadApp(_ref, status) {
  var hot = _ref.hot,
      liveReload = _ref.liveReload;

  if (status.isUnloading) {
    return;
  }

  var currentHash = status.currentHash,
      previousHash = status.previousHash;
  var isInitial = currentHash.indexOf(
  /** @type {string} */
  previousHash) >= 0;

  if (isInitial) {
    return;
  }
  /**
   * @param {Window} rootWindow
   * @param {number} intervalId
   */


  function applyReload(rootWindow, intervalId) {
    clearInterval(intervalId);
    log.info("App updated. Reloading...");
    rootWindow.location.reload();
  }

  var search = self.location.search.toLowerCase();
  var allowToHot = search.indexOf("webpack-dev-server-hot=false") === -1;
  var allowToLiveReload = search.indexOf("webpack-dev-server-live-reload=false") === -1;

  if (hot && allowToHot) {
    log.info("App hot update...");
    hotEmitter.emit("webpackHotUpdate", status.currentHash);

    if (typeof self !== "undefined" && self.window) {
      // broadcast update to window
      self.postMessage("webpackHotUpdate".concat(status.currentHash), "*");
    }
  } // allow refreshing the page only if liveReload isn't disabled
  else if (liveReload && allowToLiveReload) {
    var rootWindow = self; // use parent window for reload (in case we're in an iframe with no valid src)

    var intervalId = self.setInterval(function () {
      if (rootWindow.location.protocol !== "about:") {
        // reload immediately if protocol is valid
        applyReload(rootWindow, intervalId);
      } else {
        rootWindow = rootWindow.parent;

        if (rootWindow.parent === rootWindow) {
          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways
          applyReload(rootWindow, intervalId);
        }
      }
    });
  }
}

export default reloadApp;"┤/* global __resourceQuery WorkerGlobalScope */
// Send messages to the outside, so plugins can consume it.

/**
 * @param {string} type
 * @param {any} [data]
 */
function sendMsg(type, data) {
  if (typeof self !== "undefined" && (typeof WorkerGlobalScope === "undefined" || !(self instanceof WorkerGlobalScope))) {
    self.postMessage({
      type: "webpack".concat(type),
      data: data
    }, "*");
  }
}

export default sendMsg;"┤var ansiRegex = new RegExp(["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)", "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-nq-uy=><~]))"].join("|"), "g");
/**
 *
 * Strip [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code) from a string.
 * Adapted from code originally released by Sindre Sorhus
 * Licensed the MIT License
 *
 * @param {string} string
 * @return {string}
 */

function stripAnsi(string) {
  if (typeof string !== "string") {
    throw new TypeError("Expected a `string`, got `".concat(typeof string, "`"));
  }

  return string.replace(ansiRegex, "");
}

export default stripAnsi;"▌/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
/* globals __webpack_hash__ */
if (module.hot) {
	var lastHash;
	var upToDate = function upToDate() {
		return lastHash.indexOf(__webpack_hash__) >= 0;
	};
	var log = require("./log");
	var check = function check() {
		module.hot
			.check(true)
			.then(function (updatedModules) {
				if (!updatedModules) {
					log("warning", "[HMR] Cannot find update. Need to do a full reload!");
					log(
						"warning",
						"[HMR] (Probably because of restarting the webpack-dev-server)"
					);
					window.location.reload();
					return;
				}

				if (!upToDate()) {
					check();
				}

				require("./log-apply-result")(updatedModules, updatedModules);

				if (upToDate()) {
					log("info", "[HMR] App is up to date.");
				}
			})
			.catch(function (err) {
				var status = module.hot.status();
				if (["abort", "fail"].indexOf(status) >= 0) {
					log(
						"warning",
						"[HMR] Cannot apply update. Need to do a full reload!"
					);
					log("warning", "[HMR] " + log.formatError(err));
					window.location.reload();
				} else {
					log("warning", "[HMR] Update failed: " + log.formatError(err));
				}
			});
	};
	var hotEmitter = require("./emitter");
	hotEmitter.on("webpackHotUpdate", function (currentHash) {
		lastHash = currentHash;
		if (!upToDate() && module.hot.status() === "idle") {
			log("info", "[HMR] Checking for updates on the server...");
			check();
		}
	});
	log("info", "[HMR] Waiting for update signal from WDS...");
} else {
	throw new Error("[HMR] Hot Module Replacement is disabled.");
}
"Kvar EventEmitter = require("events");
module.exports = new EventEmitter();
"и
/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
module.exports = function (updatedModules, renewedModules) {
	var unacceptedModules = updatedModules.filter(function (moduleId) {
		return renewedModules && renewedModules.indexOf(moduleId) < 0;
	});
	var log = require("./log");

	if (unacceptedModules.length > 0) {
		log(
			"warning",
			"[HMR] The following modules couldn't be hot updated: (They would need a full reload!)"
		);
		unacceptedModules.forEach(function (moduleId) {
			log("warning", "[HMR]  - " + moduleId);
		});
	}

	if (!renewedModules || renewedModules.length === 0) {
		log("info", "[HMR] Nothing hot updated.");
	} else {
		log("info", "[HMR] Updated modules:");
		renewedModules.forEach(function (moduleId) {
			if (typeof moduleId === "string" && moduleId.indexOf("!") !== -1) {
				var parts = moduleId.split("!");
				log.groupCollapsed("info", "[HMR]  - " + parts.pop());
				log("info", "[HMR]  - " + moduleId);
				log.groupEnd("info");
			} else {
				log("info", "[HMR]  - " + moduleId);
			}
		});
		var numberIds = renewedModules.every(function (moduleId) {
			return typeof moduleId === "number";
		});
		if (numberIds)
			log(
				"info",
				'[HMR] Consider using the optimization.moduleIds: "named" for module names.'
			);
	}
};
"р
var logLevel = "info";

function dummy() {}

function shouldLog(level) {
	var shouldLog =
		(logLevel === "info" && level === "info") ||
		(["info", "warning"].indexOf(logLevel) >= 0 && level === "warning") ||
		(["info", "warning", "error"].indexOf(logLevel) >= 0 && level === "error");
	return shouldLog;
}

function logGroup(logFn) {
	return function (level, msg) {
		if (shouldLog(level)) {
			logFn(msg);
		}
	};
}

module.exports = function (level, msg) {
	if (shouldLog(level)) {
		if (level === "info") {
			console.log(msg);
		} else if (level === "warning") {
			console.warn(msg);
		} else if (level === "error") {
			console.error(msg);
		}
	}
};

/* eslint-disable node/no-unsupported-features/node-builtins */
var group = console.group || dummy;
var groupCollapsed = console.groupCollapsed || dummy;
var groupEnd = console.groupEnd || dummy;
/* eslint-enable node/no-unsupported-features/node-builtins */

module.exports.group = logGroup(group);

module.exports.groupCollapsed = logGroup(groupCollapsed);

module.exports.groupEnd = logGroup(groupEnd);

module.exports.setLogLevel = function (level) {
	logLevel = level;
};

module.exports.formatError = function (err) {
	var message = err.message;
	var stack = err.stack;
	if (!stack) {
		return message;
	} else if (stack.indexOf(message) < 0) {
		return message + "\n" + stack;
	} else {
		return stack;
	}
};
"╗// Imports
import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from "../node_modules/css-loader/dist/runtime/sourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../node_modules/css-loader/dist/runtime/api.js";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".App {\n  text-transform: capitalize;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.Personal__info,\n.Medical_info {\n  width: 100%;\n  margin-bottom: 1em;\n}\n\n.Personal__info h1,\n.Medical_info h1 {\n  font-size: 3rem;\n}\n\n.input_field {\n  display: flex;\n  margin: 2em;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.input_field label {\n  padding-bottom: 5px;\n  font-size: 1.5rem;\n  margin-right: .5rem;\n}\n\n.input_field input {\n  border-radius: 5px;\n  height: 2em;\n  border: 1px black solid;\n}\n\n.gender label {\n  padding-bottom: 5px;\n  font-size: 1.5rem;\n  margin-right: .5rem;\n}\n\n.radio_btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.submit_btn {\n  font-size: 1.5rem;\n  padding: 10px 20px;\n  border-radius: 5px;\n  border: none;\n  box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.059);\n  margin-bottom: 5rem;\n}\n\n.submit_btn:hover {\n  background-color: aquamarine;\n}", "",{"version":3,"sources":["webpack://./src/App.css"],"names":[],"mappings":"AAAA;EACE,0BAA0B;EAC1B,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;;EAEE,WAAW;EACX,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,mBAAmB;EACnB,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,uBAAuB;AACzB;;AAEA;EACE,mBAAmB;EACnB,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;EAClB,YAAY;EACZ,6CAA6C;EAC7C,mBAAmB;AACrB;;AAEA;EACE,4BAA4B;AAC9B","sourcesContent":[".App {\n  text-transform: capitalize;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.Personal__info,\n.Medical_info {\n  width: 100%;\n  margin-bottom: 1em;\n}\n\n.Personal__info h1,\n.Medical_info h1 {\n  font-size: 3rem;\n}\n\n.input_field {\n  display: flex;\n  margin: 2em;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.input_field label {\n  padding-bottom: 5px;\n  font-size: 1.5rem;\n  margin-right: .5rem;\n}\n\n.input_field input {\n  border-radius: 5px;\n  height: 2em;\n  border: 1px black solid;\n}\n\n.gender label {\n  padding-bottom: 5px;\n  font-size: 1.5rem;\n  margin-right: .5rem;\n}\n\n.radio_btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.submit_btn {\n  font-size: 1.5rem;\n  padding: 10px 20px;\n  border-radius: 5px;\n  border: none;\n  box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.059);\n  margin-bottom: 5rem;\n}\n\n.submit_btn:hover {\n  background-color: aquamarine;\n}"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {};
export default ___CSS_LOADER_EXPORT___;
"┬// Imports
import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from "../node_modules/css-loader/dist/runtime/sourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../node_modules/css-loader/dist/runtime/api.js";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "body {\n  margin: 0;\n  box-sizing: border-box;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n", "",{"version":3,"sources":["webpack://./src/index.css"],"names":[],"mappings":"AAAA;EACE,SAAS;EACT,sBAAsB;EACtB;;cAEY;EACZ,mCAAmC;EACnC,kCAAkC;AACpC;;AAEA;EACE;aACW;AACb","sourcesContent":["body {\n  margin: 0;\n  box-sizing: border-box;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {};
export default ___CSS_LOADER_EXPORT___;
"─"use strict";

var stylesInDOM = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };

    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);

  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }

      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };

  return updater;
}

module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();

        stylesInDOM.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};"э"use strict";

var memo = {};
/* istanbul ignore next  */

function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }

    memo[target] = styleTarget;
  }

  return memo[target];
}
/* istanbul ignore next  */


function insertBySelector(insert, style) {
  var target = getTarget(insert);

  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }

  target.appendChild(style);
}

module.exports = insertBySelector;"Ю"use strict";

/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}

module.exports = insertStyleElement;"м"use strict";

/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce = typeof __webpack_nonce__ !== "undefined" ? __webpack_nonce__ : null;

  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}

module.exports = setAttributesWithoutAttributes;"Д"use strict";

/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";

  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }

  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }

  var needLayer = typeof obj.layer !== "undefined";

  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }

  css += obj.css;

  if (needLayer) {
    css += "}";
  }

  if (obj.media) {
    css += "}";
  }

  if (obj.supports) {
    css += "}";
  }

  var sourceMap = obj.sourceMap;

  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  options.styleTagTransform(css, styleElement, options.options);
}

function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }

  styleElement.parentNode.removeChild(styleElement);
}
/* istanbul ignore next  */


function domAPI(options) {
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}

module.exports = domAPI;"■"use strict";

/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }

    styleElement.appendChild(document.createTextNode(css));
  }
}

module.exports = styleTagTransform;"▐
      import API from "!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js";
      import domAPI from "!../node_modules/style-loader/dist/runtime/styleDomAPI.js";
      import insertFn from "!../node_modules/style-loader/dist/runtime/insertBySelector.js";
      import setAttributes from "!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js";
      import insertStyleElement from "!../node_modules/style-loader/dist/runtime/insertStyleElement.js";
      import styleTagTransformFn from "!../node_modules/style-loader/dist/runtime/styleTagTransform.js";
      import content, * as namedExport from "!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[1]!../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[2]!../node_modules/source-map-loader/dist/cjs.js!./App.css";
      
      

var options = {};

options.styleTagTransform = styleTagTransformFn;
options.setAttributes = setAttributes;

      options.insert = insertFn.bind(null, "head");
    
options.domAPI = domAPI;
options.insertStyleElement = insertStyleElement;

var update = API(content, options);


if (module.hot) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {
  if (!a && b || a && !b) {
    return false;
  }

  var p;

  for (p in a) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }

    if (a[p] !== b[p]) {
      return false;
    }
  }

  for (p in b) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }

    if (!a[p]) {
      return false;
    }
  }

  return true;
};
    var isNamedExport = !content.locals;
    var oldLocals = isNamedExport ? namedExport : content.locals;

    module.hot.accept(
      "!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[1]!../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[2]!../node_modules/source-map-loader/dist/cjs.js!./App.css",
      function () {
        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = isNamedExport ? namedExport : content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}


export * from "!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[1]!../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[2]!../node_modules/source-map-loader/dist/cjs.js!./App.css";
       export default content && content.locals ? content.locals : undefined;
"ф
      import API from "!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js";
      import domAPI from "!../node_modules/style-loader/dist/runtime/styleDomAPI.js";
      import insertFn from "!../node_modules/style-loader/dist/runtime/insertBySelector.js";
      import setAttributes from "!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js";
      import insertStyleElement from "!../node_modules/style-loader/dist/runtime/insertStyleElement.js";
      import styleTagTransformFn from "!../node_modules/style-loader/dist/runtime/styleTagTransform.js";
      import content, * as namedExport from "!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[1]!../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[2]!../node_modules/source-map-loader/dist/cjs.js!./index.css";
      
      

var options = {};

options.styleTagTransform = styleTagTransformFn;
options.setAttributes = setAttributes;

      options.insert = insertFn.bind(null, "head");
    
options.domAPI = domAPI;
options.insertStyleElement = insertStyleElement;

var update = API(content, options);


if (module.hot) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {
  if (!a && b || a && !b) {
    return false;
  }

  var p;

  for (p in a) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }

    if (a[p] !== b[p]) {
      return false;
    }
  }

  for (p in b) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }

    if (!a[p]) {
      return false;
    }
  }

  return true;
};
    var isNamedExport = !content.locals;
    var oldLocals = isNamedExport ? namedExport : content.locals;

    module.hot.accept(
      "!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[1]!../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[2]!../node_modules/source-map-loader/dist/cjs.js!./index.css",
      function () {
        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = isNamedExport ? namedExport : content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}


export * from "!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[1]!../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[2]!../node_modules/source-map-loader/dist/cjs.js!./index.css";
       export default content && content.locals ? content.locals : undefined;
"╪/* global __react_refresh_library__ */

const safeThis = require('core-js-pure/features/global-this');
const RefreshRuntime = require('react-refresh/runtime');

if (process.env.NODE_ENV !== 'production') {
  if (typeof safeThis !== 'undefined') {
    var $RefreshInjected$ = '__reactRefreshInjected';
    // Namespace the injected flag (if necessary) for monorepo compatibility
    if (typeof __react_refresh_library__ !== 'undefined' && __react_refresh_library__) {
      $RefreshInjected$ += '_' + __react_refresh_library__;
    }

    // Only inject the runtime if it hasn't been injected
    if (!safeThis[$RefreshInjected$]) {
      // Inject refresh runtime into global scope
      RefreshRuntime.injectIntoGlobalHook(safeThis);

      // Mark the runtime as injected to prevent double-injection
      safeThis[$RefreshInjected$] = true;
    }
  }
}
"Нexport default function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}"№	// The module cache
var __webpack_module_cache__ = {};

// The require function
function __webpack_require__(moduleId) {
	// Check if module is in cache
	var cachedModule = __webpack_module_cache__[moduleId];
	if (cachedModule !== undefined) {
		if (cachedModule.error !== undefined) throw cachedModule.error;
		return cachedModule.exports;
	}
	// Create a new module (and put it into the cache)
	var module = __webpack_module_cache__[moduleId] = {
		id: moduleId,
		loaded: false,
		exports: {}
	};

	// Execute the module function
	try {
		var execOptions = { id: moduleId, module: module, factory: __webpack_modules__[moduleId], require: __webpack_require__ };
		__webpack_require__.i.forEach(function(handler) { handler(execOptions); });
		module = execOptions.module;
		execOptions.factory.call(module.exports, module, module.exports, execOptions.require);
	} catch(e) {
		module.error = e;
		throw e;
	}

	// Flag the module as loaded
	module.loaded = true;

	// Return the exports of the module
	return module.exports;
}

// expose the modules object (__webpack_modules__)
__webpack_require__.m = __webpack_modules__;

// expose the module cache
__webpack_require__.c = __webpack_module_cache__;

// expose the module execution interceptor
__webpack_require__.i = [];

"Л// getDefaultExport function for compatibility with non-harmony modules
__webpack_require__.n = (module) => {
	var getter = module && module.__esModule ?
		() => (module['default']) :
		() => (module);
	__webpack_require__.d(getter, { a: getter });
	return getter;
};"┤// define getter functions for harmony exports
__webpack_require__.d = (exports, definition) => {
	for(var key in definition) {
		if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
			Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
		}
	}
};"╤// This function allow to reference all chunks
__webpack_require__.hu = (chunkId) => {
	// return url for filenames based on template
	return "" + chunkId + "." + __webpack_require__.h() + ".hot-update.js";
};"Z__webpack_require__.hmrF = () => ("main." + __webpack_require__.h() + ".hot-update.json");"6__webpack_require__.h = () => ("be4931514d41808abe0a")"▌__webpack_require__.g = (function() {
	if (typeof globalThis === 'object') return globalThis;
	try {
		return this || new Function('return this')();
	} catch (e) {
		if (typeof window === 'object') return window;
	}
})();"X__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))"рvar inProgress = {};
var dataWebpackPrefix = "patient:";
// loadScript function to load a script via script tag
__webpack_require__.l = (url, done, key, chunkId) => {
	if(inProgress[url]) { inProgress[url].push(done); return; }
	var script, needAttach;
	if(key !== undefined) {
		var scripts = document.getElementsByTagName("script");
		for(var i = 0; i < scripts.length; i++) {
			var s = scripts[i];
			if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
		}
	}
	if(!script) {
		needAttach = true;
		script = document.createElement('script');

		script.charset = 'utf-8';
		script.timeout = 120;
		if (__webpack_require__.nc) {
			script.setAttribute("nonce", __webpack_require__.nc);
		}
		script.setAttribute("data-webpack", dataWebpackPrefix + key);
		script.src = url;
	}
	inProgress[url] = [done];
	var onScriptComplete = (prev, event) => {
		// avoid mem leaks in IE.
		script.onerror = script.onload = null;
		clearTimeout(timeout);
		var doneFns = inProgress[url];
		delete inProgress[url];
		script.parentNode && script.parentNode.removeChild(script);
		doneFns && doneFns.forEach((fn) => (fn(event)));
		if(prev) return prev(event);
	}
	;
	var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
	script.onerror = onScriptComplete.bind(null, script.onerror);
	script.onload = onScriptComplete.bind(null, script.onload);
	needAttach && document.head.appendChild(script);
};"Т// define __esModule on exports
__webpack_require__.r = (exports) => {
	if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
	}
	Object.defineProperty(exports, '__esModule', { value: true });
};"{__webpack_require__.nmd = (module) => {
	module.paths = [];
	if (!module.children) module.children = [];
	return module;
};"ГIvar currentModuleData = {};
var installedModules = __webpack_require__.c;

// module and require creation
var currentChildModule;
var currentParents = [];

// status
var registeredStatusHandlers = [];
var currentStatus = "idle";

// while downloading
var blockingPromises = 0;
var blockingPromisesWaiting = [];

// The update info
var currentUpdateApplyHandlers;
var queuedInvalidatedModules;

// eslint-disable-next-line no-unused-vars
__webpack_require__.hmrD = currentModuleData;

__webpack_require__.i.push(function (options) {
	var module = options.module;
	var require = createRequire(options.require, options.id);
	module.hot = createModuleHotObject(options.id, module);
	module.parents = currentParents;
	module.children = [];
	currentParents = [];
	options.require = require;
});

__webpack_require__.hmrC = {};
__webpack_require__.hmrI = {};

function createRequire(require, moduleId) {
	var me = installedModules[moduleId];
	if (!me) return require;
	var fn = function (request) {
		if (me.hot.active) {
			if (installedModules[request]) {
				var parents = installedModules[request].parents;
				if (parents.indexOf(moduleId) === -1) {
					parents.push(moduleId);
				}
			} else {
				currentParents = [moduleId];
				currentChildModule = request;
			}
			if (me.children.indexOf(request) === -1) {
				me.children.push(request);
			}
		} else {
			console.warn(
				"[HMR] unexpected require(" +
					request +
					") from disposed module " +
					moduleId
			);
			currentParents = [];
		}
		return require(request);
	};
	var createPropertyDescriptor = function (name) {
		return {
			configurable: true,
			enumerable: true,
			get: function () {
				return require[name];
			},
			set: function (value) {
				require[name] = value;
			}
		};
	};
	for (var name in require) {
		if (Object.prototype.hasOwnProperty.call(require, name) && name !== "e") {
			Object.defineProperty(fn, name, createPropertyDescriptor(name));
		}
	}
	fn.e = function (chunkId) {
		return trackBlockingPromise(require.e(chunkId));
	};
	return fn;
}

function createModuleHotObject(moduleId, me) {
	var _main = currentChildModule !== moduleId;
	var hot = {
		// private stuff
		_acceptedDependencies: {},
		_acceptedErrorHandlers: {},
		_declinedDependencies: {},
		_selfAccepted: false,
		_selfDeclined: false,
		_selfInvalidated: false,
		_disposeHandlers: [],
		_main: _main,
		_requireSelf: function () {
			currentParents = me.parents.slice();
			currentChildModule = _main ? undefined : moduleId;
			__webpack_require__(moduleId);
		},

		// Module API
		active: true,
		accept: function (dep, callback, errorHandler) {
			if (dep === undefined) hot._selfAccepted = true;
			else if (typeof dep === "function") hot._selfAccepted = dep;
			else if (typeof dep === "object" && dep !== null) {
				for (var i = 0; i < dep.length; i++) {
					hot._acceptedDependencies[dep[i]] = callback || function () {};
					hot._acceptedErrorHandlers[dep[i]] = errorHandler;
				}
			} else {
				hot._acceptedDependencies[dep] = callback || function () {};
				hot._acceptedErrorHandlers[dep] = errorHandler;
			}
		},
		decline: function (dep) {
			if (dep === undefined) hot._selfDeclined = true;
			else if (typeof dep === "object" && dep !== null)
				for (var i = 0; i < dep.length; i++)
					hot._declinedDependencies[dep[i]] = true;
			else hot._declinedDependencies[dep] = true;
		},
		dispose: function (callback) {
			hot._disposeHandlers.push(callback);
		},
		addDisposeHandler: function (callback) {
			hot._disposeHandlers.push(callback);
		},
		removeDisposeHandler: function (callback) {
			var idx = hot._disposeHandlers.indexOf(callback);
			if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
		},
		invalidate: function () {
			this._selfInvalidated = true;
			switch (currentStatus) {
				case "idle":
					currentUpdateApplyHandlers = [];
					Object.keys(__webpack_require__.hmrI).forEach(function (key) {
						__webpack_require__.hmrI[key](
							moduleId,
							currentUpdateApplyHandlers
						);
					});
					setStatus("ready");
					break;
				case "ready":
					Object.keys(__webpack_require__.hmrI).forEach(function (key) {
						__webpack_require__.hmrI[key](
							moduleId,
							currentUpdateApplyHandlers
						);
					});
					break;
				case "prepare":
				case "check":
				case "dispose":
				case "apply":
					(queuedInvalidatedModules = queuedInvalidatedModules || []).push(
						moduleId
					);
					break;
				default:
					// ignore requests in error states
					break;
			}
		},

		// Management API
		check: hotCheck,
		apply: hotApply,
		status: function (l) {
			if (!l) return currentStatus;
			registeredStatusHandlers.push(l);
		},
		addStatusHandler: function (l) {
			registeredStatusHandlers.push(l);
		},
		removeStatusHandler: function (l) {
			var idx = registeredStatusHandlers.indexOf(l);
			if (idx >= 0) registeredStatusHandlers.splice(idx, 1);
		},

		//inherit from previous dispose call
		data: currentModuleData[moduleId]
	};
	currentChildModule = undefined;
	return hot;
}

function setStatus(newStatus) {
	currentStatus = newStatus;
	var results = [];

	for (var i = 0; i < registeredStatusHandlers.length; i++)
		results[i] = registeredStatusHandlers[i].call(null, newStatus);

	return Promise.all(results);
}

function unblock() {
	if (--blockingPromises === 0) {
		setStatus("ready").then(function () {
			if (blockingPromises === 0) {
				var list = blockingPromisesWaiting;
				blockingPromisesWaiting = [];
				for (var i = 0; i < list.length; i++) {
					list[i]();
				}
			}
		});
	}
}

function trackBlockingPromise(promise) {
	switch (currentStatus) {
		case "ready":
			setStatus("prepare");
		/* fallthrough */
		case "prepare":
			blockingPromises++;
			promise.then(unblock, unblock);
			return promise;
		default:
			return promise;
	}
}

function waitForBlockingPromises(fn) {
	if (blockingPromises === 0) return fn();
	return new Promise(function (resolve) {
		blockingPromisesWaiting.push(function () {
			resolve(fn());
		});
	});
}

function hotCheck(applyOnUpdate) {
	if (currentStatus !== "idle") {
		throw new Error("check() is only allowed in idle status");
	}
	return setStatus("check")
		.then(__webpack_require__.hmrM)
		.then(function (update) {
			if (!update) {
				return setStatus(applyInvalidatedModules() ? "ready" : "idle").then(
					function () {
						return null;
					}
				);
			}

			return setStatus("prepare").then(function () {
				var updatedModules = [];
				currentUpdateApplyHandlers = [];

				return Promise.all(
					Object.keys(__webpack_require__.hmrC).reduce(function (
						promises,
						key
					) {
						__webpack_require__.hmrC[key](
							update.c,
							update.r,
							update.m,
							promises,
							currentUpdateApplyHandlers,
							updatedModules
						);
						return promises;
					},
					[])
				).then(function () {
					return waitForBlockingPromises(function () {
						if (applyOnUpdate) {
							return internalApply(applyOnUpdate);
						} else {
							return setStatus("ready").then(function () {
								return updatedModules;
							});
						}
					});
				});
			});
		});
}

function hotApply(options) {
	if (currentStatus !== "ready") {
		return Promise.resolve().then(function () {
			throw new Error(
				"apply() is only allowed in ready status (state: " +
					currentStatus +
					")"
			);
		});
	}
	return internalApply(options);
}

function internalApply(options) {
	options = options || {};

	applyInvalidatedModules();

	var results = currentUpdateApplyHandlers.map(function (handler) {
		return handler(options);
	});
	currentUpdateApplyHandlers = undefined;

	var errors = results
		.map(function (r) {
			return r.error;
		})
		.filter(Boolean);

	if (errors.length > 0) {
		return setStatus("abort").then(function () {
			throw errors[0];
		});
	}

	// Now in "dispose" phase
	var disposePromise = setStatus("dispose");

	results.forEach(function (result) {
		if (result.dispose) result.dispose();
	});

	// Now in "apply" phase
	var applyPromise = setStatus("apply");

	var error;
	var reportError = function (err) {
		if (!error) error = err;
	};

	var outdatedModules = [];
	results.forEach(function (result) {
		if (result.apply) {
			var modules = result.apply(reportError);
			if (modules) {
				for (var i = 0; i < modules.length; i++) {
					outdatedModules.push(modules[i]);
				}
			}
		}
	});

	return Promise.all([disposePromise, applyPromise]).then(function () {
		// handle errors in accept handlers and self accepted module load
		if (error) {
			return setStatus("fail").then(function () {
				throw error;
			});
		}

		if (queuedInvalidatedModules) {
			return internalApply(options).then(function (list) {
				outdatedModules.forEach(function (moduleId) {
					if (list.indexOf(moduleId) < 0) list.push(moduleId);
				});
				return list;
			});
		}

		return setStatus("idle").then(function () {
			return outdatedModules;
		});
	});
}

function applyInvalidatedModules() {
	if (queuedInvalidatedModules) {
		if (!currentUpdateApplyHandlers) currentUpdateApplyHandlers = [];
		Object.keys(__webpack_require__.hmrI).forEach(function (key) {
			queuedInvalidatedModules.forEach(function (moduleId) {
				__webpack_require__.hmrI[key](
					moduleId,
					currentUpdateApplyHandlers
				);
			});
		});
		queuedInvalidatedModules = undefined;
		return true;
	}
}"__webpack_require__.p = "/";"╞__webpack_require__.i.push((options) => {
	const originalFactory = options.factory;
	options.factory = function (moduleObject, moduleExports, webpackRequire) {
		__webpack_require__.$Refresh$.setup(options.id);
		try {
			originalFactory.call(this, moduleObject, moduleExports, webpackRequire);
		} finally {
			if (typeof Promise !== 'undefined' && moduleObject.exports instanceof Promise) {
				options.module.exports = options.module.exports.then(
					(result) => {
						__webpack_require__.$Refresh$.cleanup(options.id);
						return result;
					},
					(reason) => {
						__webpack_require__.$Refresh$.cleanup(options.id);
						return Promise.reject(reason);
					}
				);
			} else {
				__webpack_require__.$Refresh$.cleanup(options.id)
			}
		}
	};
})

__webpack_require__.$Refresh$ = {
	register: () => (undefined),
	signature: () => ((type) => (type)),
	runtime: {
		createSignatureFunctionForTransform: () => ((type) => (type)),
		register: () => (undefined)
	},
	setup: (currentModuleId) => {
		const prevModuleId = __webpack_require__.$Refresh$.moduleId;
		const prevRegister = __webpack_require__.$Refresh$.register;
		const prevSignature = __webpack_require__.$Refresh$.signature;
		const prevCleanup = __webpack_require__.$Refresh$.cleanup;

		__webpack_require__.$Refresh$.moduleId = currentModuleId;

		__webpack_require__.$Refresh$.register = (type, id) => {
			const typeId = currentModuleId + " " + id;
			__webpack_require__.$Refresh$.runtime.register(type, typeId);
		}

		__webpack_require__.$Refresh$.signature = () => (__webpack_require__.$Refresh$.runtime.createSignatureFunctionForTransform());

		__webpack_require__.$Refresh$.cleanup = (cleanupModuleId) => {
			if (currentModuleId === cleanupModuleId) {
				__webpack_require__.$Refresh$.moduleId = prevModuleId;
				__webpack_require__.$Refresh$.register = prevRegister;
				__webpack_require__.$Refresh$.signature = prevSignature;
				__webpack_require__.$Refresh$.cleanup = prevCleanup;
			}
		}
	}
};"°r// no baseURI

// object to store loaded and loading chunks
// undefined = chunk not loaded, null = chunk preloaded/prefetched
// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
var installedChunks = __webpack_require__.hmrS_jsonp = __webpack_require__.hmrS_jsonp || {
	"main": 0
};

// no chunk on demand loading

// no prefetching

// no preloaded

var currentUpdatedModulesList;
var waitingUpdateResolves = {};
function loadUpdateChunk(chunkId, updatedModulesList) {
	currentUpdatedModulesList = updatedModulesList;
	return new Promise((resolve, reject) => {
		waitingUpdateResolves[chunkId] = resolve;
		// start update chunk loading
		var url = __webpack_require__.p + __webpack_require__.hu(chunkId);
		// create error before stack unwound to get useful stacktrace later
		var error = new Error();
		var loadingEnded = (event) => {
			if(waitingUpdateResolves[chunkId]) {
				waitingUpdateResolves[chunkId] = undefined
				var errorType = event && (event.type === 'load' ? 'missing' : event.type);
				var realSrc = event && event.target && event.target.src;
				error.message = 'Loading hot update chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
				error.name = 'ChunkLoadError';
				error.type = errorType;
				error.request = realSrc;
				reject(error);
			}
		};
		__webpack_require__.l(url, loadingEnded);
	});
}

globalThis["webpackHotUpdatepatient"] = (chunkId, moreModules, runtime) => {
	for(var moduleId in moreModules) {
		if(__webpack_require__.o(moreModules, moduleId)) {
			currentUpdate[moduleId] = moreModules[moduleId];
			if(currentUpdatedModulesList) currentUpdatedModulesList.push(moduleId);
		}
	}
	if(runtime) currentUpdateRuntime.push(runtime);
	if(waitingUpdateResolves[chunkId]) {
		waitingUpdateResolves[chunkId]();
		waitingUpdateResolves[chunkId] = undefined;
	}
};

var currentUpdateChunks;
var currentUpdate;
var currentUpdateRemovedChunks;
var currentUpdateRuntime;
function applyHandler(options) {
	if (__webpack_require__.f) delete __webpack_require__.f.jsonpHmr;
	currentUpdateChunks = undefined;
	function getAffectedModuleEffects(updateModuleId) {
		var outdatedModules = [updateModuleId];
		var outdatedDependencies = {};

		var queue = outdatedModules.map(function (id) {
			return {
				chain: [id],
				id: id
			};
		});
		while (queue.length > 0) {
			var queueItem = queue.pop();
			var moduleId = queueItem.id;
			var chain = queueItem.chain;
			var module = __webpack_require__.c[moduleId];
			if (
				!module ||
				(module.hot._selfAccepted && !module.hot._selfInvalidated)
			)
				continue;
			if (module.hot._selfDeclined) {
				return {
					type: "self-declined",
					chain: chain,
					moduleId: moduleId
				};
			}
			if (module.hot._main) {
				return {
					type: "unaccepted",
					chain: chain,
					moduleId: moduleId
				};
			}
			for (var i = 0; i < module.parents.length; i++) {
				var parentId = module.parents[i];
				var parent = __webpack_require__.c[parentId];
				if (!parent) continue;
				if (parent.hot._declinedDependencies[moduleId]) {
					return {
						type: "declined",
						chain: chain.concat([parentId]),
						moduleId: moduleId,
						parentId: parentId
					};
				}
				if (outdatedModules.indexOf(parentId) !== -1) continue;
				if (parent.hot._acceptedDependencies[moduleId]) {
					if (!outdatedDependencies[parentId])
						outdatedDependencies[parentId] = [];
					addAllToSet(outdatedDependencies[parentId], [moduleId]);
					continue;
				}
				delete outdatedDependencies[parentId];
				outdatedModules.push(parentId);
				queue.push({
					chain: chain.concat([parentId]),
					id: parentId
				});
			}
		}

		return {
			type: "accepted",
			moduleId: updateModuleId,
			outdatedModules: outdatedModules,
			outdatedDependencies: outdatedDependencies
		};
	}

	function addAllToSet(a, b) {
		for (var i = 0; i < b.length; i++) {
			var item = b[i];
			if (a.indexOf(item) === -1) a.push(item);
		}
	}

	// at begin all updates modules are outdated
	// the "outdated" status can propagate to parents if they don't accept the children
	var outdatedDependencies = {};
	var outdatedModules = [];
	var appliedUpdate = {};

	var warnUnexpectedRequire = function warnUnexpectedRequire(module) {
		console.warn(
			"[HMR] unexpected require(" + module.id + ") to disposed module"
		);
	};

	for (var moduleId in currentUpdate) {
		if (__webpack_require__.o(currentUpdate, moduleId)) {
			var newModuleFactory = currentUpdate[moduleId];
			/** @type {TODO} */
			var result;
			if (newModuleFactory) {
				result = getAffectedModuleEffects(moduleId);
			} else {
				result = {
					type: "disposed",
					moduleId: moduleId
				};
			}
			/** @type {Error|false} */
			var abortError = false;
			var doApply = false;
			var doDispose = false;
			var chainInfo = "";
			if (result.chain) {
				chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
			}
			switch (result.type) {
				case "self-declined":
					if (options.onDeclined) options.onDeclined(result);
					if (!options.ignoreDeclined)
						abortError = new Error(
							"Aborted because of self decline: " +
								result.moduleId +
								chainInfo
						);
					break;
				case "declined":
					if (options.onDeclined) options.onDeclined(result);
					if (!options.ignoreDeclined)
						abortError = new Error(
							"Aborted because of declined dependency: " +
								result.moduleId +
								" in " +
								result.parentId +
								chainInfo
						);
					break;
				case "unaccepted":
					if (options.onUnaccepted) options.onUnaccepted(result);
					if (!options.ignoreUnaccepted)
						abortError = new Error(
							"Aborted because " + moduleId + " is not accepted" + chainInfo
						);
					break;
				case "accepted":
					if (options.onAccepted) options.onAccepted(result);
					doApply = true;
					break;
				case "disposed":
					if (options.onDisposed) options.onDisposed(result);
					doDispose = true;
					break;
				default:
					throw new Error("Unexception type " + result.type);
			}
			if (abortError) {
				return {
					error: abortError
				};
			}
			if (doApply) {
				appliedUpdate[moduleId] = newModuleFactory;
				addAllToSet(outdatedModules, result.outdatedModules);
				for (moduleId in result.outdatedDependencies) {
					if (__webpack_require__.o(result.outdatedDependencies, moduleId)) {
						if (!outdatedDependencies[moduleId])
							outdatedDependencies[moduleId] = [];
						addAllToSet(
							outdatedDependencies[moduleId],
							result.outdatedDependencies[moduleId]
						);
					}
				}
			}
			if (doDispose) {
				addAllToSet(outdatedModules, [result.moduleId]);
				appliedUpdate[moduleId] = warnUnexpectedRequire;
			}
		}
	}
	currentUpdate = undefined;

	// Store self accepted outdated modules to require them later by the module system
	var outdatedSelfAcceptedModules = [];
	for (var j = 0; j < outdatedModules.length; j++) {
		var outdatedModuleId = outdatedModules[j];
		var module = __webpack_require__.c[outdatedModuleId];
		if (
			module &&
			(module.hot._selfAccepted || module.hot._main) &&
			// removed self-accepted modules should not be required
			appliedUpdate[outdatedModuleId] !== warnUnexpectedRequire &&
			// when called invalidate self-accepting is not possible
			!module.hot._selfInvalidated
		) {
			outdatedSelfAcceptedModules.push({
				module: outdatedModuleId,
				require: module.hot._requireSelf,
				errorHandler: module.hot._selfAccepted
			});
		}
	}

	var moduleOutdatedDependencies;

	return {
		dispose: function () {
			currentUpdateRemovedChunks.forEach(function (chunkId) {
				delete installedChunks[chunkId];
			});
			currentUpdateRemovedChunks = undefined;

			var idx;
			var queue = outdatedModules.slice();
			while (queue.length > 0) {
				var moduleId = queue.pop();
				var module = __webpack_require__.c[moduleId];
				if (!module) continue;

				var data = {};

				// Call dispose handlers
				var disposeHandlers = module.hot._disposeHandlers;
				for (j = 0; j < disposeHandlers.length; j++) {
					disposeHandlers[j].call(null, data);
				}
				__webpack_require__.hmrD[moduleId] = data;

				// disable module (this disables requires from this module)
				module.hot.active = false;

				// remove module from cache
				delete __webpack_require__.c[moduleId];

				// when disposing there is no need to call dispose handler
				delete outdatedDependencies[moduleId];

				// remove "parents" references from all children
				for (j = 0; j < module.children.length; j++) {
					var child = __webpack_require__.c[module.children[j]];
					if (!child) continue;
					idx = child.parents.indexOf(moduleId);
					if (idx >= 0) {
						child.parents.splice(idx, 1);
					}
				}
			}

			// remove outdated dependency from module children
			var dependency;
			for (var outdatedModuleId in outdatedDependencies) {
				if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
					module = __webpack_require__.c[outdatedModuleId];
					if (module) {
						moduleOutdatedDependencies =
							outdatedDependencies[outdatedModuleId];
						for (j = 0; j < moduleOutdatedDependencies.length; j++) {
							dependency = moduleOutdatedDependencies[j];
							idx = module.children.indexOf(dependency);
							if (idx >= 0) module.children.splice(idx, 1);
						}
					}
				}
			}
		},
		apply: function (reportError) {
			// insert new code
			for (var updateModuleId in appliedUpdate) {
				if (__webpack_require__.o(appliedUpdate, updateModuleId)) {
					__webpack_require__.m[updateModuleId] = appliedUpdate[updateModuleId];
				}
			}

			// run new runtime modules
			for (var i = 0; i < currentUpdateRuntime.length; i++) {
				currentUpdateRuntime[i](__webpack_require__);
			}

			// call accept handlers
			for (var outdatedModuleId in outdatedDependencies) {
				if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
					var module = __webpack_require__.c[outdatedModuleId];
					if (module) {
						moduleOutdatedDependencies =
							outdatedDependencies[outdatedModuleId];
						var callbacks = [];
						var errorHandlers = [];
						var dependenciesForCallbacks = [];
						for (var j = 0; j < moduleOutdatedDependencies.length; j++) {
							var dependency = moduleOutdatedDependencies[j];
							var acceptCallback =
								module.hot._acceptedDependencies[dependency];
							var errorHandler =
								module.hot._acceptedErrorHandlers[dependency];
							if (acceptCallback) {
								if (callbacks.indexOf(acceptCallback) !== -1) continue;
								callbacks.push(acceptCallback);
								errorHandlers.push(errorHandler);
								dependenciesForCallbacks.push(dependency);
							}
						}
						for (var k = 0; k < callbacks.length; k++) {
							try {
								callbacks[k].call(null, moduleOutdatedDependencies);
							} catch (err) {
								if (typeof errorHandlers[k] === "function") {
									try {
										errorHandlers[k](err, {
											moduleId: outdatedModuleId,
											dependencyId: dependenciesForCallbacks[k]
										});
									} catch (err2) {
										if (options.onErrored) {
											options.onErrored({
												type: "accept-error-handler-errored",
												moduleId: outdatedModuleId,
												dependencyId: dependenciesForCallbacks[k],
												error: err2,
												originalError: err
											});
										}
										if (!options.ignoreErrored) {
											reportError(err2);
											reportError(err);
										}
									}
								} else {
									if (options.onErrored) {
										options.onErrored({
											type: "accept-errored",
											moduleId: outdatedModuleId,
											dependencyId: dependenciesForCallbacks[k],
											error: err
										});
									}
									if (!options.ignoreErrored) {
										reportError(err);
									}
								}
							}
						}
					}
				}
			}

			// Load self accepted modules
			for (var o = 0; o < outdatedSelfAcceptedModules.length; o++) {
				var item = outdatedSelfAcceptedModules[o];
				var moduleId = item.module;
				try {
					item.require(moduleId);
				} catch (err) {
					if (typeof item.errorHandler === "function") {
						try {
							item.errorHandler(err, {
								moduleId: moduleId,
								module: __webpack_require__.c[moduleId]
							});
						} catch (err2) {
							if (options.onErrored) {
								options.onErrored({
									type: "self-accept-error-handler-errored",
									moduleId: moduleId,
									error: err2,
									originalError: err
								});
							}
							if (!options.ignoreErrored) {
								reportError(err2);
								reportError(err);
							}
						}
					} else {
						if (options.onErrored) {
							options.onErrored({
								type: "self-accept-errored",
								moduleId: moduleId,
								error: err
							});
						}
						if (!options.ignoreErrored) {
							reportError(err);
						}
					}
				}
			}

			return outdatedModules;
		}
	};
}
__webpack_require__.hmrI.jsonp = function (moduleId, applyHandlers) {
	if (!currentUpdate) {
		currentUpdate = {};
		currentUpdateRuntime = [];
		currentUpdateRemovedChunks = [];
		applyHandlers.push(applyHandler);
	}
	if (!__webpack_require__.o(currentUpdate, moduleId)) {
		currentUpdate[moduleId] = __webpack_require__.m[moduleId];
	}
};
__webpack_require__.hmrC.jsonp = function (
	chunkIds,
	removedChunks,
	removedModules,
	promises,
	applyHandlers,
	updatedModulesList
) {
	applyHandlers.push(applyHandler);
	currentUpdateChunks = {};
	currentUpdateRemovedChunks = removedChunks;
	currentUpdate = removedModules.reduce(function (obj, key) {
		obj[key] = false;
		return obj;
	}, {});
	currentUpdateRuntime = [];
	chunkIds.forEach(function (chunkId) {
		if (
			__webpack_require__.o(installedChunks, chunkId) &&
			installedChunks[chunkId] !== undefined
		) {
			promises.push(loadUpdateChunk(chunkId, updatedModulesList));
			currentUpdateChunks[chunkId] = true;
		} else {
			currentUpdateChunks[chunkId] = false;
		}
	});
	if (__webpack_require__.f) {
		__webpack_require__.f.jsonpHmr = function (chunkId, promises) {
			if (
				currentUpdateChunks &&
				__webpack_require__.o(currentUpdateChunks, chunkId) &&
				!currentUpdateChunks[chunkId]
			) {
				promises.push(loadUpdateChunk(chunkId));
				currentUpdateChunks[chunkId] = true;
			}
		};
	}
};

__webpack_require__.hmrM = () => {
	if (typeof fetch === "undefined") throw new Error("No browser support: need fetch API");
	return fetch(__webpack_require__.p + __webpack_require__.hmrF()).then((response) => {
		if(response.status === 404) return; // no update available
		if(!response.ok) throw new Error("Failed to fetch update manifest " + response.statusText);
		return response.json();
	});
};

// no on chunks loaded

// no jsonp function"#__webpack_require__.nc = undefined;" "ё// module cache are used so entry inlining is disabled
// startup
// Load entry module and return exports
__webpack_require__("./node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ReactRefreshEntry.js");
__webpack_require__("./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=3000&pathname=%2Fws&logging=none&reconnect=10");
__webpack_require__("./node_modules/webpack/hot/dev-server.js");
var __webpack_exports__ = __webpack_require__("./src/index.js");
" $ б"namesA $  "
sourceRoot" {"
mapLoadURL"-http://localhost:3000/static/js/bundle.js.map{